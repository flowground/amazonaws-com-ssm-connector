{
    "title": "Amazon Simple Systems Manager (SSM)",
    "description": "AWS Systems Manager AWS Systems Manager is a collection of capabilities that\nhelps you automate management tasks such as collecting system inventory,\napplying operating system (OS) patches, automating the creation of Amazon\nMachine Images (AMIs), and configuring operating systems (OSs) and applications\nat scale. Systems Manager lets you remotely and securely manage the\nconfiguration of your managed instances. A managed instance is any Amazon EC2\ninstance or on-premises machine in your hybrid environment that has been\nconfigured for Systems Manager.\n\nThis reference is intended to be used with the AWS Systems Manager User Guide\n[http://docs.aws.amazon.com/systems-manager/latest/userguide/].\n\nTo get started, verify prerequisites and configure managed instances. For more\ninformation, see Systems Manager Prerequisites\n[http://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-setting-up.html] \nin the AWS Systems Manager User Guide.\n\nFor information about other API actions you can perform on Amazon EC2 instances,\nsee the Amazon EC2 API Reference\n[http://docs.aws.amazon.com/AWSEC2/latest/APIReference/]. For information about\nhow to use a Query API, see Making API Requests\n[http://docs.aws.amazon.com/AWSEC2/latest/APIReference/making-api-requests.html]\n.",
    "docsUrl": "https://docs.aws.amazon.com/ssm/",
    "url": "https://api.apis.guru/v2/specs/amazonaws.com/ssm/2014-11-06/swagger.json",
    "envVars": {},
    "credentials": {
        "fields": {
            "server": {
                "label": "Server",
                "viewClass": "SelectView",
                "model": [
                    "https://ssm.amazonaws.com/",
                    "http://ssm.amazonaws.com/",
                    "--- Custom URL"
                ],
                "required": true
            },
            "otherServer": {
                "label": "Custom Server URL",
                "viewClass": "TextFieldView"
            },
            "auth_hmac": {
                "label": "Authorization (hmac)",
                "viewClass": "TextFieldView",
                "note": "Amazon Signature authorization v4"
            }
        }
    },
    "triggers": {
        "startFlow": {
            "main": "./lib/triggers/startFlow.js",
            "type": "polling",
            "title": "Start Flow",
            "fields": {}
        }
    },
    "actions": {
        "AddTagsToResource": {
            "main": "./lib/actions/AddTagsToResource.js",
            "title": "AddTagsToResource",
            "description": "Adds or overwrites one or more tags for the specified resource. Tags are\nmetadata that you can assign to your documents, managed instances, Maintenance\nWindows, Parameter Store parameters, and patch baselines. Tags enable you to\ncategorize your resources in different ways, for example, by purpose, owner, or\nenvironment. Each tag consists of a key and an optional value, both of which you\ndefine. For example, you could define a set of tags for your account's managed\ninstances that helps you track each instance's owner and stack level. For\nexample: Key=Owner and Value=DbAdmin, SysAdmin, or Dev. Or Key=Stack and\nValue=Production, Pre-Production, or Test.\n\nEach resource can have a maximum of 50 tags. \n\nWe recommend that you devise a set of tag keys that meets your needs for each\nresource type. Using a consistent set of tag keys makes it easier for you to\nmanage your resources. You can search and filter the resources based on the tags\nyou add. Tags don't have any semantic meaning to Amazon EC2 and are interpreted\nstrictly as a string of characters. \n\nFor more information about tags, see Tagging Your Amazon EC2 Resources\n[http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html] in the \nAmazon EC2 User Guide.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AddTagsToResource.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CancelCommand": {
            "main": "./lib/actions/CancelCommand.js",
            "title": "CancelCommand",
            "description": "Attempts to cancel the command specified by the Command ID. There is no guarantee that the command will be terminated and the underlying process stopped.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CancelCommand.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CancelMaintenanceWindowExecution": {
            "main": "./lib/actions/CancelMaintenanceWindowExecution.js",
            "title": "CancelMaintenanceWindowExecution",
            "description": "Stops a Maintenance Window execution that is already in progress and cancels any tasks in the window that have not already starting running. (Tasks already in progress will continue to completion.)",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CancelMaintenanceWindowExecution.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateActivation": {
            "main": "./lib/actions/CreateActivation.js",
            "title": "CreateActivation",
            "description": "Registers your on-premises server or virtual machine with Amazon EC2 so that you can manage these resources using Run Command. An on-premises server or virtual machine that has been registered with EC2 is called a managed instance. For more information about activations, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-managedinstances.html\">Setting Up Systems Manager in Hybrid Environments</a>.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateActivation.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateAssociation": {
            "main": "./lib/actions/CreateAssociation.js",
            "title": "CreateAssociation",
            "description": "Associates the specified Systems Manager document with the specified instances\nor targets.\n\nWhen you associate a document with one or more instances using instance IDs or\ntags, SSM Agent running on the instance processes the document and configures\nthe instance as specified.\n\nIf you associate a document with an instance that already has an associated\ndocument, the system returns the AssociationAlreadyExists exception.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateAssociation.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateAssociationBatch": {
            "main": "./lib/actions/CreateAssociationBatch.js",
            "title": "CreateAssociationBatch",
            "description": "Associates the specified Systems Manager document with the specified instances\nor targets.\n\nWhen you associate a document with one or more instances using instance IDs or\ntags, SSM Agent running on the instance processes the document and configures\nthe instance as specified.\n\nIf you associate a document with an instance that already has an associated\ndocument, the system returns the AssociationAlreadyExists exception.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateAssociationBatch.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateDocument": {
            "main": "./lib/actions/CreateDocument.js",
            "title": "CreateDocument",
            "description": "Creates a Systems Manager document.\n\nAfter you create a document, you can use CreateAssociation to associate it with\none or more running instances.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateDocument.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateMaintenanceWindow": {
            "main": "./lib/actions/CreateMaintenanceWindow.js",
            "title": "CreateMaintenanceWindow",
            "description": "Creates a new Maintenance Window.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateMaintenanceWindow.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreatePatchBaseline": {
            "main": "./lib/actions/CreatePatchBaseline.js",
            "title": "CreatePatchBaseline",
            "description": "Creates a patch baseline.\n\nFor information about valid key and value pairs in PatchFilters for each\nsupported operating system type, see PatchFilter\n[http://docs.aws.amazon.com/systems-manager/latest/APIReference/API_PatchFilter.html]\n.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreatePatchBaseline.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateResourceDataSync": {
            "main": "./lib/actions/CreateResourceDataSync.js",
            "title": "CreateResourceDataSync",
            "description": "Creates a resource data sync configuration to a single bucket in Amazon S3. This\nis an asynchronous operation that returns immediately. After a successful\ninitial sync is completed, the system continuously syncs data to the Amazon S3\nbucket. To check the status of the sync, use the ListResourceDataSync.\n\nBy default, data is not encrypted in Amazon S3. We strongly recommend that you\nenable encryption in Amazon S3 to ensure secure data storage. We also recommend\nthat you secure access to the Amazon S3 bucket by creating a restrictive bucket\npolicy. For more information, see Configuring Resource Data Sync for Inventory\n[http://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-inventory-datasync.html] \nin the AWS Systems Manager User Guide.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateResourceDataSync.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteActivation": {
            "main": "./lib/actions/DeleteActivation.js",
            "title": "DeleteActivation",
            "description": "Deletes an activation. You are not required to delete an activation. If you delete an activation, you can no longer use it to register additional managed instances. Deleting an activation does not de-register managed instances. You must manually de-register managed instances.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteActivation.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteAssociation": {
            "main": "./lib/actions/DeleteAssociation.js",
            "title": "DeleteAssociation",
            "description": "Disassociates the specified Systems Manager document from the specified\ninstance.\n\nWhen you disassociate a document from an instance, it does not change the\nconfiguration of the instance. To change the configuration state of an instance\nafter you disassociate a document, you must create a new document with the\ndesired configuration and associate it with the instance.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteAssociation.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteDocument": {
            "main": "./lib/actions/DeleteDocument.js",
            "title": "DeleteDocument",
            "description": "Deletes the Systems Manager document and all instance associations to the\ndocument.\n\nBefore you delete the document, we recommend that you use DeleteAssociation to\ndisassociate all instances that are associated with the document.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteDocument.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteInventory": {
            "main": "./lib/actions/DeleteInventory.js",
            "title": "DeleteInventory",
            "description": "Delete a custom inventory type, or the data associated with a custom Inventory type. Deleting a custom inventory type is also referred to as deleting a custom inventory schema.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteInventory.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteMaintenanceWindow": {
            "main": "./lib/actions/DeleteMaintenanceWindow.js",
            "title": "DeleteMaintenanceWindow",
            "description": "Deletes a Maintenance Window.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteMaintenanceWindow.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteParameter": {
            "main": "./lib/actions/DeleteParameter.js",
            "title": "DeleteParameter",
            "description": "Delete a parameter from the system.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteParameter.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteParameters": {
            "main": "./lib/actions/DeleteParameters.js",
            "title": "DeleteParameters",
            "description": "Delete a list of parameters. This API is used to delete parameters by using the Amazon EC2 console.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteParameters.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeletePatchBaseline": {
            "main": "./lib/actions/DeletePatchBaseline.js",
            "title": "DeletePatchBaseline",
            "description": "Deletes a patch baseline.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeletePatchBaseline.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteResourceDataSync": {
            "main": "./lib/actions/DeleteResourceDataSync.js",
            "title": "DeleteResourceDataSync",
            "description": "Deletes a Resource Data Sync configuration. After the configuration is deleted, changes to inventory data on managed instances are no longer synced with the target Amazon S3 bucket. Deleting a sync configuration does not delete data in the target Amazon S3 bucket.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteResourceDataSync.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeregisterManagedInstance": {
            "main": "./lib/actions/DeregisterManagedInstance.js",
            "title": "DeregisterManagedInstance",
            "description": "Removes the server or virtual machine from the list of registered servers. You can reregister the instance again at any time. If you don't plan to use Run Command on the server, we suggest uninstalling SSM Agent first.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeregisterManagedInstance.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeregisterPatchBaselineForPatchGroup": {
            "main": "./lib/actions/DeregisterPatchBaselineForPatchGroup.js",
            "title": "DeregisterPatchBaselineForPatchGroup",
            "description": "Removes a patch group from a patch baseline.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeregisterPatchBaselineForPatchGroup.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeregisterTargetFromMaintenanceWindow": {
            "main": "./lib/actions/DeregisterTargetFromMaintenanceWindow.js",
            "title": "DeregisterTargetFromMaintenanceWindow",
            "description": "Removes a target from a Maintenance Window.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeregisterTargetFromMaintenanceWindow.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeregisterTaskFromMaintenanceWindow": {
            "main": "./lib/actions/DeregisterTaskFromMaintenanceWindow.js",
            "title": "DeregisterTaskFromMaintenanceWindow",
            "description": "Removes a task from a Maintenance Window.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeregisterTaskFromMaintenanceWindow.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeActivations": {
            "main": "./lib/actions/DescribeActivations.js",
            "title": "DescribeActivations",
            "description": "Details about the activation, including: the date and time the activation was created, the expiration date, the IAM role assigned to the instances in the activation, and the number of instances activated by this registration.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeActivations.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeAssociation": {
            "main": "./lib/actions/DescribeAssociation.js",
            "title": "DescribeAssociation",
            "description": "Describes the association for the specified target or instance. If you created the association by using the <code>Targets</code> parameter, then you must retrieve the association by using the association ID. If you created the association by specifying an instance ID and a Systems Manager document, then you retrieve the association by specifying the document name and the instance ID. ",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeAssociation.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeAssociationExecutionTargets": {
            "main": "./lib/actions/DescribeAssociationExecutionTargets.js",
            "title": "DescribeAssociationExecutionTargets",
            "description": "Use this API action to view information about a specific execution of a specific association.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeAssociationExecutionTargets.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeAssociationExecutions": {
            "main": "./lib/actions/DescribeAssociationExecutions.js",
            "title": "DescribeAssociationExecutions",
            "description": "Use this API action to view all executions for a specific association ID. ",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeAssociationExecutions.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeAutomationExecutions": {
            "main": "./lib/actions/DescribeAutomationExecutions.js",
            "title": "DescribeAutomationExecutions",
            "description": "Provides details about all active and terminated Automation executions.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeAutomationExecutions.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeAutomationStepExecutions": {
            "main": "./lib/actions/DescribeAutomationStepExecutions.js",
            "title": "DescribeAutomationStepExecutions",
            "description": "Information about all active and terminated step executions in an Automation workflow.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeAutomationStepExecutions.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeAvailablePatches": {
            "main": "./lib/actions/DescribeAvailablePatches.js",
            "title": "DescribeAvailablePatches",
            "description": "Lists all patches that could possibly be included in a patch baseline.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeAvailablePatches.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeDocument": {
            "main": "./lib/actions/DescribeDocument.js",
            "title": "DescribeDocument",
            "description": "Describes the specified Systems Manager document.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeDocument.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeDocumentPermission": {
            "main": "./lib/actions/DescribeDocumentPermission.js",
            "title": "DescribeDocumentPermission",
            "description": "Describes the permissions for a Systems Manager document. If you created the document, you are the owner. If a document is shared, it can either be shared privately (by specifying a user's AWS account ID) or publicly (<i>All</i>). ",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeDocumentPermission.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeEffectiveInstanceAssociations": {
            "main": "./lib/actions/DescribeEffectiveInstanceAssociations.js",
            "title": "DescribeEffectiveInstanceAssociations",
            "description": "All associations for the instance(s).",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeEffectiveInstanceAssociations.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeEffectivePatchesForPatchBaseline": {
            "main": "./lib/actions/DescribeEffectivePatchesForPatchBaseline.js",
            "title": "DescribeEffectivePatchesForPatchBaseline",
            "description": "Retrieves the current effective patches (the patch and the approval state) for the specified patch baseline. Note that this API applies only to Windows patch baselines.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeEffectivePatchesForPatchBaseline.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeInstanceAssociationsStatus": {
            "main": "./lib/actions/DescribeInstanceAssociationsStatus.js",
            "title": "DescribeInstanceAssociationsStatus",
            "description": "The status of the associations for the instance(s).",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeInstanceAssociationsStatus.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeInstanceInformation": {
            "main": "./lib/actions/DescribeInstanceInformation.js",
            "title": "DescribeInstanceInformation",
            "description": "Describes one or more of your instances. You can use this to get information\nabout instances like the operating system platform, the SSM Agent version\n(Linux), status etc. If you specify one or more instance IDs, it returns\ninformation for those instances. If you do not specify instance IDs, it returns\ninformation for all your instances. If you specify an instance ID that is not\nvalid or an instance that you do not own, you receive an error. \n\nThe IamRole field for this API action is the Amazon Identity and Access\nManagement (IAM) role assigned to on-premises instances. This call does not\nreturn the IAM role for Amazon EC2 instances.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeInstanceInformation.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeInstancePatchStates": {
            "main": "./lib/actions/DescribeInstancePatchStates.js",
            "title": "DescribeInstancePatchStates",
            "description": "Retrieves the high-level patch state of one or more instances.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeInstancePatchStates.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeInstancePatchStatesForPatchGroup": {
            "main": "./lib/actions/DescribeInstancePatchStatesForPatchGroup.js",
            "title": "DescribeInstancePatchStatesForPatchGroup",
            "description": "Retrieves the high-level patch state for the instances in the specified patch group.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeInstancePatchStatesForPatchGroup.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeInstancePatches": {
            "main": "./lib/actions/DescribeInstancePatches.js",
            "title": "DescribeInstancePatches",
            "description": "Retrieves information about the patches on the specified instance and their state relative to the patch baseline being used for the instance.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeInstancePatches.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeInventoryDeletions": {
            "main": "./lib/actions/DescribeInventoryDeletions.js",
            "title": "DescribeInventoryDeletions",
            "description": "Describes a specific delete inventory operation.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeInventoryDeletions.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeMaintenanceWindowExecutionTaskInvocations": {
            "main": "./lib/actions/DescribeMaintenanceWindowExecutionTaskInvocations.js",
            "title": "DescribeMaintenanceWindowExecutionTaskInvocations",
            "description": "Retrieves the individual task executions (one per target) for a particular task executed as part of a Maintenance Window execution.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeMaintenanceWindowExecutionTaskInvocations.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeMaintenanceWindowExecutionTasks": {
            "main": "./lib/actions/DescribeMaintenanceWindowExecutionTasks.js",
            "title": "DescribeMaintenanceWindowExecutionTasks",
            "description": "For a given Maintenance Window execution, lists the tasks that were executed.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeMaintenanceWindowExecutionTasks.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeMaintenanceWindowExecutions": {
            "main": "./lib/actions/DescribeMaintenanceWindowExecutions.js",
            "title": "DescribeMaintenanceWindowExecutions",
            "description": "Lists the executions of a Maintenance Window. This includes information about when the Maintenance Window was scheduled to be active, and information about tasks registered and run with the Maintenance Window.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeMaintenanceWindowExecutions.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeMaintenanceWindowSchedule": {
            "main": "./lib/actions/DescribeMaintenanceWindowSchedule.js",
            "title": "DescribeMaintenanceWindowSchedule",
            "description": "Retrieves information about upcoming executions of a Maintenance Window.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeMaintenanceWindowSchedule.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeMaintenanceWindowTargets": {
            "main": "./lib/actions/DescribeMaintenanceWindowTargets.js",
            "title": "DescribeMaintenanceWindowTargets",
            "description": "Lists the targets registered with the Maintenance Window.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeMaintenanceWindowTargets.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeMaintenanceWindowTasks": {
            "main": "./lib/actions/DescribeMaintenanceWindowTasks.js",
            "title": "DescribeMaintenanceWindowTasks",
            "description": "Lists the tasks in a Maintenance Window.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeMaintenanceWindowTasks.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeMaintenanceWindows": {
            "main": "./lib/actions/DescribeMaintenanceWindows.js",
            "title": "DescribeMaintenanceWindows",
            "description": "Retrieves the Maintenance Windows in an AWS account.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeMaintenanceWindows.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeMaintenanceWindowsForTarget": {
            "main": "./lib/actions/DescribeMaintenanceWindowsForTarget.js",
            "title": "DescribeMaintenanceWindowsForTarget",
            "description": "Retrieves information about the Maintenance Windows targets or tasks that an instance is associated with.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeMaintenanceWindowsForTarget.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeParameters": {
            "main": "./lib/actions/DescribeParameters.js",
            "title": "DescribeParameters",
            "description": "Get information about a parameter.\n\nRequest results are returned on a best-effort basis. If you specify MaxResults \nin the request, the response includes information up to the limit specified. The\nnumber of items returned, however, can be between zero and the value of \nMaxResults. If the service reaches an internal limit while processing the\nresults, it stops the operation and returns the matching values up to that point\nand a NextToken. You can specify the NextToken in a subsequent call to get the\nnext set of results.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeParameters.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribePatchBaselines": {
            "main": "./lib/actions/DescribePatchBaselines.js",
            "title": "DescribePatchBaselines",
            "description": "Lists the patch baselines in your AWS account.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribePatchBaselines.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribePatchGroupState": {
            "main": "./lib/actions/DescribePatchGroupState.js",
            "title": "DescribePatchGroupState",
            "description": "Returns high-level aggregated patch compliance state for a patch group.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribePatchGroupState.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribePatchGroups": {
            "main": "./lib/actions/DescribePatchGroups.js",
            "title": "DescribePatchGroups",
            "description": "Lists all patch groups that have been registered with patch baselines.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribePatchGroups.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeSessions": {
            "main": "./lib/actions/DescribeSessions.js",
            "title": "DescribeSessions",
            "description": "Retrieves a list of all active sessions (both connected and disconnected) or terminated sessions from the past 30 days.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeSessions.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetAutomationExecution": {
            "main": "./lib/actions/GetAutomationExecution.js",
            "title": "GetAutomationExecution",
            "description": "Get detailed information about a particular Automation execution.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetAutomationExecution.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetCommandInvocation": {
            "main": "./lib/actions/GetCommandInvocation.js",
            "title": "GetCommandInvocation",
            "description": "Returns detailed information about command execution for an invocation or plugin. ",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetCommandInvocation.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetConnectionStatus": {
            "main": "./lib/actions/GetConnectionStatus.js",
            "title": "GetConnectionStatus",
            "description": "Retrieves the Session Manager connection status for an instance to determine whether it is connected and ready to receive Session Manager connections.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetConnectionStatus.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetDefaultPatchBaseline": {
            "main": "./lib/actions/GetDefaultPatchBaseline.js",
            "title": "GetDefaultPatchBaseline",
            "description": "Retrieves the default patch baseline. Note that Systems Manager supports\ncreating multiple default patch baselines. For example, you can create a default\npatch baseline for each operating system.\n\nIf you do not specify an operating system value, the default patch baseline for\nWindows is returned.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetDefaultPatchBaseline.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetDeployablePatchSnapshotForInstance": {
            "main": "./lib/actions/GetDeployablePatchSnapshotForInstance.js",
            "title": "GetDeployablePatchSnapshotForInstance",
            "description": "Retrieves the current snapshot for the patch baseline the instance uses. This API is primarily used by the AWS-RunPatchBaseline Systems Manager document. ",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetDeployablePatchSnapshotForInstance.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetDocument": {
            "main": "./lib/actions/GetDocument.js",
            "title": "GetDocument",
            "description": "Gets the contents of the specified Systems Manager document.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetDocument.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetInventory": {
            "main": "./lib/actions/GetInventory.js",
            "title": "GetInventory",
            "description": "Query inventory information.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetInventory.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetInventorySchema": {
            "main": "./lib/actions/GetInventorySchema.js",
            "title": "GetInventorySchema",
            "description": "Return a list of inventory type names for the account, or return a list of attribute names for a specific Inventory item type. ",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetInventorySchema.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetMaintenanceWindow": {
            "main": "./lib/actions/GetMaintenanceWindow.js",
            "title": "GetMaintenanceWindow",
            "description": "Retrieves a Maintenance Window.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetMaintenanceWindow.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetMaintenanceWindowExecution": {
            "main": "./lib/actions/GetMaintenanceWindowExecution.js",
            "title": "GetMaintenanceWindowExecution",
            "description": "Retrieves details about a specific task executed as part of a Maintenance Window execution.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetMaintenanceWindowExecution.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetMaintenanceWindowExecutionTask": {
            "main": "./lib/actions/GetMaintenanceWindowExecutionTask.js",
            "title": "GetMaintenanceWindowExecutionTask",
            "description": "Retrieves the details about a specific task executed as part of a Maintenance Window execution.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetMaintenanceWindowExecutionTask.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetMaintenanceWindowExecutionTaskInvocation": {
            "main": "./lib/actions/GetMaintenanceWindowExecutionTaskInvocation.js",
            "title": "GetMaintenanceWindowExecutionTaskInvocation",
            "description": "Retrieves a task invocation. A task invocation is a specific task executing on a specific target. Maintenance Windows report status for all invocations. ",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetMaintenanceWindowExecutionTaskInvocation.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetMaintenanceWindowTask": {
            "main": "./lib/actions/GetMaintenanceWindowTask.js",
            "title": "GetMaintenanceWindowTask",
            "description": "Lists the tasks in a Maintenance Window.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetMaintenanceWindowTask.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetParameter": {
            "main": "./lib/actions/GetParameter.js",
            "title": "GetParameter",
            "description": "Get information about a parameter by using the parameter name. Don't confuse this API action with the <a>GetParameters</a> API action.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetParameter.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetParameterHistory": {
            "main": "./lib/actions/GetParameterHistory.js",
            "title": "GetParameterHistory",
            "description": "Query a list of all parameters used by the AWS account.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetParameterHistory.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetParameters": {
            "main": "./lib/actions/GetParameters.js",
            "title": "GetParameters",
            "description": "Get details of a parameter. Don't confuse this API action with the <a>GetParameter</a> API action.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetParameters.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetParametersByPath": {
            "main": "./lib/actions/GetParametersByPath.js",
            "title": "GetParametersByPath",
            "description": "Retrieve parameters in a specific hierarchy. For more information, see Working\nwith Systems Manager Parameters\n[http://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-paramstore-working.html] \nin the AWS Systems Manager User Guide. \n\nRequest results are returned on a best-effort basis. If you specify MaxResults \nin the request, the response includes information up to the limit specified. The\nnumber of items returned, however, can be between zero and the value of \nMaxResults. If the service reaches an internal limit while processing the\nresults, it stops the operation and returns the matching values up to that point\nand a NextToken. You can specify the NextToken in a subsequent call to get the\nnext set of results.\n\nThis API action doesn't support filtering by tags.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetParametersByPath.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetPatchBaseline": {
            "main": "./lib/actions/GetPatchBaseline.js",
            "title": "GetPatchBaseline",
            "description": "Retrieves information about a patch baseline.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetPatchBaseline.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetPatchBaselineForPatchGroup": {
            "main": "./lib/actions/GetPatchBaselineForPatchGroup.js",
            "title": "GetPatchBaselineForPatchGroup",
            "description": "Retrieves the patch baseline that should be used for the specified patch group.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetPatchBaselineForPatchGroup.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetServiceSetting": {
            "main": "./lib/actions/GetServiceSetting.js",
            "title": "GetServiceSetting",
            "description": " ServiceSetting is an account-level setting for an AWS service. This setting\ndefines how a user interacts with or uses a service or a feature of a service.\nFor example, if an AWS service charges money to the account based on feature or\nservice usage, then the AWS service team might create a default setting of\n\"false\". This means the user can't use this feature unless they change the\nsetting to \"true\" and intentionally opt in for a paid feature.\n\nServices map a SettingId object to a setting value. AWS services teams define\nthe default value for a SettingId. You can't create a new SettingId, but you can\noverwrite the default value if you have the ssm:UpdateServiceSetting permission\nfor the setting. Use the UpdateServiceSetting API action to change the default\nsetting. Or use the ResetServiceSetting to change the value back to the original\nvalue defined by the AWS service team.\n\nQuery the current service setting for the account.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetServiceSetting.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "LabelParameterVersion": {
            "main": "./lib/actions/LabelParameterVersion.js",
            "title": "LabelParameterVersion",
            "description": "A parameter label is a user-defined alias to help you manage different versions\nof a parameter. When you modify a parameter, Systems Manager automatically saves\na new version and increments the version number by one. A label can help you\nremember the purpose of a parameter when there are multiple versions. \n\nParameter labels have the following requirements and restrictions.\n\n *  A version of a parameter can have a maximum of 10 labels.\n   \n   \n *  You can't attach the same label to different versions of the same parameter.\n   For example, if version 1 has the label Production, then you can't attach\n   Production to version 2.\n   \n   \n *  You can move a label from one version of a parameter to another.\n   \n   \n *  You can't create a label when you create a new parameter. You must attach a\n   label to a specific version of a parameter.\n   \n   \n *  You can't delete a parameter label. If you no longer want to use a parameter\n   label, then you must move it to a different version of a parameter.\n   \n   \n *  A label can have a maximum of 100 characters.\n   \n   \n *  Labels can contain letters (case sensitive), numbers, periods (.), hyphens\n   (-), or underscores (_).\n   \n   \n *  Labels can't begin with a number, \"aws,\" or \"ssm\" (not case sensitive). If a\n   label fails to meet these requirements, then the label is not associated with\n   a parameter and the system displays it in the list of InvalidLabels.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/LabelParameterVersion.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListAssociationVersions": {
            "main": "./lib/actions/ListAssociationVersions.js",
            "title": "ListAssociationVersions",
            "description": "Retrieves all versions of an association for a specific association ID.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListAssociationVersions.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListAssociations": {
            "main": "./lib/actions/ListAssociations.js",
            "title": "ListAssociations",
            "description": "Lists the associations for the specified Systems Manager document or instance.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListAssociations.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListCommandInvocations": {
            "main": "./lib/actions/ListCommandInvocations.js",
            "title": "ListCommandInvocations",
            "description": "An invocation is copy of a command sent to a specific instance. A command can apply to one or more instances. A command invocation applies to one instance. For example, if a user executes SendCommand against three instances, then a command invocation is created for each requested instance ID. ListCommandInvocations provide status about command execution.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListCommandInvocations.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListCommands": {
            "main": "./lib/actions/ListCommands.js",
            "title": "ListCommands",
            "description": "Lists the commands requested by users of the AWS account.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListCommands.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListComplianceItems": {
            "main": "./lib/actions/ListComplianceItems.js",
            "title": "ListComplianceItems",
            "description": "For a specified resource ID, this API action returns a list of compliance statuses for different resource types. Currently, you can only specify one resource ID per call. List results depend on the criteria specified in the filter. ",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListComplianceItems.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListComplianceSummaries": {
            "main": "./lib/actions/ListComplianceSummaries.js",
            "title": "ListComplianceSummaries",
            "description": "Returns a summary count of compliant and non-compliant resources for a compliance type. For example, this call can return State Manager associations, patches, or custom compliance types according to the filter criteria that you specify. ",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListComplianceSummaries.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListDocumentVersions": {
            "main": "./lib/actions/ListDocumentVersions.js",
            "title": "ListDocumentVersions",
            "description": "List all versions for a document.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListDocumentVersions.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListDocuments": {
            "main": "./lib/actions/ListDocuments.js",
            "title": "ListDocuments",
            "description": "Describes one or more of your Systems Manager documents.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListDocuments.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListInventoryEntries": {
            "main": "./lib/actions/ListInventoryEntries.js",
            "title": "ListInventoryEntries",
            "description": "A list of inventory items returned by the request.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListInventoryEntries.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListResourceComplianceSummaries": {
            "main": "./lib/actions/ListResourceComplianceSummaries.js",
            "title": "ListResourceComplianceSummaries",
            "description": "Returns a resource-level summary count. The summary includes information about compliant and non-compliant statuses and detailed compliance-item severity counts, according to the filter criteria you specify.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListResourceComplianceSummaries.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListResourceDataSync": {
            "main": "./lib/actions/ListResourceDataSync.js",
            "title": "ListResourceDataSync",
            "description": "Lists your resource data sync configurations. Includes information about the\nlast time a sync attempted to start, the last sync status, and the last time a\nsync successfully completed.\n\nThe number of sync configurations might be too large to return using a single\ncall to ListResourceDataSync. You can limit the number of sync configurations\nreturned by using the MaxResults parameter. To determine whether there are more\nsync configurations to list, check the value of NextToken in the output. If\nthere are more sync configurations to list, you can request them by specifying\nthe NextToken returned in the call to the parameter of a subsequent call.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListResourceDataSync.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListTagsForResource": {
            "main": "./lib/actions/ListTagsForResource.js",
            "title": "ListTagsForResource",
            "description": "Returns a list of the tags assigned to the specified resource.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListTagsForResource.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ModifyDocumentPermission": {
            "main": "./lib/actions/ModifyDocumentPermission.js",
            "title": "ModifyDocumentPermission",
            "description": "Shares a Systems Manager document publicly or privately. If you share a document privately, you must specify the AWS user account IDs for those people who can use the document. If you share a document publicly, you must specify <i>All</i> as the account ID.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ModifyDocumentPermission.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PutComplianceItems": {
            "main": "./lib/actions/PutComplianceItems.js",
            "title": "PutComplianceItems",
            "description": "Registers a compliance type and other compliance details on a designated\nresource. This action lets you register custom compliance details with a\nresource. This call overwrites existing compliance information on the resource,\nso you must provide a full list of compliance items each time that you send the\nrequest.\n\nComplianceType can be one of the following:\n\n *  ExecutionId: The execution ID when the patch, association, or custom\n   compliance item was applied.\n   \n   \n *  ExecutionType: Specify patch, association, or Custom:string.\n   \n   \n *  ExecutionTime. The time the patch, association, or custom compliance item\n   was applied to the instance.\n   \n   \n *  Id: The patch, association, or custom compliance ID.\n   \n   \n *  Title: A title.\n   \n   \n *  Status: The status of the compliance item. For example, approved for patches,\n   or Failed for associations.\n   \n   \n *  Severity: A patch severity. For example, critical.\n   \n   \n *  DocumentName: A SSM document name. For example, AWS-RunPatchBaseline.\n   \n   \n *  DocumentVersion: An SSM document version number. For example, 4.\n   \n   \n *  Classification: A patch classification. For example, security updates.\n   \n   \n *  PatchBaselineId: A patch baseline ID.\n   \n   \n *  PatchSeverity: A patch severity. For example, Critical.\n   \n   \n *  PatchState: A patch state. For example, InstancesWithFailedPatches.\n   \n   \n *  PatchGroup: The name of a patch group.\n   \n   \n *  InstalledTime: The time the association, patch, or custom compliance item\n   was applied to the resource. Specify the time by using the following format:\n   yyyy-MM-dd'T'HH:mm:ss'Z'",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PutComplianceItems.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PutInventory": {
            "main": "./lib/actions/PutInventory.js",
            "title": "PutInventory",
            "description": "Bulk update custom inventory items on one more instance. The request adds an inventory item, if it doesn't already exist, or updates an inventory item, if it does exist.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PutInventory.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PutParameter": {
            "main": "./lib/actions/PutParameter.js",
            "title": "PutParameter",
            "description": "Add a parameter to the system.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PutParameter.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "RegisterDefaultPatchBaseline": {
            "main": "./lib/actions/RegisterDefaultPatchBaseline.js",
            "title": "RegisterDefaultPatchBaseline",
            "description": "Defines the default patch baseline.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/RegisterDefaultPatchBaseline.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "RegisterPatchBaselineForPatchGroup": {
            "main": "./lib/actions/RegisterPatchBaselineForPatchGroup.js",
            "title": "RegisterPatchBaselineForPatchGroup",
            "description": "Registers a patch baseline for a patch group.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/RegisterPatchBaselineForPatchGroup.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "RegisterTargetWithMaintenanceWindow": {
            "main": "./lib/actions/RegisterTargetWithMaintenanceWindow.js",
            "title": "RegisterTargetWithMaintenanceWindow",
            "description": "Registers a target with a Maintenance Window.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/RegisterTargetWithMaintenanceWindow.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "RegisterTaskWithMaintenanceWindow": {
            "main": "./lib/actions/RegisterTaskWithMaintenanceWindow.js",
            "title": "RegisterTaskWithMaintenanceWindow",
            "description": "Adds a new task to a Maintenance Window.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/RegisterTaskWithMaintenanceWindow.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "RemoveTagsFromResource": {
            "main": "./lib/actions/RemoveTagsFromResource.js",
            "title": "RemoveTagsFromResource",
            "description": "Removes all tags from the specified resource.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/RemoveTagsFromResource.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ResetServiceSetting": {
            "main": "./lib/actions/ResetServiceSetting.js",
            "title": "ResetServiceSetting",
            "description": " ServiceSetting is an account-level setting for an AWS service. This setting\ndefines how a user interacts with or uses a service or a feature of a service.\nFor example, if an AWS service charges money to the account based on feature or\nservice usage, then the AWS service team might create a default setting of\n\"false\". This means the user can't use this feature unless they change the\nsetting to \"true\" and intentionally opt in for a paid feature.\n\nServices map a SettingId object to a setting value. AWS services teams define\nthe default value for a SettingId. You can't create a new SettingId, but you can\noverwrite the default value if you have the ssm:UpdateServiceSetting permission\nfor the setting. Use the GetServiceSetting API action to view the current value.\nUse the UpdateServiceSetting API action to change the default setting. \n\nReset the service setting for the account to the default value as provisioned by\nthe AWS service team.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ResetServiceSetting.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ResumeSession": {
            "main": "./lib/actions/ResumeSession.js",
            "title": "ResumeSession",
            "description": "Reconnects a session to an instance after it has been disconnected. Connections\ncan be resumed for disconnected sessions, but not terminated sessions.\n\nThis command is primarily for use by client machines to automatically reconnect\nduring intermittent network issues. It is not intended for any other use.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ResumeSession.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "SendAutomationSignal": {
            "main": "./lib/actions/SendAutomationSignal.js",
            "title": "SendAutomationSignal",
            "description": "Sends a signal to an Automation execution to change the current behavior or status of the execution. ",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/SendAutomationSignal.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "SendCommand": {
            "main": "./lib/actions/SendCommand.js",
            "title": "SendCommand",
            "description": "Executes commands on one or more managed instances.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/SendCommand.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StartAssociationsOnce": {
            "main": "./lib/actions/StartAssociationsOnce.js",
            "title": "StartAssociationsOnce",
            "description": "Use this API action to execute an association immediately and only one time. This action can be helpful when troubleshooting associations.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/StartAssociationsOnce.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StartAutomationExecution": {
            "main": "./lib/actions/StartAutomationExecution.js",
            "title": "StartAutomationExecution",
            "description": "Initiates execution of an Automation document.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/StartAutomationExecution.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StartSession": {
            "main": "./lib/actions/StartSession.js",
            "title": "StartSession",
            "description": "Initiates a connection to a target (for example, an instance) for a Session\nManager session. Returns a URL and token that can be used to open a WebSocket\nconnection for sending input and receiving outputs.\n\nAWS CLI usage: start-session is an interactive command that requires the Session\nManager plugin to be installed on the client machine making the call. For\ninformation, see Install the Session Manager Plugin for the AWS CLI\n[http://docs.aws.amazon.com/systems-manager/latest/userguide/session-manager-working-with-install-plugin.html] \nin the AWS Systems Manager User Guide.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/StartSession.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StopAutomationExecution": {
            "main": "./lib/actions/StopAutomationExecution.js",
            "title": "StopAutomationExecution",
            "description": "Stop an Automation that is currently executing.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/StopAutomationExecution.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "TerminateSession": {
            "main": "./lib/actions/TerminateSession.js",
            "title": "TerminateSession",
            "description": "Permanently ends a session and closes the data connection between the Session Manager client and SSM Agent on the instance. A terminated session cannot be resumed.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/TerminateSession.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpdateAssociation": {
            "main": "./lib/actions/UpdateAssociation.js",
            "title": "UpdateAssociation",
            "description": "Updates an association. You can update the association name and version, the document version, schedule, parameters, and Amazon S3 output.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdateAssociation.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpdateAssociationStatus": {
            "main": "./lib/actions/UpdateAssociationStatus.js",
            "title": "UpdateAssociationStatus",
            "description": "Updates the status of the Systems Manager document associated with the specified instance.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdateAssociationStatus.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpdateDocument": {
            "main": "./lib/actions/UpdateDocument.js",
            "title": "UpdateDocument",
            "description": "The document you want to update.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdateDocument.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpdateDocumentDefaultVersion": {
            "main": "./lib/actions/UpdateDocumentDefaultVersion.js",
            "title": "UpdateDocumentDefaultVersion",
            "description": "Set the default version of a document. ",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdateDocumentDefaultVersion.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpdateMaintenanceWindow": {
            "main": "./lib/actions/UpdateMaintenanceWindow.js",
            "title": "UpdateMaintenanceWindow",
            "description": "Updates an existing Maintenance Window. Only specified parameters are modified.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdateMaintenanceWindow.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpdateMaintenanceWindowTarget": {
            "main": "./lib/actions/UpdateMaintenanceWindowTarget.js",
            "title": "UpdateMaintenanceWindowTarget",
            "description": "Modifies the target of an existing Maintenance Window. You can't change the\ntarget type, but you can change the following:\n\nThe target from being an ID target to a Tag target, or a Tag target to an ID\ntarget.\n\nIDs for an ID target.\n\nTags for a Tag target.\n\nOwner.\n\nName.\n\nDescription.\n\nIf a parameter is null, then the corresponding field is not modified.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdateMaintenanceWindowTarget.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpdateMaintenanceWindowTask": {
            "main": "./lib/actions/UpdateMaintenanceWindowTask.js",
            "title": "UpdateMaintenanceWindowTask",
            "description": "Modifies a task assigned to a Maintenance Window. You can't change the task\ntype, but you can change the following values:\n\n *  TaskARN. For example, you can change a RUN_COMMAND task from\n   AWS-RunPowerShellScript to AWS-RunShellScript.\n   \n   \n *  ServiceRoleArn\n   \n   \n *  TaskInvocationParameters\n   \n   \n *  Priority\n   \n   \n *  MaxConcurrency\n   \n   \n *  MaxErrors\n   \n   \n\nIf a parameter is null, then the corresponding field is not modified. Also, if\nyou set Replace to true, then all fields required by the \nRegisterTaskWithMaintenanceWindow action are required for this request. Optional\nfields that aren't specified are set to null.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdateMaintenanceWindowTask.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpdateManagedInstanceRole": {
            "main": "./lib/actions/UpdateManagedInstanceRole.js",
            "title": "UpdateManagedInstanceRole",
            "description": "Assigns or changes an Amazon Identity and Access Management (IAM) role to the managed instance.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdateManagedInstanceRole.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpdatePatchBaseline": {
            "main": "./lib/actions/UpdatePatchBaseline.js",
            "title": "UpdatePatchBaseline",
            "description": "Modifies an existing patch baseline. Fields not specified in the request are\nleft unchanged.\n\nFor information about valid key and value pairs in PatchFilters for each\nsupported operating system type, see PatchFilter\n[http://docs.aws.amazon.com/systems-manager/latest/APIReference/API_PatchFilter.html]\n.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdatePatchBaseline.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpdateServiceSetting": {
            "main": "./lib/actions/UpdateServiceSetting.js",
            "title": "UpdateServiceSetting",
            "description": " ServiceSetting is an account-level setting for an AWS service. This setting\ndefines how a user interacts with or uses a service or a feature of a service.\nFor example, if an AWS service charges money to the account based on feature or\nservice usage, then the AWS service team might create a default setting of\n\"false\". This means the user can't use this feature unless they change the\nsetting to \"true\" and intentionally opt in for a paid feature.\n\nServices map a SettingId object to a setting value. AWS services teams define\nthe default value for a SettingId. You can't create a new SettingId, but you can\noverwrite the default value if you have the ssm:UpdateServiceSetting permission\nfor the setting. Use the GetServiceSetting API action to view the current value.\nOr, use the ResetServiceSetting to change the value back to the original value\ndefined by the AWS service team.\n\nUpdate the service setting for the account.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdateServiceSetting.in.json",
                "out": {
                    "type": "object"
                }
            }
        }
    }
}