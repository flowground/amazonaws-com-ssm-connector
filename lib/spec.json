{
    "openapi": "3.0.0",
    "servers": [
        {
            "url": "https://ssm.amazonaws.com/"
        },
        {
            "url": "http://ssm.amazonaws.com/"
        }
    ],
    "x-hasEquivalentPaths": true,
    "info": {
        "contact": {
            "email": "mike.ralphson@gmail.com",
            "name": "Mike Ralphson",
            "url": "https://github.com/mermade/aws2openapi",
            "x-twitter": "PermittedSoc"
        },
        "description": "<fullname>AWS Systems Manager</fullname> <p>AWS Systems Manager is a collection of capabilities that helps you automate management tasks such as collecting system inventory, applying operating system (OS) patches, automating the creation of Amazon Machine Images (AMIs), and configuring operating systems (OSs) and applications at scale. Systems Manager lets you remotely and securely manage the configuration of your managed instances. A <i>managed instance</i> is any Amazon EC2 instance or on-premises machine in your hybrid environment that has been configured for Systems Manager.</p> <p>This reference is intended to be used with the <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/\">AWS Systems Manager User Guide</a>.</p> <p>To get started, verify prerequisites and configure managed instances. For more information, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-setting-up.html\">Systems Manager Prerequisites</a> in the <i>AWS Systems Manager User Guide</i>.</p> <p>For information about other API actions you can perform on Amazon EC2 instances, see the <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/\">Amazon EC2 API Reference</a>. For information about how to use a Query API, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/making-api-requests.html\">Making API Requests</a>. </p>",
        "license": {
            "name": "Apache 2.0 License",
            "url": "http://www.apache.org/licenses/"
        },
        "termsOfService": "https://aws.amazon.com/service-terms/",
        "title": "Amazon Simple Systems Manager (SSM)",
        "version": "2014-11-06",
        "x-apiClientRegistration": {
            "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
        },
        "x-apisguru-categories": [
            "cloud"
        ],
        "x-logo": {
            "backgroundColor": "#FFFFFF",
            "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.jpeg"
        },
        "x-origin": [
            {
                "contentType": "application/json",
                "converter": {
                    "url": "https://github.com/mermade/aws2openapi",
                    "version": "1.0.0"
                },
                "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/ssm-2014-11-06.normal.json",
                "x-apisguru-direct": true
            }
        ],
        "x-preferred": true,
        "x-providerName": "amazonaws.com",
        "x-release": "v4",
        "x-serviceName": "ssm"
    },
    "externalDocs": {
        "description": "Amazon Web Services documentation",
        "url": "https://docs.aws.amazon.com/ssm/"
    },
    "security": [
        {
            "hmac": []
        }
    ],
    "paths": {
        "/": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Adds or overwrites one or more tags for the specified resource. Tags are metadata that you can assign to your documents, managed instances, Maintenance Windows, Parameter Store parameters, and patch baselines. Tags enable you to categorize your resources in different ways, for example, by purpose, owner, or environment. Each tag consists of a key and an optional value, both of which you define. For example, you could define a set of tags for your account's managed instances that helps you track each instance's owner and stack level. For example: Key=Owner and Value=DbAdmin, SysAdmin, or Dev. Or Key=Stack and Value=Production, Pre-Production, or Test.</p> <p>Each resource can have a maximum of 50 tags. </p> <p>We recommend that you devise a set of tag keys that meets your needs for each resource type. Using a consistent set of tag keys makes it easier for you to manage your resources. You can search and filter the resources based on the tags you add. Tags don't have any semantic meaning to Amazon EC2 and are interpreted strictly as a string of characters. </p> <p>For more information about tags, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html\">Tagging Your Amazon EC2 Resources</a> in the <i>Amazon EC2 User Guide</i>.</p>",
                "operationId": "AddTagsToResource",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidResourceType",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidResourceId",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "TooManyTagsError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "TooManyUpdates",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ResourceId": {
                                        "description": "<p>The resource ID you want to tag.</p> <p>Use the ID of the resource. Here are some examples:</p> <p>ManagedInstance: mi-012345abcde</p> <p>MaintenanceWindow: mw-012345abcde</p> <p>PatchBaseline: pb-012345abcde</p> <p>For the Document and Parameter values, use the name of the resource.</p> <note> <p>The ManagedInstance type for this API action is only for on-premises managed instances. You must specify the the name of the managed instance in the following format: mi-ID_number. For example, mi-1a2b3c4d5e6f.</p> </note>",
                                        "type": "string"
                                    },
                                    "ResourceType": {
                                        "description": "<p>Specifies the type of resource you are tagging.</p> <note> <p>The ManagedInstance type for this API action is for on-premises managed instances. You must specify the the name of the managed instance in the following format: mi-ID_number. For example, mi-1a2b3c4d5e6f.</p> </note>",
                                        "enum": [
                                            "Document",
                                            "ManagedInstance",
                                            "MaintenanceWindow",
                                            "Parameter",
                                            "PatchBaseline"
                                        ],
                                        "type": "string"
                                    },
                                    "Tags": {
                                        "description": "<p> One or more tags. The value parameter is required, but if you don't want the tag to have a value, specify the parameter with no value, and we set the value to an empty string. </p> <important> <p>Do not enter personally identifiable information in this field.</p> </important>",
                                        "items": {
                                            "description": "Metadata that you assign to your AWS resources. Tags enable you to categorize your resources in different ways, for example, by purpose, owner, or environment. In Systems Manager, you can apply tags to documents, managed instances, Maintenance Windows, Parameter Store parameters, and patch baselines.",
                                            "properties": {
                                                "Key": {
                                                    "description": "The name of the tag.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The value of the tag.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Key",
                                                "Value"
                                            ],
                                            "type": "object"
                                        },
                                        "maxItems": 1000,
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "ResourceType",
                                    "ResourceId",
                                    "Tags"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#CancelCommand": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Attempts to cancel the command specified by the Command ID. There is no guarantee that the command will be terminated and the underlying process stopped.",
                "operationId": "CancelCommand",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Whether or not the command was successfully canceled. There is no guarantee that a request can be canceled.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidCommandId",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidInstanceId",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "DuplicateInstanceId",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "CommandId": {
                                        "description": "The ID of the command you want to cancel.",
                                        "maxLength": 36,
                                        "minLength": 36,
                                        "type": "string"
                                    },
                                    "InstanceIds": {
                                        "description": "(Optional) A list of instance IDs on which you want to cancel the command. If not provided, the command is canceled on every instance on which it was requested.",
                                        "items": {
                                            "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                                            "type": "string"
                                        },
                                        "maxItems": 50,
                                        "minItems": 0,
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "CommandId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#CancelMaintenanceWindowExecution": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Stops a Maintenance Window execution that is already in progress and cancels any tasks in the window that have not already starting running. (Tasks already in progress will continue to completion.)",
                "operationId": "CancelMaintenanceWindowExecution",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "WindowExecutionId": {
                                            "description": "The ID of the Maintenance Window execution that has been stopped.",
                                            "maxLength": 36,
                                            "minLength": 36,
                                            "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "DoesNotExistException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "WindowExecutionId": {
                                        "description": "The ID of the Maintenance Window execution to stop.",
                                        "maxLength": 36,
                                        "minLength": 36,
                                        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "WindowExecutionId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#CreateActivation": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Registers your on-premises server or virtual machine with Amazon EC2 so that you can manage these resources using Run Command. An on-premises server or virtual machine that has been registered with EC2 is called a managed instance. For more information about activations, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-managedinstances.html\">Setting Up Systems Manager in Hybrid Environments</a>.",
                "operationId": "CreateActivation",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ActivationCode": {
                                            "description": "The code the system generates when it processes the activation. The activation code functions like a password to validate the activation ID. ",
                                            "maxLength": 250,
                                            "minLength": 20,
                                            "type": "string"
                                        },
                                        "ActivationId": {
                                            "description": "The ID number generated by the system when it processed the activation. The activation ID functions like a user name.",
                                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "DefaultInstanceName": {
                                        "description": "<p>The name of the registered, managed instance as it will appear in the Amazon EC2 console or when you use the AWS command line tools to list EC2 resources.</p> <important> <p>Do not enter personally identifiable information in this field.</p> </important>",
                                        "maxLength": 256,
                                        "minLength": 0,
                                        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                        "type": "string"
                                    },
                                    "Description": {
                                        "description": "<p>A user-defined description of the resource that you want to register with Amazon EC2. </p> <important> <p>Do not enter personally identifiable information in this field.</p> </important>",
                                        "maxLength": 256,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "ExpirationDate": {
                                        "description": "The date by which this activation request should expire. The default value is 24 hours.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "IamRole": {
                                        "description": "The Amazon Identity and Access Management (IAM) role that you want to assign to the managed instance. ",
                                        "maxLength": 64,
                                        "type": "string"
                                    },
                                    "RegistrationLimit": {
                                        "description": "Specify the maximum number of managed instances you want to register. The default value is 1 instance.",
                                        "maximum": 1000,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "Tags": {
                                        "description": "<p>Optional metadata that you assign to a resource. Tags enable you to categorize a resource in different ways, such as by purpose, owner, or environment. For example, you might want to tag an activation to identify which servers or virtual machines (VMs) in your on-premises environment you intend to activate. In this case, you could specify the following key name/value pairs:</p> <ul> <li> <p> <code>Key=OS,Value=Windows</code> </p> </li> <li> <p> <code>Key=Environment,Value=Production</code> </p> </li> </ul> <important> <p>When you install SSM Agent on your on-premises servers and VMs, you specify an activation ID and code. When you specify the activation ID and code, tags assigned to the activation are automatically applied to the on-premises servers or VMs.</p> </important> <p>You can't add tags to or delete tags from an existing activation. You can tag your on-premises servers and VMs after they connect to Systems Manager for the first time and are assigned a managed instance ID. This means they are listed in the AWS Systems Manager console with an ID that is prefixed with \"mi-\". For information about how to add tags to your managed instances, see <a>AddTagsToResource</a>. For information about how to remove tags from your managed instances, see <a>RemoveTagsFromResource</a>.</p>",
                                        "items": {
                                            "description": "Metadata that you assign to your AWS resources. Tags enable you to categorize your resources in different ways, for example, by purpose, owner, or environment. In Systems Manager, you can apply tags to documents, managed instances, Maintenance Windows, Parameter Store parameters, and patch baselines.",
                                            "properties": {
                                                "Key": {
                                                    "description": "The name of the tag.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The value of the tag.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Key",
                                                "Value"
                                            ],
                                            "type": "object"
                                        },
                                        "maxItems": 1000,
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "IamRole"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#CreateAssociation": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Associates the specified Systems Manager document with the specified instances or targets.</p> <p>When you associate a document with one or more instances using instance IDs or tags, SSM Agent running on the instance processes the document and configures the instance as specified.</p> <p>If you associate a document with an instance that already has an associated document, the system returns the AssociationAlreadyExists exception.</p>",
                "operationId": "CreateAssociation",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "AssociationDescription": {
                                            "description": "Information about the association.",
                                            "properties": {
                                                "AssociationId": {
                                                    "description": "The association ID.",
                                                    "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                                                    "type": "string"
                                                },
                                                "AssociationName": {
                                                    "description": "The association name.",
                                                    "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                                    "type": "string"
                                                },
                                                "AssociationVersion": {
                                                    "description": "The association version.",
                                                    "pattern": "([$]LATEST)|([1-9][0-9]*)",
                                                    "type": "string"
                                                },
                                                "AutomationTargetParameterName": {
                                                    "description": "Specify the target for the association. This target is required for associations that use an Automation document and target resources by using rate controls.",
                                                    "maxLength": 50,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "ComplianceSeverity": {
                                                    "description": "The severity level that is assigned to the association.",
                                                    "enum": [
                                                        "CRITICAL",
                                                        "HIGH",
                                                        "MEDIUM",
                                                        "LOW",
                                                        "UNSPECIFIED"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Date": {
                                                    "description": "The date when the association was made.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "DocumentVersion": {
                                                    "description": "The document version.",
                                                    "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                                    "type": "string"
                                                },
                                                "InstanceId": {
                                                    "description": "The ID of the instance.",
                                                    "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                                                    "type": "string"
                                                },
                                                "LastExecutionDate": {
                                                    "description": "The date on which the association was last run.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "LastSuccessfulExecutionDate": {
                                                    "description": "The last date on which the association was successfully run.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "LastUpdateAssociationDate": {
                                                    "description": "The date when the association was last updated.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "MaxConcurrency": {
                                                    "description": "<p>The maximum number of targets allowed to run the association at the same time. You can specify a number, for example 10, or a percentage of the target set, for example 10%. The default value is 100%, which means all targets run the association at the same time.</p> <p>If a new instance starts and attempts to execute an association while Systems Manager is executing MaxConcurrency associations, the association is allowed to run. During the next association interval, the new instance will process its association within the limit specified for MaxConcurrency.</p>",
                                                    "maxLength": 7,
                                                    "minLength": 1,
                                                    "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                                                    "type": "string"
                                                },
                                                "MaxErrors": {
                                                    "description": "<p>The number of errors that are allowed before the system stops sending requests to run the association on additional targets. You can specify either an absolute number of errors, for example 10, or a percentage of the target set, for example 10%. If you specify 3, for example, the system stops sending requests when the fourth error is received. If you specify 0, then the system stops sending requests after the first error is returned. If you run an association on 50 instances and set MaxError to 10%, then the system stops sending the request when the sixth error is received.</p> <p>Executions that are already running an association when MaxErrors is reached are allowed to complete, but some of these executions may fail as well. If you need to ensure that there won't be more than max-errors failed executions, set MaxConcurrency to 1 so that executions proceed one at a time.</p>",
                                                    "maxLength": 7,
                                                    "minLength": 1,
                                                    "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the Systems Manager document.",
                                                    "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                                                    "type": "string"
                                                },
                                                "OutputLocation": {
                                                    "description": "An Amazon S3 bucket where you want to store the output details of the request.",
                                                    "properties": {
                                                        "S3Location": {
                                                            "description": "An Amazon S3 bucket where you want to store the results of this request.",
                                                            "properties": {
                                                                "OutputS3BucketName": {
                                                                    "description": "The name of the Amazon S3 bucket.",
                                                                    "maxLength": 63,
                                                                    "minLength": 3,
                                                                    "type": "string"
                                                                },
                                                                "OutputS3KeyPrefix": {
                                                                    "description": "The Amazon S3 bucket subfolder.",
                                                                    "maxLength": 500,
                                                                    "type": "string"
                                                                },
                                                                "OutputS3Region": {
                                                                    "description": "(Deprecated) You can no longer specify this parameter. The system ignores it. Instead, Systems Manager automatically determines the Amazon S3 bucket region.",
                                                                    "maxLength": 20,
                                                                    "minLength": 3,
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "Overview": {
                                                    "description": "Information about the association.",
                                                    "properties": {
                                                        "AssociationStatusAggregatedCount": {
                                                            "description": "Returns the number of targets for the association status. For example, if you created an association with two instances, and one of them was successful, this would return the count of instances by status.",
                                                            "items": {
                                                                "properties": {
                                                                    "key": {
                                                                        "type": "string"
                                                                    },
                                                                    "value": {
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "DetailedStatus": {
                                                            "description": "A detailed status of the association.",
                                                            "type": "string"
                                                        },
                                                        "Status": {
                                                            "description": "The status of the association. Status can be: Pending, Success, or Failed.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "Parameters": {
                                                    "description": "A description of the parameters for a document. ",
                                                    "items": {
                                                        "properties": {
                                                            "key": {
                                                                "type": "string"
                                                            },
                                                            "value": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "ScheduleExpression": {
                                                    "description": "A cron expression that specifies a schedule when the association runs.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "description": "The association status.",
                                                    "properties": {
                                                        "AdditionalInfo": {
                                                            "description": "A user-defined string.",
                                                            "maxLength": 1024,
                                                            "type": "string"
                                                        },
                                                        "Date": {
                                                            "description": "The date when the status changed.",
                                                            "format": "date-time",
                                                            "type": "string"
                                                        },
                                                        "Message": {
                                                            "description": "The reason for the status.",
                                                            "maxLength": 1024,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "Name": {
                                                            "description": "The status.",
                                                            "enum": [
                                                                "Pending",
                                                                "Success",
                                                                "Failed"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "Date",
                                                        "Name",
                                                        "Message"
                                                    ],
                                                    "type": "object"
                                                },
                                                "Targets": {
                                                    "description": "The instances targeted by the request. ",
                                                    "items": {
                                                        "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                                                        "properties": {
                                                            "Key": {
                                                                "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                                "maxLength": 128,
                                                                "minLength": 1,
                                                                "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                                                "type": "string"
                                                            },
                                                            "Values": {
                                                                "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "maxItems": 50,
                                                                "minItems": 0,
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "maxItems": 5,
                                                    "minItems": 0,
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "AssociationAlreadyExists",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "AssociationLimitExceeded",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "InvalidDocument",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "InvalidDocumentVersion",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "InvalidInstanceId",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "UnsupportedPlatformType",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "487": {
                        "description": "InvalidOutputLocation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "488": {
                        "description": "InvalidParameters",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "489": {
                        "description": "InvalidTarget",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "490": {
                        "description": "InvalidSchedule",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "AssociationName": {
                                        "description": "Specify a descriptive name for the association.",
                                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                        "type": "string"
                                    },
                                    "AutomationTargetParameterName": {
                                        "description": "Specify the target for the association. This target is required for associations that use an Automation document and target resources by using rate controls.",
                                        "maxLength": 50,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "ComplianceSeverity": {
                                        "description": "The severity level to assign to the association.",
                                        "enum": [
                                            "CRITICAL",
                                            "HIGH",
                                            "MEDIUM",
                                            "LOW",
                                            "UNSPECIFIED"
                                        ],
                                        "type": "string"
                                    },
                                    "DocumentVersion": {
                                        "description": "The document version you want to associate with the target(s). Can be a specific version or the default version.",
                                        "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                        "type": "string"
                                    },
                                    "InstanceId": {
                                        "description": "The instance ID.",
                                        "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                                        "type": "string"
                                    },
                                    "MaxConcurrency": {
                                        "description": "<p>The maximum number of targets allowed to run the association at the same time. You can specify a number, for example 10, or a percentage of the target set, for example 10%. The default value is 100%, which means all targets run the association at the same time.</p> <p>If a new instance starts and attempts to execute an association while Systems Manager is executing MaxConcurrency associations, the association is allowed to run. During the next association interval, the new instance will process its association within the limit specified for MaxConcurrency.</p>",
                                        "maxLength": 7,
                                        "minLength": 1,
                                        "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                                        "type": "string"
                                    },
                                    "MaxErrors": {
                                        "description": "<p>The number of errors that are allowed before the system stops sending requests to run the association on additional targets. You can specify either an absolute number of errors, for example 10, or a percentage of the target set, for example 10%. If you specify 3, for example, the system stops sending requests when the fourth error is received. If you specify 0, then the system stops sending requests after the first error is returned. If you run an association on 50 instances and set MaxError to 10%, then the system stops sending the request when the sixth error is received.</p> <p>Executions that are already running an association when MaxErrors is reached are allowed to complete, but some of these executions may fail as well. If you need to ensure that there won't be more than max-errors failed executions, set MaxConcurrency to 1 so that executions proceed one at a time.</p>",
                                        "maxLength": 7,
                                        "minLength": 1,
                                        "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "<p>The name of the SSM document that contains the configuration information for the instance. You can specify Command, Policy, or Automation documents.</p> <p>You can specify AWS-predefined documents, documents you created, or a document that is shared with you from another account.</p> <p>For SSM documents that are shared with you from other AWS accounts, you must specify the complete SSM document ARN, in the following format:</p> <p> <code>arn:<i>partition</i>:ssm:<i>region</i>:<i>account-id</i>:document/<i>document-name</i> </code> </p> <p>For example:</p> <p> <code>arn:aws:ssm:us-east-2:12345678912:document/My-Shared-Document</code> </p> <p>For AWS-predefined documents and SSM documents you created in your account, you only need to specify the document name. For example, <code>AWS-ApplyPatchBaseline</code> or <code>My-Document</code>.</p>",
                                        "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                                        "type": "string"
                                    },
                                    "OutputLocation": {
                                        "description": "An Amazon S3 bucket where you want to store the output details of the request.",
                                        "properties": {
                                            "S3Location": {
                                                "description": "An Amazon S3 bucket where you want to store the results of this request.",
                                                "properties": {
                                                    "OutputS3BucketName": {
                                                        "description": "The name of the Amazon S3 bucket.",
                                                        "maxLength": 63,
                                                        "minLength": 3,
                                                        "type": "string"
                                                    },
                                                    "OutputS3KeyPrefix": {
                                                        "description": "The Amazon S3 bucket subfolder.",
                                                        "maxLength": 500,
                                                        "type": "string"
                                                    },
                                                    "OutputS3Region": {
                                                        "description": "(Deprecated) You can no longer specify this parameter. The system ignores it. Instead, Systems Manager automatically determines the Amazon S3 bucket region.",
                                                        "maxLength": 20,
                                                        "minLength": 3,
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "Parameters": {
                                        "description": "The parameters for the documents runtime configuration. ",
                                        "items": {
                                            "properties": {
                                                "key": {
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "ScheduleExpression": {
                                        "description": "A cron expression when the association will be applied to the target(s).",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "Targets": {
                                        "description": "The targets (either instances or tags) for the association.",
                                        "items": {
                                            "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                                            "properties": {
                                                "Key": {
                                                    "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "maxItems": 50,
                                                    "minItems": 0,
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "maxItems": 5,
                                        "minItems": 0,
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "Name"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#CreateAssociationBatch": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Associates the specified Systems Manager document with the specified instances or targets.</p> <p>When you associate a document with one or more instances using instance IDs or tags, SSM Agent running on the instance processes the document and configures the instance as specified.</p> <p>If you associate a document with an instance that already has an associated document, the system returns the AssociationAlreadyExists exception.</p>",
                "operationId": "CreateAssociationBatch",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Failed": {
                                            "description": "Information about the associations that failed.",
                                            "items": {
                                                "description": "Describes a failed association.",
                                                "properties": {
                                                    "Entry": {
                                                        "description": "The association.",
                                                        "properties": {
                                                            "AssociationName": {
                                                                "description": "Specify a descriptive name for the association.",
                                                                "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                                                "type": "string"
                                                            },
                                                            "AutomationTargetParameterName": {
                                                                "description": "Specify the target for the association. This target is required for associations that use an Automation document and target resources by using rate controls.",
                                                                "maxLength": 50,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            },
                                                            "ComplianceSeverity": {
                                                                "description": "The severity level to assign to the association.",
                                                                "enum": [
                                                                    "CRITICAL",
                                                                    "HIGH",
                                                                    "MEDIUM",
                                                                    "LOW",
                                                                    "UNSPECIFIED"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "DocumentVersion": {
                                                                "description": "The document version.",
                                                                "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                                                "type": "string"
                                                            },
                                                            "InstanceId": {
                                                                "description": "The ID of the instance. ",
                                                                "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                                                                "type": "string"
                                                            },
                                                            "MaxConcurrency": {
                                                                "description": "<p>The maximum number of targets allowed to run the association at the same time. You can specify a number, for example 10, or a percentage of the target set, for example 10%. The default value is 100%, which means all targets run the association at the same time.</p> <p>If a new instance starts and attempts to execute an association while Systems Manager is executing MaxConcurrency associations, the association is allowed to run. During the next association interval, the new instance will process its association within the limit specified for MaxConcurrency.</p>",
                                                                "maxLength": 7,
                                                                "minLength": 1,
                                                                "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                                                                "type": "string"
                                                            },
                                                            "MaxErrors": {
                                                                "description": "<p>The number of errors that are allowed before the system stops sending requests to run the association on additional targets. You can specify either an absolute number of errors, for example 10, or a percentage of the target set, for example 10%. If you specify 3, for example, the system stops sending requests when the fourth error is received. If you specify 0, then the system stops sending requests after the first error is returned. If you run an association on 50 instances and set MaxError to 10%, then the system stops sending the request when the sixth error is received.</p> <p>Executions that are already running an association when MaxErrors is reached are allowed to complete, but some of these executions may fail as well. If you need to ensure that there won't be more than max-errors failed executions, set MaxConcurrency to 1 so that executions proceed one at a time.</p>",
                                                                "maxLength": 7,
                                                                "minLength": 1,
                                                                "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                                                                "type": "string"
                                                            },
                                                            "Name": {
                                                                "description": "<p>The name of the SSM document that contains the configuration information for the instance. You can specify Command, Policy, or Automation documents.</p> <p>You can specify AWS-predefined documents, documents you created, or a document that is shared with you from another account.</p> <p>For SSM documents that are shared with you from other AWS accounts, you must specify the complete SSM document ARN, in the following format:</p> <p> <code>arn:aws:ssm:<i>region</i>:<i>account-id</i>:document/<i>document-name</i> </code> </p> <p>For example:</p> <p> <code>arn:aws:ssm:us-east-2:12345678912:document/My-Shared-Document</code> </p> <p>For AWS-predefined documents and SSM documents you created in your account, you only need to specify the document name. For example, <code>AWS-ApplyPatchBaseline</code> or <code>My-Document</code>.</p>",
                                                                "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                                                                "type": "string"
                                                            },
                                                            "OutputLocation": {
                                                                "description": "An Amazon S3 bucket where you want to store the results of this request.",
                                                                "properties": {
                                                                    "S3Location": {
                                                                        "description": "An Amazon S3 bucket where you want to store the results of this request.",
                                                                        "properties": {
                                                                            "OutputS3BucketName": {
                                                                                "description": "The name of the Amazon S3 bucket.",
                                                                                "maxLength": 63,
                                                                                "minLength": 3,
                                                                                "type": "string"
                                                                            },
                                                                            "OutputS3KeyPrefix": {
                                                                                "description": "The Amazon S3 bucket subfolder.",
                                                                                "maxLength": 500,
                                                                                "type": "string"
                                                                            },
                                                                            "OutputS3Region": {
                                                                                "description": "(Deprecated) You can no longer specify this parameter. The system ignores it. Instead, Systems Manager automatically determines the Amazon S3 bucket region.",
                                                                                "maxLength": 20,
                                                                                "minLength": 3,
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "Parameters": {
                                                                "description": "A description of the parameters for a document. ",
                                                                "items": {
                                                                    "properties": {
                                                                        "key": {
                                                                            "type": "string"
                                                                        },
                                                                        "value": {
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "ScheduleExpression": {
                                                                "description": "A cron expression that specifies a schedule when the association runs.",
                                                                "maxLength": 256,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            },
                                                            "Targets": {
                                                                "description": "The instances targeted by the request.",
                                                                "items": {
                                                                    "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                                                                    "properties": {
                                                                        "Key": {
                                                                            "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                                            "maxLength": 128,
                                                                            "minLength": 1,
                                                                            "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                                                            "type": "string"
                                                                        },
                                                                        "Values": {
                                                                            "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "maxItems": 50,
                                                                            "minItems": 0,
                                                                            "type": "array"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "maxItems": 5,
                                                                "minItems": 0,
                                                                "type": "array"
                                                            }
                                                        },
                                                        "required": [
                                                            "Name"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "Fault": {
                                                        "description": "The source of the failure.",
                                                        "enum": [
                                                            "Client",
                                                            "Server",
                                                            "Unknown"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Message": {
                                                        "description": "A description of the failure.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "Successful": {
                                            "description": "Information about the associations that succeeded.",
                                            "items": {
                                                "description": "Describes the parameters for a document.",
                                                "properties": {
                                                    "AssociationId": {
                                                        "description": "The association ID.",
                                                        "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                                                        "type": "string"
                                                    },
                                                    "AssociationName": {
                                                        "description": "The association name.",
                                                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                                        "type": "string"
                                                    },
                                                    "AssociationVersion": {
                                                        "description": "The association version.",
                                                        "pattern": "([$]LATEST)|([1-9][0-9]*)",
                                                        "type": "string"
                                                    },
                                                    "AutomationTargetParameterName": {
                                                        "description": "Specify the target for the association. This target is required for associations that use an Automation document and target resources by using rate controls.",
                                                        "maxLength": 50,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "ComplianceSeverity": {
                                                        "description": "The severity level that is assigned to the association.",
                                                        "enum": [
                                                            "CRITICAL",
                                                            "HIGH",
                                                            "MEDIUM",
                                                            "LOW",
                                                            "UNSPECIFIED"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Date": {
                                                        "description": "The date when the association was made.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "DocumentVersion": {
                                                        "description": "The document version.",
                                                        "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                                        "type": "string"
                                                    },
                                                    "InstanceId": {
                                                        "description": "The ID of the instance.",
                                                        "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                                                        "type": "string"
                                                    },
                                                    "LastExecutionDate": {
                                                        "description": "The date on which the association was last run.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "LastSuccessfulExecutionDate": {
                                                        "description": "The last date on which the association was successfully run.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "LastUpdateAssociationDate": {
                                                        "description": "The date when the association was last updated.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "MaxConcurrency": {
                                                        "description": "<p>The maximum number of targets allowed to run the association at the same time. You can specify a number, for example 10, or a percentage of the target set, for example 10%. The default value is 100%, which means all targets run the association at the same time.</p> <p>If a new instance starts and attempts to execute an association while Systems Manager is executing MaxConcurrency associations, the association is allowed to run. During the next association interval, the new instance will process its association within the limit specified for MaxConcurrency.</p>",
                                                        "maxLength": 7,
                                                        "minLength": 1,
                                                        "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                                                        "type": "string"
                                                    },
                                                    "MaxErrors": {
                                                        "description": "<p>The number of errors that are allowed before the system stops sending requests to run the association on additional targets. You can specify either an absolute number of errors, for example 10, or a percentage of the target set, for example 10%. If you specify 3, for example, the system stops sending requests when the fourth error is received. If you specify 0, then the system stops sending requests after the first error is returned. If you run an association on 50 instances and set MaxError to 10%, then the system stops sending the request when the sixth error is received.</p> <p>Executions that are already running an association when MaxErrors is reached are allowed to complete, but some of these executions may fail as well. If you need to ensure that there won't be more than max-errors failed executions, set MaxConcurrency to 1 so that executions proceed one at a time.</p>",
                                                        "maxLength": 7,
                                                        "minLength": 1,
                                                        "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the Systems Manager document.",
                                                        "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                                                        "type": "string"
                                                    },
                                                    "OutputLocation": {
                                                        "description": "An Amazon S3 bucket where you want to store the output details of the request.",
                                                        "properties": {
                                                            "S3Location": {
                                                                "description": "An Amazon S3 bucket where you want to store the results of this request.",
                                                                "properties": {
                                                                    "OutputS3BucketName": {
                                                                        "description": "The name of the Amazon S3 bucket.",
                                                                        "maxLength": 63,
                                                                        "minLength": 3,
                                                                        "type": "string"
                                                                    },
                                                                    "OutputS3KeyPrefix": {
                                                                        "description": "The Amazon S3 bucket subfolder.",
                                                                        "maxLength": 500,
                                                                        "type": "string"
                                                                    },
                                                                    "OutputS3Region": {
                                                                        "description": "(Deprecated) You can no longer specify this parameter. The system ignores it. Instead, Systems Manager automatically determines the Amazon S3 bucket region.",
                                                                        "maxLength": 20,
                                                                        "minLength": 3,
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "Overview": {
                                                        "description": "Information about the association.",
                                                        "properties": {
                                                            "AssociationStatusAggregatedCount": {
                                                                "description": "Returns the number of targets for the association status. For example, if you created an association with two instances, and one of them was successful, this would return the count of instances by status.",
                                                                "items": {
                                                                    "properties": {
                                                                        "key": {
                                                                            "type": "string"
                                                                        },
                                                                        "value": {
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "DetailedStatus": {
                                                                "description": "A detailed status of the association.",
                                                                "type": "string"
                                                            },
                                                            "Status": {
                                                                "description": "The status of the association. Status can be: Pending, Success, or Failed.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "Parameters": {
                                                        "description": "A description of the parameters for a document. ",
                                                        "items": {
                                                            "properties": {
                                                                "key": {
                                                                    "type": "string"
                                                                },
                                                                "value": {
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "ScheduleExpression": {
                                                        "description": "A cron expression that specifies a schedule when the association runs.",
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "Status": {
                                                        "description": "The association status.",
                                                        "properties": {
                                                            "AdditionalInfo": {
                                                                "description": "A user-defined string.",
                                                                "maxLength": 1024,
                                                                "type": "string"
                                                            },
                                                            "Date": {
                                                                "description": "The date when the status changed.",
                                                                "format": "date-time",
                                                                "type": "string"
                                                            },
                                                            "Message": {
                                                                "description": "The reason for the status.",
                                                                "maxLength": 1024,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            },
                                                            "Name": {
                                                                "description": "The status.",
                                                                "enum": [
                                                                    "Pending",
                                                                    "Success",
                                                                    "Failed"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "Date",
                                                            "Name",
                                                            "Message"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "Targets": {
                                                        "description": "The instances targeted by the request. ",
                                                        "items": {
                                                            "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                                                            "properties": {
                                                                "Key": {
                                                                    "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                                    "maxLength": 128,
                                                                    "minLength": 1,
                                                                    "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                                                    "type": "string"
                                                                },
                                                                "Values": {
                                                                    "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "maxItems": 50,
                                                                    "minItems": 0,
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "maxItems": 5,
                                                        "minItems": 0,
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidDocument",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidDocumentVersion",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "InvalidInstanceId",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "InvalidParameters",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "DuplicateInstanceId",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "AssociationLimitExceeded",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "487": {
                        "description": "UnsupportedPlatformType",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "488": {
                        "description": "InvalidOutputLocation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "489": {
                        "description": "InvalidTarget",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "490": {
                        "description": "InvalidSchedule",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Entries": {
                                        "description": "One or more associations.",
                                        "items": {
                                            "description": "Describes the association of a Systems Manager SSM document and an instance.",
                                            "properties": {
                                                "AssociationName": {
                                                    "description": "Specify a descriptive name for the association.",
                                                    "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                                    "type": "string"
                                                },
                                                "AutomationTargetParameterName": {
                                                    "description": "Specify the target for the association. This target is required for associations that use an Automation document and target resources by using rate controls.",
                                                    "maxLength": 50,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "ComplianceSeverity": {
                                                    "description": "The severity level to assign to the association.",
                                                    "enum": [
                                                        "CRITICAL",
                                                        "HIGH",
                                                        "MEDIUM",
                                                        "LOW",
                                                        "UNSPECIFIED"
                                                    ],
                                                    "type": "string"
                                                },
                                                "DocumentVersion": {
                                                    "description": "The document version.",
                                                    "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                                    "type": "string"
                                                },
                                                "InstanceId": {
                                                    "description": "The ID of the instance. ",
                                                    "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                                                    "type": "string"
                                                },
                                                "MaxConcurrency": {
                                                    "description": "<p>The maximum number of targets allowed to run the association at the same time. You can specify a number, for example 10, or a percentage of the target set, for example 10%. The default value is 100%, which means all targets run the association at the same time.</p> <p>If a new instance starts and attempts to execute an association while Systems Manager is executing MaxConcurrency associations, the association is allowed to run. During the next association interval, the new instance will process its association within the limit specified for MaxConcurrency.</p>",
                                                    "maxLength": 7,
                                                    "minLength": 1,
                                                    "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                                                    "type": "string"
                                                },
                                                "MaxErrors": {
                                                    "description": "<p>The number of errors that are allowed before the system stops sending requests to run the association on additional targets. You can specify either an absolute number of errors, for example 10, or a percentage of the target set, for example 10%. If you specify 3, for example, the system stops sending requests when the fourth error is received. If you specify 0, then the system stops sending requests after the first error is returned. If you run an association on 50 instances and set MaxError to 10%, then the system stops sending the request when the sixth error is received.</p> <p>Executions that are already running an association when MaxErrors is reached are allowed to complete, but some of these executions may fail as well. If you need to ensure that there won't be more than max-errors failed executions, set MaxConcurrency to 1 so that executions proceed one at a time.</p>",
                                                    "maxLength": 7,
                                                    "minLength": 1,
                                                    "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "<p>The name of the SSM document that contains the configuration information for the instance. You can specify Command, Policy, or Automation documents.</p> <p>You can specify AWS-predefined documents, documents you created, or a document that is shared with you from another account.</p> <p>For SSM documents that are shared with you from other AWS accounts, you must specify the complete SSM document ARN, in the following format:</p> <p> <code>arn:aws:ssm:<i>region</i>:<i>account-id</i>:document/<i>document-name</i> </code> </p> <p>For example:</p> <p> <code>arn:aws:ssm:us-east-2:12345678912:document/My-Shared-Document</code> </p> <p>For AWS-predefined documents and SSM documents you created in your account, you only need to specify the document name. For example, <code>AWS-ApplyPatchBaseline</code> or <code>My-Document</code>.</p>",
                                                    "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                                                    "type": "string"
                                                },
                                                "OutputLocation": {
                                                    "description": "An Amazon S3 bucket where you want to store the results of this request.",
                                                    "properties": {
                                                        "S3Location": {
                                                            "description": "An Amazon S3 bucket where you want to store the results of this request.",
                                                            "properties": {
                                                                "OutputS3BucketName": {
                                                                    "description": "The name of the Amazon S3 bucket.",
                                                                    "maxLength": 63,
                                                                    "minLength": 3,
                                                                    "type": "string"
                                                                },
                                                                "OutputS3KeyPrefix": {
                                                                    "description": "The Amazon S3 bucket subfolder.",
                                                                    "maxLength": 500,
                                                                    "type": "string"
                                                                },
                                                                "OutputS3Region": {
                                                                    "description": "(Deprecated) You can no longer specify this parameter. The system ignores it. Instead, Systems Manager automatically determines the Amazon S3 bucket region.",
                                                                    "maxLength": 20,
                                                                    "minLength": 3,
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "Parameters": {
                                                    "description": "A description of the parameters for a document. ",
                                                    "items": {
                                                        "properties": {
                                                            "key": {
                                                                "type": "string"
                                                            },
                                                            "value": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "ScheduleExpression": {
                                                    "description": "A cron expression that specifies a schedule when the association runs.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Targets": {
                                                    "description": "The instances targeted by the request.",
                                                    "items": {
                                                        "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                                                        "properties": {
                                                            "Key": {
                                                                "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                                "maxLength": 128,
                                                                "minLength": 1,
                                                                "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                                                "type": "string"
                                                            },
                                                            "Values": {
                                                                "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "maxItems": 50,
                                                                "minItems": 0,
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "maxItems": 5,
                                                    "minItems": 0,
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Name"
                                            ],
                                            "type": "object"
                                        },
                                        "minItems": 1,
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "Entries"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#CreateDocument": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Creates a Systems Manager document.</p> <p>After you create a document, you can use CreateAssociation to associate it with one or more running instances.</p>",
                "operationId": "CreateDocument",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DocumentDescription": {
                                            "description": "Information about the Systems Manager document.",
                                            "properties": {
                                                "AttachmentsInformation": {
                                                    "description": "Details about the document attachments, including names, locations, sizes, etc.",
                                                    "items": {
                                                        "description": "An attribute of an attachment, such as the attachment name.",
                                                        "properties": {
                                                            "Name": {
                                                                "description": "The name of the attachment.",
                                                                "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "CreatedDate": {
                                                    "description": "The date when the document was created.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "DefaultVersion": {
                                                    "description": "The default version.",
                                                    "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                                    "type": "string"
                                                },
                                                "Description": {
                                                    "description": "A description of the document. ",
                                                    "type": "string"
                                                },
                                                "DocumentFormat": {
                                                    "description": "The document format, either JSON or YAML.",
                                                    "enum": [
                                                        "YAML",
                                                        "JSON"
                                                    ],
                                                    "type": "string"
                                                },
                                                "DocumentType": {
                                                    "description": "The type of document.",
                                                    "enum": [
                                                        "Command",
                                                        "Policy",
                                                        "Automation",
                                                        "Session",
                                                        "Package"
                                                    ],
                                                    "type": "string"
                                                },
                                                "DocumentVersion": {
                                                    "description": "The document version.",
                                                    "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                                    "type": "string"
                                                },
                                                "Hash": {
                                                    "description": "<p>The Sha256 or Sha1 hash created by the system when the document was created. </p> <note> <p>Sha1 hashes have been deprecated.</p> </note>",
                                                    "maxLength": 256,
                                                    "type": "string"
                                                },
                                                "HashType": {
                                                    "description": "<p>The hash type of the document. Valid values include <code>Sha256</code> or <code>Sha1</code>.</p> <note> <p>Sha1 hashes have been deprecated.</p> </note>",
                                                    "enum": [
                                                        "Sha256",
                                                        "Sha1"
                                                    ],
                                                    "type": "string"
                                                },
                                                "LatestVersion": {
                                                    "description": "The latest version of the document.",
                                                    "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the Systems Manager document.",
                                                    "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                                                    "type": "string"
                                                },
                                                "Owner": {
                                                    "description": "The AWS user account that created the document.",
                                                    "type": "string"
                                                },
                                                "Parameters": {
                                                    "description": "A description of the parameters for a document.",
                                                    "items": {
                                                        "description": "Parameters specified in a System Manager document that execute on the server when the command is run. ",
                                                        "properties": {
                                                            "DefaultValue": {
                                                                "description": "If specified, the default values for the parameters. Parameters without a default value are required. Parameters with a default value are optional.",
                                                                "type": "string"
                                                            },
                                                            "Description": {
                                                                "description": "A description of what the parameter does, how to use it, the default value, and whether or not the parameter is optional.",
                                                                "type": "string"
                                                            },
                                                            "Name": {
                                                                "description": "The name of the parameter.",
                                                                "type": "string"
                                                            },
                                                            "Type": {
                                                                "description": "The type of parameter. The type can be either String or StringList.",
                                                                "enum": [
                                                                    "String",
                                                                    "StringList"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "PlatformTypes": {
                                                    "description": "The list of OS platforms compatible with this Systems Manager document. ",
                                                    "items": {
                                                        "enum": [
                                                            "Windows",
                                                            "Linux"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "SchemaVersion": {
                                                    "description": "The schema version.",
                                                    "pattern": "([0-9]+)\\.([0-9]+)",
                                                    "type": "string"
                                                },
                                                "Sha1": {
                                                    "description": "The SHA1 hash of the document, which you can use for verification.",
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "description": "The status of the Systems Manager document.",
                                                    "enum": [
                                                        "Creating",
                                                        "Active",
                                                        "Updating",
                                                        "Deleting",
                                                        "Failed"
                                                    ],
                                                    "type": "string"
                                                },
                                                "StatusInformation": {
                                                    "description": "A message returned by AWS Systems Manager that explains the <code>Status</code> value. For example, a <code>Failed</code> status might be explained by the <code>StatusInformation</code> message, \"The specified S3 bucket does not exist. Verify that the URL of the S3 bucket is correct.\"",
                                                    "type": "string"
                                                },
                                                "Tags": {
                                                    "description": "The tags, or metadata, that have been applied to the document.",
                                                    "items": {
                                                        "description": "Metadata that you assign to your AWS resources. Tags enable you to categorize your resources in different ways, for example, by purpose, owner, or environment. In Systems Manager, you can apply tags to documents, managed instances, Maintenance Windows, Parameter Store parameters, and patch baselines.",
                                                        "properties": {
                                                            "Key": {
                                                                "description": "The name of the tag.",
                                                                "maxLength": 128,
                                                                "minLength": 1,
                                                                "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                                "type": "string"
                                                            },
                                                            "Value": {
                                                                "description": "The value of the tag.",
                                                                "maxLength": 256,
                                                                "minLength": 1,
                                                                "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "Key",
                                                            "Value"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "maxItems": 1000,
                                                    "type": "array"
                                                },
                                                "TargetType": {
                                                    "description": "The target type which defines the kinds of resources the document can run on. For example, /AWS::EC2::Instance. For a list of valid resource types, see <a href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html\">AWS Resource Types Reference</a> in the <i>AWS CloudFormation User Guide</i>. ",
                                                    "maxLength": 200,
                                                    "pattern": "^\\/[\\w\\.\\-\\:\\/]*$",
                                                    "type": "string"
                                                },
                                                "VersionName": {
                                                    "description": "The version of the artifact associated with the document.",
                                                    "pattern": "^[a-zA-Z0-9_\\-.]{1,128}$",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "DocumentAlreadyExists",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "MaxDocumentSizeExceeded",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "InvalidDocumentContent",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "DocumentLimitExceeded",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "InvalidDocumentSchemaVersion",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Attachments": {
                                        "description": "A list of key and value pairs that describe attachments to a version of a document.",
                                        "items": {
                                            "description": "A key and value pair that identifies the location of an attachment to a document.",
                                            "properties": {
                                                "Key": {
                                                    "description": "The key of a key and value pair that identifies the location of an attachment to a document.",
                                                    "enum": [
                                                        "SourceUrl"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "The URL of the location of a document attachment, such as the URL of an Amazon S3 bucket.",
                                                    "items": {
                                                        "maxLength": 1024,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "maxItems": 1,
                                                    "minItems": 1,
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "maxItems": 1,
                                        "minItems": 0,
                                        "type": "array"
                                    },
                                    "Content": {
                                        "description": "A valid JSON or YAML string.",
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "DocumentFormat": {
                                        "description": "Specify the document format for the request. The document format can be either JSON or YAML. JSON is the default format.",
                                        "enum": [
                                            "YAML",
                                            "JSON"
                                        ],
                                        "type": "string"
                                    },
                                    "DocumentType": {
                                        "description": "The type of document to create. Valid document types include: <code>Command</code>, <code>Policy</code>, <code>Automation</code>, <code>Session</code>, and <code>Package</code>.",
                                        "enum": [
                                            "Command",
                                            "Policy",
                                            "Automation",
                                            "Session",
                                            "Package"
                                        ],
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "<p>A name for the Systems Manager document.</p> <important> <p>Do not use the following to begin the names of documents you create. They are reserved by AWS for use as document prefixes:</p> <ul> <li> <p> <code>aws</code> </p> </li> <li> <p> <code>amazon</code> </p> </li> <li> <p> <code>amzn</code> </p> </li> </ul> </important>",
                                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                        "type": "string"
                                    },
                                    "Tags": {
                                        "description": "<p>Optional metadata that you assign to a resource. Tags enable you to categorize a resource in different ways, such as by purpose, owner, or environment. For example, you might want to tag an SSM document to identify the types of targets or the environment where it will run. In this case, you could specify the following key name/value pairs:</p> <ul> <li> <p> <code>Key=OS,Value=Windows</code> </p> </li> <li> <p> <code>Key=Environment,Value=Production</code> </p> </li> </ul> <note> <p>To add tags to an existing SSM document, use the <a>AddTagsToResource</a> action.</p> </note>",
                                        "items": {
                                            "description": "Metadata that you assign to your AWS resources. Tags enable you to categorize your resources in different ways, for example, by purpose, owner, or environment. In Systems Manager, you can apply tags to documents, managed instances, Maintenance Windows, Parameter Store parameters, and patch baselines.",
                                            "properties": {
                                                "Key": {
                                                    "description": "The name of the tag.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The value of the tag.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Key",
                                                "Value"
                                            ],
                                            "type": "object"
                                        },
                                        "maxItems": 1000,
                                        "type": "array"
                                    },
                                    "TargetType": {
                                        "description": "Specify a target type to define the kinds of resources the document can run on. For example, to run a document on EC2 instances, specify the following value: /AWS::EC2::Instance. If you specify a value of '/' the document can run on all types of resources. If you don't specify a value, the document can't run on any resources. For a list of valid resource types, see <a href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html\">AWS Resource Types Reference</a> in the <i>AWS CloudFormation User Guide</i>. ",
                                        "maxLength": 200,
                                        "pattern": "^\\/[\\w\\.\\-\\:\\/]*$",
                                        "type": "string"
                                    },
                                    "VersionName": {
                                        "description": "An optional field specifying the version of the artifact you are creating with the document. For example, \"Release 12, Update 6\". This value is unique across all versions of a document, and cannot be changed.",
                                        "pattern": "^[a-zA-Z0-9_\\-.]{1,128}$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Content",
                                    "Name"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#CreateMaintenanceWindow": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Creates a new Maintenance Window.",
                "operationId": "CreateMaintenanceWindow",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "WindowId": {
                                            "description": "The ID of the created Maintenance Window.",
                                            "maxLength": 20,
                                            "minLength": 20,
                                            "pattern": "^mw-[0-9a-f]{17}$",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "IdempotentParameterMismatch",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ResourceLimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "AllowUnassociatedTargets": {
                                        "description": "<p>Enables a Maintenance Window task to execute on managed instances, even if you have not registered those instances as targets. If enabled, then you must specify the unregistered instances (by instance ID) when you register a task with the Maintenance Window </p> <p>If you don't enable this option, then you must specify previously-registered targets when you register a task with the Maintenance Window. </p>",
                                        "type": "boolean"
                                    },
                                    "ClientToken": {
                                        "description": "User-provided idempotency token.",
                                        "maxLength": 64,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "Cutoff": {
                                        "description": "The number of hours before the end of the Maintenance Window that Systems Manager stops scheduling new tasks for execution.",
                                        "maximum": 23,
                                        "minimum": 0,
                                        "type": "integer"
                                    },
                                    "Description": {
                                        "description": "An optional description for the Maintenance Window. We recommend specifying a description to help you organize your Maintenance Windows. ",
                                        "format": "password",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "Duration": {
                                        "description": "The duration of the Maintenance Window in hours.",
                                        "maximum": 24,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "EndDate": {
                                        "description": "The date and time, in ISO-8601 Extended format, for when you want the Maintenance Window to become inactive. EndDate allows you to set a date and time in the future when the Maintenance Window will no longer run.",
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "The name of the Maintenance Window.",
                                        "maxLength": 128,
                                        "minLength": 3,
                                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                        "type": "string"
                                    },
                                    "Schedule": {
                                        "description": "The schedule of the Maintenance Window in the form of a cron or rate expression.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "ScheduleTimezone": {
                                        "description": "The time zone that the scheduled Maintenance Window executions are based on, in Internet Assigned Numbers Authority (IANA) format. For example: \"America/Los_Angeles\", \"etc/UTC\", or \"Asia/Seoul\". For more information, see the <a href=\"https://www.iana.org/time-zones\">Time Zone Database</a> on the IANA website.",
                                        "type": "string"
                                    },
                                    "StartDate": {
                                        "description": "The date and time, in ISO-8601 Extended format, for when you want the Maintenance Window to become active. StartDate allows you to delay activation of the Maintenance Window until the specified future date.",
                                        "type": "string"
                                    },
                                    "Tags": {
                                        "description": "<p>Optional metadata that you assign to a resource. Tags enable you to categorize a resource in different ways, such as by purpose, owner, or environment. For example, you might want to tag a Maintenance Window to identify the type of tasks it will run, the types of targets, and the environment it will run in. In this case, you could specify the following key name/value pairs:</p> <ul> <li> <p> <code>Key=TaskType,Value=AgentUpdate</code> </p> </li> <li> <p> <code>Key=OS,Value=Windows</code> </p> </li> <li> <p> <code>Key=Environment,Value=Production</code> </p> </li> </ul> <note> <p>To add tags to an existing Maintenance Window, use the <a>AddTagsToResource</a> action.</p> </note>",
                                        "items": {
                                            "description": "Metadata that you assign to your AWS resources. Tags enable you to categorize your resources in different ways, for example, by purpose, owner, or environment. In Systems Manager, you can apply tags to documents, managed instances, Maintenance Windows, Parameter Store parameters, and patch baselines.",
                                            "properties": {
                                                "Key": {
                                                    "description": "The name of the tag.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The value of the tag.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Key",
                                                "Value"
                                            ],
                                            "type": "object"
                                        },
                                        "maxItems": 1000,
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "Name",
                                    "Schedule",
                                    "Duration",
                                    "Cutoff",
                                    "AllowUnassociatedTargets"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#CreatePatchBaseline": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Creates a patch baseline.</p> <note> <p>For information about valid key and value pairs in <code>PatchFilters</code> for each supported operating system type, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/APIReference/API_PatchFilter.html\">PatchFilter</a>.</p> </note>",
                "operationId": "CreatePatchBaseline",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "BaselineId": {
                                            "description": "The ID of the created patch baseline.",
                                            "maxLength": 128,
                                            "minLength": 20,
                                            "pattern": "^[a-zA-Z0-9_\\-:/]{20,128}$",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "IdempotentParameterMismatch",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ResourceLimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ApprovalRules": {
                                        "description": "A set of rules used to include patches in the baseline.",
                                        "properties": {
                                            "PatchRules": {
                                                "description": "The rules that make up the rule group.",
                                                "items": {
                                                    "description": "Defines an approval rule for a patch baseline.",
                                                    "properties": {
                                                        "ApproveAfterDays": {
                                                            "description": "The number of days after the release date of each patch matched by the rule that the patch is marked as approved in the patch baseline. For example, a value of <code>7</code> means that patches are approved seven days after they are released. ",
                                                            "maximum": 100,
                                                            "minimum": 0,
                                                            "type": "integer"
                                                        },
                                                        "ComplianceLevel": {
                                                            "description": "A compliance severity level for all approved patches in a patch baseline. Valid compliance severity levels include the following: Unspecified, Critical, High, Medium, Low, and Informational.",
                                                            "enum": [
                                                                "CRITICAL",
                                                                "HIGH",
                                                                "MEDIUM",
                                                                "LOW",
                                                                "INFORMATIONAL",
                                                                "UNSPECIFIED"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "EnableNonSecurity": {
                                                            "description": "For instances identified by the approval rule filters, enables a patch baseline to apply non-security updates available in the specified repository. The default value is 'false'. Applies to Linux instances only.",
                                                            "type": "boolean"
                                                        },
                                                        "PatchFilterGroup": {
                                                            "description": "The patch filter group that defines the criteria for the rule.",
                                                            "properties": {
                                                                "PatchFilters": {
                                                                    "description": "The set of patch filters that make up the group.",
                                                                    "items": {
                                                                        "description": "<p>Defines a patch filter.</p> <p>A patch filter consists of key/value pairs, but not all keys are valid for all operating system types. For example, the key <code>PRODUCT</code> is valid for all supported operating system types. The key <code>MSRC_SEVERITY</code>, however, is valid only for Windows operating systems, and the key <code>SECTION</code> is valid only for Ubuntu operating systems.</p> <p>Refer to the following sections for information about which keys may be used with each major operating system, and which values are valid for each key.</p> <p> <b>Windows Operating Systems</b> </p> <p>The supported keys for Windows operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>MSRC_SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Windows7</code> </p> </li> <li> <p> <code>Windows8</code> </p> </li> <li> <p> <code>Windows8.1</code> </p> </li> <li> <p> <code>Windows8Embedded</code> </p> </li> <li> <p> <code>Windows10</code> </p> </li> <li> <p> <code>Windows10LTSB</code> </p> </li> <li> <p> <code>WindowsServer2008</code> </p> </li> <li> <p> <code>WindowsServer2008R2</code> </p> </li> <li> <p> <code>WindowsServer2012</code> </p> </li> <li> <p> <code>WindowsServer2012R2</code> </p> </li> <li> <p> <code>WindowsServer2016</code> </p> </li> <li> <p> <code>WindowsServer2019</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>CriticalUpdates</code> </p> </li> <li> <p> <code>DefinitionUpdates</code> </p> </li> <li> <p> <code>Drivers</code> </p> </li> <li> <p> <code>FeaturePacks</code> </p> </li> <li> <p> <code>SecurityUpdates</code> </p> </li> <li> <p> <code>ServicePacks</code> </p> </li> <li> <p> <code>Tools</code> </p> </li> <li> <p> <code>UpdateRollups</code> </p> </li> <li> <p> <code>Updates</code> </p> </li> <li> <p> <code>Upgrades</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>MSRC_SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Moderate</code> </p> </li> <li> <p> <code>Low</code> </p> </li> <li> <p> <code>Unspecified</code> </p> </li> </ul> <p> <b>Ubuntu Operating Systems</b> </p> <p>The supported keys for Ubuntu operating systems are <code>PRODUCT</code>, <code>PRIORITY</code>, and <code>SECTION</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Ubuntu14.04</code> </p> </li> <li> <p> <code>Ubuntu16.04</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>PRIORITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Required</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Standard</code> </p> </li> <li> <p> <code>Optional</code> </p> </li> <li> <p> <code>Extra</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SECTION</code> </p> <p>Only the length of the key value is validated. Minimum length is 1. Maximum length is 64.</p> <p> <b>Amazon Linux Operating Systems</b> </p> <p>The supported keys for Amazon Linux operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>AmazonLinux2012.03</code> </p> </li> <li> <p> <code>AmazonLinux2012.09</code> </p> </li> <li> <p> <code>AmazonLinux2013.03</code> </p> </li> <li> <p> <code>AmazonLinux2013.09</code> </p> </li> <li> <p> <code>AmazonLinux2014.03</code> </p> </li> <li> <p> <code>AmazonLinux2014.09</code> </p> </li> <li> <p> <code>AmazonLinux2015.03</code> </p> </li> <li> <p> <code>AmazonLinux2015.09</code> </p> </li> <li> <p> <code>AmazonLinux2016.03</code> </p> </li> <li> <p> <code>AmazonLinux2016.09</code> </p> </li> <li> <p> <code>AmazonLinux2017.03</code> </p> </li> <li> <p> <code>AmazonLinux2017.09</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>Amazon Linux 2 Operating Systems</b> </p> <p>The supported keys for Amazon Linux 2 operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>AmazonLinux2</code> </p> </li> <li> <p> <code>AmazonLinux2.0</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>RedHat Enterprise Linux (RHEL) Operating Systems</b> </p> <p>The supported keys for RedHat Enterprise Linux operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>RedhatEnterpriseLinux6.5</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.6</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.7</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.8</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.9</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.0</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.1</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.2</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.3</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.4</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.5</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.6</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>SUSE Linux Enterprise Server (SLES) Operating Systems</b> </p> <p>The supported keys for SLES operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Suse12.0</code> </p> </li> <li> <p> <code>Suse12.1</code> </p> </li> <li> <p> <code>Suse12.2</code> </p> </li> <li> <p> <code>Suse12.3</code> </p> </li> <li> <p> <code>Suse12.4</code> </p> </li> <li> <p> <code>Suse12.5</code> </p> </li> <li> <p> <code>Suse12.6</code> </p> </li> <li> <p> <code>Suse12.7</code> </p> </li> <li> <p> <code>Suse12.8</code> </p> </li> <li> <p> <code>Suse12.9</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Optional</code> </p> </li> <li> <p> <code>Feature</code> </p> </li> <li> <p> <code>Document</code> </p> </li> <li> <p> <code>Yast</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Moderate</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>CentOS Operating Systems</b> </p> <p>The supported keys for CentOS operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>CentOS6.5</code> </p> </li> <li> <p> <code>CentOS6.6</code> </p> </li> <li> <p> <code>CentOS6.7</code> </p> </li> <li> <p> <code>CentOS6.8</code> </p> </li> <li> <p> <code>CentOS6.9</code> </p> </li> <li> <p> <code>CentOS7.0</code> </p> </li> <li> <p> <code>CentOS7.1</code> </p> </li> <li> <p> <code>CentOS7.2</code> </p> </li> <li> <p> <code>CentOS7.3</code> </p> </li> <li> <p> <code>CentOS7.4</code> </p> </li> <li> <p> <code>CentOS7.5</code> </p> </li> <li> <p> <code>CentOS7.6</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul>",
                                                                        "properties": {
                                                                            "Key": {
                                                                                "description": "<p>The key for the filter.</p> <p>See <a>PatchFilter</a> for lists of valid keys for each operating system type.</p>",
                                                                                "enum": [
                                                                                    "PRODUCT",
                                                                                    "CLASSIFICATION",
                                                                                    "MSRC_SEVERITY",
                                                                                    "PATCH_ID",
                                                                                    "SECTION",
                                                                                    "PRIORITY",
                                                                                    "SEVERITY"
                                                                                ],
                                                                                "type": "string"
                                                                            },
                                                                            "Values": {
                                                                                "description": "<p>The value for the filter key.</p> <p>See <a>PatchFilter</a> for lists of valid values for each key based on operating system type.</p>",
                                                                                "items": {
                                                                                    "maxLength": 64,
                                                                                    "minLength": 1,
                                                                                    "type": "string"
                                                                                },
                                                                                "maxItems": 20,
                                                                                "minItems": 1,
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "Key",
                                                                            "Values"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "maxItems": 4,
                                                                    "minItems": 0,
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "required": [
                                                                "PatchFilters"
                                                            ],
                                                            "type": "object"
                                                        }
                                                    },
                                                    "required": [
                                                        "PatchFilterGroup",
                                                        "ApproveAfterDays"
                                                    ],
                                                    "type": "object"
                                                },
                                                "maxItems": 10,
                                                "minItems": 0,
                                                "type": "array"
                                            }
                                        },
                                        "required": [
                                            "PatchRules"
                                        ],
                                        "type": "object"
                                    },
                                    "ApprovedPatches": {
                                        "description": "<p>A list of explicitly approved patches for the baseline.</p> <p>For information about accepted formats for lists of approved patches and rejected patches, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/patch-manager-approved-rejected-package-name-formats.html\">Package Name Formats for Approved and Rejected Patch Lists</a> in the <i>AWS Systems Manager User Guide</i>.</p>",
                                        "items": {
                                            "maxLength": 100,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "maxItems": 50,
                                        "minItems": 0,
                                        "type": "array"
                                    },
                                    "ApprovedPatchesComplianceLevel": {
                                        "description": "Defines the compliance level for approved patches. This means that if an approved patch is reported as missing, this is the severity of the compliance violation. The default value is UNSPECIFIED.",
                                        "enum": [
                                            "CRITICAL",
                                            "HIGH",
                                            "MEDIUM",
                                            "LOW",
                                            "INFORMATIONAL",
                                            "UNSPECIFIED"
                                        ],
                                        "type": "string"
                                    },
                                    "ApprovedPatchesEnableNonSecurity": {
                                        "description": "Indicates whether the list of approved patches includes non-security updates that should be applied to the instances. The default value is 'false'. Applies to Linux instances only.",
                                        "type": "boolean"
                                    },
                                    "ClientToken": {
                                        "description": "User-provided idempotency token.",
                                        "maxLength": 64,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "Description": {
                                        "description": "A description of the patch baseline.",
                                        "maxLength": 1024,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "GlobalFilters": {
                                        "description": "A set of global filters used to include patches in the baseline.",
                                        "properties": {
                                            "PatchFilters": {
                                                "description": "The set of patch filters that make up the group.",
                                                "items": {
                                                    "description": "<p>Defines a patch filter.</p> <p>A patch filter consists of key/value pairs, but not all keys are valid for all operating system types. For example, the key <code>PRODUCT</code> is valid for all supported operating system types. The key <code>MSRC_SEVERITY</code>, however, is valid only for Windows operating systems, and the key <code>SECTION</code> is valid only for Ubuntu operating systems.</p> <p>Refer to the following sections for information about which keys may be used with each major operating system, and which values are valid for each key.</p> <p> <b>Windows Operating Systems</b> </p> <p>The supported keys for Windows operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>MSRC_SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Windows7</code> </p> </li> <li> <p> <code>Windows8</code> </p> </li> <li> <p> <code>Windows8.1</code> </p> </li> <li> <p> <code>Windows8Embedded</code> </p> </li> <li> <p> <code>Windows10</code> </p> </li> <li> <p> <code>Windows10LTSB</code> </p> </li> <li> <p> <code>WindowsServer2008</code> </p> </li> <li> <p> <code>WindowsServer2008R2</code> </p> </li> <li> <p> <code>WindowsServer2012</code> </p> </li> <li> <p> <code>WindowsServer2012R2</code> </p> </li> <li> <p> <code>WindowsServer2016</code> </p> </li> <li> <p> <code>WindowsServer2019</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>CriticalUpdates</code> </p> </li> <li> <p> <code>DefinitionUpdates</code> </p> </li> <li> <p> <code>Drivers</code> </p> </li> <li> <p> <code>FeaturePacks</code> </p> </li> <li> <p> <code>SecurityUpdates</code> </p> </li> <li> <p> <code>ServicePacks</code> </p> </li> <li> <p> <code>Tools</code> </p> </li> <li> <p> <code>UpdateRollups</code> </p> </li> <li> <p> <code>Updates</code> </p> </li> <li> <p> <code>Upgrades</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>MSRC_SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Moderate</code> </p> </li> <li> <p> <code>Low</code> </p> </li> <li> <p> <code>Unspecified</code> </p> </li> </ul> <p> <b>Ubuntu Operating Systems</b> </p> <p>The supported keys for Ubuntu operating systems are <code>PRODUCT</code>, <code>PRIORITY</code>, and <code>SECTION</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Ubuntu14.04</code> </p> </li> <li> <p> <code>Ubuntu16.04</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>PRIORITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Required</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Standard</code> </p> </li> <li> <p> <code>Optional</code> </p> </li> <li> <p> <code>Extra</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SECTION</code> </p> <p>Only the length of the key value is validated. Minimum length is 1. Maximum length is 64.</p> <p> <b>Amazon Linux Operating Systems</b> </p> <p>The supported keys for Amazon Linux operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>AmazonLinux2012.03</code> </p> </li> <li> <p> <code>AmazonLinux2012.09</code> </p> </li> <li> <p> <code>AmazonLinux2013.03</code> </p> </li> <li> <p> <code>AmazonLinux2013.09</code> </p> </li> <li> <p> <code>AmazonLinux2014.03</code> </p> </li> <li> <p> <code>AmazonLinux2014.09</code> </p> </li> <li> <p> <code>AmazonLinux2015.03</code> </p> </li> <li> <p> <code>AmazonLinux2015.09</code> </p> </li> <li> <p> <code>AmazonLinux2016.03</code> </p> </li> <li> <p> <code>AmazonLinux2016.09</code> </p> </li> <li> <p> <code>AmazonLinux2017.03</code> </p> </li> <li> <p> <code>AmazonLinux2017.09</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>Amazon Linux 2 Operating Systems</b> </p> <p>The supported keys for Amazon Linux 2 operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>AmazonLinux2</code> </p> </li> <li> <p> <code>AmazonLinux2.0</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>RedHat Enterprise Linux (RHEL) Operating Systems</b> </p> <p>The supported keys for RedHat Enterprise Linux operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>RedhatEnterpriseLinux6.5</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.6</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.7</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.8</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.9</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.0</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.1</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.2</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.3</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.4</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.5</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.6</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>SUSE Linux Enterprise Server (SLES) Operating Systems</b> </p> <p>The supported keys for SLES operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Suse12.0</code> </p> </li> <li> <p> <code>Suse12.1</code> </p> </li> <li> <p> <code>Suse12.2</code> </p> </li> <li> <p> <code>Suse12.3</code> </p> </li> <li> <p> <code>Suse12.4</code> </p> </li> <li> <p> <code>Suse12.5</code> </p> </li> <li> <p> <code>Suse12.6</code> </p> </li> <li> <p> <code>Suse12.7</code> </p> </li> <li> <p> <code>Suse12.8</code> </p> </li> <li> <p> <code>Suse12.9</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Optional</code> </p> </li> <li> <p> <code>Feature</code> </p> </li> <li> <p> <code>Document</code> </p> </li> <li> <p> <code>Yast</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Moderate</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>CentOS Operating Systems</b> </p> <p>The supported keys for CentOS operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>CentOS6.5</code> </p> </li> <li> <p> <code>CentOS6.6</code> </p> </li> <li> <p> <code>CentOS6.7</code> </p> </li> <li> <p> <code>CentOS6.8</code> </p> </li> <li> <p> <code>CentOS6.9</code> </p> </li> <li> <p> <code>CentOS7.0</code> </p> </li> <li> <p> <code>CentOS7.1</code> </p> </li> <li> <p> <code>CentOS7.2</code> </p> </li> <li> <p> <code>CentOS7.3</code> </p> </li> <li> <p> <code>CentOS7.4</code> </p> </li> <li> <p> <code>CentOS7.5</code> </p> </li> <li> <p> <code>CentOS7.6</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul>",
                                                    "properties": {
                                                        "Key": {
                                                            "description": "<p>The key for the filter.</p> <p>See <a>PatchFilter</a> for lists of valid keys for each operating system type.</p>",
                                                            "enum": [
                                                                "PRODUCT",
                                                                "CLASSIFICATION",
                                                                "MSRC_SEVERITY",
                                                                "PATCH_ID",
                                                                "SECTION",
                                                                "PRIORITY",
                                                                "SEVERITY"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "Values": {
                                                            "description": "<p>The value for the filter key.</p> <p>See <a>PatchFilter</a> for lists of valid values for each key based on operating system type.</p>",
                                                            "items": {
                                                                "maxLength": 64,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            },
                                                            "maxItems": 20,
                                                            "minItems": 1,
                                                            "type": "array"
                                                        }
                                                    },
                                                    "required": [
                                                        "Key",
                                                        "Values"
                                                    ],
                                                    "type": "object"
                                                },
                                                "maxItems": 4,
                                                "minItems": 0,
                                                "type": "array"
                                            }
                                        },
                                        "required": [
                                            "PatchFilters"
                                        ],
                                        "type": "object"
                                    },
                                    "Name": {
                                        "description": "The name of the patch baseline.",
                                        "maxLength": 128,
                                        "minLength": 3,
                                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                        "type": "string"
                                    },
                                    "OperatingSystem": {
                                        "description": "Defines the operating system the patch baseline applies to. The Default value is WINDOWS.",
                                        "enum": [
                                            "WINDOWS",
                                            "AMAZON_LINUX",
                                            "AMAZON_LINUX_2",
                                            "UBUNTU",
                                            "REDHAT_ENTERPRISE_LINUX",
                                            "SUSE",
                                            "CENTOS"
                                        ],
                                        "type": "string"
                                    },
                                    "RejectedPatches": {
                                        "description": "<p>A list of explicitly rejected patches for the baseline.</p> <p>For information about accepted formats for lists of approved patches and rejected patches, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/patch-manager-approved-rejected-package-name-formats.html\">Package Name Formats for Approved and Rejected Patch Lists</a> in the <i>AWS Systems Manager User Guide</i>.</p>",
                                        "items": {
                                            "maxLength": 100,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "maxItems": 50,
                                        "minItems": 0,
                                        "type": "array"
                                    },
                                    "RejectedPatchesAction": {
                                        "description": "<p>The action for Patch Manager to take on patches included in the RejectedPackages list.</p> <ul> <li> <p> <b>ALLOW_AS_DEPENDENCY</b>: A package in the Rejected patches list is installed only if it is a dependency of another package. It is considered compliant with the patch baseline, and its status is reported as <i>InstalledOther</i>. This is the default action if no option is specified.</p> </li> <li> <p> <b>BLOCK</b>: Packages in the RejectedPatches list, and packages that include them as dependencies, are not installed under any circumstances. If a package was installed before it was added to the Rejected patches list, it is considered non-compliant with the patch baseline, and its status is reported as <i>InstalledRejected</i>.</p> </li> </ul>",
                                        "enum": [
                                            "ALLOW_AS_DEPENDENCY",
                                            "BLOCK"
                                        ],
                                        "type": "string"
                                    },
                                    "Sources": {
                                        "description": "Information about the patches to use to update the instances, including target operating systems and source repositories. Applies to Linux instances only.",
                                        "items": {
                                            "description": "Information about the patches to use to update the instances, including target operating systems and source repository. Applies to Linux instances only.",
                                            "properties": {
                                                "Configuration": {
                                                    "description": "<p>The value of the yum repo configuration. For example:</p> <p> <code>[main]</code> </p> <p> <code>cachedir=/var/cache/yum/$basesearch$releasever</code> </p> <p> <code>keepcache=0</code> </p> <p> <code>debuglevel=2</code> </p>",
                                                    "format": "password",
                                                    "maxLength": 512,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name specified to identify the patch source.",
                                                    "pattern": "^[a-zA-Z0-9_\\-.]{3,50}$",
                                                    "type": "string"
                                                },
                                                "Products": {
                                                    "description": "The specific operating system versions a patch repository applies to, such as \"Ubuntu16.04\", \"AmazonLinux2016.09\", \"RedhatEnterpriseLinux7.2\" or \"Suse12.7\". For lists of supported product values, see <a>PatchFilter</a>.",
                                                    "items": {
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "maxItems": 20,
                                                    "minItems": 1,
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Name",
                                                "Products",
                                                "Configuration"
                                            ],
                                            "type": "object"
                                        },
                                        "maxItems": 20,
                                        "minItems": 0,
                                        "type": "array"
                                    },
                                    "Tags": {
                                        "description": "<p>Optional metadata that you assign to a resource. Tags enable you to categorize a resource in different ways, such as by purpose, owner, or environment. For example, you might want to tag a patch baseline to identify the severity level of patches it specifies and the operating system family it applies to. In this case, you could specify the following key name/value pairs:</p> <ul> <li> <p> <code>Key=PatchSeverity,Value=Critical</code> </p> </li> <li> <p> <code>Key=OS,Value=Windows</code> </p> </li> </ul> <note> <p>To add tags to an existing patch baseline, use the <a>AddTagsToResource</a> action.</p> </note>",
                                        "items": {
                                            "description": "Metadata that you assign to your AWS resources. Tags enable you to categorize your resources in different ways, for example, by purpose, owner, or environment. In Systems Manager, you can apply tags to documents, managed instances, Maintenance Windows, Parameter Store parameters, and patch baselines.",
                                            "properties": {
                                                "Key": {
                                                    "description": "The name of the tag.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The value of the tag.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Key",
                                                "Value"
                                            ],
                                            "type": "object"
                                        },
                                        "maxItems": 1000,
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "Name"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#CreateResourceDataSync": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Creates a resource data sync configuration to a single bucket in Amazon S3. This is an asynchronous operation that returns immediately. After a successful initial sync is completed, the system continuously syncs data to the Amazon S3 bucket. To check the status of the sync, use the <a>ListResourceDataSync</a>.</p> <p>By default, data is not encrypted in Amazon S3. We strongly recommend that you enable encryption in Amazon S3 to ensure secure data storage. We also recommend that you secure access to the Amazon S3 bucket by creating a restrictive bucket policy. For more information, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-inventory-datasync.html\">Configuring Resource Data Sync for Inventory</a> in the <i>AWS Systems Manager User Guide</i>.</p>",
                "operationId": "CreateResourceDataSync",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ResourceDataSyncCountExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ResourceDataSyncAlreadyExistsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ResourceDataSyncInvalidConfigurationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "S3Destination": {
                                        "description": "Amazon S3 configuration details for the sync.",
                                        "properties": {
                                            "AWSKMSKeyARN": {
                                                "description": "The ARN of an encryption key for a destination in Amazon S3. Must belong to the same region as the destination Amazon S3 bucket.",
                                                "maxLength": 512,
                                                "minLength": 1,
                                                "pattern": "arn:.*",
                                                "type": "string"
                                            },
                                            "BucketName": {
                                                "description": "The name of the Amazon S3 bucket where the aggregated data is stored.",
                                                "maxLength": 2048,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "Prefix": {
                                                "description": "An Amazon S3 prefix for the bucket.",
                                                "maxLength": 256,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "Region": {
                                                "description": "The AWS Region with the Amazon S3 bucket targeted by the Resource Data Sync.",
                                                "maxLength": 64,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "SyncFormat": {
                                                "description": "A supported sync format. The following format is currently supported: JsonSerDe",
                                                "enum": [
                                                    "JsonSerDe"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "BucketName",
                                            "SyncFormat",
                                            "Region"
                                        ],
                                        "type": "object"
                                    },
                                    "SyncName": {
                                        "description": "A name for the configuration.",
                                        "maxLength": 64,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "SyncName",
                                    "S3Destination"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DeleteActivation": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Deletes an activation. You are not required to delete an activation. If you delete an activation, you can no longer use it to register additional managed instances. Deleting an activation does not de-register managed instances. You must manually de-register managed instances.",
                "operationId": "DeleteActivation",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidActivationId",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidActivation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "TooManyUpdates",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ActivationId": {
                                        "description": "The ID of the activation that you want to delete.",
                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "ActivationId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DeleteAssociation": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Disassociates the specified Systems Manager document from the specified instance.</p> <p>When you disassociate a document from an instance, it does not change the configuration of the instance. To change the configuration state of an instance after you disassociate a document, you must create a new document with the desired configuration and associate it with the instance.</p>",
                "operationId": "DeleteAssociation",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "AssociationDoesNotExist",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidDocument",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "InvalidInstanceId",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "TooManyUpdates",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "AssociationId": {
                                        "description": "The association ID that you want to delete.",
                                        "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                                        "type": "string"
                                    },
                                    "InstanceId": {
                                        "description": "The ID of the instance.",
                                        "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "The name of the Systems Manager document.",
                                        "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DeleteDocument": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Deletes the Systems Manager document and all instance associations to the document.</p> <p>Before you delete the document, we recommend that you use <a>DeleteAssociation</a> to disassociate all instances that are associated with the document.</p>",
                "operationId": "DeleteDocument",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidDocument",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidDocumentOperation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "AssociatedInstances",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Name": {
                                        "description": "The name of the document.",
                                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Name"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DeleteInventory": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Delete a custom inventory type, or the data associated with a custom Inventory type. Deleting a custom inventory type is also referred to as deleting a custom inventory schema.",
                "operationId": "DeleteInventory",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeletionId": {
                                            "description": "Every <code>DeleteInventory</code> action is assigned a unique ID. This option returns a unique ID. You can use this ID to query the status of a delete operation. This option is useful for ensuring that a delete operation has completed before you begin other actions. ",
                                            "type": "string"
                                        },
                                        "DeletionSummary": {
                                            "description": "A summary of the delete operation. For more information about this summary, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-inventory-delete.html#sysman-inventory-delete-summary\">Understanding the Delete Inventory Summary</a> in the <i>AWS Systems Manager User Guide</i>.",
                                            "properties": {
                                                "RemainingCount": {
                                                    "description": "Remaining number of items to delete.",
                                                    "type": "integer"
                                                },
                                                "SummaryItems": {
                                                    "description": "A list of counts and versions for deleted items.",
                                                    "items": {
                                                        "description": "Either a count, remaining count, or a version number in a delete inventory summary.",
                                                        "properties": {
                                                            "Count": {
                                                                "description": "A count of the number of deleted items.",
                                                                "type": "integer"
                                                            },
                                                            "RemainingCount": {
                                                                "description": "The remaining number of items to delete.",
                                                                "type": "integer"
                                                            },
                                                            "Version": {
                                                                "description": "The inventory type version.",
                                                                "pattern": "^([0-9]{1,6})(\\.[0-9]{1,6})$",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "TotalCount": {
                                                    "description": "The total number of items to delete. This count does not change during the delete operation.",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "TypeName": {
                                            "description": "The name of the inventory data type specified in the request.",
                                            "maxLength": 100,
                                            "minLength": 1,
                                            "pattern": "^(AWS|Custom):.*$",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidTypeNameException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidOptionException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "InvalidDeleteInventoryParametersException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "InvalidInventoryRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ClientToken": {
                                        "description": "User-provided idempotency token.",
                                        "maxLength": 64,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "DryRun": {
                                        "description": "Use this option to view a summary of the deletion request without deleting any data or the data type. This option is useful when you only want to understand what will be deleted. Once you validate that the data to be deleted is what you intend to delete, you can run the same command without specifying the <code>DryRun</code> option.",
                                        "type": "boolean"
                                    },
                                    "SchemaDeleteOption": {
                                        "description": "<p>Use the <code>SchemaDeleteOption</code> to delete a custom inventory type (schema). If you don't choose this option, the system only deletes existing inventory data associated with the custom inventory type. Choose one of the following options:</p> <p>DisableSchema: If you choose this option, the system ignores all inventory data for the specified version, and any earlier versions. To enable this schema again, you must call the <code>PutInventory</code> action for a version greater than the disbled version.</p> <p>DeleteSchema: This option deletes the specified custom type from the Inventory service. You can recreate the schema later, if you want.</p>",
                                        "enum": [
                                            "DisableSchema",
                                            "DeleteSchema"
                                        ],
                                        "type": "string"
                                    },
                                    "TypeName": {
                                        "description": "The name of the custom inventory type for which you want to delete either all previously collected data, or the inventory type itself. ",
                                        "maxLength": 100,
                                        "minLength": 1,
                                        "pattern": "^(AWS|Custom):.*$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "TypeName"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DeleteMaintenanceWindow": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Deletes a Maintenance Window.",
                "operationId": "DeleteMaintenanceWindow",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "WindowId": {
                                            "description": "The ID of the deleted Maintenance Window.",
                                            "maxLength": 20,
                                            "minLength": 20,
                                            "pattern": "^mw-[0-9a-f]{17}$",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "WindowId": {
                                        "description": "The ID of the Maintenance Window to delete.",
                                        "maxLength": 20,
                                        "minLength": 20,
                                        "pattern": "^mw-[0-9a-f]{17}$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "WindowId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DeleteParameter": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Delete a parameter from the system.",
                "operationId": "DeleteParameter",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ParameterNotFound",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Name": {
                                        "description": "The name of the parameter to delete.",
                                        "maxLength": 2048,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Name"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DeleteParameters": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Delete a list of parameters. This API is used to delete parameters by using the Amazon EC2 console.",
                "operationId": "DeleteParameters",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeletedParameters": {
                                            "description": "The names of the deleted parameters.",
                                            "items": {
                                                "maxLength": 2048,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "maxItems": 10,
                                            "minItems": 1,
                                            "type": "array"
                                        },
                                        "InvalidParameters": {
                                            "description": "The names of parameters that weren't deleted because the parameters are not valid.",
                                            "items": {
                                                "maxLength": 2048,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "maxItems": 10,
                                            "minItems": 1,
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Names": {
                                        "description": "The names of the parameters to delete.",
                                        "items": {
                                            "maxLength": 2048,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "maxItems": 10,
                                        "minItems": 1,
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "Names"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DeletePatchBaseline": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Deletes a patch baseline.",
                "operationId": "DeletePatchBaseline",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "BaselineId": {
                                            "description": "The ID of the deleted patch baseline.",
                                            "maxLength": 128,
                                            "minLength": 20,
                                            "pattern": "^[a-zA-Z0-9_\\-:/]{20,128}$",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ResourceInUseException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "BaselineId": {
                                        "description": "The ID of the patch baseline to delete.",
                                        "maxLength": 128,
                                        "minLength": 20,
                                        "pattern": "^[a-zA-Z0-9_\\-:/]{20,128}$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "BaselineId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DeleteResourceDataSync": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Deletes a Resource Data Sync configuration. After the configuration is deleted, changes to inventory data on managed instances are no longer synced with the target Amazon S3 bucket. Deleting a sync configuration does not delete data in the target Amazon S3 bucket.",
                "operationId": "DeleteResourceDataSync",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ResourceDataSyncNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "SyncName": {
                                        "description": "The name of the configuration to delete.",
                                        "maxLength": 64,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "SyncName"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DeregisterManagedInstance": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Removes the server or virtual machine from the list of registered servers. You can reregister the instance again at any time. If you don't plan to use Run Command on the server, we suggest uninstalling SSM Agent first.",
                "operationId": "DeregisterManagedInstance",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidInstanceId",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "InstanceId": {
                                        "description": "The ID assigned to the managed instance when you registered it using the activation process. ",
                                        "pattern": "^mi-[0-9a-f]{17}$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "InstanceId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DeregisterPatchBaselineForPatchGroup": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Removes a patch group from a patch baseline.",
                "operationId": "DeregisterPatchBaselineForPatchGroup",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "BaselineId": {
                                            "description": "The ID of the patch baseline the patch group was deregistered from.",
                                            "maxLength": 128,
                                            "minLength": 20,
                                            "pattern": "^[a-zA-Z0-9_\\-:/]{20,128}$",
                                            "type": "string"
                                        },
                                        "PatchGroup": {
                                            "description": "The name of the patch group deregistered from the patch baseline.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidResourceId",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "BaselineId": {
                                        "description": "The ID of the patch baseline to deregister the patch group from.",
                                        "maxLength": 128,
                                        "minLength": 20,
                                        "pattern": "^[a-zA-Z0-9_\\-:/]{20,128}$",
                                        "type": "string"
                                    },
                                    "PatchGroup": {
                                        "description": "The name of the patch group that should be deregistered from the patch baseline.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "BaselineId",
                                    "PatchGroup"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DeregisterTargetFromMaintenanceWindow": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Removes a target from a Maintenance Window.",
                "operationId": "DeregisterTargetFromMaintenanceWindow",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "WindowId": {
                                            "description": "The ID of the Maintenance Window the target was removed from.",
                                            "maxLength": 20,
                                            "minLength": 20,
                                            "pattern": "^mw-[0-9a-f]{17}$",
                                            "type": "string"
                                        },
                                        "WindowTargetId": {
                                            "description": "The ID of the removed target definition.",
                                            "maxLength": 36,
                                            "minLength": 36,
                                            "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "DoesNotExistException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "TargetInUseException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Safe": {
                                        "description": "The system checks if the target is being referenced by a task. If the target is being referenced, the system returns an error and does not deregister the target from the Maintenance Window.",
                                        "type": "boolean"
                                    },
                                    "WindowId": {
                                        "description": "The ID of the Maintenance Window the target should be removed from.",
                                        "maxLength": 20,
                                        "minLength": 20,
                                        "pattern": "^mw-[0-9a-f]{17}$",
                                        "type": "string"
                                    },
                                    "WindowTargetId": {
                                        "description": "The ID of the target definition to remove.",
                                        "maxLength": 36,
                                        "minLength": 36,
                                        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "WindowId",
                                    "WindowTargetId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DeregisterTaskFromMaintenanceWindow": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Removes a task from a Maintenance Window.",
                "operationId": "DeregisterTaskFromMaintenanceWindow",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "WindowId": {
                                            "description": "The ID of the Maintenance Window the task was removed from.",
                                            "maxLength": 20,
                                            "minLength": 20,
                                            "pattern": "^mw-[0-9a-f]{17}$",
                                            "type": "string"
                                        },
                                        "WindowTaskId": {
                                            "description": "The ID of the task removed from the Maintenance Window.",
                                            "maxLength": 36,
                                            "minLength": 36,
                                            "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "DoesNotExistException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "WindowId": {
                                        "description": "The ID of the Maintenance Window the task should be removed from.",
                                        "maxLength": 20,
                                        "minLength": 20,
                                        "pattern": "^mw-[0-9a-f]{17}$",
                                        "type": "string"
                                    },
                                    "WindowTaskId": {
                                        "description": "The ID of the task to remove from the Maintenance Window.",
                                        "maxLength": 36,
                                        "minLength": 36,
                                        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "WindowId",
                                    "WindowTaskId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeActivations": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Details about the activation, including: the date and time the activation was created, the expiration date, the IAM role assigned to the instances in the activation, and the number of instances activated by this registration.",
                "operationId": "DescribeActivations",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxResults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "NextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ActivationList": {
                                            "description": "A list of activations for your AWS account.",
                                            "items": {
                                                "description": "An activation registers one or more on-premises servers or virtual machines (VMs) with AWS so that you can configure those servers or VMs using Run Command. A server or VM that has been registered with AWS is called a managed instance.",
                                                "properties": {
                                                    "ActivationId": {
                                                        "description": "The ID created by Systems Manager when you submitted the activation.",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                                                        "type": "string"
                                                    },
                                                    "CreatedDate": {
                                                        "description": "The date the activation was created.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "DefaultInstanceName": {
                                                        "description": "A name for the managed instance when it is created.",
                                                        "maxLength": 256,
                                                        "minLength": 0,
                                                        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                        "type": "string"
                                                    },
                                                    "Description": {
                                                        "description": "A user defined description of the activation.",
                                                        "maxLength": 256,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "ExpirationDate": {
                                                        "description": "The date when this activation can no longer be used to register managed instances.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "Expired": {
                                                        "description": "Whether or not the activation is expired.",
                                                        "type": "boolean"
                                                    },
                                                    "IamRole": {
                                                        "description": "The Amazon Identity and Access Management (IAM) role to assign to the managed instance.",
                                                        "maxLength": 64,
                                                        "type": "string"
                                                    },
                                                    "RegistrationLimit": {
                                                        "description": "The maximum number of managed instances that can be registered using this activation.",
                                                        "maximum": 1000,
                                                        "minimum": 1,
                                                        "type": "integer"
                                                    },
                                                    "RegistrationsCount": {
                                                        "description": "The number of managed instances already registered with this activation.",
                                                        "maximum": 1000,
                                                        "minimum": 1,
                                                        "type": "integer"
                                                    },
                                                    "Tags": {
                                                        "description": "Tags assigned to the activation.",
                                                        "items": {
                                                            "description": "Metadata that you assign to your AWS resources. Tags enable you to categorize your resources in different ways, for example, by purpose, owner, or environment. In Systems Manager, you can apply tags to documents, managed instances, Maintenance Windows, Parameter Store parameters, and patch baselines.",
                                                            "properties": {
                                                                "Key": {
                                                                    "description": "The name of the tag.",
                                                                    "maxLength": 128,
                                                                    "minLength": 1,
                                                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                                    "type": "string"
                                                                },
                                                                "Value": {
                                                                    "description": "The value of the tag.",
                                                                    "maxLength": 256,
                                                                    "minLength": 1,
                                                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "Key",
                                                                "Value"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "maxItems": 1000,
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "NextToken": {
                                            "description": "The token for the next set of items to return. Use this token to get the next set of results. ",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidFilter",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidNextToken",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Filters": {
                                        "description": "A filter to view information about your activations.",
                                        "items": {
                                            "description": "Filter for the DescribeActivation API.",
                                            "properties": {
                                                "FilterKey": {
                                                    "description": "The name of the filter.",
                                                    "enum": [
                                                        "ActivationIds",
                                                        "DefaultInstanceName",
                                                        "IamRole"
                                                    ],
                                                    "type": "string"
                                                },
                                                "FilterValues": {
                                                    "description": "The filter values.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "MaxResults": {
                                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                                        "maximum": 50,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "A token to start the list. Use this token to get the next set of results. ",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeAssociation": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Describes the association for the specified target or instance. If you created the association by using the <code>Targets</code> parameter, then you must retrieve the association by using the association ID. If you created the association by specifying an instance ID and a Systems Manager document, then you retrieve the association by specifying the document name and the instance ID. ",
                "operationId": "DescribeAssociation",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "AssociationDescription": {
                                            "description": "Information about the association.",
                                            "properties": {
                                                "AssociationId": {
                                                    "description": "The association ID.",
                                                    "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                                                    "type": "string"
                                                },
                                                "AssociationName": {
                                                    "description": "The association name.",
                                                    "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                                    "type": "string"
                                                },
                                                "AssociationVersion": {
                                                    "description": "The association version.",
                                                    "pattern": "([$]LATEST)|([1-9][0-9]*)",
                                                    "type": "string"
                                                },
                                                "AutomationTargetParameterName": {
                                                    "description": "Specify the target for the association. This target is required for associations that use an Automation document and target resources by using rate controls.",
                                                    "maxLength": 50,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "ComplianceSeverity": {
                                                    "description": "The severity level that is assigned to the association.",
                                                    "enum": [
                                                        "CRITICAL",
                                                        "HIGH",
                                                        "MEDIUM",
                                                        "LOW",
                                                        "UNSPECIFIED"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Date": {
                                                    "description": "The date when the association was made.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "DocumentVersion": {
                                                    "description": "The document version.",
                                                    "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                                    "type": "string"
                                                },
                                                "InstanceId": {
                                                    "description": "The ID of the instance.",
                                                    "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                                                    "type": "string"
                                                },
                                                "LastExecutionDate": {
                                                    "description": "The date on which the association was last run.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "LastSuccessfulExecutionDate": {
                                                    "description": "The last date on which the association was successfully run.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "LastUpdateAssociationDate": {
                                                    "description": "The date when the association was last updated.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "MaxConcurrency": {
                                                    "description": "<p>The maximum number of targets allowed to run the association at the same time. You can specify a number, for example 10, or a percentage of the target set, for example 10%. The default value is 100%, which means all targets run the association at the same time.</p> <p>If a new instance starts and attempts to execute an association while Systems Manager is executing MaxConcurrency associations, the association is allowed to run. During the next association interval, the new instance will process its association within the limit specified for MaxConcurrency.</p>",
                                                    "maxLength": 7,
                                                    "minLength": 1,
                                                    "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                                                    "type": "string"
                                                },
                                                "MaxErrors": {
                                                    "description": "<p>The number of errors that are allowed before the system stops sending requests to run the association on additional targets. You can specify either an absolute number of errors, for example 10, or a percentage of the target set, for example 10%. If you specify 3, for example, the system stops sending requests when the fourth error is received. If you specify 0, then the system stops sending requests after the first error is returned. If you run an association on 50 instances and set MaxError to 10%, then the system stops sending the request when the sixth error is received.</p> <p>Executions that are already running an association when MaxErrors is reached are allowed to complete, but some of these executions may fail as well. If you need to ensure that there won't be more than max-errors failed executions, set MaxConcurrency to 1 so that executions proceed one at a time.</p>",
                                                    "maxLength": 7,
                                                    "minLength": 1,
                                                    "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the Systems Manager document.",
                                                    "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                                                    "type": "string"
                                                },
                                                "OutputLocation": {
                                                    "description": "An Amazon S3 bucket where you want to store the output details of the request.",
                                                    "properties": {
                                                        "S3Location": {
                                                            "description": "An Amazon S3 bucket where you want to store the results of this request.",
                                                            "properties": {
                                                                "OutputS3BucketName": {
                                                                    "description": "The name of the Amazon S3 bucket.",
                                                                    "maxLength": 63,
                                                                    "minLength": 3,
                                                                    "type": "string"
                                                                },
                                                                "OutputS3KeyPrefix": {
                                                                    "description": "The Amazon S3 bucket subfolder.",
                                                                    "maxLength": 500,
                                                                    "type": "string"
                                                                },
                                                                "OutputS3Region": {
                                                                    "description": "(Deprecated) You can no longer specify this parameter. The system ignores it. Instead, Systems Manager automatically determines the Amazon S3 bucket region.",
                                                                    "maxLength": 20,
                                                                    "minLength": 3,
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "Overview": {
                                                    "description": "Information about the association.",
                                                    "properties": {
                                                        "AssociationStatusAggregatedCount": {
                                                            "description": "Returns the number of targets for the association status. For example, if you created an association with two instances, and one of them was successful, this would return the count of instances by status.",
                                                            "items": {
                                                                "properties": {
                                                                    "key": {
                                                                        "type": "string"
                                                                    },
                                                                    "value": {
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "DetailedStatus": {
                                                            "description": "A detailed status of the association.",
                                                            "type": "string"
                                                        },
                                                        "Status": {
                                                            "description": "The status of the association. Status can be: Pending, Success, or Failed.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "Parameters": {
                                                    "description": "A description of the parameters for a document. ",
                                                    "items": {
                                                        "properties": {
                                                            "key": {
                                                                "type": "string"
                                                            },
                                                            "value": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "ScheduleExpression": {
                                                    "description": "A cron expression that specifies a schedule when the association runs.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "description": "The association status.",
                                                    "properties": {
                                                        "AdditionalInfo": {
                                                            "description": "A user-defined string.",
                                                            "maxLength": 1024,
                                                            "type": "string"
                                                        },
                                                        "Date": {
                                                            "description": "The date when the status changed.",
                                                            "format": "date-time",
                                                            "type": "string"
                                                        },
                                                        "Message": {
                                                            "description": "The reason for the status.",
                                                            "maxLength": 1024,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "Name": {
                                                            "description": "The status.",
                                                            "enum": [
                                                                "Pending",
                                                                "Success",
                                                                "Failed"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "Date",
                                                        "Name",
                                                        "Message"
                                                    ],
                                                    "type": "object"
                                                },
                                                "Targets": {
                                                    "description": "The instances targeted by the request. ",
                                                    "items": {
                                                        "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                                                        "properties": {
                                                            "Key": {
                                                                "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                                "maxLength": 128,
                                                                "minLength": 1,
                                                                "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                                                "type": "string"
                                                            },
                                                            "Values": {
                                                                "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "maxItems": 50,
                                                                "minItems": 0,
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "maxItems": 5,
                                                    "minItems": 0,
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "AssociationDoesNotExist",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidAssociationVersion",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "InvalidDocument",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "InvalidInstanceId",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "AssociationId": {
                                        "description": "The association ID for which you want information.",
                                        "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                                        "type": "string"
                                    },
                                    "AssociationVersion": {
                                        "description": "Specify the association version to retrieve. To view the latest version, either specify <code>$LATEST</code> for this parameter, or omit this parameter. To view a list of all associations for an instance, use <a>ListAssociations</a>. To get a list of versions for a specific association, use <a>ListAssociationVersions</a>. ",
                                        "pattern": "([$]LATEST)|([1-9][0-9]*)",
                                        "type": "string"
                                    },
                                    "InstanceId": {
                                        "description": "The instance ID.",
                                        "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "The name of the Systems Manager document.",
                                        "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeAssociationExecutionTargets": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Use this API action to view information about a specific execution of a specific association.",
                "operationId": "DescribeAssociationExecutionTargets",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "AssociationExecutionTargets": {
                                            "description": "Information about the execution.",
                                            "items": {
                                                "description": "Includes information about the specified association execution.",
                                                "properties": {
                                                    "AssociationId": {
                                                        "description": "The association ID.",
                                                        "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                                                        "type": "string"
                                                    },
                                                    "AssociationVersion": {
                                                        "description": "The association version.",
                                                        "pattern": "([$]LATEST)|([1-9][0-9]*)",
                                                        "type": "string"
                                                    },
                                                    "DetailedStatus": {
                                                        "description": "Detailed information about the execution status.",
                                                        "type": "string"
                                                    },
                                                    "ExecutionId": {
                                                        "description": "The execution ID. If the association does not run at intervals or according to a schedule, then the ExecutionID is the same as the AssociationID.",
                                                        "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                                                        "type": "string"
                                                    },
                                                    "LastExecutionDate": {
                                                        "description": "The date of the last execution.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "OutputSource": {
                                                        "description": "The location where the association details are saved.",
                                                        "properties": {
                                                            "OutputSourceId": {
                                                                "description": "The ID of the output source, for example the URL of an Amazon S3 bucket.",
                                                                "maxLength": 36,
                                                                "minLength": 36,
                                                                "type": "string"
                                                            },
                                                            "OutputSourceType": {
                                                                "description": "The type of source where the association execution details are stored, for example, Amazon S3.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "ResourceId": {
                                                        "description": "The resource ID, for example, the instance ID where the association ran.",
                                                        "maxLength": 100,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "ResourceType": {
                                                        "description": "The resource type, for example, instance.",
                                                        "maxLength": 50,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "Status": {
                                                        "description": "The association execution status.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "NextToken": {
                                            "description": "The token for the next set of items to return. Use this token to get the next set of results.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "AssociationDoesNotExist",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidNextToken",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "AssociationExecutionDoesNotExist",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "AssociationId": {
                                        "description": "The association ID that includes the execution for which you want to view details.",
                                        "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                                        "type": "string"
                                    },
                                    "ExecutionId": {
                                        "description": "The execution ID for which you want to view details.",
                                        "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                                        "type": "string"
                                    },
                                    "Filters": {
                                        "description": "<p>Filters for the request. You can specify the following filters and values.</p> <p>Status (EQUAL)</p> <p>ResourceId (EQUAL)</p> <p>ResourceType (EQUAL)</p>",
                                        "items": {
                                            "description": "Filters for the association execution.",
                                            "properties": {
                                                "Key": {
                                                    "description": "The key value used in the request.",
                                                    "enum": [
                                                        "Status",
                                                        "ResourceId",
                                                        "ResourceType"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The value specified for the key.",
                                                    "minLength": 1,
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Key",
                                                "Value"
                                            ],
                                            "type": "object"
                                        },
                                        "minItems": 1,
                                        "type": "array"
                                    },
                                    "MaxResults": {
                                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                                        "maximum": 50,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "A token to start the list. Use this token to get the next set of results. ",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "AssociationId",
                                    "ExecutionId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeAssociationExecutions": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Use this API action to view all executions for a specific association ID. ",
                "operationId": "DescribeAssociationExecutions",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "AssociationExecutions": {
                                            "description": "A list of the executions for the specified association ID.",
                                            "items": {
                                                "description": "Includes information about the specified association.",
                                                "properties": {
                                                    "AssociationId": {
                                                        "description": "The association ID.",
                                                        "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                                                        "type": "string"
                                                    },
                                                    "AssociationVersion": {
                                                        "description": "The association version.",
                                                        "pattern": "([$]LATEST)|([1-9][0-9]*)",
                                                        "type": "string"
                                                    },
                                                    "CreatedTime": {
                                                        "description": "The time the execution started.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "DetailedStatus": {
                                                        "description": "Detailed status information about the execution.",
                                                        "type": "string"
                                                    },
                                                    "ExecutionId": {
                                                        "description": "The execution ID for the association. If the association does not run at intervals or according to a schedule, then the ExecutionID is the same as the AssociationID.",
                                                        "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                                                        "type": "string"
                                                    },
                                                    "LastExecutionDate": {
                                                        "description": "The date of the last execution.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "ResourceCountByStatus": {
                                                        "description": "An aggregate status of the resources in the execution based on the status type.",
                                                        "type": "string"
                                                    },
                                                    "Status": {
                                                        "description": "The status of the association execution.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "NextToken": {
                                            "description": "The token for the next set of items to return. Use this token to get the next set of results.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "AssociationDoesNotExist",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidNextToken",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "AssociationId": {
                                        "description": "The association ID for which you want to view execution history details.",
                                        "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                                        "type": "string"
                                    },
                                    "Filters": {
                                        "description": "<p>Filters for the request. You can specify the following filters and values.</p> <p>ExecutionId (EQUAL)</p> <p>Status (EQUAL)</p> <p>CreatedTime (EQUAL, GREATER_THAN, LESS_THAN)</p>",
                                        "items": {
                                            "description": "Filters used in the request.",
                                            "properties": {
                                                "Key": {
                                                    "description": "The key value used in the request.",
                                                    "enum": [
                                                        "ExecutionId",
                                                        "Status",
                                                        "CreatedTime"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "description": "The filter type specified in the request.",
                                                    "enum": [
                                                        "EQUAL",
                                                        "LESS_THAN",
                                                        "GREATER_THAN"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The value specified for the key.",
                                                    "minLength": 1,
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Key",
                                                "Value",
                                                "Type"
                                            ],
                                            "type": "object"
                                        },
                                        "minItems": 1,
                                        "type": "array"
                                    },
                                    "MaxResults": {
                                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                                        "maximum": 50,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "A token to start the list. Use this token to get the next set of results. ",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "AssociationId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeAutomationExecutions": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Provides details about all active and terminated Automation executions.",
                "operationId": "DescribeAutomationExecutions",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "AutomationExecutionMetadataList": {
                                            "description": "The list of details about each automation execution which has occurred which matches the filter specification, if any.",
                                            "items": {
                                                "description": "Details about a specific Automation execution.",
                                                "properties": {
                                                    "AutomationExecutionId": {
                                                        "description": "The execution ID.",
                                                        "maxLength": 36,
                                                        "minLength": 36,
                                                        "type": "string"
                                                    },
                                                    "AutomationExecutionStatus": {
                                                        "description": "The status of the execution. Valid values include: Running, Succeeded, Failed, Timed out, or Cancelled.",
                                                        "enum": [
                                                            "Pending",
                                                            "InProgress",
                                                            "Waiting",
                                                            "Success",
                                                            "TimedOut",
                                                            "Cancelling",
                                                            "Cancelled",
                                                            "Failed"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "AutomationType": {
                                                        "description": "Use this filter with <a>DescribeAutomationExecutions</a>. Specify either Local or CrossAccount. CrossAccount is an Automation that executes in multiple AWS Regions and accounts. For more information, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-automation-multiple-accounts-and-regions.html\">Concurrently Executing Automations in Multiple AWS Regions and Accounts</a> in the <i>AWS Systems Manager User Guide</i>. ",
                                                        "enum": [
                                                            "CrossAccount",
                                                            "Local"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "CurrentAction": {
                                                        "description": "The action of the currently executing step.",
                                                        "type": "string"
                                                    },
                                                    "CurrentStepName": {
                                                        "description": "The name of the currently executing step.",
                                                        "type": "string"
                                                    },
                                                    "DocumentName": {
                                                        "description": "The name of the Automation document used during execution.",
                                                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                                        "type": "string"
                                                    },
                                                    "DocumentVersion": {
                                                        "description": "The document version used during the execution.",
                                                        "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                                        "type": "string"
                                                    },
                                                    "ExecutedBy": {
                                                        "description": "The IAM role ARN of the user who executed the Automation.",
                                                        "type": "string"
                                                    },
                                                    "ExecutionEndTime": {
                                                        "description": "The time the execution finished. This is not populated if the execution is still in progress.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "ExecutionStartTime": {
                                                        "description": "The time the execution started.&gt;",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "FailureMessage": {
                                                        "description": "The list of execution outputs as defined in the Automation document.",
                                                        "type": "string"
                                                    },
                                                    "LogFile": {
                                                        "description": "An Amazon S3 bucket where execution information is stored.",
                                                        "type": "string"
                                                    },
                                                    "MaxConcurrency": {
                                                        "description": "The MaxConcurrency value specified by the user when starting the Automation.",
                                                        "maxLength": 7,
                                                        "minLength": 1,
                                                        "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                                                        "type": "string"
                                                    },
                                                    "MaxErrors": {
                                                        "description": "The MaxErrors value specified by the user when starting the Automation.",
                                                        "maxLength": 7,
                                                        "minLength": 1,
                                                        "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                                                        "type": "string"
                                                    },
                                                    "Mode": {
                                                        "description": "The Automation execution mode.",
                                                        "enum": [
                                                            "Auto",
                                                            "Interactive"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Outputs": {
                                                        "description": "The list of execution outputs as defined in the Automation document.",
                                                        "items": {
                                                            "properties": {
                                                                "key": {
                                                                    "maxLength": 30,
                                                                    "minLength": 1,
                                                                    "type": "string"
                                                                },
                                                                "value": {
                                                                    "items": {
                                                                        "maxLength": 512,
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    },
                                                                    "maxItems": 10,
                                                                    "minItems": 0,
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "maxItems": 200,
                                                        "minItems": 1,
                                                        "type": "array"
                                                    },
                                                    "ParentAutomationExecutionId": {
                                                        "description": "The ExecutionId of the parent Automation.",
                                                        "maxLength": 36,
                                                        "minLength": 36,
                                                        "type": "string"
                                                    },
                                                    "ResolvedTargets": {
                                                        "description": "A list of targets that resolved during the execution.",
                                                        "properties": {
                                                            "ParameterValues": {
                                                                "description": "A list of parameter values sent to targets that resolved during the Automation execution.",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "Truncated": {
                                                                "description": "A boolean value indicating whether the resolved target list is truncated.",
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "Target": {
                                                        "description": "The list of execution outputs as defined in the Automation document.",
                                                        "type": "string"
                                                    },
                                                    "TargetMaps": {
                                                        "description": "The specified key-value mapping of document parameters to target resources.",
                                                        "items": {
                                                            "items": {
                                                                "properties": {
                                                                    "key": {
                                                                        "maxLength": 50,
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    },
                                                                    "value": {
                                                                        "items": {
                                                                            "maxLength": 50,
                                                                            "minLength": 1,
                                                                            "type": "string"
                                                                        },
                                                                        "maxItems": 25,
                                                                        "minItems": 0,
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "maxItems": 20,
                                                            "minItems": 1,
                                                            "type": "array"
                                                        },
                                                        "maxItems": 300,
                                                        "minItems": 0,
                                                        "type": "array"
                                                    },
                                                    "TargetParameterName": {
                                                        "description": "The list of execution outputs as defined in the Automation document.",
                                                        "maxLength": 30,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "Targets": {
                                                        "description": "The targets defined by the user when starting the Automation.",
                                                        "items": {
                                                            "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                                                            "properties": {
                                                                "Key": {
                                                                    "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                                    "maxLength": 128,
                                                                    "minLength": 1,
                                                                    "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                                                    "type": "string"
                                                                },
                                                                "Values": {
                                                                    "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "maxItems": 50,
                                                                    "minItems": 0,
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "maxItems": 5,
                                                        "minItems": 0,
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "NextToken": {
                                            "description": "The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidFilterKey",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidFilterValue",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidNextToken",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Filters": {
                                        "description": "Filters used to limit the scope of executions that are requested.",
                                        "items": {
                                            "description": "A filter used to match specific automation executions. This is used to limit the scope of Automation execution information returned.",
                                            "properties": {
                                                "Key": {
                                                    "description": "One or more keys to limit the results. Valid filter keys include the following: DocumentNamePrefix, ExecutionStatus, ExecutionId, ParentExecutionId, CurrentAction, StartTimeBefore, StartTimeAfter.",
                                                    "enum": [
                                                        "DocumentNamePrefix",
                                                        "ExecutionStatus",
                                                        "ExecutionId",
                                                        "ParentExecutionId",
                                                        "CurrentAction",
                                                        "StartTimeBefore",
                                                        "StartTimeAfter",
                                                        "AutomationType"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "The values used to limit the execution information associated with the filter's key.",
                                                    "items": {
                                                        "maxLength": 150,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "maxItems": 10,
                                                    "minItems": 1,
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Key",
                                                "Values"
                                            ],
                                            "type": "object"
                                        },
                                        "maxItems": 10,
                                        "minItems": 1,
                                        "type": "array"
                                    },
                                    "MaxResults": {
                                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                                        "maximum": 50,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "The token for the next set of items to return. (You received this token from a previous call.)",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeAutomationStepExecutions": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Information about all active and terminated step executions in an Automation workflow.",
                "operationId": "DescribeAutomationStepExecutions",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "NextToken": {
                                            "description": "The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.",
                                            "type": "string"
                                        },
                                        "StepExecutions": {
                                            "description": "A list of details about the current state of all steps that make up an execution.",
                                            "items": {
                                                "description": "Detailed information about an the execution state of an Automation step.",
                                                "properties": {
                                                    "Action": {
                                                        "description": "The action this step performs. The action determines the behavior of the step.",
                                                        "pattern": "^aws:[a-zA-Z]{3,25}$",
                                                        "type": "string"
                                                    },
                                                    "ExecutionEndTime": {
                                                        "description": "If a step has finished execution, this contains the time the execution ended. If the step has not yet concluded, this field is not populated.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "ExecutionStartTime": {
                                                        "description": "If a step has begun execution, this contains the time the step started. If the step is in Pending status, this field is not populated.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "FailureDetails": {
                                                        "description": "Information about the Automation failure.",
                                                        "properties": {
                                                            "Details": {
                                                                "description": "Detailed information about the Automation step failure.",
                                                                "items": {
                                                                    "properties": {
                                                                        "key": {
                                                                            "maxLength": 30,
                                                                            "minLength": 1,
                                                                            "type": "string"
                                                                        },
                                                                        "value": {
                                                                            "items": {
                                                                                "maxLength": 512,
                                                                                "minLength": 1,
                                                                                "type": "string"
                                                                            },
                                                                            "maxItems": 10,
                                                                            "minItems": 0,
                                                                            "type": "array"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "maxItems": 200,
                                                                "minItems": 1,
                                                                "type": "array"
                                                            },
                                                            "FailureStage": {
                                                                "description": "The stage of the Automation execution when the failure occurred. The stages include the following: InputValidation, PreVerification, Invocation, PostVerification.",
                                                                "type": "string"
                                                            },
                                                            "FailureType": {
                                                                "description": "The type of Automation failure. Failure types include the following: Action, Permission, Throttling, Verification, Internal.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "FailureMessage": {
                                                        "description": "If a step failed, this message explains why the execution failed.",
                                                        "type": "string"
                                                    },
                                                    "Inputs": {
                                                        "description": "Fully-resolved values passed into the step before execution.",
                                                        "items": {
                                                            "properties": {
                                                                "key": {
                                                                    "type": "string"
                                                                },
                                                                "value": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "IsCritical": {
                                                        "description": "The flag which can be used to help decide whether the failure of current step leads to the Automation failure.",
                                                        "type": "boolean"
                                                    },
                                                    "IsEnd": {
                                                        "description": "The flag which can be used to end automation no matter whether the step succeeds or fails.",
                                                        "type": "boolean"
                                                    },
                                                    "MaxAttempts": {
                                                        "description": "The maximum number of tries to run the action of the step. The default value is 1.",
                                                        "type": "integer"
                                                    },
                                                    "NextStep": {
                                                        "description": "The next step after the step succeeds.",
                                                        "type": "string"
                                                    },
                                                    "OnFailure": {
                                                        "description": "The action to take if the step fails. The default value is Abort.",
                                                        "type": "string"
                                                    },
                                                    "Outputs": {
                                                        "description": "Returned values from the execution of the step.",
                                                        "items": {
                                                            "properties": {
                                                                "key": {
                                                                    "maxLength": 30,
                                                                    "minLength": 1,
                                                                    "type": "string"
                                                                },
                                                                "value": {
                                                                    "items": {
                                                                        "maxLength": 512,
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    },
                                                                    "maxItems": 10,
                                                                    "minItems": 0,
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "maxItems": 200,
                                                        "minItems": 1,
                                                        "type": "array"
                                                    },
                                                    "OverriddenParameters": {
                                                        "description": "A user-specified list of parameters to override when executing a step.",
                                                        "items": {
                                                            "properties": {
                                                                "key": {
                                                                    "maxLength": 30,
                                                                    "minLength": 1,
                                                                    "type": "string"
                                                                },
                                                                "value": {
                                                                    "items": {
                                                                        "maxLength": 512,
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    },
                                                                    "maxItems": 10,
                                                                    "minItems": 0,
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "maxItems": 200,
                                                        "minItems": 1,
                                                        "type": "array"
                                                    },
                                                    "Response": {
                                                        "description": "A message associated with the response code for an execution.",
                                                        "type": "string"
                                                    },
                                                    "ResponseCode": {
                                                        "description": "The response code returned by the execution of the step.",
                                                        "type": "string"
                                                    },
                                                    "StepExecutionId": {
                                                        "description": "The unique ID of a step execution.",
                                                        "type": "string"
                                                    },
                                                    "StepName": {
                                                        "description": "The name of this execution step.",
                                                        "type": "string"
                                                    },
                                                    "StepStatus": {
                                                        "description": "The execution status for this step. Valid values include: Pending, InProgress, Success, Cancelled, Failed, and TimedOut.",
                                                        "enum": [
                                                            "Pending",
                                                            "InProgress",
                                                            "Waiting",
                                                            "Success",
                                                            "TimedOut",
                                                            "Cancelling",
                                                            "Cancelled",
                                                            "Failed"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "TargetLocation": {
                                                        "description": "The combination of AWS Regions and accounts targeted by the current Automation execution.",
                                                        "properties": {
                                                            "Accounts": {
                                                                "description": "The AWS accounts targeted by the current Automation execution.",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "maxItems": 50,
                                                                "minItems": 1,
                                                                "type": "array"
                                                            },
                                                            "ExecutionRoleName": {
                                                                "description": "The Automation execution role used by the currently executing Automation.",
                                                                "maxLength": 64,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            },
                                                            "Regions": {
                                                                "description": "The AWS Regions targeted by the current Automation execution.",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "maxItems": 50,
                                                                "minItems": 1,
                                                                "type": "array"
                                                            },
                                                            "TargetLocationMaxConcurrency": {
                                                                "description": "The maxium number of AWS accounts and AWS regions allowed to run the Automation concurrently ",
                                                                "maxLength": 7,
                                                                "minLength": 1,
                                                                "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                                                                "type": "string"
                                                            },
                                                            "TargetLocationMaxErrors": {
                                                                "description": "The maxium number of errors allowed before the system stops queueing additional Automation executions for the currently executing Automation. ",
                                                                "maxLength": 7,
                                                                "minLength": 1,
                                                                "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "Targets": {
                                                        "description": "The targets for the step execution.",
                                                        "items": {
                                                            "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                                                            "properties": {
                                                                "Key": {
                                                                    "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                                    "maxLength": 128,
                                                                    "minLength": 1,
                                                                    "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                                                    "type": "string"
                                                                },
                                                                "Values": {
                                                                    "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "maxItems": 50,
                                                                    "minItems": 0,
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "maxItems": 5,
                                                        "minItems": 0,
                                                        "type": "array"
                                                    },
                                                    "TimeoutSeconds": {
                                                        "description": "The timeout seconds of the step.",
                                                        "type": "integer"
                                                    },
                                                    "ValidNextSteps": {
                                                        "description": "Strategies used when step fails, we support Continue and Abort. Abort will fail the automation when the step fails. Continue will ignore the failure of current step and allow automation to execute the next step. With conditional branching, we add step:stepName to support the automation to go to another specific step.",
                                                        "items": {
                                                            "maxLength": 65535,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "AutomationExecutionNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidNextToken",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidFilterKey",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "InvalidFilterValue",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "AutomationExecutionId": {
                                        "description": "The Automation execution ID for which you want step execution descriptions.",
                                        "maxLength": 36,
                                        "minLength": 36,
                                        "type": "string"
                                    },
                                    "Filters": {
                                        "description": "One or more filters to limit the number of step executions returned by the request.",
                                        "items": {
                                            "description": "A filter to limit the amount of step execution information returned by the call.",
                                            "properties": {
                                                "Key": {
                                                    "description": "One or more keys to limit the results. Valid filter keys include the following: StepName, Action, StepExecutionId, StepExecutionStatus, StartTimeBefore, StartTimeAfter.",
                                                    "enum": [
                                                        "StartTimeBefore",
                                                        "StartTimeAfter",
                                                        "StepExecutionStatus",
                                                        "StepExecutionId",
                                                        "StepName",
                                                        "Action"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "The values of the filter key.",
                                                    "items": {
                                                        "maxLength": 150,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "maxItems": 10,
                                                    "minItems": 1,
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Key",
                                                "Values"
                                            ],
                                            "type": "object"
                                        },
                                        "maxItems": 6,
                                        "minItems": 1,
                                        "type": "array"
                                    },
                                    "MaxResults": {
                                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                                        "maximum": 50,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "The token for the next set of items to return. (You received this token from a previous call.)",
                                        "type": "string"
                                    },
                                    "ReverseOrder": {
                                        "description": "A boolean that indicates whether to list step executions in reverse order by start time. The default value is false.",
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "AutomationExecutionId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeAvailablePatches": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Lists all patches that could possibly be included in a patch baseline.",
                "operationId": "DescribeAvailablePatches",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "NextToken": {
                                            "description": "The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.",
                                            "type": "string"
                                        },
                                        "Patches": {
                                            "description": "An array of patches. Each entry in the array is a patch structure.",
                                            "items": {
                                                "description": "Represents metadata about a patch.",
                                                "properties": {
                                                    "Classification": {
                                                        "description": "The classification of the patch (for example, SecurityUpdates, Updates, CriticalUpdates).",
                                                        "type": "string"
                                                    },
                                                    "ContentUrl": {
                                                        "description": "The URL where more information can be obtained about the patch.",
                                                        "type": "string"
                                                    },
                                                    "Description": {
                                                        "description": "The description of the patch.",
                                                        "type": "string"
                                                    },
                                                    "Id": {
                                                        "description": "The ID of the patch (this is different than the Microsoft Knowledge Base ID).",
                                                        "maxLength": 100,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "KbNumber": {
                                                        "description": "The Microsoft Knowledge Base ID of the patch.",
                                                        "type": "string"
                                                    },
                                                    "Language": {
                                                        "description": "The language of the patch if it's language-specific.",
                                                        "type": "string"
                                                    },
                                                    "MsrcNumber": {
                                                        "description": "The ID of the MSRC bulletin the patch is related to.",
                                                        "type": "string"
                                                    },
                                                    "MsrcSeverity": {
                                                        "description": "The severity of the patch (for example Critical, Important, Moderate).",
                                                        "type": "string"
                                                    },
                                                    "Product": {
                                                        "description": "The specific product the patch is applicable for (for example, WindowsServer2016).",
                                                        "type": "string"
                                                    },
                                                    "ProductFamily": {
                                                        "description": "The product family the patch is applicable for (for example, Windows).",
                                                        "type": "string"
                                                    },
                                                    "ReleaseDate": {
                                                        "description": "The date the patch was released.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "Title": {
                                                        "description": "The title of the patch.",
                                                        "type": "string"
                                                    },
                                                    "Vendor": {
                                                        "description": "The name of the vendor providing the patch.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Filters": {
                                        "description": "Filters used to scope down the returned patches.",
                                        "items": {
                                            "description": "Defines a filter used in Patch Manager APIs.",
                                            "properties": {
                                                "Key": {
                                                    "description": "The key for the filter.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "The value for the filter.",
                                                    "items": {
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "maxItems": 5,
                                        "minItems": 0,
                                        "type": "array"
                                    },
                                    "MaxResults": {
                                        "description": "The maximum number of patches to return (per page).",
                                        "maximum": 100,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "The token for the next set of items to return. (You received this token from a previous call.)",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeDocument": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Describes the specified Systems Manager document.",
                "operationId": "DescribeDocument",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Document": {
                                            "description": "Information about the Systems Manager document.",
                                            "properties": {
                                                "AttachmentsInformation": {
                                                    "description": "Details about the document attachments, including names, locations, sizes, etc.",
                                                    "items": {
                                                        "description": "An attribute of an attachment, such as the attachment name.",
                                                        "properties": {
                                                            "Name": {
                                                                "description": "The name of the attachment.",
                                                                "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "CreatedDate": {
                                                    "description": "The date when the document was created.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "DefaultVersion": {
                                                    "description": "The default version.",
                                                    "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                                    "type": "string"
                                                },
                                                "Description": {
                                                    "description": "A description of the document. ",
                                                    "type": "string"
                                                },
                                                "DocumentFormat": {
                                                    "description": "The document format, either JSON or YAML.",
                                                    "enum": [
                                                        "YAML",
                                                        "JSON"
                                                    ],
                                                    "type": "string"
                                                },
                                                "DocumentType": {
                                                    "description": "The type of document.",
                                                    "enum": [
                                                        "Command",
                                                        "Policy",
                                                        "Automation",
                                                        "Session",
                                                        "Package"
                                                    ],
                                                    "type": "string"
                                                },
                                                "DocumentVersion": {
                                                    "description": "The document version.",
                                                    "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                                    "type": "string"
                                                },
                                                "Hash": {
                                                    "description": "<p>The Sha256 or Sha1 hash created by the system when the document was created. </p> <note> <p>Sha1 hashes have been deprecated.</p> </note>",
                                                    "maxLength": 256,
                                                    "type": "string"
                                                },
                                                "HashType": {
                                                    "description": "<p>The hash type of the document. Valid values include <code>Sha256</code> or <code>Sha1</code>.</p> <note> <p>Sha1 hashes have been deprecated.</p> </note>",
                                                    "enum": [
                                                        "Sha256",
                                                        "Sha1"
                                                    ],
                                                    "type": "string"
                                                },
                                                "LatestVersion": {
                                                    "description": "The latest version of the document.",
                                                    "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the Systems Manager document.",
                                                    "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                                                    "type": "string"
                                                },
                                                "Owner": {
                                                    "description": "The AWS user account that created the document.",
                                                    "type": "string"
                                                },
                                                "Parameters": {
                                                    "description": "A description of the parameters for a document.",
                                                    "items": {
                                                        "description": "Parameters specified in a System Manager document that execute on the server when the command is run. ",
                                                        "properties": {
                                                            "DefaultValue": {
                                                                "description": "If specified, the default values for the parameters. Parameters without a default value are required. Parameters with a default value are optional.",
                                                                "type": "string"
                                                            },
                                                            "Description": {
                                                                "description": "A description of what the parameter does, how to use it, the default value, and whether or not the parameter is optional.",
                                                                "type": "string"
                                                            },
                                                            "Name": {
                                                                "description": "The name of the parameter.",
                                                                "type": "string"
                                                            },
                                                            "Type": {
                                                                "description": "The type of parameter. The type can be either String or StringList.",
                                                                "enum": [
                                                                    "String",
                                                                    "StringList"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "PlatformTypes": {
                                                    "description": "The list of OS platforms compatible with this Systems Manager document. ",
                                                    "items": {
                                                        "enum": [
                                                            "Windows",
                                                            "Linux"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "SchemaVersion": {
                                                    "description": "The schema version.",
                                                    "pattern": "([0-9]+)\\.([0-9]+)",
                                                    "type": "string"
                                                },
                                                "Sha1": {
                                                    "description": "The SHA1 hash of the document, which you can use for verification.",
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "description": "The status of the Systems Manager document.",
                                                    "enum": [
                                                        "Creating",
                                                        "Active",
                                                        "Updating",
                                                        "Deleting",
                                                        "Failed"
                                                    ],
                                                    "type": "string"
                                                },
                                                "StatusInformation": {
                                                    "description": "A message returned by AWS Systems Manager that explains the <code>Status</code> value. For example, a <code>Failed</code> status might be explained by the <code>StatusInformation</code> message, \"The specified S3 bucket does not exist. Verify that the URL of the S3 bucket is correct.\"",
                                                    "type": "string"
                                                },
                                                "Tags": {
                                                    "description": "The tags, or metadata, that have been applied to the document.",
                                                    "items": {
                                                        "description": "Metadata that you assign to your AWS resources. Tags enable you to categorize your resources in different ways, for example, by purpose, owner, or environment. In Systems Manager, you can apply tags to documents, managed instances, Maintenance Windows, Parameter Store parameters, and patch baselines.",
                                                        "properties": {
                                                            "Key": {
                                                                "description": "The name of the tag.",
                                                                "maxLength": 128,
                                                                "minLength": 1,
                                                                "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                                "type": "string"
                                                            },
                                                            "Value": {
                                                                "description": "The value of the tag.",
                                                                "maxLength": 256,
                                                                "minLength": 1,
                                                                "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "Key",
                                                            "Value"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "maxItems": 1000,
                                                    "type": "array"
                                                },
                                                "TargetType": {
                                                    "description": "The target type which defines the kinds of resources the document can run on. For example, /AWS::EC2::Instance. For a list of valid resource types, see <a href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html\">AWS Resource Types Reference</a> in the <i>AWS CloudFormation User Guide</i>. ",
                                                    "maxLength": 200,
                                                    "pattern": "^\\/[\\w\\.\\-\\:\\/]*$",
                                                    "type": "string"
                                                },
                                                "VersionName": {
                                                    "description": "The version of the artifact associated with the document.",
                                                    "pattern": "^[a-zA-Z0-9_\\-.]{1,128}$",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidDocument",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidDocumentVersion",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "DocumentVersion": {
                                        "description": "The document version for which you want information. Can be a specific version or the default version.",
                                        "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "The name of the Systems Manager document.",
                                        "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                                        "type": "string"
                                    },
                                    "VersionName": {
                                        "description": "An optional field specifying the version of the artifact associated with the document. For example, \"Release 12, Update 6\". This value is unique across all versions of a document, and cannot be changed.",
                                        "pattern": "^[a-zA-Z0-9_\\-.]{1,128}$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Name"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeDocumentPermission": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Describes the permissions for a Systems Manager document. If you created the document, you are the owner. If a document is shared, it can either be shared privately (by specifying a user's AWS account ID) or publicly (<i>All</i>). ",
                "operationId": "DescribeDocumentPermission",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "AccountIds": {
                                            "description": "The account IDs that have permission to use this document. The ID can be either an AWS account or <i>All</i>.",
                                            "items": {
                                                "pattern": "\\(\\?i\\)all\\|[0-9]\\{12\\}",
                                                "type": "string"
                                            },
                                            "maxItems": 20,
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidDocument",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidPermissionType",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Name": {
                                        "description": "The name of the document for which you are the owner.",
                                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                        "type": "string"
                                    },
                                    "PermissionType": {
                                        "description": "The permission type for the document. The permission type can be <i>Share</i>.",
                                        "enum": [
                                            "Share"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Name",
                                    "PermissionType"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeEffectiveInstanceAssociations": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "All associations for the instance(s).",
                "operationId": "DescribeEffectiveInstanceAssociations",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Associations": {
                                            "description": "The associations for the requested instance.",
                                            "items": {
                                                "description": "One or more association documents on the instance. ",
                                                "properties": {
                                                    "AssociationId": {
                                                        "description": "The association ID.",
                                                        "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                                                        "type": "string"
                                                    },
                                                    "AssociationVersion": {
                                                        "description": "Version information for the association on the instance.",
                                                        "pattern": "([$]LATEST)|([1-9][0-9]*)",
                                                        "type": "string"
                                                    },
                                                    "Content": {
                                                        "description": "The content of the association document for the instance(s).",
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "InstanceId": {
                                                        "description": "The instance ID.",
                                                        "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "NextToken": {
                                            "description": "The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidInstanceId",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidNextToken",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "InstanceId": {
                                        "description": "The instance ID for which you want to view all associations.",
                                        "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                                        "type": "string"
                                    },
                                    "MaxResults": {
                                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                                        "maximum": 5,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "The token for the next set of items to return. (You received this token from a previous call.)",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "InstanceId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeEffectivePatchesForPatchBaseline": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Retrieves the current effective patches (the patch and the approval state) for the specified patch baseline. Note that this API applies only to Windows patch baselines.",
                "operationId": "DescribeEffectivePatchesForPatchBaseline",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "EffectivePatches": {
                                            "description": "An array of patches and patch status.",
                                            "items": {
                                                "description": "The EffectivePatch structure defines metadata about a patch along with the approval state of the patch in a particular patch baseline. The approval state includes information about whether the patch is currently approved, due to be approved by a rule, explicitly approved, or explicitly rejected and the date the patch was or will be approved.",
                                                "properties": {
                                                    "Patch": {
                                                        "description": "Provides metadata for a patch, including information such as the KB ID, severity, classification and a URL for where more information can be obtained about the patch.",
                                                        "properties": {
                                                            "Classification": {
                                                                "description": "The classification of the patch (for example, SecurityUpdates, Updates, CriticalUpdates).",
                                                                "type": "string"
                                                            },
                                                            "ContentUrl": {
                                                                "description": "The URL where more information can be obtained about the patch.",
                                                                "type": "string"
                                                            },
                                                            "Description": {
                                                                "description": "The description of the patch.",
                                                                "type": "string"
                                                            },
                                                            "Id": {
                                                                "description": "The ID of the patch (this is different than the Microsoft Knowledge Base ID).",
                                                                "maxLength": 100,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            },
                                                            "KbNumber": {
                                                                "description": "The Microsoft Knowledge Base ID of the patch.",
                                                                "type": "string"
                                                            },
                                                            "Language": {
                                                                "description": "The language of the patch if it's language-specific.",
                                                                "type": "string"
                                                            },
                                                            "MsrcNumber": {
                                                                "description": "The ID of the MSRC bulletin the patch is related to.",
                                                                "type": "string"
                                                            },
                                                            "MsrcSeverity": {
                                                                "description": "The severity of the patch (for example Critical, Important, Moderate).",
                                                                "type": "string"
                                                            },
                                                            "Product": {
                                                                "description": "The specific product the patch is applicable for (for example, WindowsServer2016).",
                                                                "type": "string"
                                                            },
                                                            "ProductFamily": {
                                                                "description": "The product family the patch is applicable for (for example, Windows).",
                                                                "type": "string"
                                                            },
                                                            "ReleaseDate": {
                                                                "description": "The date the patch was released.",
                                                                "format": "date-time",
                                                                "type": "string"
                                                            },
                                                            "Title": {
                                                                "description": "The title of the patch.",
                                                                "type": "string"
                                                            },
                                                            "Vendor": {
                                                                "description": "The name of the vendor providing the patch.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "PatchStatus": {
                                                        "description": "The status of the patch in a patch baseline. This includes information about whether the patch is currently approved, due to be approved by a rule, explicitly approved, or explicitly rejected and the date the patch was or will be approved.",
                                                        "properties": {
                                                            "ApprovalDate": {
                                                                "description": "The date the patch was approved (or will be approved if the status is PENDING_APPROVAL).",
                                                                "format": "date-time",
                                                                "type": "string"
                                                            },
                                                            "ComplianceLevel": {
                                                                "description": "The compliance severity level for a patch.",
                                                                "enum": [
                                                                    "CRITICAL",
                                                                    "HIGH",
                                                                    "MEDIUM",
                                                                    "LOW",
                                                                    "INFORMATIONAL",
                                                                    "UNSPECIFIED"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "DeploymentStatus": {
                                                                "description": "The approval status of a patch (APPROVED, PENDING_APPROVAL, EXPLICIT_APPROVED, EXPLICIT_REJECTED).",
                                                                "enum": [
                                                                    "APPROVED",
                                                                    "PENDING_APPROVAL",
                                                                    "EXPLICIT_APPROVED",
                                                                    "EXPLICIT_REJECTED"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "NextToken": {
                                            "description": "The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidResourceId",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "DoesNotExistException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "UnsupportedOperatingSystem",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "BaselineId": {
                                        "description": "The ID of the patch baseline to retrieve the effective patches for.",
                                        "maxLength": 128,
                                        "minLength": 20,
                                        "pattern": "^[a-zA-Z0-9_\\-:/]{20,128}$",
                                        "type": "string"
                                    },
                                    "MaxResults": {
                                        "description": "The maximum number of patches to return (per page).",
                                        "maximum": 100,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "The token for the next set of items to return. (You received this token from a previous call.)",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "BaselineId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeInstanceAssociationsStatus": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "The status of the associations for the instance(s).",
                "operationId": "DescribeInstanceAssociationsStatus",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "InstanceAssociationStatusInfos": {
                                            "description": "Status information about the association.",
                                            "items": {
                                                "description": "Status information about the instance association.",
                                                "properties": {
                                                    "AssociationId": {
                                                        "description": "The association ID.",
                                                        "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                                                        "type": "string"
                                                    },
                                                    "AssociationName": {
                                                        "description": "The name of the association applied to the instance.",
                                                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                                        "type": "string"
                                                    },
                                                    "AssociationVersion": {
                                                        "description": "The version of the association applied to the instance.",
                                                        "pattern": "([$]LATEST)|([1-9][0-9]*)",
                                                        "type": "string"
                                                    },
                                                    "DetailedStatus": {
                                                        "description": "Detailed status information about the instance association.",
                                                        "type": "string"
                                                    },
                                                    "DocumentVersion": {
                                                        "description": "The association document verions.",
                                                        "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                                        "type": "string"
                                                    },
                                                    "ErrorCode": {
                                                        "description": "An error code returned by the request to create the association.",
                                                        "maxLength": 10,
                                                        "type": "string"
                                                    },
                                                    "ExecutionDate": {
                                                        "description": "The date the instance association executed. ",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "ExecutionSummary": {
                                                        "description": "Summary information about association execution.",
                                                        "maxLength": 512,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "InstanceId": {
                                                        "description": "The instance ID where the association was created.",
                                                        "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the association.",
                                                        "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                                                        "type": "string"
                                                    },
                                                    "OutputUrl": {
                                                        "description": "A URL for an Amazon S3 bucket where you want to store the results of this request.",
                                                        "properties": {
                                                            "S3OutputUrl": {
                                                                "description": "The URL of Amazon S3 bucket where you want to store the results of this request.",
                                                                "properties": {
                                                                    "OutputUrl": {
                                                                        "description": "A URL for an Amazon S3 bucket where you want to store the results of this request.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "Status": {
                                                        "description": "Status information about the instance association.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "NextToken": {
                                            "description": "The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidInstanceId",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidNextToken",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "InstanceId": {
                                        "description": "The instance IDs for which you want association status information.",
                                        "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                                        "type": "string"
                                    },
                                    "MaxResults": {
                                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                                        "maximum": 50,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "The token for the next set of items to return. (You received this token from a previous call.)",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "InstanceId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeInstanceInformation": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Describes one or more of your instances. You can use this to get information about instances like the operating system platform, the SSM Agent version (Linux), status etc. If you specify one or more instance IDs, it returns information for those instances. If you do not specify instance IDs, it returns information for all your instances. If you specify an instance ID that is not valid or an instance that you do not own, you receive an error. </p> <note> <p>The IamRole field for this API action is the Amazon Identity and Access Management (IAM) role assigned to on-premises instances. This call does not return the IAM role for Amazon EC2 instances.</p> </note>",
                "operationId": "DescribeInstanceInformation",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxResults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "NextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "InstanceInformationList": {
                                            "description": "The instance information list.",
                                            "items": {
                                                "description": "Describes a filter for a specific list of instances. ",
                                                "properties": {
                                                    "ActivationId": {
                                                        "description": "The activation ID created by Systems Manager when the server or VM was registered.",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                                                        "type": "string"
                                                    },
                                                    "AgentVersion": {
                                                        "description": "The version of SSM Agent running on your Linux instance. ",
                                                        "pattern": "^[0-9]{1,6}(\\.[0-9]{1,6}){2,3}$",
                                                        "type": "string"
                                                    },
                                                    "AssociationOverview": {
                                                        "description": "Information about the association.",
                                                        "properties": {
                                                            "DetailedStatus": {
                                                                "description": "Detailed status information about the aggregated associations.",
                                                                "type": "string"
                                                            },
                                                            "InstanceAssociationStatusAggregatedCount": {
                                                                "description": "The number of associations for the instance(s).",
                                                                "items": {
                                                                    "properties": {
                                                                        "key": {
                                                                            "type": "string"
                                                                        },
                                                                        "value": {
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "AssociationStatus": {
                                                        "description": "The status of the association.",
                                                        "type": "string"
                                                    },
                                                    "ComputerName": {
                                                        "description": "The fully qualified host name of the managed instance.",
                                                        "maxLength": 255,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "IPAddress": {
                                                        "description": "The IP address of the managed instance.",
                                                        "maxLength": 46,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "IamRole": {
                                                        "description": "The Amazon Identity and Access Management (IAM) role assigned to the on-premises Systems Manager managed instances. This call does not return the IAM role for Amazon EC2 instances. ",
                                                        "maxLength": 64,
                                                        "type": "string"
                                                    },
                                                    "InstanceId": {
                                                        "description": "The instance ID. ",
                                                        "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                                                        "type": "string"
                                                    },
                                                    "IsLatestVersion": {
                                                        "description": "Indicates whether latest version of SSM Agent is running on your instance. Some older versions of Windows Server use the EC2Config service to process SSM requests. For this reason, this field does not indicate whether or not the latest version is installed on Windows managed instances.",
                                                        "type": "boolean"
                                                    },
                                                    "LastAssociationExecutionDate": {
                                                        "description": "The date the association was last executed.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "LastPingDateTime": {
                                                        "description": "The date and time when agent last pinged Systems Manager service. ",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "LastSuccessfulAssociationExecutionDate": {
                                                        "description": "The last date the association was successfully run.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the managed instance.",
                                                        "type": "string"
                                                    },
                                                    "PingStatus": {
                                                        "description": "Connection status of SSM Agent. ",
                                                        "enum": [
                                                            "Online",
                                                            "ConnectionLost",
                                                            "Inactive"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "PlatformName": {
                                                        "description": "The name of the operating system platform running on your instance. ",
                                                        "type": "string"
                                                    },
                                                    "PlatformType": {
                                                        "description": "The operating system platform type. ",
                                                        "enum": [
                                                            "Windows",
                                                            "Linux"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "PlatformVersion": {
                                                        "description": "The version of the OS platform running on your instance. ",
                                                        "type": "string"
                                                    },
                                                    "RegistrationDate": {
                                                        "description": "The date the server or VM was registered with AWS as a managed instance.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "ResourceType": {
                                                        "description": "The type of instance. Instances are either EC2 instances or managed instances. ",
                                                        "enum": [
                                                            "ManagedInstance",
                                                            "Document",
                                                            "EC2Instance"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "NextToken": {
                                            "description": "The token to use when requesting the next set of items. If there are no additional items to return, the string is empty. ",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidInstanceId",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidNextToken",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "InvalidInstanceInformationFilterValue",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "InvalidFilterKey",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Filters": {
                                        "description": "One or more filters. Use a filter to return a more specific list of instances. You can filter on Amazon EC2 tag. Specify tags by using a key-value mapping.",
                                        "items": {
                                            "description": "The filters to describe or get information about your managed instances.",
                                            "properties": {
                                                "Key": {
                                                    "description": "<p>The filter key name to describe your instances. For example:</p> <p>\"InstanceIds\"|\"AgentVersion\"|\"PingStatus\"|\"PlatformTypes\"|\"ActivationIds\"|\"IamRole\"|\"ResourceType\"|\"AssociationStatus\"|\"Tag Key\"</p>",
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "The filter values.",
                                                    "items": {
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "maxItems": 100,
                                                    "minItems": 1,
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Key",
                                                "Values"
                                            ],
                                            "type": "object"
                                        },
                                        "minItems": 0,
                                        "type": "array"
                                    },
                                    "InstanceInformationFilterList": {
                                        "description": "<p>This is a legacy method. We recommend that you don't use this method. Instead, use the <a>InstanceInformationFilter</a> action. The <code>InstanceInformationFilter</code> action enables you to return instance information by using tags that are specified as a key-value mapping. </p> <p>If you do use this method, then you can't use the <code>InstanceInformationFilter</code> action. Using this method and the <code>InstanceInformationFilter</code> action causes an exception error. </p>",
                                        "items": {
                                            "description": "<p>Describes a filter for a specific list of instances. You can filter instances information by using tags. You specify tags by using a key-value mapping.</p> <p>Use this action instead of the <a>DescribeInstanceInformationRequest$InstanceInformationFilterList</a> method. The <code>InstanceInformationFilterList</code> method is a legacy method and does not support tags. </p>",
                                            "properties": {
                                                "key": {
                                                    "description": "The name of the filter. ",
                                                    "enum": [
                                                        "InstanceIds",
                                                        "AgentVersion",
                                                        "PingStatus",
                                                        "PlatformTypes",
                                                        "ActivationIds",
                                                        "IamRole",
                                                        "ResourceType",
                                                        "AssociationStatus"
                                                    ],
                                                    "type": "string"
                                                },
                                                "valueSet": {
                                                    "description": "The filter values.",
                                                    "items": {
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "maxItems": 100,
                                                    "minItems": 1,
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "key",
                                                "valueSet"
                                            ],
                                            "type": "object"
                                        },
                                        "minItems": 0,
                                        "type": "array"
                                    },
                                    "MaxResults": {
                                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results. ",
                                        "maximum": 50,
                                        "minimum": 5,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "The token for the next set of items to return. (You received this token from a previous call.)",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeInstancePatchStates": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Retrieves the high-level patch state of one or more instances.",
                "operationId": "DescribeInstancePatchStates",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "InstancePatchStates": {
                                            "description": "The high-level patch state for the requested instances.",
                                            "items": {
                                                "description": "Defines the high-level patch compliance state for a managed instance, providing information about the number of installed, missing, not applicable, and failed patches along with metadata about the operation when this information was gathered for the instance.",
                                                "properties": {
                                                    "BaselineId": {
                                                        "description": "The ID of the patch baseline used to patch the instance.",
                                                        "maxLength": 128,
                                                        "minLength": 20,
                                                        "pattern": "^[a-zA-Z0-9_\\-:/]{20,128}$",
                                                        "type": "string"
                                                    },
                                                    "FailedCount": {
                                                        "description": "The number of patches from the patch baseline that were attempted to be installed during the last patching operation, but failed to install.",
                                                        "type": "integer"
                                                    },
                                                    "InstallOverrideList": {
                                                        "description": "<p>An https URL or an Amazon S3 path-style URL to a list of patches to be installed. This patch installation list, which you maintain in an Amazon S3 bucket in YAML format and specify in the SSM document <code>AWS-RunPatchBaseline</code>, overrides the patches specified by the default patch baseline.</p> <p>For more information about the <code>InstallOverrideList</code> parameter, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/patch-manager-about-aws-runpatchbaseline.html\">About the SSM Document AWS-RunPatchBaseline</a> in the <i>AWS Systems Manager User Guide</i>.</p>",
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "pattern": "^https://.+$|^s3://([^/]+)/(.*?([^/]+))$",
                                                        "type": "string"
                                                    },
                                                    "InstalledCount": {
                                                        "description": "The number of patches from the patch baseline that are installed on the instance.",
                                                        "type": "integer"
                                                    },
                                                    "InstalledOtherCount": {
                                                        "description": "The number of patches not specified in the patch baseline that are installed on the instance.",
                                                        "type": "integer"
                                                    },
                                                    "InstalledRejectedCount": {
                                                        "description": "<p>The number of instances with patches installed that are specified in a RejectedPatches list. Patches with a status of <i>InstalledRejected</i> were typically installed before they were added to a RejectedPatches list.</p> <note> <p>If ALLOW_AS_DEPENDENCY is the specified option for RejectedPatchesAction, the value of InstalledRejectedCount will always be 0 (zero).</p> </note>",
                                                        "type": "integer"
                                                    },
                                                    "InstanceId": {
                                                        "description": "The ID of the managed instance the high-level patch compliance information was collected for.",
                                                        "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                                                        "type": "string"
                                                    },
                                                    "MissingCount": {
                                                        "description": "The number of patches from the patch baseline that are applicable for the instance but aren't currently installed.",
                                                        "type": "integer"
                                                    },
                                                    "NotApplicableCount": {
                                                        "description": "The number of patches from the patch baseline that aren't applicable for the instance and hence aren't installed on the instance.",
                                                        "type": "integer"
                                                    },
                                                    "Operation": {
                                                        "description": "The type of patching operation that was performed: SCAN (assess patch compliance state) or INSTALL (install missing patches).",
                                                        "enum": [
                                                            "Scan",
                                                            "Install"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "OperationEndTime": {
                                                        "description": "The time the most recent patching operation completed on the instance.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "OperationStartTime": {
                                                        "description": "The time the most recent patching operation was started on the instance.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "OwnerInformation": {
                                                        "description": "Placeholder information. This field will always be empty in the current release of the service.",
                                                        "format": "password",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "PatchGroup": {
                                                        "description": "The name of the patch group the managed instance belongs to.",
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                        "type": "string"
                                                    },
                                                    "SnapshotId": {
                                                        "description": "The ID of the patch baseline snapshot used during the patching operation when this compliance data was collected.",
                                                        "maxLength": 36,
                                                        "minLength": 36,
                                                        "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "InstanceId",
                                                    "PatchGroup",
                                                    "BaselineId",
                                                    "OperationStartTime",
                                                    "OperationEndTime",
                                                    "Operation"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "NextToken": {
                                            "description": "The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidNextToken",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "InstanceIds": {
                                        "description": "The ID of the instance whose patch state information should be retrieved.",
                                        "items": {
                                            "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                                            "type": "string"
                                        },
                                        "maxItems": 50,
                                        "minItems": 0,
                                        "type": "array"
                                    },
                                    "MaxResults": {
                                        "description": "The maximum number of instances to return (per page).",
                                        "maximum": 100,
                                        "minimum": 10,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "The token for the next set of items to return. (You received this token from a previous call.)",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "InstanceIds"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeInstancePatchStatesForPatchGroup": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Retrieves the high-level patch state for the instances in the specified patch group.",
                "operationId": "DescribeInstancePatchStatesForPatchGroup",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "InstancePatchStates": {
                                            "description": "The high-level patch state for the requested instances. ",
                                            "items": {
                                                "description": "Defines the high-level patch compliance state for a managed instance, providing information about the number of installed, missing, not applicable, and failed patches along with metadata about the operation when this information was gathered for the instance.",
                                                "properties": {
                                                    "BaselineId": {
                                                        "description": "The ID of the patch baseline used to patch the instance.",
                                                        "maxLength": 128,
                                                        "minLength": 20,
                                                        "pattern": "^[a-zA-Z0-9_\\-:/]{20,128}$",
                                                        "type": "string"
                                                    },
                                                    "FailedCount": {
                                                        "description": "The number of patches from the patch baseline that were attempted to be installed during the last patching operation, but failed to install.",
                                                        "type": "integer"
                                                    },
                                                    "InstallOverrideList": {
                                                        "description": "<p>An https URL or an Amazon S3 path-style URL to a list of patches to be installed. This patch installation list, which you maintain in an Amazon S3 bucket in YAML format and specify in the SSM document <code>AWS-RunPatchBaseline</code>, overrides the patches specified by the default patch baseline.</p> <p>For more information about the <code>InstallOverrideList</code> parameter, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/patch-manager-about-aws-runpatchbaseline.html\">About the SSM Document AWS-RunPatchBaseline</a> in the <i>AWS Systems Manager User Guide</i>.</p>",
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "pattern": "^https://.+$|^s3://([^/]+)/(.*?([^/]+))$",
                                                        "type": "string"
                                                    },
                                                    "InstalledCount": {
                                                        "description": "The number of patches from the patch baseline that are installed on the instance.",
                                                        "type": "integer"
                                                    },
                                                    "InstalledOtherCount": {
                                                        "description": "The number of patches not specified in the patch baseline that are installed on the instance.",
                                                        "type": "integer"
                                                    },
                                                    "InstalledRejectedCount": {
                                                        "description": "<p>The number of instances with patches installed that are specified in a RejectedPatches list. Patches with a status of <i>InstalledRejected</i> were typically installed before they were added to a RejectedPatches list.</p> <note> <p>If ALLOW_AS_DEPENDENCY is the specified option for RejectedPatchesAction, the value of InstalledRejectedCount will always be 0 (zero).</p> </note>",
                                                        "type": "integer"
                                                    },
                                                    "InstanceId": {
                                                        "description": "The ID of the managed instance the high-level patch compliance information was collected for.",
                                                        "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                                                        "type": "string"
                                                    },
                                                    "MissingCount": {
                                                        "description": "The number of patches from the patch baseline that are applicable for the instance but aren't currently installed.",
                                                        "type": "integer"
                                                    },
                                                    "NotApplicableCount": {
                                                        "description": "The number of patches from the patch baseline that aren't applicable for the instance and hence aren't installed on the instance.",
                                                        "type": "integer"
                                                    },
                                                    "Operation": {
                                                        "description": "The type of patching operation that was performed: SCAN (assess patch compliance state) or INSTALL (install missing patches).",
                                                        "enum": [
                                                            "Scan",
                                                            "Install"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "OperationEndTime": {
                                                        "description": "The time the most recent patching operation completed on the instance.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "OperationStartTime": {
                                                        "description": "The time the most recent patching operation was started on the instance.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "OwnerInformation": {
                                                        "description": "Placeholder information. This field will always be empty in the current release of the service.",
                                                        "format": "password",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "PatchGroup": {
                                                        "description": "The name of the patch group the managed instance belongs to.",
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                        "type": "string"
                                                    },
                                                    "SnapshotId": {
                                                        "description": "The ID of the patch baseline snapshot used during the patching operation when this compliance data was collected.",
                                                        "maxLength": 36,
                                                        "minLength": 36,
                                                        "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "InstanceId",
                                                    "PatchGroup",
                                                    "BaselineId",
                                                    "OperationStartTime",
                                                    "OperationEndTime",
                                                    "Operation"
                                                ],
                                                "type": "object"
                                            },
                                            "maxItems": 5,
                                            "minItems": 1,
                                            "type": "array"
                                        },
                                        "NextToken": {
                                            "description": "The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidFilter",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidNextToken",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Filters": {
                                        "description": "<p>Each entry in the array is a structure containing:</p> <p>Key (string between 1 and 200 characters)</p> <p> Values (array containing a single string)</p> <p> Type (string \"Equal\", \"NotEqual\", \"LessThan\", \"GreaterThan\")</p>",
                                        "items": {
                                            "description": "Defines a filter used in DescribeInstancePatchStatesForPatchGroup used to scope down the information returned by the API.",
                                            "properties": {
                                                "Key": {
                                                    "description": "The key for the filter. Supported values are FailedCount, InstalledCount, InstalledOtherCount, MissingCount and NotApplicableCount.",
                                                    "maxLength": 200,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "description": "The type of comparison that should be performed for the value: Equal, NotEqual, LessThan or GreaterThan.",
                                                    "enum": [
                                                        "Equal",
                                                        "NotEqual",
                                                        "LessThan",
                                                        "GreaterThan"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "The value for the filter, must be an integer greater than or equal to 0.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "maxItems": 1,
                                                    "minItems": 1,
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Key",
                                                "Values",
                                                "Type"
                                            ],
                                            "type": "object"
                                        },
                                        "maxItems": 4,
                                        "minItems": 0,
                                        "type": "array"
                                    },
                                    "MaxResults": {
                                        "description": "The maximum number of patches to return (per page).",
                                        "maximum": 100,
                                        "minimum": 10,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "The token for the next set of items to return. (You received this token from a previous call.)",
                                        "type": "string"
                                    },
                                    "PatchGroup": {
                                        "description": "The name of the patch group for which the patch state information should be retrieved.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "PatchGroup"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeInstancePatches": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Retrieves information about the patches on the specified instance and their state relative to the patch baseline being used for the instance.",
                "operationId": "DescribeInstancePatches",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "NextToken": {
                                            "description": "The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.",
                                            "type": "string"
                                        },
                                        "Patches": {
                                            "description": "<p>Each entry in the array is a structure containing:</p> <p>Title (string)</p> <p>KBId (string)</p> <p>Classification (string)</p> <p>Severity (string)</p> <p>State (string, such as \"INSTALLED\" or \"FAILED\")</p> <p>InstalledTime (DateTime)</p> <p>InstalledBy (string)</p>",
                                            "items": {
                                                "description": "Information about the state of a patch on a particular instance as it relates to the patch baseline used to patch the instance.",
                                                "properties": {
                                                    "Classification": {
                                                        "description": "The classification of the patch (for example, SecurityUpdates, Updates, CriticalUpdates).",
                                                        "type": "string"
                                                    },
                                                    "InstalledTime": {
                                                        "description": "The date/time the patch was installed on the instance. Note that not all operating systems provide this level of information.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "KBId": {
                                                        "description": "The operating system-specific ID of the patch.",
                                                        "type": "string"
                                                    },
                                                    "Severity": {
                                                        "description": "The severity of the patch (for example, Critical, Important, Moderate).",
                                                        "type": "string"
                                                    },
                                                    "State": {
                                                        "description": "<p>The state of the patch on the instance, such as INSTALLED or FAILED.</p> <p>For descriptions of each patch state, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-compliance-about.html#sysman-compliance-monitor-patch\">About Patch Compliance</a> in the <i>AWS Systems Manager User Guide</i>.</p>",
                                                        "enum": [
                                                            "INSTALLED",
                                                            "INSTALLED_OTHER",
                                                            "INSTALLED_REJECTED",
                                                            "MISSING",
                                                            "NOT_APPLICABLE",
                                                            "FAILED"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Title": {
                                                        "description": "The title of the patch.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "Title",
                                                    "KBId",
                                                    "Classification",
                                                    "Severity",
                                                    "State",
                                                    "InstalledTime"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidInstanceId",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidFilter",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "InvalidNextToken",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Filters": {
                                        "description": "<p>Each entry in the array is a structure containing:</p> <p>Key (string, between 1 and 128 characters)</p> <p>Values (array of strings, each string between 1 and 256 characters)</p>",
                                        "items": {
                                            "description": "Defines a filter used in Patch Manager APIs.",
                                            "properties": {
                                                "Key": {
                                                    "description": "The key for the filter.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "The value for the filter.",
                                                    "items": {
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "maxItems": 5,
                                        "minItems": 0,
                                        "type": "array"
                                    },
                                    "InstanceId": {
                                        "description": "The ID of the instance whose patch state information should be retrieved.",
                                        "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                                        "type": "string"
                                    },
                                    "MaxResults": {
                                        "description": "The maximum number of patches to return (per page).",
                                        "maximum": 100,
                                        "minimum": 10,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "The token for the next set of items to return. (You received this token from a previous call.)",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "InstanceId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeInventoryDeletions": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Describes a specific delete inventory operation.",
                "operationId": "DescribeInventoryDeletions",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "InventoryDeletions": {
                                            "description": "A list of status items for deleted inventory.",
                                            "items": {
                                                "description": "Status information returned by the <code>DeleteInventory</code> action.",
                                                "properties": {
                                                    "DeletionId": {
                                                        "description": "The deletion ID returned by the <code>DeleteInventory</code> action.",
                                                        "type": "string"
                                                    },
                                                    "DeletionStartTime": {
                                                        "description": "The UTC timestamp when the delete operation started.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "DeletionSummary": {
                                                        "description": "Information about the delete operation. For more information about this summary, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-inventory-delete.html#sysman-inventory-delete-summary\">Understanding the Delete Inventory Summary</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                        "properties": {
                                                            "RemainingCount": {
                                                                "description": "Remaining number of items to delete.",
                                                                "type": "integer"
                                                            },
                                                            "SummaryItems": {
                                                                "description": "A list of counts and versions for deleted items.",
                                                                "items": {
                                                                    "description": "Either a count, remaining count, or a version number in a delete inventory summary.",
                                                                    "properties": {
                                                                        "Count": {
                                                                            "description": "A count of the number of deleted items.",
                                                                            "type": "integer"
                                                                        },
                                                                        "RemainingCount": {
                                                                            "description": "The remaining number of items to delete.",
                                                                            "type": "integer"
                                                                        },
                                                                        "Version": {
                                                                            "description": "The inventory type version.",
                                                                            "pattern": "^([0-9]{1,6})(\\.[0-9]{1,6})$",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "TotalCount": {
                                                                "description": "The total number of items to delete. This count does not change during the delete operation.",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "LastStatus": {
                                                        "description": "The status of the operation. Possible values are InProgress and Complete.",
                                                        "enum": [
                                                            "InProgress",
                                                            "Complete"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "LastStatusMessage": {
                                                        "description": "Information about the status.",
                                                        "type": "string"
                                                    },
                                                    "LastStatusUpdateTime": {
                                                        "description": "The UTC timestamp of when the last status report.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "TypeName": {
                                                        "description": "The name of the inventory data type.",
                                                        "maxLength": 100,
                                                        "minLength": 1,
                                                        "pattern": "^(AWS|Custom):.*$",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "NextToken": {
                                            "description": "The token for the next set of items to return. Use this token to get the next set of results.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidDeletionIdException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidNextToken",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "DeletionId": {
                                        "description": "Specify the delete inventory ID for which you want information. This ID was returned by the <code>DeleteInventory</code> action.",
                                        "type": "string"
                                    },
                                    "MaxResults": {
                                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                                        "maximum": 50,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "A token to start the list. Use this token to get the next set of results. ",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeMaintenanceWindowExecutionTaskInvocations": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Retrieves the individual task executions (one per target) for a particular task executed as part of a Maintenance Window execution.",
                "operationId": "DescribeMaintenanceWindowExecutionTaskInvocations",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "NextToken": {
                                            "description": "The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.",
                                            "type": "string"
                                        },
                                        "WindowExecutionTaskInvocationIdentities": {
                                            "description": "Information about the task invocation results per invocation.",
                                            "items": {
                                                "description": "Describes the information about a task invocation for a particular target as part of a task execution performed as part of a Maintenance Window execution.",
                                                "properties": {
                                                    "EndTime": {
                                                        "description": "The time the invocation finished.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "ExecutionId": {
                                                        "description": "The ID of the action performed in the service that actually handled the task invocation. If the task type is RUN_COMMAND, this value is the command ID.",
                                                        "type": "string"
                                                    },
                                                    "InvocationId": {
                                                        "description": "The ID of the task invocation.",
                                                        "maxLength": 36,
                                                        "minLength": 36,
                                                        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                                                        "type": "string"
                                                    },
                                                    "OwnerInformation": {
                                                        "description": "User-provided value that was specified when the target was registered with the Maintenance Window. This was also included in any CloudWatch events raised during the task invocation.",
                                                        "format": "password",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "Parameters": {
                                                        "description": "The parameters that were provided for the invocation when it was executed.",
                                                        "format": "password",
                                                        "type": "string"
                                                    },
                                                    "StartTime": {
                                                        "description": "The time the invocation started.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "Status": {
                                                        "description": "The status of the task invocation.",
                                                        "enum": [
                                                            "PENDING",
                                                            "IN_PROGRESS",
                                                            "SUCCESS",
                                                            "FAILED",
                                                            "TIMED_OUT",
                                                            "CANCELLING",
                                                            "CANCELLED",
                                                            "SKIPPED_OVERLAPPING"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "StatusDetails": {
                                                        "description": "The details explaining the status of the task invocation. Only available for certain Status values. ",
                                                        "maxLength": 250,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "TaskExecutionId": {
                                                        "description": "The ID of the specific task execution in the Maintenance Window execution.",
                                                        "maxLength": 36,
                                                        "minLength": 36,
                                                        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                                                        "type": "string"
                                                    },
                                                    "TaskType": {
                                                        "description": "The task type.",
                                                        "enum": [
                                                            "RUN_COMMAND",
                                                            "AUTOMATION",
                                                            "STEP_FUNCTIONS",
                                                            "LAMBDA"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "WindowExecutionId": {
                                                        "description": "The ID of the Maintenance Window execution that ran the task.",
                                                        "maxLength": 36,
                                                        "minLength": 36,
                                                        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                                                        "type": "string"
                                                    },
                                                    "WindowTargetId": {
                                                        "description": "The ID of the target definition in this Maintenance Window the invocation was performed for.",
                                                        "maxLength": 36,
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "DoesNotExistException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Filters": {
                                        "description": "Optional filters used to scope down the returned task invocations. The supported filter key is STATUS with the corresponding values PENDING, IN_PROGRESS, SUCCESS, FAILED, TIMED_OUT, CANCELLING, and CANCELLED.",
                                        "items": {
                                            "description": "Filter used in the request. Supported filter keys are Name and Enabled.",
                                            "properties": {
                                                "Key": {
                                                    "description": "The name of the filter.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "The filter values.",
                                                    "items": {
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "maxItems": 5,
                                        "minItems": 0,
                                        "type": "array"
                                    },
                                    "MaxResults": {
                                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                                        "maximum": 100,
                                        "minimum": 10,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "The token for the next set of items to return. (You received this token from a previous call.)",
                                        "type": "string"
                                    },
                                    "TaskId": {
                                        "description": "The ID of the specific task in the Maintenance Window task that should be retrieved.",
                                        "maxLength": 36,
                                        "minLength": 36,
                                        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                                        "type": "string"
                                    },
                                    "WindowExecutionId": {
                                        "description": "The ID of the Maintenance Window execution the task is part of.",
                                        "maxLength": 36,
                                        "minLength": 36,
                                        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "WindowExecutionId",
                                    "TaskId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeMaintenanceWindowExecutionTasks": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "For a given Maintenance Window execution, lists the tasks that were executed.",
                "operationId": "DescribeMaintenanceWindowExecutionTasks",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "NextToken": {
                                            "description": "The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.",
                                            "type": "string"
                                        },
                                        "WindowExecutionTaskIdentities": {
                                            "description": "Information about the task executions.",
                                            "items": {
                                                "description": "Information about a task execution performed as part of a Maintenance Window execution.",
                                                "properties": {
                                                    "EndTime": {
                                                        "description": "The time the task execution finished.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "StartTime": {
                                                        "description": "The time the task execution started.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "Status": {
                                                        "description": "The status of the task execution.",
                                                        "enum": [
                                                            "PENDING",
                                                            "IN_PROGRESS",
                                                            "SUCCESS",
                                                            "FAILED",
                                                            "TIMED_OUT",
                                                            "CANCELLING",
                                                            "CANCELLED",
                                                            "SKIPPED_OVERLAPPING"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "StatusDetails": {
                                                        "description": "The details explaining the status of the task execution. Only available for certain status values.",
                                                        "maxLength": 250,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "TaskArn": {
                                                        "description": "The ARN of the executed task.",
                                                        "maxLength": 1600,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "TaskExecutionId": {
                                                        "description": "The ID of the specific task execution in the Maintenance Window execution.",
                                                        "maxLength": 36,
                                                        "minLength": 36,
                                                        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                                                        "type": "string"
                                                    },
                                                    "TaskType": {
                                                        "description": "The type of executed task.",
                                                        "enum": [
                                                            "RUN_COMMAND",
                                                            "AUTOMATION",
                                                            "STEP_FUNCTIONS",
                                                            "LAMBDA"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "WindowExecutionId": {
                                                        "description": "The ID of the Maintenance Window execution that ran the task.",
                                                        "maxLength": 36,
                                                        "minLength": 36,
                                                        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "DoesNotExistException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Filters": {
                                        "description": "Optional filters used to scope down the returned tasks. The supported filter key is STATUS with the corresponding values PENDING, IN_PROGRESS, SUCCESS, FAILED, TIMED_OUT, CANCELLING, and CANCELLED. ",
                                        "items": {
                                            "description": "Filter used in the request. Supported filter keys are Name and Enabled.",
                                            "properties": {
                                                "Key": {
                                                    "description": "The name of the filter.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "The filter values.",
                                                    "items": {
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "maxItems": 5,
                                        "minItems": 0,
                                        "type": "array"
                                    },
                                    "MaxResults": {
                                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                                        "maximum": 100,
                                        "minimum": 10,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "The token for the next set of items to return. (You received this token from a previous call.)",
                                        "type": "string"
                                    },
                                    "WindowExecutionId": {
                                        "description": "The ID of the Maintenance Window execution whose task executions should be retrieved.",
                                        "maxLength": 36,
                                        "minLength": 36,
                                        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "WindowExecutionId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeMaintenanceWindowExecutions": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Lists the executions of a Maintenance Window. This includes information about when the Maintenance Window was scheduled to be active, and information about tasks registered and run with the Maintenance Window.",
                "operationId": "DescribeMaintenanceWindowExecutions",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "NextToken": {
                                            "description": "The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.",
                                            "type": "string"
                                        },
                                        "WindowExecutions": {
                                            "description": "Information about the Maintenance Windows execution.",
                                            "items": {
                                                "description": "Describes the information about an execution of a Maintenance Window. ",
                                                "properties": {
                                                    "EndTime": {
                                                        "description": "The time the execution finished.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "StartTime": {
                                                        "description": "The time the execution started.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "Status": {
                                                        "description": "The status of the execution.",
                                                        "enum": [
                                                            "PENDING",
                                                            "IN_PROGRESS",
                                                            "SUCCESS",
                                                            "FAILED",
                                                            "TIMED_OUT",
                                                            "CANCELLING",
                                                            "CANCELLED",
                                                            "SKIPPED_OVERLAPPING"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "StatusDetails": {
                                                        "description": "The details explaining the Status. Only available for certain status values.",
                                                        "maxLength": 250,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "WindowExecutionId": {
                                                        "description": "The ID of the Maintenance Window execution.",
                                                        "maxLength": 36,
                                                        "minLength": 36,
                                                        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                                                        "type": "string"
                                                    },
                                                    "WindowId": {
                                                        "description": "The ID of the Maintenance Window.",
                                                        "maxLength": 20,
                                                        "minLength": 20,
                                                        "pattern": "^mw-[0-9a-f]{17}$",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Filters": {
                                        "description": "<p>Each entry in the array is a structure containing:</p> <p>Key (string, between 1 and 128 characters)</p> <p>Values (array of strings, each string is between 1 and 256 characters)</p> <p>The supported Keys are ExecutedBefore and ExecutedAfter with the value being a date/time string such as 2016-11-04T05:00:00Z.</p>",
                                        "items": {
                                            "description": "Filter used in the request. Supported filter keys are Name and Enabled.",
                                            "properties": {
                                                "Key": {
                                                    "description": "The name of the filter.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "The filter values.",
                                                    "items": {
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "maxItems": 5,
                                        "minItems": 0,
                                        "type": "array"
                                    },
                                    "MaxResults": {
                                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                                        "maximum": 100,
                                        "minimum": 10,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "The token for the next set of items to return. (You received this token from a previous call.)",
                                        "type": "string"
                                    },
                                    "WindowId": {
                                        "description": "The ID of the Maintenance Window whose executions should be retrieved.",
                                        "maxLength": 20,
                                        "minLength": 20,
                                        "pattern": "^mw-[0-9a-f]{17}$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "WindowId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeMaintenanceWindowSchedule": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Retrieves information about upcoming executions of a Maintenance Window.",
                "operationId": "DescribeMaintenanceWindowSchedule",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "NextToken": {
                                            "description": "The token for the next set of items to return. (You use this token in the next call.)",
                                            "type": "string"
                                        },
                                        "ScheduledWindowExecutions": {
                                            "description": "Information about Maintenance Window executions scheduled for the specified time range.",
                                            "items": {
                                                "description": "Information about a scheduled execution for a Maintenance Window.",
                                                "properties": {
                                                    "ExecutionTime": {
                                                        "description": "The time, in ISO-8601 Extended format, that the Maintenance Window is scheduled to be run.",
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the Maintenance Window to be run.",
                                                        "maxLength": 128,
                                                        "minLength": 3,
                                                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                                        "type": "string"
                                                    },
                                                    "WindowId": {
                                                        "description": "The ID of the Maintenance Window to be run.",
                                                        "maxLength": 20,
                                                        "minLength": 20,
                                                        "pattern": "^mw-[0-9a-f]{17}$",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "DoesNotExistException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Filters": {
                                        "description": "Filters used to limit the range of results. For example, you can limit Maintenance Window executions to only those scheduled before or after a certain date and time.",
                                        "items": {
                                            "description": "Defines a filter used in Patch Manager APIs.",
                                            "properties": {
                                                "Key": {
                                                    "description": "The key for the filter.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "The value for the filter.",
                                                    "items": {
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "maxItems": 5,
                                        "minItems": 0,
                                        "type": "array"
                                    },
                                    "MaxResults": {
                                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "The token for the next set of items to return. (You received this token from a previous call.)",
                                        "type": "string"
                                    },
                                    "ResourceType": {
                                        "description": "The type of resource you want to retrieve information about. For example, \"INSTANCE\".",
                                        "enum": [
                                            "INSTANCE"
                                        ],
                                        "type": "string"
                                    },
                                    "Targets": {
                                        "description": "The instance ID or key/value pair to retrieve information about.",
                                        "items": {
                                            "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                                            "properties": {
                                                "Key": {
                                                    "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "maxItems": 50,
                                                    "minItems": 0,
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "maxItems": 5,
                                        "minItems": 0,
                                        "type": "array"
                                    },
                                    "WindowId": {
                                        "description": "The ID of the Maintenance Window to retrieve information about.",
                                        "maxLength": 20,
                                        "minLength": 20,
                                        "pattern": "^mw-[0-9a-f]{17}$",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeMaintenanceWindowTargets": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Lists the targets registered with the Maintenance Window.",
                "operationId": "DescribeMaintenanceWindowTargets",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "NextToken": {
                                            "description": "The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.",
                                            "type": "string"
                                        },
                                        "Targets": {
                                            "description": "Information about the targets in the Maintenance Window.",
                                            "items": {
                                                "description": "The target registered with the Maintenance Window.",
                                                "properties": {
                                                    "Description": {
                                                        "description": "A description of the target.",
                                                        "format": "password",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The target name.",
                                                        "maxLength": 128,
                                                        "minLength": 3,
                                                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                                        "type": "string"
                                                    },
                                                    "OwnerInformation": {
                                                        "description": "User-provided value that will be included in any CloudWatch events raised while running tasks for these targets in this Maintenance Window.",
                                                        "format": "password",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "ResourceType": {
                                                        "description": "The type of target.",
                                                        "enum": [
                                                            "INSTANCE"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Targets": {
                                                        "description": "The targets (either instances or tags). Instances are specified using Key=instanceids,Values=&lt;instanceid1&gt;,&lt;instanceid2&gt;. Tags are specified using Key=&lt;tag name&gt;,Values=&lt;tag value&gt;.",
                                                        "items": {
                                                            "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                                                            "properties": {
                                                                "Key": {
                                                                    "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                                    "maxLength": 128,
                                                                    "minLength": 1,
                                                                    "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                                                    "type": "string"
                                                                },
                                                                "Values": {
                                                                    "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "maxItems": 50,
                                                                    "minItems": 0,
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "maxItems": 5,
                                                        "minItems": 0,
                                                        "type": "array"
                                                    },
                                                    "WindowId": {
                                                        "description": "The Maintenance Window ID where the target is registered.",
                                                        "maxLength": 20,
                                                        "minLength": 20,
                                                        "pattern": "^mw-[0-9a-f]{17}$",
                                                        "type": "string"
                                                    },
                                                    "WindowTargetId": {
                                                        "description": "The ID of the target.",
                                                        "maxLength": 36,
                                                        "minLength": 36,
                                                        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "DoesNotExistException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Filters": {
                                        "description": "Optional filters that can be used to narrow down the scope of the returned window targets. The supported filter keys are Type, WindowTargetId and OwnerInformation.",
                                        "items": {
                                            "description": "Filter used in the request. Supported filter keys are Name and Enabled.",
                                            "properties": {
                                                "Key": {
                                                    "description": "The name of the filter.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "The filter values.",
                                                    "items": {
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "maxItems": 5,
                                        "minItems": 0,
                                        "type": "array"
                                    },
                                    "MaxResults": {
                                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                                        "maximum": 100,
                                        "minimum": 10,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "The token for the next set of items to return. (You received this token from a previous call.)",
                                        "type": "string"
                                    },
                                    "WindowId": {
                                        "description": "The ID of the Maintenance Window whose targets should be retrieved.",
                                        "maxLength": 20,
                                        "minLength": 20,
                                        "pattern": "^mw-[0-9a-f]{17}$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "WindowId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeMaintenanceWindowTasks": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Lists the tasks in a Maintenance Window.",
                "operationId": "DescribeMaintenanceWindowTasks",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "NextToken": {
                                            "description": "The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.",
                                            "type": "string"
                                        },
                                        "Tasks": {
                                            "description": "Information about the tasks in the Maintenance Window.",
                                            "items": {
                                                "description": "Information about a task defined for a Maintenance Window.",
                                                "properties": {
                                                    "Description": {
                                                        "description": "A description of the task.",
                                                        "format": "password",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "LoggingInfo": {
                                                        "description": "<p>Information about an Amazon S3 bucket to write task-level logs to.</p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an S3 bucket to contain logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> </note>",
                                                        "properties": {
                                                            "S3BucketName": {
                                                                "description": "The name of an Amazon S3 bucket where execution logs are stored .",
                                                                "maxLength": 63,
                                                                "minLength": 3,
                                                                "type": "string"
                                                            },
                                                            "S3KeyPrefix": {
                                                                "description": "(Optional) The Amazon S3 bucket subfolder. ",
                                                                "maxLength": 500,
                                                                "type": "string"
                                                            },
                                                            "S3Region": {
                                                                "description": "The region where the Amazon S3 bucket is located.",
                                                                "maxLength": 20,
                                                                "minLength": 3,
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "S3BucketName",
                                                            "S3Region"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "MaxConcurrency": {
                                                        "description": "The maximum number of targets this task can be run for in parallel.",
                                                        "maxLength": 7,
                                                        "minLength": 1,
                                                        "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                                                        "type": "string"
                                                    },
                                                    "MaxErrors": {
                                                        "description": "The maximum number of errors allowed before this task stops being scheduled.",
                                                        "maxLength": 7,
                                                        "minLength": 1,
                                                        "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The task name.",
                                                        "maxLength": 128,
                                                        "minLength": 3,
                                                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                                        "type": "string"
                                                    },
                                                    "Priority": {
                                                        "description": "The priority of the task in the Maintenance Window. The lower the number, the higher the priority. Tasks that have the same priority are scheduled in parallel.",
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    },
                                                    "ServiceRoleArn": {
                                                        "description": "The role that should be assumed when executing the task",
                                                        "type": "string"
                                                    },
                                                    "Targets": {
                                                        "description": "The targets (either instances or tags). Instances are specified using Key=instanceids,Values=&lt;instanceid1&gt;,&lt;instanceid2&gt;. Tags are specified using Key=&lt;tag name&gt;,Values=&lt;tag value&gt;.",
                                                        "items": {
                                                            "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                                                            "properties": {
                                                                "Key": {
                                                                    "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                                    "maxLength": 128,
                                                                    "minLength": 1,
                                                                    "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                                                    "type": "string"
                                                                },
                                                                "Values": {
                                                                    "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "maxItems": 50,
                                                                    "minItems": 0,
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "maxItems": 5,
                                                        "minItems": 0,
                                                        "type": "array"
                                                    },
                                                    "TaskArn": {
                                                        "description": "The resource that the task uses during execution. For RUN_COMMAND and AUTOMATION task types, <code>TaskArn</code> is the Systems Manager document name or ARN. For LAMBDA tasks, it's the function name or ARN. For STEP_FUNCTION tasks, it's the state machine ARN.",
                                                        "maxLength": 1600,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "TaskParameters": {
                                                        "description": "<p>The parameters that should be passed to the task when it is executed.</p> <note> <p> <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> </note>",
                                                        "items": {
                                                            "properties": {
                                                                "key": {
                                                                    "maxLength": 255,
                                                                    "minLength": 1,
                                                                    "type": "string"
                                                                },
                                                                "value": {
                                                                    "description": "Defines the values for a task parameter.",
                                                                    "properties": {
                                                                        "Values": {
                                                                            "description": "This field contains an array of 0 or more strings, each 1 to 255 characters in length.",
                                                                            "items": {
                                                                                "format": "password",
                                                                                "maxLength": 255,
                                                                                "minLength": 1,
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "Type": {
                                                        "description": "The type of task. The type can be one of the following: RUN_COMMAND, AUTOMATION, LAMBDA, or STEP_FUNCTION.",
                                                        "enum": [
                                                            "RUN_COMMAND",
                                                            "AUTOMATION",
                                                            "STEP_FUNCTIONS",
                                                            "LAMBDA"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "WindowId": {
                                                        "description": "The Maintenance Window ID where the task is registered.",
                                                        "maxLength": 20,
                                                        "minLength": 20,
                                                        "pattern": "^mw-[0-9a-f]{17}$",
                                                        "type": "string"
                                                    },
                                                    "WindowTaskId": {
                                                        "description": "The task ID.",
                                                        "maxLength": 36,
                                                        "minLength": 36,
                                                        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "DoesNotExistException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Filters": {
                                        "description": "Optional filters used to narrow down the scope of the returned tasks. The supported filter keys are WindowTaskId, TaskArn, Priority, and TaskType.",
                                        "items": {
                                            "description": "Filter used in the request. Supported filter keys are Name and Enabled.",
                                            "properties": {
                                                "Key": {
                                                    "description": "The name of the filter.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "The filter values.",
                                                    "items": {
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "maxItems": 5,
                                        "minItems": 0,
                                        "type": "array"
                                    },
                                    "MaxResults": {
                                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                                        "maximum": 100,
                                        "minimum": 10,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "The token for the next set of items to return. (You received this token from a previous call.)",
                                        "type": "string"
                                    },
                                    "WindowId": {
                                        "description": "The ID of the Maintenance Window whose tasks should be retrieved.",
                                        "maxLength": 20,
                                        "minLength": 20,
                                        "pattern": "^mw-[0-9a-f]{17}$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "WindowId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeMaintenanceWindows": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Retrieves the Maintenance Windows in an AWS account.",
                "operationId": "DescribeMaintenanceWindows",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "NextToken": {
                                            "description": "The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.",
                                            "type": "string"
                                        },
                                        "WindowIdentities": {
                                            "description": "Information about the Maintenance Windows.",
                                            "items": {
                                                "description": "Information about the Maintenance Window.",
                                                "properties": {
                                                    "Cutoff": {
                                                        "description": "The number of hours before the end of the Maintenance Window that Systems Manager stops scheduling new tasks for execution.",
                                                        "maximum": 23,
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    },
                                                    "Description": {
                                                        "description": "A description of the Maintenance Window.",
                                                        "format": "password",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "Duration": {
                                                        "description": "The duration of the Maintenance Window in hours.",
                                                        "maximum": 24,
                                                        "minimum": 1,
                                                        "type": "integer"
                                                    },
                                                    "Enabled": {
                                                        "description": "Whether the Maintenance Window is enabled.",
                                                        "type": "boolean"
                                                    },
                                                    "EndDate": {
                                                        "description": "The date and time, in ISO-8601 Extended format, for when the Maintenance Window is scheduled to become inactive.",
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the Maintenance Window.",
                                                        "maxLength": 128,
                                                        "minLength": 3,
                                                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                                        "type": "string"
                                                    },
                                                    "NextExecutionTime": {
                                                        "description": "The next time the Maintenance Window will actually run, taking into account any specified times for the Maintenance Window to become active or inactive.",
                                                        "type": "string"
                                                    },
                                                    "Schedule": {
                                                        "description": "The schedule of the Maintenance Window in the form of a cron or rate expression.",
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "ScheduleTimezone": {
                                                        "description": "The time zone that the scheduled Maintenance Window executions are based on, in Internet Assigned Numbers Authority (IANA) format.",
                                                        "type": "string"
                                                    },
                                                    "StartDate": {
                                                        "description": "The date and time, in ISO-8601 Extended format, for when the Maintenance Window is scheduled to become active.",
                                                        "type": "string"
                                                    },
                                                    "WindowId": {
                                                        "description": "The ID of the Maintenance Window.",
                                                        "maxLength": 20,
                                                        "minLength": 20,
                                                        "pattern": "^mw-[0-9a-f]{17}$",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Filters": {
                                        "description": "Optional filters used to narrow down the scope of the returned Maintenance Windows. Supported filter keys are <b>Name</b> and <b>Enabled</b>.",
                                        "items": {
                                            "description": "Filter used in the request. Supported filter keys are Name and Enabled.",
                                            "properties": {
                                                "Key": {
                                                    "description": "The name of the filter.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "The filter values.",
                                                    "items": {
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "maxItems": 5,
                                        "minItems": 0,
                                        "type": "array"
                                    },
                                    "MaxResults": {
                                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                                        "maximum": 100,
                                        "minimum": 10,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "The token for the next set of items to return. (You received this token from a previous call.)",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeMaintenanceWindowsForTarget": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Retrieves information about the Maintenance Windows targets or tasks that an instance is associated with.",
                "operationId": "DescribeMaintenanceWindowsForTarget",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "NextToken": {
                                            "description": "The token for the next set of items to return. (You use this token in the next call.)",
                                            "type": "string"
                                        },
                                        "WindowIdentities": {
                                            "description": "Information about the Maintenance Window targets and tasks an instance is associated with.",
                                            "items": {
                                                "description": "The Maintenance Window to which the specified target belongs.",
                                                "properties": {
                                                    "Name": {
                                                        "description": "The name of the Maintenance Window.",
                                                        "maxLength": 128,
                                                        "minLength": 3,
                                                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                                        "type": "string"
                                                    },
                                                    "WindowId": {
                                                        "description": "The ID of the Maintenance Window.",
                                                        "maxLength": 20,
                                                        "minLength": 20,
                                                        "pattern": "^mw-[0-9a-f]{17}$",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "MaxResults": {
                                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "The token for the next set of items to return. (You received this token from a previous call.)",
                                        "type": "string"
                                    },
                                    "ResourceType": {
                                        "description": "The type of resource you want to retrieve information about. For example, \"INSTANCE\".",
                                        "enum": [
                                            "INSTANCE"
                                        ],
                                        "type": "string"
                                    },
                                    "Targets": {
                                        "description": "The instance ID or key/value pair to retrieve information about.",
                                        "items": {
                                            "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                                            "properties": {
                                                "Key": {
                                                    "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "maxItems": 50,
                                                    "minItems": 0,
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "maxItems": 5,
                                        "minItems": 0,
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "Targets",
                                    "ResourceType"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeParameters": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Get information about a parameter.</p> <p>Request results are returned on a best-effort basis. If you specify <code>MaxResults</code> in the request, the response includes information up to the limit specified. The number of items returned, however, can be between zero and the value of <code>MaxResults</code>. If the service reaches an internal limit while processing the results, it stops the operation and returns the matching values up to that point and a <code>NextToken</code>. You can specify the <code>NextToken</code> in a subsequent call to get the next set of results.</p>",
                "operationId": "DescribeParameters",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxResults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "NextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "NextToken": {
                                            "description": "The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.",
                                            "type": "string"
                                        },
                                        "Parameters": {
                                            "description": "Parameters returned by the request.",
                                            "items": {
                                                "description": "Metada includes information like the ARN of the last user and the date/time the parameter was last used.",
                                                "properties": {
                                                    "AllowedPattern": {
                                                        "description": "<p>A parameter name can include only the following letters and symbols.</p> <p>a-zA-Z0-9_.-</p>",
                                                        "maxLength": 1024,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "Description": {
                                                        "description": "Description of the parameter actions.",
                                                        "maxLength": 1024,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "KeyId": {
                                                        "description": "The ID of the query key used for this parameter.",
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "pattern": "^([a-zA-Z0-9:/_-]+)$",
                                                        "type": "string"
                                                    },
                                                    "LastModifiedDate": {
                                                        "description": "Date the parameter was last changed or updated.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "LastModifiedUser": {
                                                        "description": "Amazon Resource Name (ARN) of the AWS user who last changed the parameter.",
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The parameter name.",
                                                        "maxLength": 2048,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "Type": {
                                                        "description": "The type of parameter. Valid parameter types include the following: String, String list, Secure string.",
                                                        "enum": [
                                                            "String",
                                                            "StringList",
                                                            "SecureString"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Version": {
                                                        "description": "The parameter version.",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidFilterKey",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidFilterOption",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "InvalidFilterValue",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "InvalidNextToken",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Filters": {
                                        "description": "One or more filters. Use a filter to return a more specific list of results.",
                                        "items": {
                                            "description": "This data type is deprecated. Instead, use <a>ParameterStringFilter</a>.",
                                            "properties": {
                                                "Key": {
                                                    "description": "The name of the filter.",
                                                    "enum": [
                                                        "Name",
                                                        "Type",
                                                        "KeyId"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "The filter values.",
                                                    "items": {
                                                        "maxLength": 1024,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "maxItems": 50,
                                                    "minItems": 1,
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Key",
                                                "Values"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "MaxResults": {
                                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                                        "maximum": 50,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "The token for the next set of items to return. (You received this token from a previous call.)",
                                        "type": "string"
                                    },
                                    "ParameterFilters": {
                                        "description": "Filters to limit the request results.",
                                        "items": {
                                            "description": "<p>One or more filters. Use a filter to return a more specific list of results.</p> <note> <p>The <code>Name</code> field can't be used with the <a>GetParametersByPath</a> API action.</p> </note>",
                                            "properties": {
                                                "Key": {
                                                    "description": "The name of the filter.",
                                                    "maxLength": 132,
                                                    "minLength": 1,
                                                    "pattern": "tag:.+|Name|Type|KeyId|Path|Label",
                                                    "type": "string"
                                                },
                                                "Option": {
                                                    "description": "Valid options are Equals and BeginsWith. For Path filter, valid options are Recursive and OneLevel.",
                                                    "maxLength": 10,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "The value you want to search for.",
                                                    "items": {
                                                        "maxLength": 1024,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "maxItems": 50,
                                                    "minItems": 1,
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Key"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribePatchBaselines": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Lists the patch baselines in your AWS account.",
                "operationId": "DescribePatchBaselines",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "BaselineIdentities": {
                                            "description": "An array of PatchBaselineIdentity elements.",
                                            "items": {
                                                "description": "Defines the basic information about a patch baseline.",
                                                "properties": {
                                                    "BaselineDescription": {
                                                        "description": "The description of the patch baseline.",
                                                        "maxLength": 1024,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "BaselineId": {
                                                        "description": "The ID of the patch baseline.",
                                                        "maxLength": 128,
                                                        "minLength": 20,
                                                        "pattern": "^[a-zA-Z0-9_\\-:/]{20,128}$",
                                                        "type": "string"
                                                    },
                                                    "BaselineName": {
                                                        "description": "The name of the patch baseline.",
                                                        "maxLength": 128,
                                                        "minLength": 3,
                                                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                                        "type": "string"
                                                    },
                                                    "DefaultBaseline": {
                                                        "description": "Whether this is the default baseline. Note that Systems Manager supports creating multiple default patch baselines. For example, you can create a default patch baseline for each operating system.",
                                                        "type": "boolean"
                                                    },
                                                    "OperatingSystem": {
                                                        "description": "Defines the operating system the patch baseline applies to. The Default value is WINDOWS. ",
                                                        "enum": [
                                                            "WINDOWS",
                                                            "AMAZON_LINUX",
                                                            "AMAZON_LINUX_2",
                                                            "UBUNTU",
                                                            "REDHAT_ENTERPRISE_LINUX",
                                                            "SUSE",
                                                            "CENTOS"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "NextToken": {
                                            "description": "The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Filters": {
                                        "description": "<p>Each element in the array is a structure containing: </p> <p>Key: (string, \"NAME_PREFIX\" or \"OWNER\")</p> <p>Value: (array of strings, exactly 1 entry, between 1 and 255 characters)</p>",
                                        "items": {
                                            "description": "Defines a filter used in Patch Manager APIs.",
                                            "properties": {
                                                "Key": {
                                                    "description": "The key for the filter.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "The value for the filter.",
                                                    "items": {
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "maxItems": 5,
                                        "minItems": 0,
                                        "type": "array"
                                    },
                                    "MaxResults": {
                                        "description": "The maximum number of patch baselines to return (per page).",
                                        "maximum": 100,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "The token for the next set of items to return. (You received this token from a previous call.)",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribePatchGroupState": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Returns high-level aggregated patch compliance state for a patch group.",
                "operationId": "DescribePatchGroupState",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Instances": {
                                            "description": "The number of instances in the patch group.",
                                            "type": "integer"
                                        },
                                        "InstancesWithFailedPatches": {
                                            "description": "The number of instances with patches from the patch baseline that failed to install.",
                                            "type": "integer"
                                        },
                                        "InstancesWithInstalledOtherPatches": {
                                            "description": "The number of instances with patches installed that aren't defined in the patch baseline.",
                                            "type": "integer"
                                        },
                                        "InstancesWithInstalledPatches": {
                                            "description": "The number of instances with installed patches.",
                                            "type": "integer"
                                        },
                                        "InstancesWithInstalledRejectedPatches": {
                                            "description": "<p>The number of instances with patches installed that are specified in a RejectedPatches list. Patches with a status of <i>INSTALLED_REJECTED</i> were typically installed before they were added to a RejectedPatches list.</p> <note> <p>If ALLOW_AS_DEPENDENCY is the specified option for RejectedPatchesAction, the value of InstancesWithInstalledRejectedPatches will always be 0 (zero).</p> </note>",
                                            "type": "integer"
                                        },
                                        "InstancesWithMissingPatches": {
                                            "description": "The number of instances with missing patches from the patch baseline.",
                                            "type": "integer"
                                        },
                                        "InstancesWithNotApplicablePatches": {
                                            "description": "The number of instances with patches that aren't applicable.",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidNextToken",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "PatchGroup": {
                                        "description": "The name of the patch group whose patch snapshot should be retrieved.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "PatchGroup"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribePatchGroups": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Lists all patch groups that have been registered with patch baselines.",
                "operationId": "DescribePatchGroups",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Mappings": {
                                            "description": "<p>Each entry in the array contains:</p> <p>PatchGroup: string (between 1 and 256 characters, Regex: ^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$)</p> <p>PatchBaselineIdentity: A PatchBaselineIdentity element. </p>",
                                            "items": {
                                                "description": "The mapping between a patch group and the patch baseline the patch group is registered with.",
                                                "properties": {
                                                    "BaselineIdentity": {
                                                        "description": "The patch baseline the patch group is registered with.",
                                                        "properties": {
                                                            "BaselineDescription": {
                                                                "description": "The description of the patch baseline.",
                                                                "maxLength": 1024,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            },
                                                            "BaselineId": {
                                                                "description": "The ID of the patch baseline.",
                                                                "maxLength": 128,
                                                                "minLength": 20,
                                                                "pattern": "^[a-zA-Z0-9_\\-:/]{20,128}$",
                                                                "type": "string"
                                                            },
                                                            "BaselineName": {
                                                                "description": "The name of the patch baseline.",
                                                                "maxLength": 128,
                                                                "minLength": 3,
                                                                "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                                                "type": "string"
                                                            },
                                                            "DefaultBaseline": {
                                                                "description": "Whether this is the default baseline. Note that Systems Manager supports creating multiple default patch baselines. For example, you can create a default patch baseline for each operating system.",
                                                                "type": "boolean"
                                                            },
                                                            "OperatingSystem": {
                                                                "description": "Defines the operating system the patch baseline applies to. The Default value is WINDOWS. ",
                                                                "enum": [
                                                                    "WINDOWS",
                                                                    "AMAZON_LINUX",
                                                                    "AMAZON_LINUX_2",
                                                                    "UBUNTU",
                                                                    "REDHAT_ENTERPRISE_LINUX",
                                                                    "SUSE",
                                                                    "CENTOS"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "PatchGroup": {
                                                        "description": "The name of the patch group registered with the patch baseline.",
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "NextToken": {
                                            "description": "The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Filters": {
                                        "description": "One or more filters. Use a filter to return a more specific list of results.",
                                        "items": {
                                            "description": "Defines a filter used in Patch Manager APIs.",
                                            "properties": {
                                                "Key": {
                                                    "description": "The key for the filter.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "The value for the filter.",
                                                    "items": {
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "maxItems": 5,
                                        "minItems": 0,
                                        "type": "array"
                                    },
                                    "MaxResults": {
                                        "description": "The maximum number of patch groups to return (per page).",
                                        "maximum": 100,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "The token for the next set of items to return. (You received this token from a previous call.)",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeSessions": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Retrieves a list of all active sessions (both connected and disconnected) or terminated sessions from the past 30 days.",
                "operationId": "DescribeSessions",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "NextToken": {
                                            "description": "The token for the next set of items to return. (You received this token from a previous call.)",
                                            "type": "string"
                                        },
                                        "Sessions": {
                                            "description": "A list of sessions meeting the request parameters.",
                                            "items": {
                                                "description": "Information about a Session Manager connection to an instance.",
                                                "properties": {
                                                    "Details": {
                                                        "description": "Reserved for future use.",
                                                        "maxLength": 1024,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "DocumentName": {
                                                        "description": "The name of the Session Manager SSM document used to define the parameters and plugin settings for the session. For example, <code>SSM-SessionManagerRunShell</code>.",
                                                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                                        "type": "string"
                                                    },
                                                    "EndDate": {
                                                        "description": "The date and time, in ISO-8601 Extended format, when the session was terminated.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "OutputUrl": {
                                                        "description": "Reserved for future use.",
                                                        "properties": {
                                                            "CloudWatchOutputUrl": {
                                                                "description": "Reserved for future use.",
                                                                "maxLength": 2083,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            },
                                                            "S3OutputUrl": {
                                                                "description": "Reserved for future use.",
                                                                "maxLength": 2083,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "Owner": {
                                                        "description": "The ID of the AWS user account that started the session.",
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "SessionId": {
                                                        "description": "The ID of the session.",
                                                        "maxLength": 96,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "StartDate": {
                                                        "description": "The date and time, in ISO-8601 Extended format, when the session began.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "Status": {
                                                        "description": "The status of the session. For example, \"Connected\" or \"Terminated\".",
                                                        "enum": [
                                                            "Connected",
                                                            "Connecting",
                                                            "Disconnected",
                                                            "Terminated",
                                                            "Terminating",
                                                            "Failed"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Target": {
                                                        "description": "The instance that the Session Manager session connected to.",
                                                        "maxLength": 50,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidFilterKey",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidNextToken",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Filters": {
                                        "description": "One or more filters to limit the type of sessions returned by the request.",
                                        "items": {
                                            "description": "Describes a filter for Session Manager information.",
                                            "properties": {
                                                "key": {
                                                    "description": "The name of the filter.",
                                                    "enum": [
                                                        "InvokedAfter",
                                                        "InvokedBefore",
                                                        "Target",
                                                        "Owner",
                                                        "Status"
                                                    ],
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "description": "<p>The filter value. Valid values for each filter key are as follows:</p> <ul> <li> <p>InvokedAfter: Specify a timestamp to limit your results. For example, specify 2018-08-29T00:00:00Z to see sessions that started August 29, 2018, and later.</p> </li> <li> <p>InvokedBefore: Specify a timestamp to limit your results. For example, specify 2018-08-29T00:00:00Z to see sessions that started before August 29, 2018.</p> </li> <li> <p>Target: Specify an instance to which session connections have been made.</p> </li> <li> <p>Owner: Specify an AWS user account to see a list of sessions started by that user.</p> </li> <li> <p>Status: Specify a valid session status to see a list of all sessions with that status. Status values you can specify include:</p> <ul> <li> <p>Connected</p> </li> <li> <p>Connecting</p> </li> <li> <p>Disconnected</p> </li> <li> <p>Terminated</p> </li> <li> <p>Terminating</p> </li> <li> <p>Failed</p> </li> </ul> </li> </ul>",
                                                    "maxLength": 200,
                                                    "minLength": 1,
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "key",
                                                "value"
                                            ],
                                            "type": "object"
                                        },
                                        "maxItems": 5,
                                        "minItems": 1,
                                        "type": "array"
                                    },
                                    "MaxResults": {
                                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                                        "maximum": 200,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "The token for the next set of items to return. (You received this token from a previous call.)",
                                        "type": "string"
                                    },
                                    "State": {
                                        "description": "The session status to retrieve a list of sessions for. For example, \"Active\".",
                                        "enum": [
                                            "Active",
                                            "History"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "State"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#GetAutomationExecution": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Get detailed information about a particular Automation execution.",
                "operationId": "GetAutomationExecution",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "AutomationExecution": {
                                            "description": "Detailed information about the current state of an automation execution.",
                                            "properties": {
                                                "AutomationExecutionId": {
                                                    "description": "The execution ID.",
                                                    "maxLength": 36,
                                                    "minLength": 36,
                                                    "type": "string"
                                                },
                                                "AutomationExecutionStatus": {
                                                    "description": "The execution status of the Automation.",
                                                    "enum": [
                                                        "Pending",
                                                        "InProgress",
                                                        "Waiting",
                                                        "Success",
                                                        "TimedOut",
                                                        "Cancelling",
                                                        "Cancelled",
                                                        "Failed"
                                                    ],
                                                    "type": "string"
                                                },
                                                "CurrentAction": {
                                                    "description": "The action of the currently executing step.",
                                                    "type": "string"
                                                },
                                                "CurrentStepName": {
                                                    "description": "The name of the currently executing step.",
                                                    "type": "string"
                                                },
                                                "DocumentName": {
                                                    "description": "The name of the Automation document used during the execution.",
                                                    "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                                    "type": "string"
                                                },
                                                "DocumentVersion": {
                                                    "description": "The version of the document to use during execution.",
                                                    "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                                    "type": "string"
                                                },
                                                "ExecutedBy": {
                                                    "description": "The Amazon Resource Name (ARN) of the user who executed the automation.",
                                                    "type": "string"
                                                },
                                                "ExecutionEndTime": {
                                                    "description": "The time the execution finished.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "ExecutionStartTime": {
                                                    "description": "The time the execution started.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "FailureMessage": {
                                                    "description": "A message describing why an execution has failed, if the status is set to Failed.",
                                                    "type": "string"
                                                },
                                                "MaxConcurrency": {
                                                    "description": "The MaxConcurrency value specified by the user when the execution started.",
                                                    "maxLength": 7,
                                                    "minLength": 1,
                                                    "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                                                    "type": "string"
                                                },
                                                "MaxErrors": {
                                                    "description": "The MaxErrors value specified by the user when the execution started.",
                                                    "maxLength": 7,
                                                    "minLength": 1,
                                                    "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                                                    "type": "string"
                                                },
                                                "Mode": {
                                                    "description": "The automation execution mode.",
                                                    "enum": [
                                                        "Auto",
                                                        "Interactive"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Outputs": {
                                                    "description": "The list of execution outputs as defined in the automation document.",
                                                    "items": {
                                                        "properties": {
                                                            "key": {
                                                                "maxLength": 30,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            },
                                                            "value": {
                                                                "items": {
                                                                    "maxLength": 512,
                                                                    "minLength": 1,
                                                                    "type": "string"
                                                                },
                                                                "maxItems": 10,
                                                                "minItems": 0,
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "maxItems": 200,
                                                    "minItems": 1,
                                                    "type": "array"
                                                },
                                                "Parameters": {
                                                    "description": "The key-value map of execution parameters, which were supplied when calling StartAutomationExecution.",
                                                    "items": {
                                                        "properties": {
                                                            "key": {
                                                                "maxLength": 30,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            },
                                                            "value": {
                                                                "items": {
                                                                    "maxLength": 512,
                                                                    "minLength": 1,
                                                                    "type": "string"
                                                                },
                                                                "maxItems": 10,
                                                                "minItems": 0,
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "maxItems": 200,
                                                    "minItems": 1,
                                                    "type": "array"
                                                },
                                                "ParentAutomationExecutionId": {
                                                    "description": "The AutomationExecutionId of the parent automation.",
                                                    "maxLength": 36,
                                                    "minLength": 36,
                                                    "type": "string"
                                                },
                                                "ProgressCounters": {
                                                    "description": "An aggregate of step execution statuses displayed in the AWS Console for a multi-Region and multi-account Automation execution.",
                                                    "properties": {
                                                        "CancelledSteps": {
                                                            "description": "The total number of steps that the system cancelled in all specified AWS Regions and accounts for the current Automation execution.",
                                                            "type": "integer"
                                                        },
                                                        "FailedSteps": {
                                                            "description": "The total number of steps that failed to execute in all specified AWS Regions and accounts for the current Automation execution.",
                                                            "type": "integer"
                                                        },
                                                        "SuccessSteps": {
                                                            "description": "The total number of steps that successfully completed in all specified AWS Regions and accounts for the current Automation execution.",
                                                            "type": "integer"
                                                        },
                                                        "TimedOutSteps": {
                                                            "description": "The total number of steps that timed out in all specified AWS Regions and accounts for the current Automation execution.",
                                                            "type": "integer"
                                                        },
                                                        "TotalSteps": {
                                                            "description": "The total number of steps executed in all specified AWS Regions and accounts for the current Automation execution.",
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "ResolvedTargets": {
                                                    "description": "A list of resolved targets in the rate control execution.",
                                                    "properties": {
                                                        "ParameterValues": {
                                                            "description": "A list of parameter values sent to targets that resolved during the Automation execution.",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "Truncated": {
                                                            "description": "A boolean value indicating whether the resolved target list is truncated.",
                                                            "type": "boolean"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "StepExecutions": {
                                                    "description": "A list of details about the current state of all steps that comprise an execution. An Automation document contains a list of steps that are executed in order.",
                                                    "items": {
                                                        "description": "Detailed information about an the execution state of an Automation step.",
                                                        "properties": {
                                                            "Action": {
                                                                "description": "The action this step performs. The action determines the behavior of the step.",
                                                                "pattern": "^aws:[a-zA-Z]{3,25}$",
                                                                "type": "string"
                                                            },
                                                            "ExecutionEndTime": {
                                                                "description": "If a step has finished execution, this contains the time the execution ended. If the step has not yet concluded, this field is not populated.",
                                                                "format": "date-time",
                                                                "type": "string"
                                                            },
                                                            "ExecutionStartTime": {
                                                                "description": "If a step has begun execution, this contains the time the step started. If the step is in Pending status, this field is not populated.",
                                                                "format": "date-time",
                                                                "type": "string"
                                                            },
                                                            "FailureDetails": {
                                                                "description": "Information about the Automation failure.",
                                                                "properties": {
                                                                    "Details": {
                                                                        "description": "Detailed information about the Automation step failure.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "key": {
                                                                                    "maxLength": 30,
                                                                                    "minLength": 1,
                                                                                    "type": "string"
                                                                                },
                                                                                "value": {
                                                                                    "items": {
                                                                                        "maxLength": 512,
                                                                                        "minLength": 1,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "maxItems": 10,
                                                                                    "minItems": 0,
                                                                                    "type": "array"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "maxItems": 200,
                                                                        "minItems": 1,
                                                                        "type": "array"
                                                                    },
                                                                    "FailureStage": {
                                                                        "description": "The stage of the Automation execution when the failure occurred. The stages include the following: InputValidation, PreVerification, Invocation, PostVerification.",
                                                                        "type": "string"
                                                                    },
                                                                    "FailureType": {
                                                                        "description": "The type of Automation failure. Failure types include the following: Action, Permission, Throttling, Verification, Internal.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "FailureMessage": {
                                                                "description": "If a step failed, this message explains why the execution failed.",
                                                                "type": "string"
                                                            },
                                                            "Inputs": {
                                                                "description": "Fully-resolved values passed into the step before execution.",
                                                                "items": {
                                                                    "properties": {
                                                                        "key": {
                                                                            "type": "string"
                                                                        },
                                                                        "value": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "IsCritical": {
                                                                "description": "The flag which can be used to help decide whether the failure of current step leads to the Automation failure.",
                                                                "type": "boolean"
                                                            },
                                                            "IsEnd": {
                                                                "description": "The flag which can be used to end automation no matter whether the step succeeds or fails.",
                                                                "type": "boolean"
                                                            },
                                                            "MaxAttempts": {
                                                                "description": "The maximum number of tries to run the action of the step. The default value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "NextStep": {
                                                                "description": "The next step after the step succeeds.",
                                                                "type": "string"
                                                            },
                                                            "OnFailure": {
                                                                "description": "The action to take if the step fails. The default value is Abort.",
                                                                "type": "string"
                                                            },
                                                            "Outputs": {
                                                                "description": "Returned values from the execution of the step.",
                                                                "items": {
                                                                    "properties": {
                                                                        "key": {
                                                                            "maxLength": 30,
                                                                            "minLength": 1,
                                                                            "type": "string"
                                                                        },
                                                                        "value": {
                                                                            "items": {
                                                                                "maxLength": 512,
                                                                                "minLength": 1,
                                                                                "type": "string"
                                                                            },
                                                                            "maxItems": 10,
                                                                            "minItems": 0,
                                                                            "type": "array"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "maxItems": 200,
                                                                "minItems": 1,
                                                                "type": "array"
                                                            },
                                                            "OverriddenParameters": {
                                                                "description": "A user-specified list of parameters to override when executing a step.",
                                                                "items": {
                                                                    "properties": {
                                                                        "key": {
                                                                            "maxLength": 30,
                                                                            "minLength": 1,
                                                                            "type": "string"
                                                                        },
                                                                        "value": {
                                                                            "items": {
                                                                                "maxLength": 512,
                                                                                "minLength": 1,
                                                                                "type": "string"
                                                                            },
                                                                            "maxItems": 10,
                                                                            "minItems": 0,
                                                                            "type": "array"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "maxItems": 200,
                                                                "minItems": 1,
                                                                "type": "array"
                                                            },
                                                            "Response": {
                                                                "description": "A message associated with the response code for an execution.",
                                                                "type": "string"
                                                            },
                                                            "ResponseCode": {
                                                                "description": "The response code returned by the execution of the step.",
                                                                "type": "string"
                                                            },
                                                            "StepExecutionId": {
                                                                "description": "The unique ID of a step execution.",
                                                                "type": "string"
                                                            },
                                                            "StepName": {
                                                                "description": "The name of this execution step.",
                                                                "type": "string"
                                                            },
                                                            "StepStatus": {
                                                                "description": "The execution status for this step. Valid values include: Pending, InProgress, Success, Cancelled, Failed, and TimedOut.",
                                                                "enum": [
                                                                    "Pending",
                                                                    "InProgress",
                                                                    "Waiting",
                                                                    "Success",
                                                                    "TimedOut",
                                                                    "Cancelling",
                                                                    "Cancelled",
                                                                    "Failed"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "TargetLocation": {
                                                                "description": "The combination of AWS Regions and accounts targeted by the current Automation execution.",
                                                                "properties": {
                                                                    "Accounts": {
                                                                        "description": "The AWS accounts targeted by the current Automation execution.",
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "maxItems": 50,
                                                                        "minItems": 1,
                                                                        "type": "array"
                                                                    },
                                                                    "ExecutionRoleName": {
                                                                        "description": "The Automation execution role used by the currently executing Automation.",
                                                                        "maxLength": 64,
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    },
                                                                    "Regions": {
                                                                        "description": "The AWS Regions targeted by the current Automation execution.",
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "maxItems": 50,
                                                                        "minItems": 1,
                                                                        "type": "array"
                                                                    },
                                                                    "TargetLocationMaxConcurrency": {
                                                                        "description": "The maxium number of AWS accounts and AWS regions allowed to run the Automation concurrently ",
                                                                        "maxLength": 7,
                                                                        "minLength": 1,
                                                                        "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                                                                        "type": "string"
                                                                    },
                                                                    "TargetLocationMaxErrors": {
                                                                        "description": "The maxium number of errors allowed before the system stops queueing additional Automation executions for the currently executing Automation. ",
                                                                        "maxLength": 7,
                                                                        "minLength": 1,
                                                                        "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "Targets": {
                                                                "description": "The targets for the step execution.",
                                                                "items": {
                                                                    "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                                                                    "properties": {
                                                                        "Key": {
                                                                            "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                                            "maxLength": 128,
                                                                            "minLength": 1,
                                                                            "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                                                            "type": "string"
                                                                        },
                                                                        "Values": {
                                                                            "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "maxItems": 50,
                                                                            "minItems": 0,
                                                                            "type": "array"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "maxItems": 5,
                                                                "minItems": 0,
                                                                "type": "array"
                                                            },
                                                            "TimeoutSeconds": {
                                                                "description": "The timeout seconds of the step.",
                                                                "type": "integer"
                                                            },
                                                            "ValidNextSteps": {
                                                                "description": "Strategies used when step fails, we support Continue and Abort. Abort will fail the automation when the step fails. Continue will ignore the failure of current step and allow automation to execute the next step. With conditional branching, we add step:stepName to support the automation to go to another specific step.",
                                                                "items": {
                                                                    "maxLength": 65535,
                                                                    "minLength": 1,
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "StepExecutionsTruncated": {
                                                    "description": "A boolean value that indicates if the response contains the full list of the Automation step executions. If true, use the DescribeAutomationStepExecutions API action to get the full list of step executions.",
                                                    "type": "boolean"
                                                },
                                                "Target": {
                                                    "description": "The target of the execution.",
                                                    "type": "string"
                                                },
                                                "TargetLocations": {
                                                    "description": "The combination of AWS Regions and/or AWS accounts where you want to execute the Automation.",
                                                    "items": {
                                                        "description": "The combination of AWS Regions and accounts targeted by the current Automation execution.",
                                                        "properties": {
                                                            "Accounts": {
                                                                "description": "The AWS accounts targeted by the current Automation execution.",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "maxItems": 50,
                                                                "minItems": 1,
                                                                "type": "array"
                                                            },
                                                            "ExecutionRoleName": {
                                                                "description": "The Automation execution role used by the currently executing Automation.",
                                                                "maxLength": 64,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            },
                                                            "Regions": {
                                                                "description": "The AWS Regions targeted by the current Automation execution.",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "maxItems": 50,
                                                                "minItems": 1,
                                                                "type": "array"
                                                            },
                                                            "TargetLocationMaxConcurrency": {
                                                                "description": "The maxium number of AWS accounts and AWS regions allowed to run the Automation concurrently ",
                                                                "maxLength": 7,
                                                                "minLength": 1,
                                                                "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                                                                "type": "string"
                                                            },
                                                            "TargetLocationMaxErrors": {
                                                                "description": "The maxium number of errors allowed before the system stops queueing additional Automation executions for the currently executing Automation. ",
                                                                "maxLength": 7,
                                                                "minLength": 1,
                                                                "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "maxItems": 100,
                                                    "minItems": 1,
                                                    "type": "array"
                                                },
                                                "TargetMaps": {
                                                    "description": "The specified key-value mapping of document parameters to target resources.",
                                                    "items": {
                                                        "items": {
                                                            "properties": {
                                                                "key": {
                                                                    "maxLength": 50,
                                                                    "minLength": 1,
                                                                    "type": "string"
                                                                },
                                                                "value": {
                                                                    "items": {
                                                                        "maxLength": 50,
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    },
                                                                    "maxItems": 25,
                                                                    "minItems": 0,
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "maxItems": 20,
                                                        "minItems": 1,
                                                        "type": "array"
                                                    },
                                                    "maxItems": 300,
                                                    "minItems": 0,
                                                    "type": "array"
                                                },
                                                "TargetParameterName": {
                                                    "description": "The parameter name.",
                                                    "maxLength": 30,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Targets": {
                                                    "description": "The specified targets.",
                                                    "items": {
                                                        "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                                                        "properties": {
                                                            "Key": {
                                                                "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                                "maxLength": 128,
                                                                "minLength": 1,
                                                                "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                                                "type": "string"
                                                            },
                                                            "Values": {
                                                                "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "maxItems": 50,
                                                                "minItems": 0,
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "maxItems": 5,
                                                    "minItems": 0,
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "AutomationExecutionNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "AutomationExecutionId": {
                                        "description": "The unique identifier for an existing automation execution to examine. The execution ID is returned by StartAutomationExecution when the execution of an Automation document is initiated.",
                                        "maxLength": 36,
                                        "minLength": 36,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "AutomationExecutionId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#GetCommandInvocation": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Returns detailed information about command execution for an invocation or plugin. ",
                "operationId": "GetCommandInvocation",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "CloudWatchOutputConfig": {
                                            "description": "CloudWatch Logs information where Systems Manager sent the command output.",
                                            "properties": {
                                                "CloudWatchLogGroupName": {
                                                    "description": "The name of the CloudWatch log group where you want to send command output. If you don't specify a group name, Systems Manager automatically creates a log group for you. The log group uses the following naming format: aws/ssm/<i>SystemsManagerDocumentName</i>.",
                                                    "maxLength": 512,
                                                    "minLength": 1,
                                                    "pattern": "[\\.\\-_/#A-Za-z0-9]+",
                                                    "type": "string"
                                                },
                                                "CloudWatchOutputEnabled": {
                                                    "description": "Enables Systems Manager to send command output to CloudWatch Logs.",
                                                    "type": "boolean"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "CommandId": {
                                            "description": "The parent command ID of the invocation plugin.",
                                            "maxLength": 36,
                                            "minLength": 36,
                                            "type": "string"
                                        },
                                        "Comment": {
                                            "description": "The comment text for the command.",
                                            "maxLength": 100,
                                            "type": "string"
                                        },
                                        "DocumentName": {
                                            "description": "The name of the document that was executed. For example, AWS-RunShellScript.",
                                            "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                            "type": "string"
                                        },
                                        "DocumentVersion": {
                                            "description": "The SSM document version used in the request.",
                                            "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                            "type": "string"
                                        },
                                        "ExecutionElapsedTime": {
                                            "description": "Duration since ExecutionStartDateTime.",
                                            "pattern": "^([\\-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d(?!:))?)?(\\17[0-5]\\d([\\.,]\\d)?)?([zZ]|([\\-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$",
                                            "type": "string"
                                        },
                                        "ExecutionEndDateTime": {
                                            "description": "<p>The date and time the plugin was finished executing. Date and time are written in ISO 8601 format. For example, June 7, 2017 is represented as 2017-06-7. The following sample AWS CLI command uses the <code>InvokedAfter</code> filter.</p> <p> <code>aws ssm list-commands --filters key=InvokedAfter,value=2017-06-07T00:00:00Z</code> </p> <p>If the plugin has not started to execute, the string is empty.</p>",
                                            "pattern": "^([\\-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d(?!:))?)?(\\17[0-5]\\d([\\.,]\\d)?)?([zZ]|([\\-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$",
                                            "type": "string"
                                        },
                                        "ExecutionStartDateTime": {
                                            "description": "<p>The date and time the plugin started executing. Date and time are written in ISO 8601 format. For example, June 7, 2017 is represented as 2017-06-7. The following sample AWS CLI command uses the <code>InvokedBefore</code> filter.</p> <p> <code>aws ssm list-commands --filters key=InvokedBefore,value=2017-06-07T00:00:00Z</code> </p> <p>If the plugin has not started to execute, the string is empty.</p>",
                                            "pattern": "^([\\-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d(?!:))?)?(\\17[0-5]\\d([\\.,]\\d)?)?([zZ]|([\\-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$",
                                            "type": "string"
                                        },
                                        "InstanceId": {
                                            "description": "The ID of the managed instance targeted by the command. A managed instance can be an Amazon EC2 instance or an instance in your hybrid environment that is configured for Systems Manager.",
                                            "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                                            "type": "string"
                                        },
                                        "PluginName": {
                                            "description": "The name of the plugin for which you want detailed results. For example, aws:RunShellScript is a plugin.",
                                            "minLength": 4,
                                            "type": "string"
                                        },
                                        "ResponseCode": {
                                            "description": "The error level response code for the plugin script. If the response code is -1, then the command has not started executing on the instance, or it was not received by the instance.",
                                            "type": "integer"
                                        },
                                        "StandardErrorContent": {
                                            "description": "The first 8,000 characters written by the plugin to stderr. If the command has not finished executing, then this string is empty.",
                                            "maxLength": 8000,
                                            "type": "string"
                                        },
                                        "StandardErrorUrl": {
                                            "description": "The URL for the complete text written by the plugin to stderr. If the command has not finished executing, then this string is empty.",
                                            "type": "string"
                                        },
                                        "StandardOutputContent": {
                                            "description": "The first 24,000 characters written by the plugin to stdout. If the command has not finished executing, if ExecutionStatus is neither Succeeded nor Failed, then this string is empty.",
                                            "maxLength": 24000,
                                            "type": "string"
                                        },
                                        "StandardOutputUrl": {
                                            "description": "The URL for the complete text written by the plugin to stdout in Amazon S3. If an Amazon S3 bucket was not specified, then this string is empty.",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The status of this invocation plugin. This status can be different than StatusDetails.",
                                            "enum": [
                                                "Pending",
                                                "InProgress",
                                                "Delayed",
                                                "Success",
                                                "Cancelled",
                                                "TimedOut",
                                                "Failed",
                                                "Cancelling"
                                            ],
                                            "type": "string"
                                        },
                                        "StatusDetails": {
                                            "description": "<p>A detailed status of the command execution for an invocation. StatusDetails includes more information than Status because it includes states resulting from error and concurrency control parameters. StatusDetails can show different results than Status. For more information about these statuses, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/monitor-commands.html\">Understanding Command Statuses</a> in the <i>AWS Systems Manager User Guide</i>. StatusDetails can be one of the following values:</p> <ul> <li> <p>Pending: The command has not been sent to the instance.</p> </li> <li> <p>In Progress: The command has been sent to the instance but has not reached a terminal state.</p> </li> <li> <p>Delayed: The system attempted to send the command to the target, but the target was not available. The instance might not be available because of network issues, the instance was stopped, etc. The system will try to deliver the command again.</p> </li> <li> <p>Success: The command or plugin was executed successfully. This is a terminal state.</p> </li> <li> <p>Delivery Timed Out: The command was not delivered to the instance before the delivery timeout expired. Delivery timeouts do not count against the parent command's MaxErrors limit, but they do contribute to whether the parent command status is Success or Incomplete. This is a terminal state.</p> </li> <li> <p>Execution Timed Out: The command started to execute on the instance, but the execution was not complete before the timeout expired. Execution timeouts count against the MaxErrors limit of the parent command. This is a terminal state.</p> </li> <li> <p>Failed: The command wasn't executed successfully on the instance. For a plugin, this indicates that the result code was not zero. For a command invocation, this indicates that the result code for one or more plugins was not zero. Invocation failures count against the MaxErrors limit of the parent command. This is a terminal state.</p> </li> <li> <p>Canceled: The command was terminated before it was completed. This is a terminal state.</p> </li> <li> <p>Undeliverable: The command can't be delivered to the instance. The instance might not exist or might not be responding. Undeliverable invocations don't count against the parent command's MaxErrors limit and don't contribute to whether the parent command status is Success or Incomplete. This is a terminal state.</p> </li> <li> <p>Terminated: The parent command exceeded its MaxErrors limit and subsequent command invocations were canceled by the system. This is a terminal state.</p> </li> </ul>",
                                            "maxLength": 100,
                                            "minLength": 0,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidCommandId",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidInstanceId",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "InvalidPluginName",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "InvocationDoesNotExist",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "CommandId": {
                                        "description": "(Required) The parent command ID of the invocation plugin.",
                                        "maxLength": 36,
                                        "minLength": 36,
                                        "type": "string"
                                    },
                                    "InstanceId": {
                                        "description": "(Required) The ID of the managed instance targeted by the command. A managed instance can be an Amazon EC2 instance or an instance in your hybrid environment that is configured for Systems Manager.",
                                        "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                                        "type": "string"
                                    },
                                    "PluginName": {
                                        "description": "(Optional) The name of the plugin for which you want detailed results. If the document contains only one plugin, the name can be omitted and the details will be returned.",
                                        "minLength": 4,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "CommandId",
                                    "InstanceId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#GetConnectionStatus": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Retrieves the Session Manager connection status for an instance to determine whether it is connected and ready to receive Session Manager connections.",
                "operationId": "GetConnectionStatus",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Status": {
                                            "description": "The status of the connection to the instance. For example, 'Connected' or 'Not Connected'.",
                                            "enum": [
                                                "Connected",
                                                "NotConnected"
                                            ],
                                            "type": "string"
                                        },
                                        "Target": {
                                            "description": "The ID of the instance to check connection status. ",
                                            "maxLength": 50,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Target": {
                                        "description": "The ID of the instance.",
                                        "maxLength": 50,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Target"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#GetDefaultPatchBaseline": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Retrieves the default patch baseline. Note that Systems Manager supports creating multiple default patch baselines. For example, you can create a default patch baseline for each operating system.</p> <p>If you do not specify an operating system value, the default patch baseline for Windows is returned.</p>",
                "operationId": "GetDefaultPatchBaseline",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "BaselineId": {
                                            "description": "The ID of the default patch baseline.",
                                            "maxLength": 128,
                                            "minLength": 20,
                                            "pattern": "^[a-zA-Z0-9_\\-:/]{20,128}$",
                                            "type": "string"
                                        },
                                        "OperatingSystem": {
                                            "description": "The operating system for the returned patch baseline. ",
                                            "enum": [
                                                "WINDOWS",
                                                "AMAZON_LINUX",
                                                "AMAZON_LINUX_2",
                                                "UBUNTU",
                                                "REDHAT_ENTERPRISE_LINUX",
                                                "SUSE",
                                                "CENTOS"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "OperatingSystem": {
                                        "description": "Returns the default patch baseline for the specified operating system.",
                                        "enum": [
                                            "WINDOWS",
                                            "AMAZON_LINUX",
                                            "AMAZON_LINUX_2",
                                            "UBUNTU",
                                            "REDHAT_ENTERPRISE_LINUX",
                                            "SUSE",
                                            "CENTOS"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#GetDeployablePatchSnapshotForInstance": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Retrieves the current snapshot for the patch baseline the instance uses. This API is primarily used by the AWS-RunPatchBaseline Systems Manager document. ",
                "operationId": "GetDeployablePatchSnapshotForInstance",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "InstanceId": {
                                            "description": "The ID of the instance.",
                                            "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                                            "type": "string"
                                        },
                                        "Product": {
                                            "description": "Returns the specific operating system (for example Windows Server 2012 or Amazon Linux 2015.09) on the instance for the specified patch snapshot.",
                                            "type": "string"
                                        },
                                        "SnapshotDownloadUrl": {
                                            "description": "A pre-signed Amazon S3 URL that can be used to download the patch snapshot.",
                                            "type": "string"
                                        },
                                        "SnapshotId": {
                                            "description": "The user-defined snapshot ID.",
                                            "maxLength": 36,
                                            "minLength": 36,
                                            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "UnsupportedOperatingSystem",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "InstanceId": {
                                        "description": "The ID of the instance for which the appropriate patch snapshot should be retrieved.",
                                        "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                                        "type": "string"
                                    },
                                    "SnapshotId": {
                                        "description": "The user-defined snapshot ID.",
                                        "maxLength": 36,
                                        "minLength": 36,
                                        "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "InstanceId",
                                    "SnapshotId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#GetDocument": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Gets the contents of the specified Systems Manager document.",
                "operationId": "GetDocument",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "AttachmentsContent": {
                                            "description": "A description of the document attachments, including names, locations, sizes, etc.",
                                            "items": {
                                                "description": "A structure that includes attributes that describe a document attachment.",
                                                "properties": {
                                                    "Hash": {
                                                        "description": "The cryptographic hash value of the document content.",
                                                        "maxLength": 256,
                                                        "type": "string"
                                                    },
                                                    "HashType": {
                                                        "description": "The hash algorithm used to calculate the hash value.",
                                                        "enum": [
                                                            "Sha256"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The name of an attachment.",
                                                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                                        "type": "string"
                                                    },
                                                    "Size": {
                                                        "description": "The size of an attachment in bytes.",
                                                        "type": "integer"
                                                    },
                                                    "Url": {
                                                        "description": "The URL location of the attachment content.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "Content": {
                                            "description": "The contents of the Systems Manager document.",
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "DocumentFormat": {
                                            "description": "The document format, either JSON or YAML.",
                                            "enum": [
                                                "YAML",
                                                "JSON"
                                            ],
                                            "type": "string"
                                        },
                                        "DocumentType": {
                                            "description": "The document type.",
                                            "enum": [
                                                "Command",
                                                "Policy",
                                                "Automation",
                                                "Session",
                                                "Package"
                                            ],
                                            "type": "string"
                                        },
                                        "DocumentVersion": {
                                            "description": "The document version.",
                                            "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                            "type": "string"
                                        },
                                        "Name": {
                                            "description": "The name of the Systems Manager document.",
                                            "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The status of the Systems Manager document, such as <code>Creating</code>, <code>Active</code>, <code>Updating</code>, <code>Failed</code>, and <code>Deleting</code>.",
                                            "enum": [
                                                "Creating",
                                                "Active",
                                                "Updating",
                                                "Deleting",
                                                "Failed"
                                            ],
                                            "type": "string"
                                        },
                                        "StatusInformation": {
                                            "description": "A message returned by AWS Systems Manager that explains the <code>Status</code> value. For example, a <code>Failed</code> status might be explained by the <code>StatusInformation</code> message, \"The specified S3 bucket does not exist. Verify that the URL of the S3 bucket is correct.\"",
                                            "type": "string"
                                        },
                                        "VersionName": {
                                            "description": "The version of the artifact associated with the document. For example, \"Release 12, Update 6\". This value is unique across all versions of a document, and cannot be changed.",
                                            "pattern": "^[a-zA-Z0-9_\\-.]{1,128}$",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidDocument",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidDocumentVersion",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "DocumentFormat": {
                                        "description": "Returns the document in the specified format. The document format can be either JSON or YAML. JSON is the default format.",
                                        "enum": [
                                            "YAML",
                                            "JSON"
                                        ],
                                        "type": "string"
                                    },
                                    "DocumentVersion": {
                                        "description": "The document version for which you want information.",
                                        "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "The name of the Systems Manager document.",
                                        "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                                        "type": "string"
                                    },
                                    "VersionName": {
                                        "description": "An optional field specifying the version of the artifact associated with the document. For example, \"Release 12, Update 6\". This value is unique across all versions of a document, and cannot be changed.",
                                        "pattern": "^[a-zA-Z0-9_\\-.]{1,128}$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Name"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#GetInventory": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Query inventory information.",
                "operationId": "GetInventory",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Entities": {
                                            "description": "Collection of inventory entities such as a collection of instance inventory. ",
                                            "items": {
                                                "description": "Inventory query results.",
                                                "properties": {
                                                    "Data": {
                                                        "description": "The data section in the inventory result entity JSON.",
                                                        "items": {
                                                            "properties": {
                                                                "key": {
                                                                    "type": "string"
                                                                },
                                                                "value": {
                                                                    "description": "The inventory result item.",
                                                                    "properties": {
                                                                        "CaptureTime": {
                                                                            "description": "The time inventory item data was captured.",
                                                                            "pattern": "^(20)[0-9][0-9]-(0[1-9]|1[012])-([12][0-9]|3[01]|0[1-9])(T)(2[0-3]|[0-1][0-9])(:[0-5][0-9])(:[0-5][0-9])(Z)$",
                                                                            "type": "string"
                                                                        },
                                                                        "Content": {
                                                                            "description": "Contains all the inventory data of the item type. Results include attribute names and values. ",
                                                                            "items": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "key": {
                                                                                            "maxLength": 64,
                                                                                            "minLength": 1,
                                                                                            "type": "string"
                                                                                        },
                                                                                        "value": {
                                                                                            "maxLength": 4096,
                                                                                            "minLength": 0,
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "maxItems": 50,
                                                                                "minItems": 0,
                                                                                "type": "array"
                                                                            },
                                                                            "maxItems": 10000,
                                                                            "minItems": 0,
                                                                            "type": "array"
                                                                        },
                                                                        "ContentHash": {
                                                                            "description": "MD5 hash of the inventory item type contents. The content hash is used to determine whether to update inventory information. The PutInventory API does not update the inventory item type contents if the MD5 hash has not changed since last update. ",
                                                                            "maxLength": 256,
                                                                            "type": "string"
                                                                        },
                                                                        "SchemaVersion": {
                                                                            "description": "The schema version for the inventory result item/",
                                                                            "pattern": "^([0-9]{1,6})(\\.[0-9]{1,6})$",
                                                                            "type": "string"
                                                                        },
                                                                        "TypeName": {
                                                                            "description": "The name of the inventory result item type.",
                                                                            "maxLength": 100,
                                                                            "minLength": 1,
                                                                            "pattern": "^(AWS|Custom):.*$",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "TypeName",
                                                                        "SchemaVersion",
                                                                        "Content"
                                                                    ],
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "Id": {
                                                        "description": "ID of the inventory result entity. For example, for managed instance inventory the result will be the managed instance ID. For EC2 instance inventory, the result will be the instance ID. ",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "NextToken": {
                                            "description": "The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidFilter",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidInventoryGroupException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "InvalidNextToken",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "InvalidTypeNameException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "InvalidAggregatorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "InvalidResultAttributeException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    },
                    "required": true
                }
            }
        },
        "/#GetInventorySchema": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Return a list of inventory type names for the account, or return a list of attribute names for a specific Inventory item type. ",
                "operationId": "GetInventorySchema",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "NextToken": {
                                            "description": "The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.",
                                            "type": "string"
                                        },
                                        "Schemas": {
                                            "description": "Inventory schemas returned by the request.",
                                            "items": {
                                                "description": "The inventory item schema definition. Users can use this to compose inventory query filters.",
                                                "properties": {
                                                    "Attributes": {
                                                        "description": "The schema attributes for inventory. This contains data type and attribute name.",
                                                        "items": {
                                                            "description": "Attributes are the entries within the inventory item content. It contains name and value.",
                                                            "properties": {
                                                                "DataType": {
                                                                    "description": "The data type of the inventory item attribute. ",
                                                                    "enum": [
                                                                        "string",
                                                                        "number"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "Name": {
                                                                    "description": "Name of the inventory item attribute.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "Name",
                                                                "DataType"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "maxItems": 50,
                                                        "minItems": 1,
                                                        "type": "array"
                                                    },
                                                    "DisplayName": {
                                                        "description": "The alias name of the inventory type. The alias name is used for display purposes.",
                                                        "type": "string"
                                                    },
                                                    "TypeName": {
                                                        "description": "The name of the inventory type. Default inventory item type names start with AWS. Custom inventory type names will start with Custom. Default inventory item types include the following: AWS:AWSComponent, AWS:Application, AWS:InstanceInformation, AWS:Network, and AWS:WindowsUpdate.",
                                                        "maxLength": 100,
                                                        "minLength": 1,
                                                        "pattern": "^(AWS|Custom):.*$",
                                                        "type": "string"
                                                    },
                                                    "Version": {
                                                        "description": "The schema version for the inventory item.",
                                                        "pattern": "^([0-9]{1,6})(\\.[0-9]{1,6})$",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "TypeName",
                                                    "Attributes"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidTypeNameException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidNextToken",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Aggregator": {
                                        "description": "Returns inventory schemas that support aggregation. For example, this call returns the <code>AWS:InstanceInformation</code> type, because it supports aggregation based on the <code>PlatformName</code>, <code>PlatformType</code>, and <code>PlatformVersion</code> attributes.",
                                        "type": "boolean"
                                    },
                                    "MaxResults": {
                                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                                        "maximum": 200,
                                        "minimum": 50,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "The token for the next set of items to return. (You received this token from a previous call.)",
                                        "type": "string"
                                    },
                                    "SubType": {
                                        "description": "Returns the sub-type schema for a specified inventory type.",
                                        "type": "boolean"
                                    },
                                    "TypeName": {
                                        "description": "The type of inventory item to return.",
                                        "maxLength": 100,
                                        "minLength": 0,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#GetMaintenanceWindow": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Retrieves a Maintenance Window.",
                "operationId": "GetMaintenanceWindow",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "AllowUnassociatedTargets": {
                                            "description": "Whether targets must be registered with the Maintenance Window before tasks can be defined for those targets.",
                                            "type": "boolean"
                                        },
                                        "CreatedDate": {
                                            "description": "The date the Maintenance Window was created.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Cutoff": {
                                            "description": "The number of hours before the end of the Maintenance Window that Systems Manager stops scheduling new tasks for execution.",
                                            "maximum": 23,
                                            "minimum": 0,
                                            "type": "integer"
                                        },
                                        "Description": {
                                            "description": "The description of the Maintenance Window.",
                                            "format": "password",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "Duration": {
                                            "description": "The duration of the Maintenance Window in hours.",
                                            "maximum": 24,
                                            "minimum": 1,
                                            "type": "integer"
                                        },
                                        "Enabled": {
                                            "description": "Whether the Maintenance Windows is enabled.",
                                            "type": "boolean"
                                        },
                                        "EndDate": {
                                            "description": "The date and time, in ISO-8601 Extended format, for when the Maintenance Window is scheduled to become inactive. The Maintenance Window will not run after this specified time.",
                                            "type": "string"
                                        },
                                        "ModifiedDate": {
                                            "description": "The date the Maintenance Window was last modified.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Name": {
                                            "description": "The name of the Maintenance Window.",
                                            "maxLength": 128,
                                            "minLength": 3,
                                            "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                            "type": "string"
                                        },
                                        "NextExecutionTime": {
                                            "description": "The next time the Maintenance Window will actually run, taking into account any specified times for the Maintenance Window to become active or inactive.",
                                            "type": "string"
                                        },
                                        "Schedule": {
                                            "description": "The schedule of the Maintenance Window in the form of a cron or rate expression.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "ScheduleTimezone": {
                                            "description": "The time zone that the scheduled Maintenance Window executions are based on, in Internet Assigned Numbers Authority (IANA) format. For example: \"America/Los_Angeles\", \"etc/UTC\", or \"Asia/Seoul\". For more information, see the <a href=\"https://www.iana.org/time-zones\">Time Zone Database</a> on the IANA website.",
                                            "type": "string"
                                        },
                                        "StartDate": {
                                            "description": "The date and time, in ISO-8601 Extended format, for when the Maintenance Window is scheduled to become active. The Maintenance Window will not run before this specified time.",
                                            "type": "string"
                                        },
                                        "WindowId": {
                                            "description": "The ID of the created Maintenance Window.",
                                            "maxLength": 20,
                                            "minLength": 20,
                                            "pattern": "^mw-[0-9a-f]{17}$",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "DoesNotExistException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "WindowId": {
                                        "description": "The ID of the desired Maintenance Window.",
                                        "maxLength": 20,
                                        "minLength": 20,
                                        "pattern": "^mw-[0-9a-f]{17}$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "WindowId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#GetMaintenanceWindowExecution": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Retrieves details about a specific task executed as part of a Maintenance Window execution.",
                "operationId": "GetMaintenanceWindowExecution",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "EndTime": {
                                            "description": "The time the Maintenance Window finished executing.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "StartTime": {
                                            "description": "The time the Maintenance Window started executing.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The status of the Maintenance Window execution.",
                                            "enum": [
                                                "PENDING",
                                                "IN_PROGRESS",
                                                "SUCCESS",
                                                "FAILED",
                                                "TIMED_OUT",
                                                "CANCELLING",
                                                "CANCELLED",
                                                "SKIPPED_OVERLAPPING"
                                            ],
                                            "type": "string"
                                        },
                                        "StatusDetails": {
                                            "description": "The details explaining the Status. Only available for certain status values.",
                                            "maxLength": 250,
                                            "minLength": 0,
                                            "type": "string"
                                        },
                                        "TaskIds": {
                                            "description": "The ID of the task executions from the Maintenance Window execution.",
                                            "items": {
                                                "maxLength": 36,
                                                "minLength": 36,
                                                "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "WindowExecutionId": {
                                            "description": "The ID of the Maintenance Window execution.",
                                            "maxLength": 36,
                                            "minLength": 36,
                                            "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "DoesNotExistException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "WindowExecutionId": {
                                        "description": "The ID of the Maintenance Window execution that includes the task.",
                                        "maxLength": 36,
                                        "minLength": 36,
                                        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "WindowExecutionId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#GetMaintenanceWindowExecutionTask": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Retrieves the details about a specific task executed as part of a Maintenance Window execution.",
                "operationId": "GetMaintenanceWindowExecutionTask",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "EndTime": {
                                            "description": "The time the task execution completed.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "MaxConcurrency": {
                                            "description": "The defined maximum number of task executions that could be run in parallel.",
                                            "maxLength": 7,
                                            "minLength": 1,
                                            "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                                            "type": "string"
                                        },
                                        "MaxErrors": {
                                            "description": "The defined maximum number of task execution errors allowed before scheduling of the task execution would have been stopped.",
                                            "maxLength": 7,
                                            "minLength": 1,
                                            "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                                            "type": "string"
                                        },
                                        "Priority": {
                                            "description": "The priority of the task.",
                                            "minimum": 0,
                                            "type": "integer"
                                        },
                                        "ServiceRole": {
                                            "description": "The role that was assumed when executing the task.",
                                            "type": "string"
                                        },
                                        "StartTime": {
                                            "description": "The time the task execution started.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The status of the task.",
                                            "enum": [
                                                "PENDING",
                                                "IN_PROGRESS",
                                                "SUCCESS",
                                                "FAILED",
                                                "TIMED_OUT",
                                                "CANCELLING",
                                                "CANCELLED",
                                                "SKIPPED_OVERLAPPING"
                                            ],
                                            "type": "string"
                                        },
                                        "StatusDetails": {
                                            "description": "The details explaining the Status. Only available for certain status values.",
                                            "maxLength": 250,
                                            "minLength": 0,
                                            "type": "string"
                                        },
                                        "TaskArn": {
                                            "description": "The ARN of the executed task.",
                                            "maxLength": 1600,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "TaskExecutionId": {
                                            "description": "The ID of the specific task execution in the Maintenance Window task that was retrieved.",
                                            "maxLength": 36,
                                            "minLength": 36,
                                            "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                                            "type": "string"
                                        },
                                        "TaskParameters": {
                                            "description": "<p>The parameters passed to the task when it was executed.</p> <note> <p> <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> </note> <p>The map has the following format:</p> <p>Key: string, between 1 and 255 characters</p> <p>Value: an array of strings, each string is between 1 and 255 characters</p>",
                                            "items": {
                                                "items": {
                                                    "properties": {
                                                        "key": {
                                                            "maxLength": 255,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "value": {
                                                            "description": "Defines the values for a task parameter.",
                                                            "properties": {
                                                                "Values": {
                                                                    "description": "This field contains an array of 0 or more strings, each 1 to 255 characters in length.",
                                                                    "items": {
                                                                        "format": "password",
                                                                        "maxLength": 255,
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "type": "array"
                                        },
                                        "Type": {
                                            "description": "The type of task executed.",
                                            "enum": [
                                                "RUN_COMMAND",
                                                "AUTOMATION",
                                                "STEP_FUNCTIONS",
                                                "LAMBDA"
                                            ],
                                            "type": "string"
                                        },
                                        "WindowExecutionId": {
                                            "description": "The ID of the Maintenance Window execution that includes the task.",
                                            "maxLength": 36,
                                            "minLength": 36,
                                            "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "DoesNotExistException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "TaskId": {
                                        "description": "The ID of the specific task execution in the Maintenance Window task that should be retrieved.",
                                        "maxLength": 36,
                                        "minLength": 36,
                                        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                                        "type": "string"
                                    },
                                    "WindowExecutionId": {
                                        "description": "The ID of the Maintenance Window execution that includes the task.",
                                        "maxLength": 36,
                                        "minLength": 36,
                                        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "WindowExecutionId",
                                    "TaskId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#GetMaintenanceWindowExecutionTaskInvocation": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Retrieves a task invocation. A task invocation is a specific task executing on a specific target. Maintenance Windows report status for all invocations. ",
                "operationId": "GetMaintenanceWindowExecutionTaskInvocation",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "EndTime": {
                                            "description": "The time that the task finished executing on the target.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "ExecutionId": {
                                            "description": "The execution ID.",
                                            "type": "string"
                                        },
                                        "InvocationId": {
                                            "description": "The invocation ID.",
                                            "maxLength": 36,
                                            "minLength": 36,
                                            "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                                            "type": "string"
                                        },
                                        "OwnerInformation": {
                                            "description": "User-provided value to be included in any CloudWatch events raised while running tasks for these targets in this Maintenance Window. ",
                                            "format": "password",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "Parameters": {
                                            "description": "The parameters used at the time that the task executed.",
                                            "format": "password",
                                            "type": "string"
                                        },
                                        "StartTime": {
                                            "description": "The time that the task started executing on the target.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The task status for an invocation.",
                                            "enum": [
                                                "PENDING",
                                                "IN_PROGRESS",
                                                "SUCCESS",
                                                "FAILED",
                                                "TIMED_OUT",
                                                "CANCELLING",
                                                "CANCELLED",
                                                "SKIPPED_OVERLAPPING"
                                            ],
                                            "type": "string"
                                        },
                                        "StatusDetails": {
                                            "description": "The details explaining the status. Details are only available for certain status values.",
                                            "maxLength": 250,
                                            "minLength": 0,
                                            "type": "string"
                                        },
                                        "TaskExecutionId": {
                                            "description": "The task execution ID.",
                                            "maxLength": 36,
                                            "minLength": 36,
                                            "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                                            "type": "string"
                                        },
                                        "TaskType": {
                                            "description": "Retrieves the task type for a Maintenance Window. Task types include the following: LAMBDA, STEP_FUNCTION, AUTOMATION, RUN_COMMAND.",
                                            "enum": [
                                                "RUN_COMMAND",
                                                "AUTOMATION",
                                                "STEP_FUNCTIONS",
                                                "LAMBDA"
                                            ],
                                            "type": "string"
                                        },
                                        "WindowExecutionId": {
                                            "description": "The Maintenance Window execution ID.",
                                            "maxLength": 36,
                                            "minLength": 36,
                                            "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                                            "type": "string"
                                        },
                                        "WindowTargetId": {
                                            "description": "The Maintenance Window target ID.",
                                            "maxLength": 36,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "DoesNotExistException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "InvocationId": {
                                        "description": "The invocation ID to retrieve.",
                                        "maxLength": 36,
                                        "minLength": 36,
                                        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                                        "type": "string"
                                    },
                                    "TaskId": {
                                        "description": "The ID of the specific task in the Maintenance Window task that should be retrieved. ",
                                        "maxLength": 36,
                                        "minLength": 36,
                                        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                                        "type": "string"
                                    },
                                    "WindowExecutionId": {
                                        "description": "The ID of the Maintenance Window execution for which the task is a part.",
                                        "maxLength": 36,
                                        "minLength": 36,
                                        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "WindowExecutionId",
                                    "TaskId",
                                    "InvocationId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#GetMaintenanceWindowTask": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Lists the tasks in a Maintenance Window.",
                "operationId": "GetMaintenanceWindowTask",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Description": {
                                            "description": "The retrieved task description.",
                                            "format": "password",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "LoggingInfo": {
                                            "description": "<p>The location in Amazon S3 where the task results are logged.</p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an S3 bucket to contain logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> </note>",
                                            "properties": {
                                                "S3BucketName": {
                                                    "description": "The name of an Amazon S3 bucket where execution logs are stored .",
                                                    "maxLength": 63,
                                                    "minLength": 3,
                                                    "type": "string"
                                                },
                                                "S3KeyPrefix": {
                                                    "description": "(Optional) The Amazon S3 bucket subfolder. ",
                                                    "maxLength": 500,
                                                    "type": "string"
                                                },
                                                "S3Region": {
                                                    "description": "The region where the Amazon S3 bucket is located.",
                                                    "maxLength": 20,
                                                    "minLength": 3,
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "S3BucketName",
                                                "S3Region"
                                            ],
                                            "type": "object"
                                        },
                                        "MaxConcurrency": {
                                            "description": "The maximum number of targets allowed to run this task in parallel.",
                                            "maxLength": 7,
                                            "minLength": 1,
                                            "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                                            "type": "string"
                                        },
                                        "MaxErrors": {
                                            "description": "The maximum number of errors allowed before the task stops being scheduled.",
                                            "maxLength": 7,
                                            "minLength": 1,
                                            "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                                            "type": "string"
                                        },
                                        "Name": {
                                            "description": "The retrieved task name.",
                                            "maxLength": 128,
                                            "minLength": 3,
                                            "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                            "type": "string"
                                        },
                                        "Priority": {
                                            "description": "The priority of the task when it executes. The lower the number, the higher the priority. Tasks that have the same priority are scheduled in parallel.",
                                            "minimum": 0,
                                            "type": "integer"
                                        },
                                        "ServiceRoleArn": {
                                            "description": "The IAM service role to assume during task execution.",
                                            "type": "string"
                                        },
                                        "Targets": {
                                            "description": "The targets where the task should execute.",
                                            "items": {
                                                "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                                                "properties": {
                                                    "Key": {
                                                        "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                                        "type": "string"
                                                    },
                                                    "Values": {
                                                        "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "maxItems": 50,
                                                        "minItems": 0,
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "maxItems": 5,
                                            "minItems": 0,
                                            "type": "array"
                                        },
                                        "TaskArn": {
                                            "description": "The resource that the task used during execution. For RUN_COMMAND and AUTOMATION task types, the TaskArn is the Systems Manager Document name/ARN. For LAMBDA tasks, the value is the function name/ARN. For STEP_FUNCTION tasks, the value is the state machine ARN.",
                                            "maxLength": 1600,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "TaskInvocationParameters": {
                                            "description": "The parameters to pass to the task when it executes.",
                                            "properties": {
                                                "Automation": {
                                                    "description": "The parameters for an AUTOMATION task type.",
                                                    "properties": {
                                                        "DocumentVersion": {
                                                            "description": "The version of an Automation document to use during task execution.",
                                                            "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                                            "type": "string"
                                                        },
                                                        "Parameters": {
                                                            "description": "<p>The parameters for the AUTOMATION task.</p> <p>For information about specifying and updating task parameters, see <a>RegisterTaskWithMaintenanceWindow</a> and <a>UpdateMaintenanceWindowTask</a>.</p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an S3 bucket to contain logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p> <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p>For AUTOMATION task types, Systems Manager ignores any values specified for these parameters.</p> </note>",
                                                            "items": {
                                                                "properties": {
                                                                    "key": {
                                                                        "maxLength": 30,
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    },
                                                                    "value": {
                                                                        "items": {
                                                                            "maxLength": 512,
                                                                            "minLength": 1,
                                                                            "type": "string"
                                                                        },
                                                                        "maxItems": 10,
                                                                        "minItems": 0,
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "maxItems": 200,
                                                            "minItems": 1,
                                                            "type": "array"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "Lambda": {
                                                    "description": "The parameters for a LAMBDA task type.",
                                                    "properties": {
                                                        "ClientContext": {
                                                            "description": "Pass client-specific information to the Lambda function that you are invoking. You can then process the client information in your Lambda function as you choose through the context variable.",
                                                            "maxLength": 8000,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "Payload": {
                                                            "description": "JSON to provide to your Lambda function as input.",
                                                            "format": "password",
                                                            "maxLength": 4096,
                                                            "type": "string"
                                                        },
                                                        "Qualifier": {
                                                            "description": "(Optional) Specify a Lambda function version or alias name. If you specify a function version, the action uses the qualified function ARN to invoke a specific Lambda function. If you specify an alias name, the action uses the alias ARN to invoke the Lambda function version to which the alias points.",
                                                            "maxLength": 128,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "RunCommand": {
                                                    "description": "The parameters for a RUN_COMMAND task type.",
                                                    "properties": {
                                                        "Comment": {
                                                            "description": "Information about the command(s) to execute.",
                                                            "maxLength": 100,
                                                            "type": "string"
                                                        },
                                                        "DocumentHash": {
                                                            "description": "The SHA-256 or SHA-1 hash created by the system when the document was created. SHA-1 hashes have been deprecated.",
                                                            "maxLength": 256,
                                                            "type": "string"
                                                        },
                                                        "DocumentHashType": {
                                                            "description": "SHA-256 or SHA-1. SHA-1 hashes have been deprecated.",
                                                            "enum": [
                                                                "Sha256",
                                                                "Sha1"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "NotificationConfig": {
                                                            "description": "Configurations for sending notifications about command status changes on a per-instance basis.",
                                                            "properties": {
                                                                "NotificationArn": {
                                                                    "description": "An Amazon Resource Name (ARN) for a Simple Notification Service (SNS) topic. Run Command pushes notifications about command status changes to this topic.",
                                                                    "type": "string"
                                                                },
                                                                "NotificationEvents": {
                                                                    "description": "The different events for which you can receive notifications. These events include the following: All (events), InProgress, Success, TimedOut, Cancelled, Failed. To learn more about these events, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/rc-sns-notifications.html\">Configuring Amazon SNS Notifications for Run Command</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                                    "items": {
                                                                        "enum": [
                                                                            "All",
                                                                            "InProgress",
                                                                            "Success",
                                                                            "TimedOut",
                                                                            "Cancelled",
                                                                            "Failed"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "NotificationType": {
                                                                    "description": "Command: Receive notification when the status of a command changes. Invocation: For commands sent to multiple instances, receive notification on a per-instance basis when the status of a command changes. ",
                                                                    "enum": [
                                                                        "Command",
                                                                        "Invocation"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "OutputS3BucketName": {
                                                            "description": "The name of the Amazon S3 bucket.",
                                                            "maxLength": 63,
                                                            "minLength": 3,
                                                            "type": "string"
                                                        },
                                                        "OutputS3KeyPrefix": {
                                                            "description": "The Amazon S3 bucket subfolder.",
                                                            "maxLength": 500,
                                                            "type": "string"
                                                        },
                                                        "Parameters": {
                                                            "description": "The parameters for the RUN_COMMAND task execution.",
                                                            "items": {
                                                                "properties": {
                                                                    "key": {
                                                                        "type": "string"
                                                                    },
                                                                    "value": {
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "ServiceRoleArn": {
                                                            "description": "The IAM service role to assume during task execution.",
                                                            "type": "string"
                                                        },
                                                        "TimeoutSeconds": {
                                                            "description": "If this time is reached and the command has not already started executing, it doesn't run.",
                                                            "maximum": 2592000,
                                                            "minimum": 30,
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "StepFunctions": {
                                                    "description": "The parameters for a STEP_FUNCTION task type.",
                                                    "properties": {
                                                        "Input": {
                                                            "description": "The inputs for the STEP_FUNCTION task.",
                                                            "format": "password",
                                                            "maxLength": 4096,
                                                            "type": "string"
                                                        },
                                                        "Name": {
                                                            "description": "The name of the STEP_FUNCTION task.",
                                                            "maxLength": 80,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "TaskParameters": {
                                            "description": "<p>The parameters to pass to the task when it executes.</p> <note> <p> <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> </note>",
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "maxLength": 255,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "description": "Defines the values for a task parameter.",
                                                        "properties": {
                                                            "Values": {
                                                                "description": "This field contains an array of 0 or more strings, each 1 to 255 characters in length.",
                                                                "items": {
                                                                    "format": "password",
                                                                    "maxLength": 255,
                                                                    "minLength": 1,
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "TaskType": {
                                            "description": "The type of task to execute.",
                                            "enum": [
                                                "RUN_COMMAND",
                                                "AUTOMATION",
                                                "STEP_FUNCTIONS",
                                                "LAMBDA"
                                            ],
                                            "type": "string"
                                        },
                                        "WindowId": {
                                            "description": "The retrieved Maintenance Window ID.",
                                            "maxLength": 20,
                                            "minLength": 20,
                                            "pattern": "^mw-[0-9a-f]{17}$",
                                            "type": "string"
                                        },
                                        "WindowTaskId": {
                                            "description": "The retrieved Maintenance Window task ID.",
                                            "maxLength": 36,
                                            "minLength": 36,
                                            "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "DoesNotExistException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "WindowId": {
                                        "description": "The Maintenance Window ID that includes the task to retrieve.",
                                        "maxLength": 20,
                                        "minLength": 20,
                                        "pattern": "^mw-[0-9a-f]{17}$",
                                        "type": "string"
                                    },
                                    "WindowTaskId": {
                                        "description": "The Maintenance Window task ID to retrieve.",
                                        "maxLength": 36,
                                        "minLength": 36,
                                        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "WindowId",
                                    "WindowTaskId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#GetParameter": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Get information about a parameter by using the parameter name. Don't confuse this API action with the <a>GetParameters</a> API action.",
                "operationId": "GetParameter",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Parameter": {
                                            "description": "Information about a parameter.",
                                            "properties": {
                                                "ARN": {
                                                    "description": "The Amazon Resource Name (ARN) of the parameter.",
                                                    "type": "string"
                                                },
                                                "LastModifiedDate": {
                                                    "description": "Date the parameter was last changed or updated and the parameter version was created.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the parameter.",
                                                    "maxLength": 2048,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Selector": {
                                                    "description": "<p>Either the version number or the label used to retrieve the parameter value. Specify selectors by using one of the following formats:</p> <p>parameter_name:version</p> <p>parameter_name:label</p>",
                                                    "maxLength": 128,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "SourceResult": {
                                                    "description": "Applies to parameters that reference information in other AWS services. SourceResult is the raw result or response from the source.",
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "description": "The type of parameter. Valid values include the following: String, String list, Secure string.",
                                                    "enum": [
                                                        "String",
                                                        "StringList",
                                                        "SecureString"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The parameter value.",
                                                    "maxLength": 4096,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Version": {
                                                    "description": "The parameter version.",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidKeyId",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ParameterNotFound",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ParameterVersionNotFound",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Name": {
                                        "description": "The name of the parameter you want to query.",
                                        "maxLength": 2048,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "WithDecryption": {
                                        "description": "Return decrypted values for secure string parameters. This flag is ignored for String and StringList parameter types.",
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "Name"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#GetParameterHistory": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Query a list of all parameters used by the AWS account.",
                "operationId": "GetParameterHistory",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxResults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "NextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "NextToken": {
                                            "description": "The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.",
                                            "type": "string"
                                        },
                                        "Parameters": {
                                            "description": "A list of parameters returned by the request.",
                                            "items": {
                                                "description": "Information about parameter usage.",
                                                "properties": {
                                                    "AllowedPattern": {
                                                        "description": "<p>Parameter names can include the following letters and symbols.</p> <p>a-zA-Z0-9_.-</p>",
                                                        "maxLength": 1024,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "Description": {
                                                        "description": "Information about the parameter.",
                                                        "maxLength": 1024,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "KeyId": {
                                                        "description": "The ID of the query key used for this parameter.",
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "pattern": "^([a-zA-Z0-9:/_-]+)$",
                                                        "type": "string"
                                                    },
                                                    "Labels": {
                                                        "description": "Labels assigned to the parameter version.",
                                                        "items": {
                                                            "maxLength": 100,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "maxItems": 10,
                                                        "minItems": 1,
                                                        "type": "array"
                                                    },
                                                    "LastModifiedDate": {
                                                        "description": "Date the parameter was last changed or updated.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "LastModifiedUser": {
                                                        "description": "Amazon Resource Name (ARN) of the AWS user who last changed the parameter.",
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the parameter.",
                                                        "maxLength": 2048,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "Type": {
                                                        "description": "The type of parameter used.",
                                                        "enum": [
                                                            "String",
                                                            "StringList",
                                                            "SecureString"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Value": {
                                                        "description": "The parameter value.",
                                                        "maxLength": 4096,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "Version": {
                                                        "description": "The parameter version.",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ParameterNotFound",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidNextToken",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "InvalidKeyId",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "MaxResults": {
                                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                                        "maximum": 50,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "Name": {
                                        "description": "The name of a parameter you want to query.",
                                        "maxLength": 2048,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "NextToken": {
                                        "description": "The token for the next set of items to return. (You received this token from a previous call.)",
                                        "type": "string"
                                    },
                                    "WithDecryption": {
                                        "description": "Return decrypted values for secure string parameters. This flag is ignored for String and StringList parameter types.",
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "Name"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#GetParameters": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Get details of a parameter. Don't confuse this API action with the <a>GetParameter</a> API action.",
                "operationId": "GetParameters",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "InvalidParameters": {
                                            "description": "A list of parameters that are not formatted correctly or do not run when executed.",
                                            "items": {
                                                "maxLength": 2048,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "maxItems": 10,
                                            "minItems": 1,
                                            "type": "array"
                                        },
                                        "Parameters": {
                                            "description": "A list of details for a parameter.",
                                            "items": {
                                                "description": "An Amazon EC2 Systems Manager parameter in Parameter Store.",
                                                "properties": {
                                                    "ARN": {
                                                        "description": "The Amazon Resource Name (ARN) of the parameter.",
                                                        "type": "string"
                                                    },
                                                    "LastModifiedDate": {
                                                        "description": "Date the parameter was last changed or updated and the parameter version was created.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the parameter.",
                                                        "maxLength": 2048,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "Selector": {
                                                        "description": "<p>Either the version number or the label used to retrieve the parameter value. Specify selectors by using one of the following formats:</p> <p>parameter_name:version</p> <p>parameter_name:label</p>",
                                                        "maxLength": 128,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "SourceResult": {
                                                        "description": "Applies to parameters that reference information in other AWS services. SourceResult is the raw result or response from the source.",
                                                        "type": "string"
                                                    },
                                                    "Type": {
                                                        "description": "The type of parameter. Valid values include the following: String, String list, Secure string.",
                                                        "enum": [
                                                            "String",
                                                            "StringList",
                                                            "SecureString"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Value": {
                                                        "description": "The parameter value.",
                                                        "maxLength": 4096,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "Version": {
                                                        "description": "The parameter version.",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidKeyId",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Names": {
                                        "description": "Names of the parameters for which you want to query information.",
                                        "items": {
                                            "maxLength": 2048,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "maxItems": 10,
                                        "minItems": 1,
                                        "type": "array"
                                    },
                                    "WithDecryption": {
                                        "description": "Return decrypted secure string value. Return decrypted values for secure string parameters. This flag is ignored for String and StringList parameter types.",
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "Names"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#GetParametersByPath": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Retrieve parameters in a specific hierarchy. For more information, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-paramstore-working.html\">Working with Systems Manager Parameters</a> in the <i>AWS Systems Manager User Guide</i>. </p> <p>Request results are returned on a best-effort basis. If you specify <code>MaxResults</code> in the request, the response includes information up to the limit specified. The number of items returned, however, can be between zero and the value of <code>MaxResults</code>. If the service reaches an internal limit while processing the results, it stops the operation and returns the matching values up to that point and a <code>NextToken</code>. You can specify the <code>NextToken</code> in a subsequent call to get the next set of results.</p> <note> <p>This API action doesn't support filtering by tags. </p> </note>",
                "operationId": "GetParametersByPath",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxResults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "NextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "NextToken": {
                                            "description": "The token for the next set of items to return. Use this token to get the next set of results.",
                                            "type": "string"
                                        },
                                        "Parameters": {
                                            "description": "A list of parameters found in the specified hierarchy.",
                                            "items": {
                                                "description": "An Amazon EC2 Systems Manager parameter in Parameter Store.",
                                                "properties": {
                                                    "ARN": {
                                                        "description": "The Amazon Resource Name (ARN) of the parameter.",
                                                        "type": "string"
                                                    },
                                                    "LastModifiedDate": {
                                                        "description": "Date the parameter was last changed or updated and the parameter version was created.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the parameter.",
                                                        "maxLength": 2048,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "Selector": {
                                                        "description": "<p>Either the version number or the label used to retrieve the parameter value. Specify selectors by using one of the following formats:</p> <p>parameter_name:version</p> <p>parameter_name:label</p>",
                                                        "maxLength": 128,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "SourceResult": {
                                                        "description": "Applies to parameters that reference information in other AWS services. SourceResult is the raw result or response from the source.",
                                                        "type": "string"
                                                    },
                                                    "Type": {
                                                        "description": "The type of parameter. Valid values include the following: String, String list, Secure string.",
                                                        "enum": [
                                                            "String",
                                                            "StringList",
                                                            "SecureString"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Value": {
                                                        "description": "The parameter value.",
                                                        "maxLength": 4096,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "Version": {
                                                        "description": "The parameter version.",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidFilterKey",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidFilterOption",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "InvalidFilterValue",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "InvalidKeyId",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "InvalidNextToken",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "MaxResults": {
                                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                                        "maximum": 10,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "A token to start the list. Use this token to get the next set of results. ",
                                        "type": "string"
                                    },
                                    "ParameterFilters": {
                                        "description": "<p>Filters to limit the request results.</p> <note> <p>You can't filter using the parameter name.</p> </note>",
                                        "items": {
                                            "description": "<p>One or more filters. Use a filter to return a more specific list of results.</p> <note> <p>The <code>Name</code> field can't be used with the <a>GetParametersByPath</a> API action.</p> </note>",
                                            "properties": {
                                                "Key": {
                                                    "description": "The name of the filter.",
                                                    "maxLength": 132,
                                                    "minLength": 1,
                                                    "pattern": "tag:.+|Name|Type|KeyId|Path|Label",
                                                    "type": "string"
                                                },
                                                "Option": {
                                                    "description": "Valid options are Equals and BeginsWith. For Path filter, valid options are Recursive and OneLevel.",
                                                    "maxLength": 10,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "The value you want to search for.",
                                                    "items": {
                                                        "maxLength": 1024,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "maxItems": 50,
                                                    "minItems": 1,
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Key"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "Path": {
                                        "description": "The hierarchy for the parameter. Hierarchies start with a forward slash (/) and end with the parameter name. A parameter name hierarchy can have a maximum of 15 levels. Here is an example of a hierarchy: <code>/Finance/Prod/IAD/WinServ2016/license33</code> ",
                                        "maxLength": 2048,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "Recursive": {
                                        "description": "<p>Retrieve all parameters within a hierarchy.</p> <important> <p>If a user has access to a path, then the user can access all levels of that path. For example, if a user has permission to access path /a, then the user can also access /a/b. Even if a user has explicitly been denied access in IAM for parameter /a, they can still call the GetParametersByPath API action recursively and view /a/b.</p> </important>",
                                        "type": "boolean"
                                    },
                                    "WithDecryption": {
                                        "description": "Retrieve all parameters in a hierarchy with their value decrypted.",
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "Path"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#GetPatchBaseline": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Retrieves information about a patch baseline.",
                "operationId": "GetPatchBaseline",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ApprovalRules": {
                                            "description": "A set of rules used to include patches in the baseline.",
                                            "properties": {
                                                "PatchRules": {
                                                    "description": "The rules that make up the rule group.",
                                                    "items": {
                                                        "description": "Defines an approval rule for a patch baseline.",
                                                        "properties": {
                                                            "ApproveAfterDays": {
                                                                "description": "The number of days after the release date of each patch matched by the rule that the patch is marked as approved in the patch baseline. For example, a value of <code>7</code> means that patches are approved seven days after they are released. ",
                                                                "maximum": 100,
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            },
                                                            "ComplianceLevel": {
                                                                "description": "A compliance severity level for all approved patches in a patch baseline. Valid compliance severity levels include the following: Unspecified, Critical, High, Medium, Low, and Informational.",
                                                                "enum": [
                                                                    "CRITICAL",
                                                                    "HIGH",
                                                                    "MEDIUM",
                                                                    "LOW",
                                                                    "INFORMATIONAL",
                                                                    "UNSPECIFIED"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "EnableNonSecurity": {
                                                                "description": "For instances identified by the approval rule filters, enables a patch baseline to apply non-security updates available in the specified repository. The default value is 'false'. Applies to Linux instances only.",
                                                                "type": "boolean"
                                                            },
                                                            "PatchFilterGroup": {
                                                                "description": "The patch filter group that defines the criteria for the rule.",
                                                                "properties": {
                                                                    "PatchFilters": {
                                                                        "description": "The set of patch filters that make up the group.",
                                                                        "items": {
                                                                            "description": "<p>Defines a patch filter.</p> <p>A patch filter consists of key/value pairs, but not all keys are valid for all operating system types. For example, the key <code>PRODUCT</code> is valid for all supported operating system types. The key <code>MSRC_SEVERITY</code>, however, is valid only for Windows operating systems, and the key <code>SECTION</code> is valid only for Ubuntu operating systems.</p> <p>Refer to the following sections for information about which keys may be used with each major operating system, and which values are valid for each key.</p> <p> <b>Windows Operating Systems</b> </p> <p>The supported keys for Windows operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>MSRC_SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Windows7</code> </p> </li> <li> <p> <code>Windows8</code> </p> </li> <li> <p> <code>Windows8.1</code> </p> </li> <li> <p> <code>Windows8Embedded</code> </p> </li> <li> <p> <code>Windows10</code> </p> </li> <li> <p> <code>Windows10LTSB</code> </p> </li> <li> <p> <code>WindowsServer2008</code> </p> </li> <li> <p> <code>WindowsServer2008R2</code> </p> </li> <li> <p> <code>WindowsServer2012</code> </p> </li> <li> <p> <code>WindowsServer2012R2</code> </p> </li> <li> <p> <code>WindowsServer2016</code> </p> </li> <li> <p> <code>WindowsServer2019</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>CriticalUpdates</code> </p> </li> <li> <p> <code>DefinitionUpdates</code> </p> </li> <li> <p> <code>Drivers</code> </p> </li> <li> <p> <code>FeaturePacks</code> </p> </li> <li> <p> <code>SecurityUpdates</code> </p> </li> <li> <p> <code>ServicePacks</code> </p> </li> <li> <p> <code>Tools</code> </p> </li> <li> <p> <code>UpdateRollups</code> </p> </li> <li> <p> <code>Updates</code> </p> </li> <li> <p> <code>Upgrades</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>MSRC_SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Moderate</code> </p> </li> <li> <p> <code>Low</code> </p> </li> <li> <p> <code>Unspecified</code> </p> </li> </ul> <p> <b>Ubuntu Operating Systems</b> </p> <p>The supported keys for Ubuntu operating systems are <code>PRODUCT</code>, <code>PRIORITY</code>, and <code>SECTION</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Ubuntu14.04</code> </p> </li> <li> <p> <code>Ubuntu16.04</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>PRIORITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Required</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Standard</code> </p> </li> <li> <p> <code>Optional</code> </p> </li> <li> <p> <code>Extra</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SECTION</code> </p> <p>Only the length of the key value is validated. Minimum length is 1. Maximum length is 64.</p> <p> <b>Amazon Linux Operating Systems</b> </p> <p>The supported keys for Amazon Linux operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>AmazonLinux2012.03</code> </p> </li> <li> <p> <code>AmazonLinux2012.09</code> </p> </li> <li> <p> <code>AmazonLinux2013.03</code> </p> </li> <li> <p> <code>AmazonLinux2013.09</code> </p> </li> <li> <p> <code>AmazonLinux2014.03</code> </p> </li> <li> <p> <code>AmazonLinux2014.09</code> </p> </li> <li> <p> <code>AmazonLinux2015.03</code> </p> </li> <li> <p> <code>AmazonLinux2015.09</code> </p> </li> <li> <p> <code>AmazonLinux2016.03</code> </p> </li> <li> <p> <code>AmazonLinux2016.09</code> </p> </li> <li> <p> <code>AmazonLinux2017.03</code> </p> </li> <li> <p> <code>AmazonLinux2017.09</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>Amazon Linux 2 Operating Systems</b> </p> <p>The supported keys for Amazon Linux 2 operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>AmazonLinux2</code> </p> </li> <li> <p> <code>AmazonLinux2.0</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>RedHat Enterprise Linux (RHEL) Operating Systems</b> </p> <p>The supported keys for RedHat Enterprise Linux operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>RedhatEnterpriseLinux6.5</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.6</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.7</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.8</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.9</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.0</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.1</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.2</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.3</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.4</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.5</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.6</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>SUSE Linux Enterprise Server (SLES) Operating Systems</b> </p> <p>The supported keys for SLES operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Suse12.0</code> </p> </li> <li> <p> <code>Suse12.1</code> </p> </li> <li> <p> <code>Suse12.2</code> </p> </li> <li> <p> <code>Suse12.3</code> </p> </li> <li> <p> <code>Suse12.4</code> </p> </li> <li> <p> <code>Suse12.5</code> </p> </li> <li> <p> <code>Suse12.6</code> </p> </li> <li> <p> <code>Suse12.7</code> </p> </li> <li> <p> <code>Suse12.8</code> </p> </li> <li> <p> <code>Suse12.9</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Optional</code> </p> </li> <li> <p> <code>Feature</code> </p> </li> <li> <p> <code>Document</code> </p> </li> <li> <p> <code>Yast</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Moderate</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>CentOS Operating Systems</b> </p> <p>The supported keys for CentOS operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>CentOS6.5</code> </p> </li> <li> <p> <code>CentOS6.6</code> </p> </li> <li> <p> <code>CentOS6.7</code> </p> </li> <li> <p> <code>CentOS6.8</code> </p> </li> <li> <p> <code>CentOS6.9</code> </p> </li> <li> <p> <code>CentOS7.0</code> </p> </li> <li> <p> <code>CentOS7.1</code> </p> </li> <li> <p> <code>CentOS7.2</code> </p> </li> <li> <p> <code>CentOS7.3</code> </p> </li> <li> <p> <code>CentOS7.4</code> </p> </li> <li> <p> <code>CentOS7.5</code> </p> </li> <li> <p> <code>CentOS7.6</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul>",
                                                                            "properties": {
                                                                                "Key": {
                                                                                    "description": "<p>The key for the filter.</p> <p>See <a>PatchFilter</a> for lists of valid keys for each operating system type.</p>",
                                                                                    "enum": [
                                                                                        "PRODUCT",
                                                                                        "CLASSIFICATION",
                                                                                        "MSRC_SEVERITY",
                                                                                        "PATCH_ID",
                                                                                        "SECTION",
                                                                                        "PRIORITY",
                                                                                        "SEVERITY"
                                                                                    ],
                                                                                    "type": "string"
                                                                                },
                                                                                "Values": {
                                                                                    "description": "<p>The value for the filter key.</p> <p>See <a>PatchFilter</a> for lists of valid values for each key based on operating system type.</p>",
                                                                                    "items": {
                                                                                        "maxLength": 64,
                                                                                        "minLength": 1,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "maxItems": 20,
                                                                                    "minItems": 1,
                                                                                    "type": "array"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "Key",
                                                                                "Values"
                                                                            ],
                                                                            "type": "object"
                                                                        },
                                                                        "maxItems": 4,
                                                                        "minItems": 0,
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "PatchFilters"
                                                                ],
                                                                "type": "object"
                                                            }
                                                        },
                                                        "required": [
                                                            "PatchFilterGroup",
                                                            "ApproveAfterDays"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "maxItems": 10,
                                                    "minItems": 0,
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "PatchRules"
                                            ],
                                            "type": "object"
                                        },
                                        "ApprovedPatches": {
                                            "description": "A list of explicitly approved patches for the baseline.",
                                            "items": {
                                                "maxLength": 100,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "maxItems": 50,
                                            "minItems": 0,
                                            "type": "array"
                                        },
                                        "ApprovedPatchesComplianceLevel": {
                                            "description": "Returns the specified compliance severity level for approved patches in the patch baseline.",
                                            "enum": [
                                                "CRITICAL",
                                                "HIGH",
                                                "MEDIUM",
                                                "LOW",
                                                "INFORMATIONAL",
                                                "UNSPECIFIED"
                                            ],
                                            "type": "string"
                                        },
                                        "ApprovedPatchesEnableNonSecurity": {
                                            "description": "Indicates whether the list of approved patches includes non-security updates that should be applied to the instances. The default value is 'false'. Applies to Linux instances only.",
                                            "type": "boolean"
                                        },
                                        "BaselineId": {
                                            "description": "The ID of the retrieved patch baseline.",
                                            "maxLength": 128,
                                            "minLength": 20,
                                            "pattern": "^[a-zA-Z0-9_\\-:/]{20,128}$",
                                            "type": "string"
                                        },
                                        "CreatedDate": {
                                            "description": "The date the patch baseline was created.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Description": {
                                            "description": "A description of the patch baseline.",
                                            "maxLength": 1024,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "GlobalFilters": {
                                            "description": "A set of global filters used to exclude patches from the baseline.",
                                            "properties": {
                                                "PatchFilters": {
                                                    "description": "The set of patch filters that make up the group.",
                                                    "items": {
                                                        "description": "<p>Defines a patch filter.</p> <p>A patch filter consists of key/value pairs, but not all keys are valid for all operating system types. For example, the key <code>PRODUCT</code> is valid for all supported operating system types. The key <code>MSRC_SEVERITY</code>, however, is valid only for Windows operating systems, and the key <code>SECTION</code> is valid only for Ubuntu operating systems.</p> <p>Refer to the following sections for information about which keys may be used with each major operating system, and which values are valid for each key.</p> <p> <b>Windows Operating Systems</b> </p> <p>The supported keys for Windows operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>MSRC_SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Windows7</code> </p> </li> <li> <p> <code>Windows8</code> </p> </li> <li> <p> <code>Windows8.1</code> </p> </li> <li> <p> <code>Windows8Embedded</code> </p> </li> <li> <p> <code>Windows10</code> </p> </li> <li> <p> <code>Windows10LTSB</code> </p> </li> <li> <p> <code>WindowsServer2008</code> </p> </li> <li> <p> <code>WindowsServer2008R2</code> </p> </li> <li> <p> <code>WindowsServer2012</code> </p> </li> <li> <p> <code>WindowsServer2012R2</code> </p> </li> <li> <p> <code>WindowsServer2016</code> </p> </li> <li> <p> <code>WindowsServer2019</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>CriticalUpdates</code> </p> </li> <li> <p> <code>DefinitionUpdates</code> </p> </li> <li> <p> <code>Drivers</code> </p> </li> <li> <p> <code>FeaturePacks</code> </p> </li> <li> <p> <code>SecurityUpdates</code> </p> </li> <li> <p> <code>ServicePacks</code> </p> </li> <li> <p> <code>Tools</code> </p> </li> <li> <p> <code>UpdateRollups</code> </p> </li> <li> <p> <code>Updates</code> </p> </li> <li> <p> <code>Upgrades</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>MSRC_SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Moderate</code> </p> </li> <li> <p> <code>Low</code> </p> </li> <li> <p> <code>Unspecified</code> </p> </li> </ul> <p> <b>Ubuntu Operating Systems</b> </p> <p>The supported keys for Ubuntu operating systems are <code>PRODUCT</code>, <code>PRIORITY</code>, and <code>SECTION</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Ubuntu14.04</code> </p> </li> <li> <p> <code>Ubuntu16.04</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>PRIORITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Required</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Standard</code> </p> </li> <li> <p> <code>Optional</code> </p> </li> <li> <p> <code>Extra</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SECTION</code> </p> <p>Only the length of the key value is validated. Minimum length is 1. Maximum length is 64.</p> <p> <b>Amazon Linux Operating Systems</b> </p> <p>The supported keys for Amazon Linux operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>AmazonLinux2012.03</code> </p> </li> <li> <p> <code>AmazonLinux2012.09</code> </p> </li> <li> <p> <code>AmazonLinux2013.03</code> </p> </li> <li> <p> <code>AmazonLinux2013.09</code> </p> </li> <li> <p> <code>AmazonLinux2014.03</code> </p> </li> <li> <p> <code>AmazonLinux2014.09</code> </p> </li> <li> <p> <code>AmazonLinux2015.03</code> </p> </li> <li> <p> <code>AmazonLinux2015.09</code> </p> </li> <li> <p> <code>AmazonLinux2016.03</code> </p> </li> <li> <p> <code>AmazonLinux2016.09</code> </p> </li> <li> <p> <code>AmazonLinux2017.03</code> </p> </li> <li> <p> <code>AmazonLinux2017.09</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>Amazon Linux 2 Operating Systems</b> </p> <p>The supported keys for Amazon Linux 2 operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>AmazonLinux2</code> </p> </li> <li> <p> <code>AmazonLinux2.0</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>RedHat Enterprise Linux (RHEL) Operating Systems</b> </p> <p>The supported keys for RedHat Enterprise Linux operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>RedhatEnterpriseLinux6.5</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.6</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.7</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.8</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.9</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.0</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.1</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.2</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.3</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.4</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.5</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.6</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>SUSE Linux Enterprise Server (SLES) Operating Systems</b> </p> <p>The supported keys for SLES operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Suse12.0</code> </p> </li> <li> <p> <code>Suse12.1</code> </p> </li> <li> <p> <code>Suse12.2</code> </p> </li> <li> <p> <code>Suse12.3</code> </p> </li> <li> <p> <code>Suse12.4</code> </p> </li> <li> <p> <code>Suse12.5</code> </p> </li> <li> <p> <code>Suse12.6</code> </p> </li> <li> <p> <code>Suse12.7</code> </p> </li> <li> <p> <code>Suse12.8</code> </p> </li> <li> <p> <code>Suse12.9</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Optional</code> </p> </li> <li> <p> <code>Feature</code> </p> </li> <li> <p> <code>Document</code> </p> </li> <li> <p> <code>Yast</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Moderate</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>CentOS Operating Systems</b> </p> <p>The supported keys for CentOS operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>CentOS6.5</code> </p> </li> <li> <p> <code>CentOS6.6</code> </p> </li> <li> <p> <code>CentOS6.7</code> </p> </li> <li> <p> <code>CentOS6.8</code> </p> </li> <li> <p> <code>CentOS6.9</code> </p> </li> <li> <p> <code>CentOS7.0</code> </p> </li> <li> <p> <code>CentOS7.1</code> </p> </li> <li> <p> <code>CentOS7.2</code> </p> </li> <li> <p> <code>CentOS7.3</code> </p> </li> <li> <p> <code>CentOS7.4</code> </p> </li> <li> <p> <code>CentOS7.5</code> </p> </li> <li> <p> <code>CentOS7.6</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul>",
                                                        "properties": {
                                                            "Key": {
                                                                "description": "<p>The key for the filter.</p> <p>See <a>PatchFilter</a> for lists of valid keys for each operating system type.</p>",
                                                                "enum": [
                                                                    "PRODUCT",
                                                                    "CLASSIFICATION",
                                                                    "MSRC_SEVERITY",
                                                                    "PATCH_ID",
                                                                    "SECTION",
                                                                    "PRIORITY",
                                                                    "SEVERITY"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "Values": {
                                                                "description": "<p>The value for the filter key.</p> <p>See <a>PatchFilter</a> for lists of valid values for each key based on operating system type.</p>",
                                                                "items": {
                                                                    "maxLength": 64,
                                                                    "minLength": 1,
                                                                    "type": "string"
                                                                },
                                                                "maxItems": 20,
                                                                "minItems": 1,
                                                                "type": "array"
                                                            }
                                                        },
                                                        "required": [
                                                            "Key",
                                                            "Values"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "maxItems": 4,
                                                    "minItems": 0,
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "PatchFilters"
                                            ],
                                            "type": "object"
                                        },
                                        "ModifiedDate": {
                                            "description": "The date the patch baseline was last modified.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Name": {
                                            "description": "The name of the patch baseline.",
                                            "maxLength": 128,
                                            "minLength": 3,
                                            "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                            "type": "string"
                                        },
                                        "OperatingSystem": {
                                            "description": "Returns the operating system specified for the patch baseline.",
                                            "enum": [
                                                "WINDOWS",
                                                "AMAZON_LINUX",
                                                "AMAZON_LINUX_2",
                                                "UBUNTU",
                                                "REDHAT_ENTERPRISE_LINUX",
                                                "SUSE",
                                                "CENTOS"
                                            ],
                                            "type": "string"
                                        },
                                        "PatchGroups": {
                                            "description": "Patch groups included in the patch baseline.",
                                            "items": {
                                                "maxLength": 256,
                                                "minLength": 1,
                                                "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "RejectedPatches": {
                                            "description": "A list of explicitly rejected patches for the baseline.",
                                            "items": {
                                                "maxLength": 100,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "maxItems": 50,
                                            "minItems": 0,
                                            "type": "array"
                                        },
                                        "RejectedPatchesAction": {
                                            "description": "The action specified to take on patches included in the RejectedPatches list. A patch can be allowed only if it is a dependency of another package, or blocked entirely along with packages that include it as a dependency.",
                                            "enum": [
                                                "ALLOW_AS_DEPENDENCY",
                                                "BLOCK"
                                            ],
                                            "type": "string"
                                        },
                                        "Sources": {
                                            "description": "Information about the patches to use to update the instances, including target operating systems and source repositories. Applies to Linux instances only.",
                                            "items": {
                                                "description": "Information about the patches to use to update the instances, including target operating systems and source repository. Applies to Linux instances only.",
                                                "properties": {
                                                    "Configuration": {
                                                        "description": "<p>The value of the yum repo configuration. For example:</p> <p> <code>[main]</code> </p> <p> <code>cachedir=/var/cache/yum/$basesearch$releasever</code> </p> <p> <code>keepcache=0</code> </p> <p> <code>debuglevel=2</code> </p>",
                                                        "format": "password",
                                                        "maxLength": 512,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The name specified to identify the patch source.",
                                                        "pattern": "^[a-zA-Z0-9_\\-.]{3,50}$",
                                                        "type": "string"
                                                    },
                                                    "Products": {
                                                        "description": "The specific operating system versions a patch repository applies to, such as \"Ubuntu16.04\", \"AmazonLinux2016.09\", \"RedhatEnterpriseLinux7.2\" or \"Suse12.7\". For lists of supported product values, see <a>PatchFilter</a>.",
                                                        "items": {
                                                            "maxLength": 128,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "maxItems": 20,
                                                        "minItems": 1,
                                                        "type": "array"
                                                    }
                                                },
                                                "required": [
                                                    "Name",
                                                    "Products",
                                                    "Configuration"
                                                ],
                                                "type": "object"
                                            },
                                            "maxItems": 20,
                                            "minItems": 0,
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "DoesNotExistException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidResourceId",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "BaselineId": {
                                        "description": "The ID of the patch baseline to retrieve.",
                                        "maxLength": 128,
                                        "minLength": 20,
                                        "pattern": "^[a-zA-Z0-9_\\-:/]{20,128}$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "BaselineId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#GetPatchBaselineForPatchGroup": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Retrieves the patch baseline that should be used for the specified patch group.",
                "operationId": "GetPatchBaselineForPatchGroup",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "BaselineId": {
                                            "description": "The ID of the patch baseline that should be used for the patch group.",
                                            "maxLength": 128,
                                            "minLength": 20,
                                            "pattern": "^[a-zA-Z0-9_\\-:/]{20,128}$",
                                            "type": "string"
                                        },
                                        "OperatingSystem": {
                                            "description": "The operating system rule specified for patch groups using the patch baseline.",
                                            "enum": [
                                                "WINDOWS",
                                                "AMAZON_LINUX",
                                                "AMAZON_LINUX_2",
                                                "UBUNTU",
                                                "REDHAT_ENTERPRISE_LINUX",
                                                "SUSE",
                                                "CENTOS"
                                            ],
                                            "type": "string"
                                        },
                                        "PatchGroup": {
                                            "description": "The name of the patch group.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "OperatingSystem": {
                                        "description": "Returns he operating system rule specified for patch groups using the patch baseline.",
                                        "enum": [
                                            "WINDOWS",
                                            "AMAZON_LINUX",
                                            "AMAZON_LINUX_2",
                                            "UBUNTU",
                                            "REDHAT_ENTERPRISE_LINUX",
                                            "SUSE",
                                            "CENTOS"
                                        ],
                                        "type": "string"
                                    },
                                    "PatchGroup": {
                                        "description": "The name of the patch group whose patch baseline should be retrieved.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "PatchGroup"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#GetServiceSetting": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p> <code>ServiceSetting</code> is an account-level setting for an AWS service. This setting defines how a user interacts with or uses a service or a feature of a service. For example, if an AWS service charges money to the account based on feature or service usage, then the AWS service team might create a default setting of \"false\". This means the user can't use this feature unless they change the setting to \"true\" and intentionally opt in for a paid feature.</p> <p>Services map a <code>SettingId</code> object to a setting value. AWS services teams define the default value for a <code>SettingId</code>. You can't create a new <code>SettingId</code>, but you can overwrite the default value if you have the <code>ssm:UpdateServiceSetting</code> permission for the setting. Use the <a>UpdateServiceSetting</a> API action to change the default setting. Or use the <a>ResetServiceSetting</a> to change the value back to the original value defined by the AWS service team.</p> <p>Query the current service setting for the account. </p>",
                "operationId": "GetServiceSetting",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "The query result body of the GetServiceSetting API action.",
                                    "properties": {
                                        "ServiceSetting": {
                                            "description": "The query result of the current service setting.",
                                            "properties": {
                                                "ARN": {
                                                    "description": "The ARN of the service setting.",
                                                    "type": "string"
                                                },
                                                "LastModifiedDate": {
                                                    "description": "The last time the service setting was modified.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "LastModifiedUser": {
                                                    "description": "The ARN of the last modified user. This field is populated only if the setting value was overwritten.",
                                                    "type": "string"
                                                },
                                                "SettingId": {
                                                    "description": "The ID of the service setting.",
                                                    "maxLength": 1000,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "SettingValue": {
                                                    "description": "The value of the service setting.",
                                                    "maxLength": 4096,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "description": "<p>The status of the service setting. The value can be Default, Customized or PendingUpdate.</p> <ul> <li> <p>Default: The current setting uses a default value provisioned by the AWS service team.</p> </li> <li> <p>Customized: The current setting use a custom value specified by the customer.</p> </li> <li> <p>PendingUpdate: The current setting uses a default or custom value, but a setting change request is pending approval.</p> </li> </ul>",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ServiceSettingNotFound",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "The request body of the GetServiceSetting API action.",
                                "properties": {
                                    "SettingId": {
                                        "description": "The ID of the service setting to get.",
                                        "maxLength": 1000,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "SettingId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#LabelParameterVersion": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>A parameter label is a user-defined alias to help you manage different versions of a parameter. When you modify a parameter, Systems Manager automatically saves a new version and increments the version number by one. A label can help you remember the purpose of a parameter when there are multiple versions. </p> <p>Parameter labels have the following requirements and restrictions.</p> <ul> <li> <p>A version of a parameter can have a maximum of 10 labels.</p> </li> <li> <p>You can't attach the same label to different versions of the same parameter. For example, if version 1 has the label Production, then you can't attach Production to version 2.</p> </li> <li> <p>You can move a label from one version of a parameter to another.</p> </li> <li> <p>You can't create a label when you create a new parameter. You must attach a label to a specific version of a parameter.</p> </li> <li> <p>You can't delete a parameter label. If you no longer want to use a parameter label, then you must move it to a different version of a parameter.</p> </li> <li> <p>A label can have a maximum of 100 characters.</p> </li> <li> <p>Labels can contain letters (case sensitive), numbers, periods (.), hyphens (-), or underscores (_).</p> </li> <li> <p>Labels can't begin with a number, \"aws,\" or \"ssm\" (not case sensitive). If a label fails to meet these requirements, then the label is not associated with a parameter and the system displays it in the list of InvalidLabels.</p> </li> </ul>",
                "operationId": "LabelParameterVersion",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "InvalidLabels": {
                                            "description": "The label does not meet the requirements. For information about parameter label requirements, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-paramstore-labels.html\">Labeling Parameters</a> in the <i>AWS Systems Manager User Guide</i>.",
                                            "items": {
                                                "maxLength": 100,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "maxItems": 10,
                                            "minItems": 1,
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "TooManyUpdates",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ParameterNotFound",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ParameterVersionNotFound",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ParameterVersionLabelLimitExceeded",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Labels": {
                                        "description": "One or more labels to attach to the specified parameter version.",
                                        "items": {
                                            "maxLength": 100,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "maxItems": 10,
                                        "minItems": 1,
                                        "type": "array"
                                    },
                                    "Name": {
                                        "description": "The parameter name on which you want to attach one or more labels.",
                                        "maxLength": 2048,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "ParameterVersion": {
                                        "description": "The specific version of the parameter on which you want to attach one or more labels. If no version is specified, the system attaches the label to the latest version.)",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "Name",
                                    "Labels"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ListAssociationVersions": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Retrieves all versions of an association for a specific association ID.",
                "operationId": "ListAssociationVersions",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "AssociationVersions": {
                                            "description": "Information about all versions of the association for the specified association ID.",
                                            "items": {
                                                "description": "Information about the association version.",
                                                "properties": {
                                                    "AssociationId": {
                                                        "description": "The ID created by the system when the association was created.",
                                                        "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                                                        "type": "string"
                                                    },
                                                    "AssociationName": {
                                                        "description": "The name specified for the association version when the association version was created.",
                                                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                                        "type": "string"
                                                    },
                                                    "AssociationVersion": {
                                                        "description": "The association version.",
                                                        "pattern": "([$]LATEST)|([1-9][0-9]*)",
                                                        "type": "string"
                                                    },
                                                    "ComplianceSeverity": {
                                                        "description": "The severity level that is assigned to the association.",
                                                        "enum": [
                                                            "CRITICAL",
                                                            "HIGH",
                                                            "MEDIUM",
                                                            "LOW",
                                                            "UNSPECIFIED"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "CreatedDate": {
                                                        "description": "The date the association version was created.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "DocumentVersion": {
                                                        "description": "The version of a Systems Manager document used when the association version was created.",
                                                        "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                                        "type": "string"
                                                    },
                                                    "MaxConcurrency": {
                                                        "description": "<p>The maximum number of targets allowed to run the association at the same time. You can specify a number, for example 10, or a percentage of the target set, for example 10%. The default value is 100%, which means all targets run the association at the same time.</p> <p>If a new instance starts and attempts to execute an association while Systems Manager is executing MaxConcurrency associations, the association is allowed to run. During the next association interval, the new instance will process its association within the limit specified for MaxConcurrency.</p>",
                                                        "maxLength": 7,
                                                        "minLength": 1,
                                                        "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                                                        "type": "string"
                                                    },
                                                    "MaxErrors": {
                                                        "description": "<p>The number of errors that are allowed before the system stops sending requests to run the association on additional targets. You can specify either an absolute number of errors, for example 10, or a percentage of the target set, for example 10%. If you specify 3, for example, the system stops sending requests when the fourth error is received. If you specify 0, then the system stops sending requests after the first error is returned. If you run an association on 50 instances and set MaxError to 10%, then the system stops sending the request when the sixth error is received.</p> <p>Executions that are already running an association when MaxErrors is reached are allowed to complete, but some of these executions may fail as well. If you need to ensure that there won't be more than max-errors failed executions, set MaxConcurrency to 1 so that executions proceed one at a time.</p>",
                                                        "maxLength": 7,
                                                        "minLength": 1,
                                                        "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The name specified when the association was created.",
                                                        "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                                                        "type": "string"
                                                    },
                                                    "OutputLocation": {
                                                        "description": "The location in Amazon S3 specified for the association when the association version was created.",
                                                        "properties": {
                                                            "S3Location": {
                                                                "description": "An Amazon S3 bucket where you want to store the results of this request.",
                                                                "properties": {
                                                                    "OutputS3BucketName": {
                                                                        "description": "The name of the Amazon S3 bucket.",
                                                                        "maxLength": 63,
                                                                        "minLength": 3,
                                                                        "type": "string"
                                                                    },
                                                                    "OutputS3KeyPrefix": {
                                                                        "description": "The Amazon S3 bucket subfolder.",
                                                                        "maxLength": 500,
                                                                        "type": "string"
                                                                    },
                                                                    "OutputS3Region": {
                                                                        "description": "(Deprecated) You can no longer specify this parameter. The system ignores it. Instead, Systems Manager automatically determines the Amazon S3 bucket region.",
                                                                        "maxLength": 20,
                                                                        "minLength": 3,
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "Parameters": {
                                                        "description": "Parameters specified when the association version was created.",
                                                        "items": {
                                                            "properties": {
                                                                "key": {
                                                                    "type": "string"
                                                                },
                                                                "value": {
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "ScheduleExpression": {
                                                        "description": "The cron or rate schedule specified for the association when the association version was created.",
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "Targets": {
                                                        "description": "The targets specified for the association when the association version was created. ",
                                                        "items": {
                                                            "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                                                            "properties": {
                                                                "Key": {
                                                                    "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                                    "maxLength": 128,
                                                                    "minLength": 1,
                                                                    "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                                                    "type": "string"
                                                                },
                                                                "Values": {
                                                                    "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "maxItems": 50,
                                                                    "minItems": 0,
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "maxItems": 5,
                                                        "minItems": 0,
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "minItems": 1,
                                            "type": "array"
                                        },
                                        "NextToken": {
                                            "description": "The token for the next set of items to return. Use this token to get the next set of results.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidNextToken",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "AssociationDoesNotExist",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "AssociationId": {
                                        "description": "The association ID for which you want to view all versions.",
                                        "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                                        "type": "string"
                                    },
                                    "MaxResults": {
                                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                                        "maximum": 50,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "A token to start the list. Use this token to get the next set of results. ",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "AssociationId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ListAssociations": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Lists the associations for the specified Systems Manager document or instance.",
                "operationId": "ListAssociations",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxResults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "NextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Associations": {
                                            "description": "The associations.",
                                            "items": {
                                                "description": "Describes an association of a Systems Manager document and an instance.",
                                                "properties": {
                                                    "AssociationId": {
                                                        "description": "The ID created by the system when you create an association. An association is a binding between a document and a set of targets with a schedule.",
                                                        "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                                                        "type": "string"
                                                    },
                                                    "AssociationName": {
                                                        "description": "The association name.",
                                                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                                        "type": "string"
                                                    },
                                                    "AssociationVersion": {
                                                        "description": "The association version.",
                                                        "pattern": "([$]LATEST)|([1-9][0-9]*)",
                                                        "type": "string"
                                                    },
                                                    "DocumentVersion": {
                                                        "description": "The version of the document used in the association.",
                                                        "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                                        "type": "string"
                                                    },
                                                    "InstanceId": {
                                                        "description": "The ID of the instance.",
                                                        "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                                                        "type": "string"
                                                    },
                                                    "LastExecutionDate": {
                                                        "description": "The date on which the association was last run.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the Systems Manager document.",
                                                        "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                                                        "type": "string"
                                                    },
                                                    "Overview": {
                                                        "description": "Information about the association.",
                                                        "properties": {
                                                            "AssociationStatusAggregatedCount": {
                                                                "description": "Returns the number of targets for the association status. For example, if you created an association with two instances, and one of them was successful, this would return the count of instances by status.",
                                                                "items": {
                                                                    "properties": {
                                                                        "key": {
                                                                            "type": "string"
                                                                        },
                                                                        "value": {
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "DetailedStatus": {
                                                                "description": "A detailed status of the association.",
                                                                "type": "string"
                                                            },
                                                            "Status": {
                                                                "description": "The status of the association. Status can be: Pending, Success, or Failed.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "ScheduleExpression": {
                                                        "description": "A cron expression that specifies a schedule when the association runs.",
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "Targets": {
                                                        "description": "The instances targeted by the request to create an association. ",
                                                        "items": {
                                                            "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                                                            "properties": {
                                                                "Key": {
                                                                    "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                                    "maxLength": 128,
                                                                    "minLength": 1,
                                                                    "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                                                    "type": "string"
                                                                },
                                                                "Values": {
                                                                    "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "maxItems": 50,
                                                                    "minItems": 0,
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "maxItems": 5,
                                                        "minItems": 0,
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "NextToken": {
                                            "description": "The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidNextToken",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "AssociationFilterList": {
                                        "description": "One or more filters. Use a filter to return a more specific list of results.",
                                        "items": {
                                            "description": "Describes a filter.",
                                            "properties": {
                                                "key": {
                                                    "description": "The name of the filter.",
                                                    "enum": [
                                                        "InstanceId",
                                                        "Name",
                                                        "AssociationId",
                                                        "AssociationStatusName",
                                                        "LastExecutedBefore",
                                                        "LastExecutedAfter",
                                                        "AssociationName"
                                                    ],
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "description": "The filter value.",
                                                    "minLength": 1,
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "key",
                                                "value"
                                            ],
                                            "type": "object"
                                        },
                                        "minItems": 1,
                                        "type": "array"
                                    },
                                    "MaxResults": {
                                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                                        "maximum": 50,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "The token for the next set of items to return. (You received this token from a previous call.)",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ListCommandInvocations": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "An invocation is copy of a command sent to a specific instance. A command can apply to one or more instances. A command invocation applies to one instance. For example, if a user executes SendCommand against three instances, then a command invocation is created for each requested instance ID. ListCommandInvocations provide status about command execution.",
                "operationId": "ListCommandInvocations",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxResults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "NextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "CommandInvocations": {
                                            "description": "(Optional) A list of all invocations. ",
                                            "items": {
                                                "description": "An invocation is copy of a command sent to a specific instance. A command can apply to one or more instances. A command invocation applies to one instance. For example, if a user executes SendCommand against three instances, then a command invocation is created for each requested instance ID. A command invocation returns status and detail information about a command you executed. ",
                                                "properties": {
                                                    "CloudWatchOutputConfig": {
                                                        "description": "CloudWatch Logs information where you want Systems Manager to send the command output.",
                                                        "properties": {
                                                            "CloudWatchLogGroupName": {
                                                                "description": "The name of the CloudWatch log group where you want to send command output. If you don't specify a group name, Systems Manager automatically creates a log group for you. The log group uses the following naming format: aws/ssm/<i>SystemsManagerDocumentName</i>.",
                                                                "maxLength": 512,
                                                                "minLength": 1,
                                                                "pattern": "[\\.\\-_/#A-Za-z0-9]+",
                                                                "type": "string"
                                                            },
                                                            "CloudWatchOutputEnabled": {
                                                                "description": "Enables Systems Manager to send command output to CloudWatch Logs.",
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "CommandId": {
                                                        "description": "The command against which this invocation was requested.",
                                                        "maxLength": 36,
                                                        "minLength": 36,
                                                        "type": "string"
                                                    },
                                                    "CommandPlugins": {
                                                        "items": {
                                                            "description": "Describes plugin details.",
                                                            "properties": {
                                                                "Name": {
                                                                    "description": "The name of the plugin. Must be one of the following: aws:updateAgent, aws:domainjoin, aws:applications, aws:runPowerShellScript, aws:psmodule, aws:cloudWatch, aws:runShellScript, or aws:updateSSMAgent. ",
                                                                    "minLength": 4,
                                                                    "type": "string"
                                                                },
                                                                "Output": {
                                                                    "description": "Output of the plugin execution.",
                                                                    "maxLength": 2500,
                                                                    "type": "string"
                                                                },
                                                                "OutputS3BucketName": {
                                                                    "description": "<p>The S3 bucket where the responses to the command executions should be stored. This was requested when issuing the command. For example, in the following response:</p> <p> test_folder/ab19cb99-a030-46dd-9dfc-8eSAMPLEPre-Fix/i-1234567876543/awsrunShellScript </p> <p>test_folder is the name of the Amazon S3 bucket;</p> <p> ab19cb99-a030-46dd-9dfc-8eSAMPLEPre-Fix is the name of the S3 prefix;</p> <p>i-1234567876543 is the instance ID;</p> <p>awsrunShellScript is the name of the plugin.</p>",
                                                                    "maxLength": 63,
                                                                    "minLength": 3,
                                                                    "type": "string"
                                                                },
                                                                "OutputS3KeyPrefix": {
                                                                    "description": "<p>The S3 directory path inside the bucket where the responses to the command executions should be stored. This was requested when issuing the command. For example, in the following response:</p> <p> test_folder/ab19cb99-a030-46dd-9dfc-8eSAMPLEPre-Fix/i-1234567876543/awsrunShellScript </p> <p>test_folder is the name of the Amazon S3 bucket;</p> <p> ab19cb99-a030-46dd-9dfc-8eSAMPLEPre-Fix is the name of the S3 prefix;</p> <p>i-1234567876543 is the instance ID;</p> <p>awsrunShellScript is the name of the plugin.</p>",
                                                                    "maxLength": 500,
                                                                    "type": "string"
                                                                },
                                                                "OutputS3Region": {
                                                                    "description": "(Deprecated) You can no longer specify this parameter. The system ignores it. Instead, Systems Manager automatically determines the Amazon S3 bucket region.",
                                                                    "maxLength": 20,
                                                                    "minLength": 3,
                                                                    "type": "string"
                                                                },
                                                                "ResponseCode": {
                                                                    "description": "A numeric response code generated after executing the plugin. ",
                                                                    "type": "integer"
                                                                },
                                                                "ResponseFinishDateTime": {
                                                                    "description": "The time the plugin stopped executing. Could stop prematurely if, for example, a cancel command was sent. ",
                                                                    "format": "date-time",
                                                                    "type": "string"
                                                                },
                                                                "ResponseStartDateTime": {
                                                                    "description": "The time the plugin started executing. ",
                                                                    "format": "date-time",
                                                                    "type": "string"
                                                                },
                                                                "StandardErrorUrl": {
                                                                    "description": "The URL for the complete text written by the plugin to stderr. If execution is not yet complete, then this string is empty.",
                                                                    "type": "string"
                                                                },
                                                                "StandardOutputUrl": {
                                                                    "description": "The URL for the complete text written by the plugin to stdout in Amazon S3. If the Amazon S3 bucket for the command was not specified, then this string is empty.",
                                                                    "type": "string"
                                                                },
                                                                "Status": {
                                                                    "description": "The status of this plugin. You can execute a document with multiple plugins.",
                                                                    "enum": [
                                                                        "Pending",
                                                                        "InProgress",
                                                                        "Success",
                                                                        "TimedOut",
                                                                        "Cancelled",
                                                                        "Failed"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "StatusDetails": {
                                                                    "description": "<p>A detailed status of the plugin execution. StatusDetails includes more information than Status because it includes states resulting from error and concurrency control parameters. StatusDetails can show different results than Status. For more information about these statuses, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/monitor-commands.html\">Understanding Command Statuses</a> in the <i>AWS Systems Manager User Guide</i>. StatusDetails can be one of the following values:</p> <ul> <li> <p>Pending: The command has not been sent to the instance.</p> </li> <li> <p>In Progress: The command has been sent to the instance but has not reached a terminal state.</p> </li> <li> <p>Success: The execution of the command or plugin was successfully completed. This is a terminal state.</p> </li> <li> <p>Delivery Timed Out: The command was not delivered to the instance before the delivery timeout expired. Delivery timeouts do not count against the parent command's MaxErrors limit, but they do contribute to whether the parent command status is Success or Incomplete. This is a terminal state.</p> </li> <li> <p>Execution Timed Out: Command execution started on the instance, but the execution was not complete before the execution timeout expired. Execution timeouts count against the MaxErrors limit of the parent command. This is a terminal state.</p> </li> <li> <p>Failed: The command was not successful on the instance. For a plugin, this indicates that the result code was not zero. For a command invocation, this indicates that the result code for one or more plugins was not zero. Invocation failures count against the MaxErrors limit of the parent command. This is a terminal state.</p> </li> <li> <p>Canceled: The command was terminated before it was completed. This is a terminal state.</p> </li> <li> <p>Undeliverable: The command can't be delivered to the instance. The instance might not exist, or it might not be responding. Undeliverable invocations don't count against the parent command's MaxErrors limit, and they don't contribute to whether the parent command status is Success or Incomplete. This is a terminal state.</p> </li> <li> <p>Terminated: The parent command exceeded its MaxErrors limit and subsequent command invocations were canceled by the system. This is a terminal state.</p> </li> </ul>",
                                                                    "maxLength": 100,
                                                                    "minLength": 0,
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "Comment": {
                                                        "description": "User-specified information about the command, such as a brief description of what the command should do.",
                                                        "maxLength": 100,
                                                        "type": "string"
                                                    },
                                                    "DocumentName": {
                                                        "description": "The document name that was requested for execution.",
                                                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                                        "type": "string"
                                                    },
                                                    "DocumentVersion": {
                                                        "description": "The SSM document version.",
                                                        "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                                        "type": "string"
                                                    },
                                                    "InstanceId": {
                                                        "description": "The instance ID in which this invocation was requested.",
                                                        "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                                                        "type": "string"
                                                    },
                                                    "InstanceName": {
                                                        "description": "The name of the invocation target. For Amazon EC2 instances this is the value for the aws:Name tag. For on-premises instances, this is the name of the instance.",
                                                        "maxLength": 255,
                                                        "type": "string"
                                                    },
                                                    "NotificationConfig": {
                                                        "description": "Configurations for sending notifications about command status changes on a per instance basis.",
                                                        "properties": {
                                                            "NotificationArn": {
                                                                "description": "An Amazon Resource Name (ARN) for a Simple Notification Service (SNS) topic. Run Command pushes notifications about command status changes to this topic.",
                                                                "type": "string"
                                                            },
                                                            "NotificationEvents": {
                                                                "description": "The different events for which you can receive notifications. These events include the following: All (events), InProgress, Success, TimedOut, Cancelled, Failed. To learn more about these events, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/rc-sns-notifications.html\">Configuring Amazon SNS Notifications for Run Command</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                                "items": {
                                                                    "enum": [
                                                                        "All",
                                                                        "InProgress",
                                                                        "Success",
                                                                        "TimedOut",
                                                                        "Cancelled",
                                                                        "Failed"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "NotificationType": {
                                                                "description": "Command: Receive notification when the status of a command changes. Invocation: For commands sent to multiple instances, receive notification on a per-instance basis when the status of a command changes. ",
                                                                "enum": [
                                                                    "Command",
                                                                    "Invocation"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "RequestedDateTime": {
                                                        "description": "The time and date the request was sent to this instance.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "ServiceRole": {
                                                        "description": "The IAM service role that Run Command uses to act on your behalf when sending notifications about command status changes on a per instance basis.",
                                                        "type": "string"
                                                    },
                                                    "StandardErrorUrl": {
                                                        "description": "The URL to the plugin's StdErr file in Amazon S3, if the Amazon S3 bucket was defined for the parent command. For an invocation, StandardErrorUrl is populated if there is just one plugin defined for the command, and the Amazon S3 bucket was defined for the command.",
                                                        "type": "string"
                                                    },
                                                    "StandardOutputUrl": {
                                                        "description": "The URL to the plugin's StdOut file in Amazon S3, if the Amazon S3 bucket was defined for the parent command. For an invocation, StandardOutputUrl is populated if there is just one plugin defined for the command, and the Amazon S3 bucket was defined for the command.",
                                                        "type": "string"
                                                    },
                                                    "Status": {
                                                        "description": "Whether or not the invocation succeeded, failed, or is pending.",
                                                        "enum": [
                                                            "Pending",
                                                            "InProgress",
                                                            "Delayed",
                                                            "Success",
                                                            "Cancelled",
                                                            "TimedOut",
                                                            "Failed",
                                                            "Cancelling"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "StatusDetails": {
                                                        "description": "<p>A detailed status of the command execution for each invocation (each instance targeted by the command). StatusDetails includes more information than Status because it includes states resulting from error and concurrency control parameters. StatusDetails can show different results than Status. For more information about these statuses, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/monitor-commands.html\">Understanding Command Statuses</a> in the <i>AWS Systems Manager User Guide</i>. StatusDetails can be one of the following values:</p> <ul> <li> <p>Pending: The command has not been sent to the instance.</p> </li> <li> <p>In Progress: The command has been sent to the instance but has not reached a terminal state.</p> </li> <li> <p>Success: The execution of the command or plugin was successfully completed. This is a terminal state.</p> </li> <li> <p>Delivery Timed Out: The command was not delivered to the instance before the delivery timeout expired. Delivery timeouts do not count against the parent command's MaxErrors limit, but they do contribute to whether the parent command status is Success or Incomplete. This is a terminal state.</p> </li> <li> <p>Execution Timed Out: Command execution started on the instance, but the execution was not complete before the execution timeout expired. Execution timeouts count against the MaxErrors limit of the parent command. This is a terminal state.</p> </li> <li> <p>Failed: The command was not successful on the instance. For a plugin, this indicates that the result code was not zero. For a command invocation, this indicates that the result code for one or more plugins was not zero. Invocation failures count against the MaxErrors limit of the parent command. This is a terminal state.</p> </li> <li> <p>Canceled: The command was terminated before it was completed. This is a terminal state.</p> </li> <li> <p>Undeliverable: The command can't be delivered to the instance. The instance might not exist or might not be responding. Undeliverable invocations don't count against the parent command's MaxErrors limit and don't contribute to whether the parent command status is Success or Incomplete. This is a terminal state.</p> </li> <li> <p>Terminated: The parent command exceeded its MaxErrors limit and subsequent command invocations were canceled by the system. This is a terminal state.</p> </li> </ul>",
                                                        "maxLength": 100,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "TraceOutput": {
                                                        "description": " Gets the trace output sent by the agent. ",
                                                        "maxLength": 2500,
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "NextToken": {
                                            "description": "(Optional) The token for the next set of items to return. (You received this token from a previous call.)",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidCommandId",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidInstanceId",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "InvalidFilterKey",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "InvalidNextToken",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "CommandId": {
                                        "description": "(Optional) The invocations for a specific command ID.",
                                        "maxLength": 36,
                                        "minLength": 36,
                                        "type": "string"
                                    },
                                    "Details": {
                                        "description": "(Optional) If set this returns the response of the command executions and any command output. By default this is set to False. ",
                                        "type": "boolean"
                                    },
                                    "Filters": {
                                        "description": "(Optional) One or more filters. Use a filter to return a more specific list of results.",
                                        "items": {
                                            "description": "Describes a command filter.",
                                            "properties": {
                                                "key": {
                                                    "description": "The name of the filter.",
                                                    "enum": [
                                                        "InvokedAfter",
                                                        "InvokedBefore",
                                                        "Status",
                                                        "ExecutionStage",
                                                        "DocumentName"
                                                    ],
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "description": "<p>The filter value. Valid values for each filter key are as follows:</p> <ul> <li> <p> <b>InvokedAfter</b>: Specify a timestamp to limit your results. For example, specify <code>2018-07-07T00:00:00Z</code> to see a list of command executions occurring July 7, 2018, and later.</p> </li> <li> <p> <b>InvokedBefore</b>: Specify a timestamp to limit your results. For example, specify <code>2018-07-07T00:00:00Z</code> to see a list of command executions from before July 7, 2018.</p> </li> <li> <p> <b>Status</b>: Specify a valid command status to see a list of all command executions with that status. Status values you can specify include:</p> <ul> <li> <p> <code>Pending</code> </p> </li> <li> <p> <code>InProgress</code> </p> </li> <li> <p> <code>Success</code> </p> </li> <li> <p> <code>Cancelled</code> </p> </li> <li> <p> <code>Failed</code> </p> </li> <li> <p> <code>TimedOut</code> </p> </li> <li> <p> <code>Cancelling</code> </p> </li> </ul> </li> <li> <p> <b>DocumentName</b>: Specify name of the SSM document for which you want to see command execution results. For example, specify <code>AWS-RunPatchBaseline</code> to see command executions that used this SSM document to perform security patching operations on instances. </p> </li> <li> <p> <b>ExecutionStage</b>: Specify one of the following values:</p> <ul> <li> <p> <code>Executing</code>: Returns a list of command executions that are currently still running.</p> </li> <li> <p> <code>Complete</code>: Returns a list of command executions that have already completed. </p> </li> </ul> </li> </ul>",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "key",
                                                "value"
                                            ],
                                            "type": "object"
                                        },
                                        "maxItems": 5,
                                        "minItems": 1,
                                        "type": "array"
                                    },
                                    "InstanceId": {
                                        "description": "(Optional) The command execution details for a specific instance ID.",
                                        "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                                        "type": "string"
                                    },
                                    "MaxResults": {
                                        "description": "(Optional) The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                                        "maximum": 50,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "(Optional) The token for the next set of items to return. (You received this token from a previous call.)",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ListCommands": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Lists the commands requested by users of the AWS account.",
                "operationId": "ListCommands",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxResults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "NextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Commands": {
                                            "description": "(Optional) The list of commands requested by the user. ",
                                            "items": {
                                                "description": "Describes a command request.",
                                                "properties": {
                                                    "CloudWatchOutputConfig": {
                                                        "description": "CloudWatch Logs information where you want Systems Manager to send the command output.",
                                                        "properties": {
                                                            "CloudWatchLogGroupName": {
                                                                "description": "The name of the CloudWatch log group where you want to send command output. If you don't specify a group name, Systems Manager automatically creates a log group for you. The log group uses the following naming format: aws/ssm/<i>SystemsManagerDocumentName</i>.",
                                                                "maxLength": 512,
                                                                "minLength": 1,
                                                                "pattern": "[\\.\\-_/#A-Za-z0-9]+",
                                                                "type": "string"
                                                            },
                                                            "CloudWatchOutputEnabled": {
                                                                "description": "Enables Systems Manager to send command output to CloudWatch Logs.",
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "CommandId": {
                                                        "description": "A unique identifier for this command.",
                                                        "maxLength": 36,
                                                        "minLength": 36,
                                                        "type": "string"
                                                    },
                                                    "Comment": {
                                                        "description": "User-specified information about the command, such as a brief description of what the command should do.",
                                                        "maxLength": 100,
                                                        "type": "string"
                                                    },
                                                    "CompletedCount": {
                                                        "description": "The number of targets for which the command invocation reached a terminal state. Terminal states include the following: Success, Failed, Execution Timed Out, Delivery Timed Out, Canceled, Terminated, or Undeliverable.",
                                                        "type": "integer"
                                                    },
                                                    "DeliveryTimedOutCount": {
                                                        "description": "The number of targets for which the status is Delivery Timed Out.",
                                                        "type": "integer"
                                                    },
                                                    "DocumentName": {
                                                        "description": "The name of the document requested for execution.",
                                                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                                        "type": "string"
                                                    },
                                                    "DocumentVersion": {
                                                        "description": "The SSM document version.",
                                                        "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                                        "type": "string"
                                                    },
                                                    "ErrorCount": {
                                                        "description": "The number of targets for which the status is Failed or Execution Timed Out.",
                                                        "type": "integer"
                                                    },
                                                    "ExpiresAfter": {
                                                        "description": "If this time is reached and the command has not already started executing, it will not run. Calculated based on the ExpiresAfter user input provided as part of the SendCommand API.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "InstanceIds": {
                                                        "description": "The instance IDs against which this command was requested.",
                                                        "items": {
                                                            "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                                                            "type": "string"
                                                        },
                                                        "maxItems": 50,
                                                        "minItems": 0,
                                                        "type": "array"
                                                    },
                                                    "MaxConcurrency": {
                                                        "description": "The maximum number of instances that are allowed to execute the command at the same time. You can specify a number of instances, such as 10, or a percentage of instances, such as 10%. The default value is 50. For more information about how to use MaxConcurrency, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/run-command.html\">Executing Commands Using Systems Manager Run Command</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                        "maxLength": 7,
                                                        "minLength": 1,
                                                        "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                                                        "type": "string"
                                                    },
                                                    "MaxErrors": {
                                                        "description": "The maximum number of errors allowed before the system stops sending the command to additional targets. You can specify a number of errors, such as 10, or a percentage or errors, such as 10%. The default value is 0. For more information about how to use MaxErrors, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/run-command.html\">Executing Commands Using Systems Manager Run Command</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                        "maxLength": 7,
                                                        "minLength": 1,
                                                        "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                                                        "type": "string"
                                                    },
                                                    "NotificationConfig": {
                                                        "description": "Configurations for sending notifications about command status changes. ",
                                                        "properties": {
                                                            "NotificationArn": {
                                                                "description": "An Amazon Resource Name (ARN) for a Simple Notification Service (SNS) topic. Run Command pushes notifications about command status changes to this topic.",
                                                                "type": "string"
                                                            },
                                                            "NotificationEvents": {
                                                                "description": "The different events for which you can receive notifications. These events include the following: All (events), InProgress, Success, TimedOut, Cancelled, Failed. To learn more about these events, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/rc-sns-notifications.html\">Configuring Amazon SNS Notifications for Run Command</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                                "items": {
                                                                    "enum": [
                                                                        "All",
                                                                        "InProgress",
                                                                        "Success",
                                                                        "TimedOut",
                                                                        "Cancelled",
                                                                        "Failed"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "NotificationType": {
                                                                "description": "Command: Receive notification when the status of a command changes. Invocation: For commands sent to multiple instances, receive notification on a per-instance basis when the status of a command changes. ",
                                                                "enum": [
                                                                    "Command",
                                                                    "Invocation"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "OutputS3BucketName": {
                                                        "description": "The S3 bucket where the responses to the command executions should be stored. This was requested when issuing the command.",
                                                        "maxLength": 63,
                                                        "minLength": 3,
                                                        "type": "string"
                                                    },
                                                    "OutputS3KeyPrefix": {
                                                        "description": "The S3 directory path inside the bucket where the responses to the command executions should be stored. This was requested when issuing the command.",
                                                        "maxLength": 500,
                                                        "type": "string"
                                                    },
                                                    "OutputS3Region": {
                                                        "description": "(Deprecated) You can no longer specify this parameter. The system ignores it. Instead, Systems Manager automatically determines the Amazon S3 bucket region.",
                                                        "maxLength": 20,
                                                        "minLength": 3,
                                                        "type": "string"
                                                    },
                                                    "Parameters": {
                                                        "description": "The parameter values to be inserted in the document when executing the command.",
                                                        "items": {
                                                            "properties": {
                                                                "key": {
                                                                    "type": "string"
                                                                },
                                                                "value": {
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "RequestedDateTime": {
                                                        "description": "The date and time the command was requested.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "ServiceRole": {
                                                        "description": "The IAM service role that Run Command uses to act on your behalf when sending notifications about command status changes. ",
                                                        "type": "string"
                                                    },
                                                    "Status": {
                                                        "description": "The status of the command.",
                                                        "enum": [
                                                            "Pending",
                                                            "InProgress",
                                                            "Success",
                                                            "Cancelled",
                                                            "Failed",
                                                            "TimedOut",
                                                            "Cancelling"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "StatusDetails": {
                                                        "description": "<p>A detailed status of the command execution. StatusDetails includes more information than Status because it includes states resulting from error and concurrency control parameters. StatusDetails can show different results than Status. For more information about these statuses, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/monitor-commands.html\">Understanding Command Statuses</a> in the <i>AWS Systems Manager User Guide</i>. StatusDetails can be one of the following values:</p> <ul> <li> <p>Pending: The command has not been sent to any instances.</p> </li> <li> <p>In Progress: The command has been sent to at least one instance but has not reached a final state on all instances.</p> </li> <li> <p>Success: The command successfully executed on all invocations. This is a terminal state.</p> </li> <li> <p>Delivery Timed Out: The value of MaxErrors or more command invocations shows a status of Delivery Timed Out. This is a terminal state.</p> </li> <li> <p>Execution Timed Out: The value of MaxErrors or more command invocations shows a status of Execution Timed Out. This is a terminal state.</p> </li> <li> <p>Failed: The value of MaxErrors or more command invocations shows a status of Failed. This is a terminal state.</p> </li> <li> <p>Incomplete: The command was attempted on all instances and one or more invocations does not have a value of Success but not enough invocations failed for the status to be Failed. This is a terminal state.</p> </li> <li> <p>Canceled: The command was terminated before it was completed. This is a terminal state.</p> </li> <li> <p>Rate Exceeded: The number of instances targeted by the command exceeded the account limit for pending invocations. The system has canceled the command before executing it on any instance. This is a terminal state.</p> </li> </ul>",
                                                        "maxLength": 100,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "TargetCount": {
                                                        "description": "The number of targets for the command.",
                                                        "type": "integer"
                                                    },
                                                    "Targets": {
                                                        "description": "An array of search criteria that targets instances using a Key,Value combination that you specify. Targets is required if you don't provide one or more instance IDs in the call.",
                                                        "items": {
                                                            "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                                                            "properties": {
                                                                "Key": {
                                                                    "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                                    "maxLength": 128,
                                                                    "minLength": 1,
                                                                    "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                                                    "type": "string"
                                                                },
                                                                "Values": {
                                                                    "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "maxItems": 50,
                                                                    "minItems": 0,
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "maxItems": 5,
                                                        "minItems": 0,
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "NextToken": {
                                            "description": "(Optional) The token for the next set of items to return. (You received this token from a previous call.)",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidCommandId",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidInstanceId",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "InvalidFilterKey",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "InvalidNextToken",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "CommandId": {
                                        "description": "(Optional) If provided, lists only the specified command.",
                                        "maxLength": 36,
                                        "minLength": 36,
                                        "type": "string"
                                    },
                                    "Filters": {
                                        "description": "(Optional) One or more filters. Use a filter to return a more specific list of results. ",
                                        "items": {
                                            "description": "Describes a command filter.",
                                            "properties": {
                                                "key": {
                                                    "description": "The name of the filter.",
                                                    "enum": [
                                                        "InvokedAfter",
                                                        "InvokedBefore",
                                                        "Status",
                                                        "ExecutionStage",
                                                        "DocumentName"
                                                    ],
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "description": "<p>The filter value. Valid values for each filter key are as follows:</p> <ul> <li> <p> <b>InvokedAfter</b>: Specify a timestamp to limit your results. For example, specify <code>2018-07-07T00:00:00Z</code> to see a list of command executions occurring July 7, 2018, and later.</p> </li> <li> <p> <b>InvokedBefore</b>: Specify a timestamp to limit your results. For example, specify <code>2018-07-07T00:00:00Z</code> to see a list of command executions from before July 7, 2018.</p> </li> <li> <p> <b>Status</b>: Specify a valid command status to see a list of all command executions with that status. Status values you can specify include:</p> <ul> <li> <p> <code>Pending</code> </p> </li> <li> <p> <code>InProgress</code> </p> </li> <li> <p> <code>Success</code> </p> </li> <li> <p> <code>Cancelled</code> </p> </li> <li> <p> <code>Failed</code> </p> </li> <li> <p> <code>TimedOut</code> </p> </li> <li> <p> <code>Cancelling</code> </p> </li> </ul> </li> <li> <p> <b>DocumentName</b>: Specify name of the SSM document for which you want to see command execution results. For example, specify <code>AWS-RunPatchBaseline</code> to see command executions that used this SSM document to perform security patching operations on instances. </p> </li> <li> <p> <b>ExecutionStage</b>: Specify one of the following values:</p> <ul> <li> <p> <code>Executing</code>: Returns a list of command executions that are currently still running.</p> </li> <li> <p> <code>Complete</code>: Returns a list of command executions that have already completed. </p> </li> </ul> </li> </ul>",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "key",
                                                "value"
                                            ],
                                            "type": "object"
                                        },
                                        "maxItems": 5,
                                        "minItems": 1,
                                        "type": "array"
                                    },
                                    "InstanceId": {
                                        "description": "(Optional) Lists commands issued against this instance ID.",
                                        "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                                        "type": "string"
                                    },
                                    "MaxResults": {
                                        "description": "(Optional) The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                                        "maximum": 50,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "(Optional) The token for the next set of items to return. (You received this token from a previous call.)",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ListComplianceItems": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "For a specified resource ID, this API action returns a list of compliance statuses for different resource types. Currently, you can only specify one resource ID per call. List results depend on the criteria specified in the filter. ",
                "operationId": "ListComplianceItems",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ComplianceItems": {
                                            "description": "A list of compliance information for the specified resource ID. ",
                                            "items": {
                                                "description": "Information about the compliance as defined by the resource type. For example, for a patch resource type, <code>Items</code> includes information about the PatchSeverity, Classification, etc.",
                                                "properties": {
                                                    "ComplianceType": {
                                                        "description": "The compliance type. For example, Association (for a State Manager association), Patch, or Custom:<code>string</code> are all valid compliance types.",
                                                        "maxLength": 100,
                                                        "minLength": 1,
                                                        "pattern": "[A-Za-z0-9_\\-]\\w+|Custom:[a-zA-Z0-9_\\-]\\w+",
                                                        "type": "string"
                                                    },
                                                    "Details": {
                                                        "description": "A \"Key\": \"Value\" tag combination for the compliance item.",
                                                        "items": {
                                                            "properties": {
                                                                "key": {
                                                                    "maxLength": 64,
                                                                    "minLength": 1,
                                                                    "type": "string"
                                                                },
                                                                "value": {
                                                                    "maxLength": 4096,
                                                                    "minLength": 0,
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "ExecutionSummary": {
                                                        "description": "A summary for the compliance item. The summary includes an execution ID, the execution type (for example, command), and the execution time.",
                                                        "properties": {
                                                            "ExecutionId": {
                                                                "description": "An ID created by the system when <code>PutComplianceItems</code> was called. For example, <code>CommandID</code> is a valid execution ID. You can use this ID in subsequent calls.",
                                                                "maxLength": 100,
                                                                "type": "string"
                                                            },
                                                            "ExecutionTime": {
                                                                "description": "The time the execution ran as a datetime object that is saved in the following format: yyyy-MM-dd'T'HH:mm:ss'Z'.",
                                                                "format": "date-time",
                                                                "type": "string"
                                                            },
                                                            "ExecutionType": {
                                                                "description": "The type of execution. For example, <code>Command</code> is a valid execution type.",
                                                                "maxLength": 50,
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "ExecutionTime"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "Id": {
                                                        "description": "An ID for the compliance item. For example, if the compliance item is a Windows patch, the ID could be the number of the KB article; for example: KB4010320.",
                                                        "maxLength": 100,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "ResourceId": {
                                                        "description": "An ID for the resource. For a managed instance, this is the instance ID.",
                                                        "maxLength": 100,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "ResourceType": {
                                                        "description": "The type of resource. <code>ManagedInstance</code> is currently the only supported resource type.",
                                                        "maxLength": 50,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "Severity": {
                                                        "description": "The severity of the compliance status. Severity can be one of the following: Critical, High, Medium, Low, Informational, Unspecified.",
                                                        "enum": [
                                                            "CRITICAL",
                                                            "HIGH",
                                                            "MEDIUM",
                                                            "LOW",
                                                            "INFORMATIONAL",
                                                            "UNSPECIFIED"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Status": {
                                                        "description": "The status of the compliance item. An item is either COMPLIANT or NON_COMPLIANT.",
                                                        "enum": [
                                                            "COMPLIANT",
                                                            "NON_COMPLIANT"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Title": {
                                                        "description": "A title for the compliance item. For example, if the compliance item is a Windows patch, the title could be the title of the KB article for the patch; for example: Security Update for Active Directory Federation Services.",
                                                        "maxLength": 500,
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "NextToken": {
                                            "description": "The token for the next set of items to return. Use this token to get the next set of results.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidResourceType",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidResourceId",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "InvalidFilter",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "InvalidNextToken",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Filters": {
                                        "description": "One or more compliance filters. Use a filter to return a more specific list of results.",
                                        "items": {
                                            "description": "One or more filters. Use a filter to return a more specific list of results.",
                                            "properties": {
                                                "Key": {
                                                    "description": "The name of the filter.",
                                                    "maxLength": 200,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "description": "The type of comparison that should be performed for the value: Equal, NotEqual, BeginWith, LessThan, or GreaterThan.",
                                                    "enum": [
                                                        "EQUAL",
                                                        "NOT_EQUAL",
                                                        "BEGIN_WITH",
                                                        "LESS_THAN",
                                                        "GREATER_THAN"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "The value for which to search.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "maxItems": 20,
                                                    "minItems": 1,
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "MaxResults": {
                                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                                        "maximum": 50,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "A token to start the list. Use this token to get the next set of results. ",
                                        "type": "string"
                                    },
                                    "ResourceIds": {
                                        "description": "The ID for the resources from which to get compliance information. Currently, you can only specify one resource ID.",
                                        "items": {
                                            "maxLength": 100,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "minItems": 1,
                                        "type": "array"
                                    },
                                    "ResourceTypes": {
                                        "description": "The type of resource from which to get compliance information. Currently, the only supported resource type is <code>ManagedInstance</code>.",
                                        "items": {
                                            "maxLength": 50,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "minItems": 1,
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ListComplianceSummaries": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Returns a summary count of compliant and non-compliant resources for a compliance type. For example, this call can return State Manager associations, patches, or custom compliance types according to the filter criteria that you specify. ",
                "operationId": "ListComplianceSummaries",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ComplianceSummaryItems": {
                                            "description": "A list of compliant and non-compliant summary counts based on compliance types. For example, this call returns State Manager associations, patches, or custom compliance types according to the filter criteria that you specified.",
                                            "items": {
                                                "description": "A summary of compliance information by compliance type.",
                                                "properties": {
                                                    "ComplianceType": {
                                                        "description": "The type of compliance item. For example, the compliance type can be Association, Patch, or Custom:string.",
                                                        "maxLength": 100,
                                                        "minLength": 1,
                                                        "pattern": "[A-Za-z0-9_\\-]\\w+|Custom:[a-zA-Z0-9_\\-]\\w+",
                                                        "type": "string"
                                                    },
                                                    "CompliantSummary": {
                                                        "description": "A list of COMPLIANT items for the specified compliance type.",
                                                        "properties": {
                                                            "CompliantCount": {
                                                                "description": "The total number of resources that are compliant.",
                                                                "type": "integer"
                                                            },
                                                            "SeveritySummary": {
                                                                "description": "A summary of the compliance severity by compliance type.",
                                                                "properties": {
                                                                    "CriticalCount": {
                                                                        "description": "The total number of resources or compliance items that have a severity level of critical. Critical severity is determined by the organization that published the compliance items.",
                                                                        "type": "integer"
                                                                    },
                                                                    "HighCount": {
                                                                        "description": "The total number of resources or compliance items that have a severity level of high. High severity is determined by the organization that published the compliance items.",
                                                                        "type": "integer"
                                                                    },
                                                                    "InformationalCount": {
                                                                        "description": "The total number of resources or compliance items that have a severity level of informational. Informational severity is determined by the organization that published the compliance items.",
                                                                        "type": "integer"
                                                                    },
                                                                    "LowCount": {
                                                                        "description": "The total number of resources or compliance items that have a severity level of low. Low severity is determined by the organization that published the compliance items.",
                                                                        "type": "integer"
                                                                    },
                                                                    "MediumCount": {
                                                                        "description": "The total number of resources or compliance items that have a severity level of medium. Medium severity is determined by the organization that published the compliance items.",
                                                                        "type": "integer"
                                                                    },
                                                                    "UnspecifiedCount": {
                                                                        "description": "The total number of resources or compliance items that have a severity level of unspecified. Unspecified severity is determined by the organization that published the compliance items.",
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "NonCompliantSummary": {
                                                        "description": "A list of NON_COMPLIANT items for the specified compliance type.",
                                                        "properties": {
                                                            "NonCompliantCount": {
                                                                "description": "The total number of compliance items that are not compliant.",
                                                                "type": "integer"
                                                            },
                                                            "SeveritySummary": {
                                                                "description": "A summary of the non-compliance severity by compliance type",
                                                                "properties": {
                                                                    "CriticalCount": {
                                                                        "description": "The total number of resources or compliance items that have a severity level of critical. Critical severity is determined by the organization that published the compliance items.",
                                                                        "type": "integer"
                                                                    },
                                                                    "HighCount": {
                                                                        "description": "The total number of resources or compliance items that have a severity level of high. High severity is determined by the organization that published the compliance items.",
                                                                        "type": "integer"
                                                                    },
                                                                    "InformationalCount": {
                                                                        "description": "The total number of resources or compliance items that have a severity level of informational. Informational severity is determined by the organization that published the compliance items.",
                                                                        "type": "integer"
                                                                    },
                                                                    "LowCount": {
                                                                        "description": "The total number of resources or compliance items that have a severity level of low. Low severity is determined by the organization that published the compliance items.",
                                                                        "type": "integer"
                                                                    },
                                                                    "MediumCount": {
                                                                        "description": "The total number of resources or compliance items that have a severity level of medium. Medium severity is determined by the organization that published the compliance items.",
                                                                        "type": "integer"
                                                                    },
                                                                    "UnspecifiedCount": {
                                                                        "description": "The total number of resources or compliance items that have a severity level of unspecified. Unspecified severity is determined by the organization that published the compliance items.",
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "NextToken": {
                                            "description": "The token for the next set of items to return. Use this token to get the next set of results.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidFilter",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidNextToken",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Filters": {
                                        "description": "One or more compliance or inventory filters. Use a filter to return a more specific list of results.",
                                        "items": {
                                            "description": "One or more filters. Use a filter to return a more specific list of results.",
                                            "properties": {
                                                "Key": {
                                                    "description": "The name of the filter.",
                                                    "maxLength": 200,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "description": "The type of comparison that should be performed for the value: Equal, NotEqual, BeginWith, LessThan, or GreaterThan.",
                                                    "enum": [
                                                        "EQUAL",
                                                        "NOT_EQUAL",
                                                        "BEGIN_WITH",
                                                        "LESS_THAN",
                                                        "GREATER_THAN"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "The value for which to search.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "maxItems": 20,
                                                    "minItems": 1,
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "MaxResults": {
                                        "description": "The maximum number of items to return for this call. Currently, you can specify null or 50. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                                        "maximum": 50,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "A token to start the list. Use this token to get the next set of results. ",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ListDocumentVersions": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "List all versions for a document.",
                "operationId": "ListDocumentVersions",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DocumentVersions": {
                                            "description": "The document versions.",
                                            "items": {
                                                "description": "Version information about the document.",
                                                "properties": {
                                                    "CreatedDate": {
                                                        "description": "The date the document was created.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "DocumentFormat": {
                                                        "description": "The document format, either JSON or YAML.",
                                                        "enum": [
                                                            "YAML",
                                                            "JSON"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "DocumentVersion": {
                                                        "description": "The document version.",
                                                        "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                                        "type": "string"
                                                    },
                                                    "IsDefaultVersion": {
                                                        "description": "An identifier for the default version of the document.",
                                                        "type": "boolean"
                                                    },
                                                    "Name": {
                                                        "description": "The document name.",
                                                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                                        "type": "string"
                                                    },
                                                    "Status": {
                                                        "description": "The status of the Systems Manager document, such as <code>Creating</code>, <code>Active</code>, <code>Failed</code>, and <code>Deleting</code>.",
                                                        "enum": [
                                                            "Creating",
                                                            "Active",
                                                            "Updating",
                                                            "Deleting",
                                                            "Failed"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "StatusInformation": {
                                                        "description": "A message returned by AWS Systems Manager that explains the <code>Status</code> value. For example, a <code>Failed</code> status might be explained by the <code>StatusInformation</code> message, \"The specified S3 bucket does not exist. Verify that the URL of the S3 bucket is correct.\"",
                                                        "type": "string"
                                                    },
                                                    "VersionName": {
                                                        "description": "The version of the artifact associated with the document. For example, \"Release 12, Update 6\". This value is unique across all versions of a document, and cannot be changed.",
                                                        "pattern": "^[a-zA-Z0-9_\\-.]{1,128}$",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "minItems": 1,
                                            "type": "array"
                                        },
                                        "NextToken": {
                                            "description": "The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidNextToken",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidDocument",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "MaxResults": {
                                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                                        "maximum": 50,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "Name": {
                                        "description": "The name of the document about which you want version information.",
                                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                        "type": "string"
                                    },
                                    "NextToken": {
                                        "description": "The token for the next set of items to return. (You received this token from a previous call.)",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Name"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ListDocuments": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Describes one or more of your Systems Manager documents.",
                "operationId": "ListDocuments",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxResults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "NextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DocumentIdentifiers": {
                                            "description": "The names of the Systems Manager documents.",
                                            "items": {
                                                "description": "Describes the name of a Systems Manager document.",
                                                "properties": {
                                                    "DocumentFormat": {
                                                        "description": "The document format, either JSON or YAML.",
                                                        "enum": [
                                                            "YAML",
                                                            "JSON"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "DocumentType": {
                                                        "description": "The document type.",
                                                        "enum": [
                                                            "Command",
                                                            "Policy",
                                                            "Automation",
                                                            "Session",
                                                            "Package"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "DocumentVersion": {
                                                        "description": "The document version.",
                                                        "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the Systems Manager document.",
                                                        "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                                                        "type": "string"
                                                    },
                                                    "Owner": {
                                                        "description": "The AWS user account that created the document.",
                                                        "type": "string"
                                                    },
                                                    "PlatformTypes": {
                                                        "description": "The operating system platform. ",
                                                        "items": {
                                                            "enum": [
                                                                "Windows",
                                                                "Linux"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "SchemaVersion": {
                                                        "description": "The schema version.",
                                                        "pattern": "([0-9]+)\\.([0-9]+)",
                                                        "type": "string"
                                                    },
                                                    "Tags": {
                                                        "description": "The tags, or metadata, that have been applied to the document.",
                                                        "items": {
                                                            "description": "Metadata that you assign to your AWS resources. Tags enable you to categorize your resources in different ways, for example, by purpose, owner, or environment. In Systems Manager, you can apply tags to documents, managed instances, Maintenance Windows, Parameter Store parameters, and patch baselines.",
                                                            "properties": {
                                                                "Key": {
                                                                    "description": "The name of the tag.",
                                                                    "maxLength": 128,
                                                                    "minLength": 1,
                                                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                                    "type": "string"
                                                                },
                                                                "Value": {
                                                                    "description": "The value of the tag.",
                                                                    "maxLength": 256,
                                                                    "minLength": 1,
                                                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "Key",
                                                                "Value"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "maxItems": 1000,
                                                        "type": "array"
                                                    },
                                                    "TargetType": {
                                                        "description": "The target type which defines the kinds of resources the document can run on. For example, /AWS::EC2::Instance. For a list of valid resource types, see <a href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html\">AWS Resource Types Reference</a> in the <i>AWS CloudFormation User Guide</i>. ",
                                                        "maxLength": 200,
                                                        "pattern": "^\\/[\\w\\.\\-\\:\\/]*$",
                                                        "type": "string"
                                                    },
                                                    "VersionName": {
                                                        "description": "An optional field specifying the version of the artifact associated with the document. For example, \"Release 12, Update 6\". This value is unique across all versions of a document, and cannot be changed.",
                                                        "pattern": "^[a-zA-Z0-9_\\-.]{1,128}$",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "NextToken": {
                                            "description": "The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidNextToken",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidFilterKey",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "DocumentFilterList": {
                                        "description": "One or more filters. Use a filter to return a more specific list of results.",
                                        "items": {
                                            "description": "Describes a filter.",
                                            "properties": {
                                                "key": {
                                                    "description": "The name of the filter.",
                                                    "enum": [
                                                        "Name",
                                                        "Owner",
                                                        "PlatformTypes",
                                                        "DocumentType"
                                                    ],
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "description": "The value of the filter.",
                                                    "minLength": 1,
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "key",
                                                "value"
                                            ],
                                            "type": "object"
                                        },
                                        "minItems": 1,
                                        "type": "array"
                                    },
                                    "Filters": {
                                        "description": "One or more filters. Use a filter to return a more specific list of results.",
                                        "items": {
                                            "description": "<p>One or more filters. Use a filter to return a more specific list of documents.</p> <p>For keys, you can specify one or more tags that have been applied to a document. </p> <p>Other valid values include Owner, Name, PlatformTypes, and DocumentType.</p> <p>Note that only one Owner can be specified in a request. For example: <code>Key=Owner,Values=Self</code>.</p> <p>If you use Name as a key, you can use a name prefix to return a list of documents. For example, in the AWS CLI, to return a list of all documents that begin with <code>Te</code>, run the following command:</p> <p> <code>aws ssm list-documents --filters Key=Name,Values=Te</code> </p> <p>If you specify more than two keys, only documents that are identified by all the tags are returned in the results. If you specify more than two values for a key, documents that are identified by any of the values are returned in the results.</p> <p>To specify a custom key and value pair, use the format <code>Key=tag:[tagName],Values=[valueName]</code>.</p> <p>For example, if you created a Key called region and are using the AWS CLI to call the <code>list-documents</code> command: </p> <p> <code>aws ssm list-documents --filters Key=tag:region,Values=east,west Key=Owner,Values=Self</code> </p>",
                                            "properties": {
                                                "Key": {
                                                    "description": "The name of the filter key.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "The value for the filter key.",
                                                    "items": {
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "maxItems": 6,
                                        "minItems": 0,
                                        "type": "array"
                                    },
                                    "MaxResults": {
                                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                                        "maximum": 50,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "The token for the next set of items to return. (You received this token from a previous call.)",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ListInventoryEntries": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "A list of inventory items returned by the request.",
                "operationId": "ListInventoryEntries",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "CaptureTime": {
                                            "description": "The time that inventory information was collected for the instance(s).",
                                            "pattern": "^(20)[0-9][0-9]-(0[1-9]|1[012])-([12][0-9]|3[01]|0[1-9])(T)(2[0-3]|[0-1][0-9])(:[0-5][0-9])(:[0-5][0-9])(Z)$",
                                            "type": "string"
                                        },
                                        "Entries": {
                                            "description": "A list of inventory items on the instance(s).",
                                            "items": {
                                                "items": {
                                                    "properties": {
                                                        "key": {
                                                            "maxLength": 64,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "value": {
                                                            "maxLength": 4096,
                                                            "minLength": 0,
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "maxItems": 50,
                                                "minItems": 0,
                                                "type": "array"
                                            },
                                            "maxItems": 10000,
                                            "minItems": 0,
                                            "type": "array"
                                        },
                                        "InstanceId": {
                                            "description": "The instance ID targeted by the request to query inventory information.",
                                            "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                                            "type": "string"
                                        },
                                        "NextToken": {
                                            "description": "The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.",
                                            "type": "string"
                                        },
                                        "SchemaVersion": {
                                            "description": "The inventory schema version used by the instance(s).",
                                            "pattern": "^([0-9]{1,6})(\\.[0-9]{1,6})$",
                                            "type": "string"
                                        },
                                        "TypeName": {
                                            "description": "The type of inventory item returned by the request.",
                                            "maxLength": 100,
                                            "minLength": 1,
                                            "pattern": "^(AWS|Custom):.*$",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidInstanceId",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidTypeNameException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "InvalidFilter",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "InvalidNextToken",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Filters": {
                                        "description": "One or more filters. Use a filter to return a more specific list of results.",
                                        "items": {
                                            "description": "One or more filters. Use a filter to return a more specific list of results.",
                                            "properties": {
                                                "Key": {
                                                    "description": "The name of the filter key.",
                                                    "maxLength": 200,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "description": "The type of filter. Valid values include the following: \"Equal\"|\"NotEqual\"|\"BeginWith\"|\"LessThan\"|\"GreaterThan\"",
                                                    "enum": [
                                                        "Equal",
                                                        "NotEqual",
                                                        "BeginWith",
                                                        "LessThan",
                                                        "GreaterThan",
                                                        "Exists"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "Inventory filter values. Example: inventory filter where instance IDs are specified as values Key=AWS:InstanceInformation.InstanceId,Values= i-a12b3c4d5e6g, i-1a2b3c4d5e6,Type=Equal ",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "maxItems": 40,
                                                    "minItems": 1,
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Key",
                                                "Values"
                                            ],
                                            "type": "object"
                                        },
                                        "maxItems": 5,
                                        "minItems": 1,
                                        "type": "array"
                                    },
                                    "InstanceId": {
                                        "description": "The instance ID for which you want inventory information.",
                                        "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                                        "type": "string"
                                    },
                                    "MaxResults": {
                                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                                        "maximum": 50,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "The token for the next set of items to return. (You received this token from a previous call.)",
                                        "type": "string"
                                    },
                                    "TypeName": {
                                        "description": "The type of inventory item for which you want information.",
                                        "maxLength": 100,
                                        "minLength": 1,
                                        "pattern": "^(AWS|Custom):.*$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "InstanceId",
                                    "TypeName"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ListResourceComplianceSummaries": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Returns a resource-level summary count. The summary includes information about compliant and non-compliant statuses and detailed compliance-item severity counts, according to the filter criteria you specify.",
                "operationId": "ListResourceComplianceSummaries",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "NextToken": {
                                            "description": "The token for the next set of items to return. Use this token to get the next set of results.",
                                            "type": "string"
                                        },
                                        "ResourceComplianceSummaryItems": {
                                            "description": "A summary count for specified or targeted managed instances. Summary count includes information about compliant and non-compliant State Manager associations, patch status, or custom items according to the filter criteria that you specify. ",
                                            "items": {
                                                "description": "Compliance summary information for a specific resource. ",
                                                "properties": {
                                                    "ComplianceType": {
                                                        "description": "The compliance type.",
                                                        "maxLength": 100,
                                                        "minLength": 1,
                                                        "pattern": "[A-Za-z0-9_\\-]\\w+|Custom:[a-zA-Z0-9_\\-]\\w+",
                                                        "type": "string"
                                                    },
                                                    "CompliantSummary": {
                                                        "description": "A list of items that are compliant for the resource.",
                                                        "properties": {
                                                            "CompliantCount": {
                                                                "description": "The total number of resources that are compliant.",
                                                                "type": "integer"
                                                            },
                                                            "SeveritySummary": {
                                                                "description": "A summary of the compliance severity by compliance type.",
                                                                "properties": {
                                                                    "CriticalCount": {
                                                                        "description": "The total number of resources or compliance items that have a severity level of critical. Critical severity is determined by the organization that published the compliance items.",
                                                                        "type": "integer"
                                                                    },
                                                                    "HighCount": {
                                                                        "description": "The total number of resources or compliance items that have a severity level of high. High severity is determined by the organization that published the compliance items.",
                                                                        "type": "integer"
                                                                    },
                                                                    "InformationalCount": {
                                                                        "description": "The total number of resources or compliance items that have a severity level of informational. Informational severity is determined by the organization that published the compliance items.",
                                                                        "type": "integer"
                                                                    },
                                                                    "LowCount": {
                                                                        "description": "The total number of resources or compliance items that have a severity level of low. Low severity is determined by the organization that published the compliance items.",
                                                                        "type": "integer"
                                                                    },
                                                                    "MediumCount": {
                                                                        "description": "The total number of resources or compliance items that have a severity level of medium. Medium severity is determined by the organization that published the compliance items.",
                                                                        "type": "integer"
                                                                    },
                                                                    "UnspecifiedCount": {
                                                                        "description": "The total number of resources or compliance items that have a severity level of unspecified. Unspecified severity is determined by the organization that published the compliance items.",
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "ExecutionSummary": {
                                                        "description": "Information about the execution.",
                                                        "properties": {
                                                            "ExecutionId": {
                                                                "description": "An ID created by the system when <code>PutComplianceItems</code> was called. For example, <code>CommandID</code> is a valid execution ID. You can use this ID in subsequent calls.",
                                                                "maxLength": 100,
                                                                "type": "string"
                                                            },
                                                            "ExecutionTime": {
                                                                "description": "The time the execution ran as a datetime object that is saved in the following format: yyyy-MM-dd'T'HH:mm:ss'Z'.",
                                                                "format": "date-time",
                                                                "type": "string"
                                                            },
                                                            "ExecutionType": {
                                                                "description": "The type of execution. For example, <code>Command</code> is a valid execution type.",
                                                                "maxLength": 50,
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "ExecutionTime"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "NonCompliantSummary": {
                                                        "description": "A list of items that aren't compliant for the resource.",
                                                        "properties": {
                                                            "NonCompliantCount": {
                                                                "description": "The total number of compliance items that are not compliant.",
                                                                "type": "integer"
                                                            },
                                                            "SeveritySummary": {
                                                                "description": "A summary of the non-compliance severity by compliance type",
                                                                "properties": {
                                                                    "CriticalCount": {
                                                                        "description": "The total number of resources or compliance items that have a severity level of critical. Critical severity is determined by the organization that published the compliance items.",
                                                                        "type": "integer"
                                                                    },
                                                                    "HighCount": {
                                                                        "description": "The total number of resources or compliance items that have a severity level of high. High severity is determined by the organization that published the compliance items.",
                                                                        "type": "integer"
                                                                    },
                                                                    "InformationalCount": {
                                                                        "description": "The total number of resources or compliance items that have a severity level of informational. Informational severity is determined by the organization that published the compliance items.",
                                                                        "type": "integer"
                                                                    },
                                                                    "LowCount": {
                                                                        "description": "The total number of resources or compliance items that have a severity level of low. Low severity is determined by the organization that published the compliance items.",
                                                                        "type": "integer"
                                                                    },
                                                                    "MediumCount": {
                                                                        "description": "The total number of resources or compliance items that have a severity level of medium. Medium severity is determined by the organization that published the compliance items.",
                                                                        "type": "integer"
                                                                    },
                                                                    "UnspecifiedCount": {
                                                                        "description": "The total number of resources or compliance items that have a severity level of unspecified. Unspecified severity is determined by the organization that published the compliance items.",
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "OverallSeverity": {
                                                        "description": "The highest severity item found for the resource. The resource is compliant for this item.",
                                                        "enum": [
                                                            "CRITICAL",
                                                            "HIGH",
                                                            "MEDIUM",
                                                            "LOW",
                                                            "INFORMATIONAL",
                                                            "UNSPECIFIED"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "ResourceId": {
                                                        "description": "The resource ID.",
                                                        "maxLength": 100,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "ResourceType": {
                                                        "description": "The resource type.",
                                                        "maxLength": 50,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "Status": {
                                                        "description": "The compliance status for the resource.",
                                                        "enum": [
                                                            "COMPLIANT",
                                                            "NON_COMPLIANT"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidFilter",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidNextToken",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Filters": {
                                        "description": "One or more filters. Use a filter to return a more specific list of results.",
                                        "items": {
                                            "description": "One or more filters. Use a filter to return a more specific list of results.",
                                            "properties": {
                                                "Key": {
                                                    "description": "The name of the filter.",
                                                    "maxLength": 200,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "description": "The type of comparison that should be performed for the value: Equal, NotEqual, BeginWith, LessThan, or GreaterThan.",
                                                    "enum": [
                                                        "EQUAL",
                                                        "NOT_EQUAL",
                                                        "BEGIN_WITH",
                                                        "LESS_THAN",
                                                        "GREATER_THAN"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "The value for which to search.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "maxItems": 20,
                                                    "minItems": 1,
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "MaxResults": {
                                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                                        "maximum": 50,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "A token to start the list. Use this token to get the next set of results. ",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ListResourceDataSync": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Lists your resource data sync configurations. Includes information about the last time a sync attempted to start, the last sync status, and the last time a sync successfully completed.</p> <p>The number of sync configurations might be too large to return using a single call to <code>ListResourceDataSync</code>. You can limit the number of sync configurations returned by using the <code>MaxResults</code> parameter. To determine whether there are more sync configurations to list, check the value of <code>NextToken</code> in the output. If there are more sync configurations to list, you can request them by specifying the <code>NextToken</code> returned in the call to the parameter of a subsequent call. </p>",
                "operationId": "ListResourceDataSync",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "NextToken": {
                                            "description": "The token for the next set of items to return. Use this token to get the next set of results.",
                                            "type": "string"
                                        },
                                        "ResourceDataSyncItems": {
                                            "description": "A list of your current Resource Data Sync configurations and their statuses.",
                                            "items": {
                                                "description": "Information about a Resource Data Sync configuration, including its current status and last successful sync.",
                                                "properties": {
                                                    "LastStatus": {
                                                        "description": "The status reported by the last sync.",
                                                        "enum": [
                                                            "Successful",
                                                            "Failed",
                                                            "InProgress"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "LastSuccessfulSyncTime": {
                                                        "description": "The last time the sync operations returned a status of <code>SUCCESSFUL</code> (UTC).",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "LastSyncStatusMessage": {
                                                        "description": "The status message details reported by the last sync.",
                                                        "type": "string"
                                                    },
                                                    "LastSyncTime": {
                                                        "description": "The last time the configuration attempted to sync (UTC).",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "S3Destination": {
                                                        "description": "Configuration information for the target Amazon S3 bucket.",
                                                        "properties": {
                                                            "AWSKMSKeyARN": {
                                                                "description": "The ARN of an encryption key for a destination in Amazon S3. Must belong to the same region as the destination Amazon S3 bucket.",
                                                                "maxLength": 512,
                                                                "minLength": 1,
                                                                "pattern": "arn:.*",
                                                                "type": "string"
                                                            },
                                                            "BucketName": {
                                                                "description": "The name of the Amazon S3 bucket where the aggregated data is stored.",
                                                                "maxLength": 2048,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            },
                                                            "Prefix": {
                                                                "description": "An Amazon S3 prefix for the bucket.",
                                                                "maxLength": 256,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            },
                                                            "Region": {
                                                                "description": "The AWS Region with the Amazon S3 bucket targeted by the Resource Data Sync.",
                                                                "maxLength": 64,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            },
                                                            "SyncFormat": {
                                                                "description": "A supported sync format. The following format is currently supported: JsonSerDe",
                                                                "enum": [
                                                                    "JsonSerDe"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "BucketName",
                                                            "SyncFormat",
                                                            "Region"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "SyncCreatedTime": {
                                                        "description": "The date and time the configuration was created (UTC).",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "SyncName": {
                                                        "description": "The name of the Resource Data Sync.",
                                                        "maxLength": 64,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidNextToken",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "MaxResults": {
                                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                                        "maximum": 50,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "A token to start the list. Use this token to get the next set of results. ",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ListTagsForResource": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Returns a list of the tags assigned to the specified resource.",
                "operationId": "ListTagsForResource",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "TagList": {
                                            "description": "A list of tags.",
                                            "items": {
                                                "description": "Metadata that you assign to your AWS resources. Tags enable you to categorize your resources in different ways, for example, by purpose, owner, or environment. In Systems Manager, you can apply tags to documents, managed instances, Maintenance Windows, Parameter Store parameters, and patch baselines.",
                                                "properties": {
                                                    "Key": {
                                                        "description": "The name of the tag.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                        "type": "string"
                                                    },
                                                    "Value": {
                                                        "description": "The value of the tag.",
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "Key",
                                                    "Value"
                                                ],
                                                "type": "object"
                                            },
                                            "maxItems": 1000,
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidResourceType",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidResourceId",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ResourceId": {
                                        "description": "The resource ID for which you want to see a list of tags.",
                                        "type": "string"
                                    },
                                    "ResourceType": {
                                        "description": "Returns a list of tags for a specific resource type.",
                                        "enum": [
                                            "Document",
                                            "ManagedInstance",
                                            "MaintenanceWindow",
                                            "Parameter",
                                            "PatchBaseline"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "ResourceType",
                                    "ResourceId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ModifyDocumentPermission": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Shares a Systems Manager document publicly or privately. If you share a document privately, you must specify the AWS user account IDs for those people who can use the document. If you share a document publicly, you must specify <i>All</i> as the account ID.",
                "operationId": "ModifyDocumentPermission",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidDocument",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidPermissionType",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "DocumentPermissionLimit",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "DocumentLimitExceeded",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "AccountIdsToAdd": {
                                        "description": "The AWS user accounts that should have access to the document. The account IDs can either be a group of account IDs or <i>All</i>.",
                                        "items": {
                                            "pattern": "\\(\\?i\\)all\\|[0-9]\\{12\\}",
                                            "type": "string"
                                        },
                                        "maxItems": 20,
                                        "type": "array"
                                    },
                                    "AccountIdsToRemove": {
                                        "description": "The AWS user accounts that should no longer have access to the document. The AWS user account can either be a group of account IDs or <i>All</i>. This action has a higher priority than <i>AccountIdsToAdd</i>. If you specify an account ID to add and the same ID to remove, the system removes access to the document.",
                                        "items": {
                                            "pattern": "\\(\\?i\\)all\\|[0-9]\\{12\\}",
                                            "type": "string"
                                        },
                                        "maxItems": 20,
                                        "type": "array"
                                    },
                                    "Name": {
                                        "description": "The name of the document that you want to share.",
                                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                        "type": "string"
                                    },
                                    "PermissionType": {
                                        "description": "The permission type for the document. The permission type can be <i>Share</i>.",
                                        "enum": [
                                            "Share"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Name",
                                    "PermissionType"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#PutComplianceItems": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Registers a compliance type and other compliance details on a designated resource. This action lets you register custom compliance details with a resource. This call overwrites existing compliance information on the resource, so you must provide a full list of compliance items each time that you send the request.</p> <p>ComplianceType can be one of the following:</p> <ul> <li> <p>ExecutionId: The execution ID when the patch, association, or custom compliance item was applied.</p> </li> <li> <p>ExecutionType: Specify patch, association, or Custom:<code>string</code>.</p> </li> <li> <p>ExecutionTime. The time the patch, association, or custom compliance item was applied to the instance.</p> </li> <li> <p>Id: The patch, association, or custom compliance ID.</p> </li> <li> <p>Title: A title.</p> </li> <li> <p>Status: The status of the compliance item. For example, <code>approved</code> for patches, or <code>Failed</code> for associations.</p> </li> <li> <p>Severity: A patch severity. For example, <code>critical</code>.</p> </li> <li> <p>DocumentName: A SSM document name. For example, AWS-RunPatchBaseline.</p> </li> <li> <p>DocumentVersion: An SSM document version number. For example, 4.</p> </li> <li> <p>Classification: A patch classification. For example, <code>security updates</code>.</p> </li> <li> <p>PatchBaselineId: A patch baseline ID.</p> </li> <li> <p>PatchSeverity: A patch severity. For example, <code>Critical</code>.</p> </li> <li> <p>PatchState: A patch state. For example, <code>InstancesWithFailedPatches</code>.</p> </li> <li> <p>PatchGroup: The name of a patch group.</p> </li> <li> <p>InstalledTime: The time the association, patch, or custom compliance item was applied to the resource. Specify the time by using the following format: yyyy-MM-dd'T'HH:mm:ss'Z'</p> </li> </ul>",
                "operationId": "PutComplianceItems",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidItemContentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "TotalSizeLimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ItemSizeLimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ComplianceTypeCountLimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "InvalidResourceType",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "InvalidResourceId",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ComplianceType": {
                                        "description": "Specify the compliance type. For example, specify Association (for a State Manager association), Patch, or Custom:<code>string</code>.",
                                        "maxLength": 100,
                                        "minLength": 1,
                                        "pattern": "[A-Za-z0-9_\\-]\\w+|Custom:[a-zA-Z0-9_\\-]\\w+",
                                        "type": "string"
                                    },
                                    "ExecutionSummary": {
                                        "description": "A summary of the call execution that includes an execution ID, the type of execution (for example, <code>Command</code>), and the date/time of the execution using a datetime object that is saved in the following format: yyyy-MM-dd'T'HH:mm:ss'Z'.",
                                        "properties": {
                                            "ExecutionId": {
                                                "description": "An ID created by the system when <code>PutComplianceItems</code> was called. For example, <code>CommandID</code> is a valid execution ID. You can use this ID in subsequent calls.",
                                                "maxLength": 100,
                                                "type": "string"
                                            },
                                            "ExecutionTime": {
                                                "description": "The time the execution ran as a datetime object that is saved in the following format: yyyy-MM-dd'T'HH:mm:ss'Z'.",
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "ExecutionType": {
                                                "description": "The type of execution. For example, <code>Command</code> is a valid execution type.",
                                                "maxLength": 50,
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "ExecutionTime"
                                        ],
                                        "type": "object"
                                    },
                                    "ItemContentHash": {
                                        "description": "MD5 or SHA-256 content hash. The content hash is used to determine if existing information should be overwritten or ignored. If the content hashes match, the request to put compliance information is ignored.",
                                        "maxLength": 256,
                                        "type": "string"
                                    },
                                    "Items": {
                                        "description": "Information about the compliance as defined by the resource type. For example, for a patch compliance type, <code>Items</code> includes information about the PatchSeverity, Classification, etc.",
                                        "items": {
                                            "description": "Information about a compliance item.",
                                            "properties": {
                                                "Details": {
                                                    "description": "A \"Key\": \"Value\" tag combination for the compliance item.",
                                                    "items": {
                                                        "properties": {
                                                            "key": {
                                                                "maxLength": 64,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            },
                                                            "value": {
                                                                "maxLength": 4096,
                                                                "minLength": 0,
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "Id": {
                                                    "description": "The compliance item ID. For example, if the compliance item is a Windows patch, the ID could be the number of the KB article.",
                                                    "maxLength": 100,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Severity": {
                                                    "description": "The severity of the compliance status. Severity can be one of the following: Critical, High, Medium, Low, Informational, Unspecified.",
                                                    "enum": [
                                                        "CRITICAL",
                                                        "HIGH",
                                                        "MEDIUM",
                                                        "LOW",
                                                        "INFORMATIONAL",
                                                        "UNSPECIFIED"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "description": "The status of the compliance item. An item is either COMPLIANT or NON_COMPLIANT.",
                                                    "enum": [
                                                        "COMPLIANT",
                                                        "NON_COMPLIANT"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Title": {
                                                    "description": "The title of the compliance item. For example, if the compliance item is a Windows patch, the title could be the title of the KB article for the patch; for example: Security Update for Active Directory Federation Services. ",
                                                    "maxLength": 500,
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Severity",
                                                "Status"
                                            ],
                                            "type": "object"
                                        },
                                        "maxItems": 10000,
                                        "minItems": 0,
                                        "type": "array"
                                    },
                                    "ResourceId": {
                                        "description": "Specify an ID for this resource. For a managed instance, this is the instance ID.",
                                        "maxLength": 100,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "ResourceType": {
                                        "description": "Specify the type of resource. <code>ManagedInstance</code> is currently the only supported resource type.",
                                        "maxLength": 50,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "ResourceId",
                                    "ResourceType",
                                    "ComplianceType",
                                    "ExecutionSummary",
                                    "Items"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#PutInventory": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Bulk update custom inventory items on one more instance. The request adds an inventory item, if it doesn't already exist, or updates an inventory item, if it does exist.",
                "operationId": "PutInventory",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Message": {
                                            "description": "Information about the request.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidInstanceId",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidTypeNameException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "InvalidItemContentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "TotalSizeLimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "ItemSizeLimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "ItemContentMismatchException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "487": {
                        "description": "CustomSchemaCountLimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "488": {
                        "description": "UnsupportedInventorySchemaVersionException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "489": {
                        "description": "UnsupportedInventoryItemContextException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "490": {
                        "description": "InvalidInventoryItemContextException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "491": {
                        "description": "SubTypeCountLimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "InstanceId": {
                                        "description": "One or more instance IDs where you want to add or update inventory items.",
                                        "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                                        "type": "string"
                                    },
                                    "Items": {
                                        "description": "The inventory items that you want to add or update on instances.",
                                        "items": {
                                            "description": "Information collected from managed instances based on your inventory policy document",
                                            "properties": {
                                                "CaptureTime": {
                                                    "description": "The time the inventory information was collected.",
                                                    "pattern": "^(20)[0-9][0-9]-(0[1-9]|1[012])-([12][0-9]|3[01]|0[1-9])(T)(2[0-3]|[0-1][0-9])(:[0-5][0-9])(:[0-5][0-9])(Z)$",
                                                    "type": "string"
                                                },
                                                "Content": {
                                                    "description": "The inventory data of the inventory type.",
                                                    "items": {
                                                        "items": {
                                                            "properties": {
                                                                "key": {
                                                                    "maxLength": 64,
                                                                    "minLength": 1,
                                                                    "type": "string"
                                                                },
                                                                "value": {
                                                                    "maxLength": 4096,
                                                                    "minLength": 0,
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "maxItems": 50,
                                                        "minItems": 0,
                                                        "type": "array"
                                                    },
                                                    "maxItems": 10000,
                                                    "minItems": 0,
                                                    "type": "array"
                                                },
                                                "ContentHash": {
                                                    "description": "MD5 hash of the inventory item type contents. The content hash is used to determine whether to update inventory information. The PutInventory API does not update the inventory item type contents if the MD5 hash has not changed since last update. ",
                                                    "maxLength": 256,
                                                    "type": "string"
                                                },
                                                "Context": {
                                                    "description": "A map of associated properties for a specified inventory type. For example, with this attribute, you can specify the <code>ExecutionId</code>, <code>ExecutionType</code>, <code>ComplianceType</code> properties of the <code>AWS:ComplianceItem</code> type.",
                                                    "items": {
                                                        "properties": {
                                                            "key": {
                                                                "maxLength": 64,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            },
                                                            "value": {
                                                                "maxLength": 4096,
                                                                "minLength": 0,
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "maxItems": 50,
                                                    "minItems": 0,
                                                    "type": "array"
                                                },
                                                "SchemaVersion": {
                                                    "description": "The schema version for the inventory item.",
                                                    "pattern": "^([0-9]{1,6})(\\.[0-9]{1,6})$",
                                                    "type": "string"
                                                },
                                                "TypeName": {
                                                    "description": "The name of the inventory type. Default inventory item type names start with AWS. Custom inventory type names will start with Custom. Default inventory item types include the following: AWS:AWSComponent, AWS:Application, AWS:InstanceInformation, AWS:Network, and AWS:WindowsUpdate.",
                                                    "maxLength": 100,
                                                    "minLength": 1,
                                                    "pattern": "^(AWS|Custom):.*$",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "TypeName",
                                                "SchemaVersion",
                                                "CaptureTime"
                                            ],
                                            "type": "object"
                                        },
                                        "maxItems": 30,
                                        "minItems": 1,
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "InstanceId",
                                    "Items"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#PutParameter": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Add a parameter to the system.",
                "operationId": "PutParameter",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Version": {
                                            "description": "The new version number of a parameter. If you edit a parameter value, Parameter Store automatically creates a new version and assigns this new version a unique ID. You can reference a parameter version ID in API actions or in Systems Manager documents (SSM documents). By default, if you don't specify a specific version, the system returns the latest parameter value when a parameter is called.",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidKeyId",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ParameterLimitExceeded",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "TooManyUpdates",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ParameterAlreadyExists",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "HierarchyLevelLimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "HierarchyTypeMismatchException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "487": {
                        "description": "InvalidAllowedPatternException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "488": {
                        "description": "ParameterMaxVersionLimitExceeded",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "489": {
                        "description": "ParameterPatternMismatchException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "490": {
                        "description": "UnsupportedParameterType",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "AllowedPattern": {
                                        "description": "A regular expression used to validate the parameter value. For example, for String types with values restricted to numbers, you can specify the following: AllowedPattern=^\\d+$ ",
                                        "maxLength": 1024,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "Description": {
                                        "description": "<p>Information about the parameter that you want to add to the system. Optional but recommended.</p> <important> <p>Do not enter personally identifiable information in this field.</p> </important>",
                                        "maxLength": 1024,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "KeyId": {
                                        "description": "<p>The KMS Key ID that you want to use to encrypt a parameter. Either the default AWS Key Management Service (AWS KMS) key automatically assigned to your AWS account or a custom key. Required for parameters that use the <code>SecureString</code> data type.</p> <p>If you don't specify a key ID, the system uses the default key associated with your AWS account.</p> <ul> <li> <p>To use your default AWS KMS key, choose the <code>SecureString</code> data type, and do <i>not</i> specify the <code>Key ID</code> when you create the parameter. The system automatically populates <code>Key ID</code> with your default KMS key.</p> </li> <li> <p>To use a custom KMS key, choose the <code>SecureString</code> data type with the <code>Key ID</code> parameter.</p> </li> </ul>",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "pattern": "^([a-zA-Z0-9:/_-]+)$",
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "<p>The fully qualified name of the parameter that you want to add to the system. The fully qualified name includes the complete hierarchy of the parameter path and name. For example: <code>/Dev/DBServer/MySQL/db-string13</code> </p> <p>Naming Constraints:</p> <ul> <li> <p>Parameter names are case sensitive.</p> </li> <li> <p>A parameter name must be unique within an AWS Region</p> </li> <li> <p>A parameter name can't be prefixed with \"aws\" or \"ssm\" (case-insensitive).</p> </li> <li> <p>Parameter names can include only the following symbols and letters: <code>a-zA-Z0-9_.-/</code> </p> </li> <li> <p>A parameter name can't include spaces.</p> </li> <li> <p>Parameter hierarchies are limited to a maximum depth of fifteen levels.</p> </li> </ul> <p>For additional information about valid values for parameter names, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-parameter-name-constraints.html\">Requirements and Constraints for Parameter Names</a> in the <i>AWS Systems Manager User Guide</i>.</p> <note> <p>The maximum length constraint listed below includes capacity for additional system attributes that are not part of the name. The maximum length for the fully qualified parameter name is 1011 characters. </p> </note>",
                                        "maxLength": 2048,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "Overwrite": {
                                        "description": "Overwrite an existing parameter. If not specified, will default to \"false\".",
                                        "type": "boolean"
                                    },
                                    "Tags": {
                                        "description": "<p>Optional metadata that you assign to a resource. Tags enable you to categorize a resource in different ways, such as by purpose, owner, or environment. For example, you might want to tag a Systems Manager parameter to identify the type of resource to which it applies, the environment, or the type of configuration data referenced by the parameter. In this case, you could specify the following key name/value pairs:</p> <ul> <li> <p> <code>Key=Resource,Value=S3bucket</code> </p> </li> <li> <p> <code>Key=OS,Value=Windows</code> </p> </li> <li> <p> <code>Key=ParameterType,Value=LicenseKey</code> </p> </li> </ul> <note> <p>To add tags to an existing Systems Manager parameter, use the <a>AddTagsToResource</a> action.</p> </note>",
                                        "items": {
                                            "description": "Metadata that you assign to your AWS resources. Tags enable you to categorize your resources in different ways, for example, by purpose, owner, or environment. In Systems Manager, you can apply tags to documents, managed instances, Maintenance Windows, Parameter Store parameters, and patch baselines.",
                                            "properties": {
                                                "Key": {
                                                    "description": "The name of the tag.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The value of the tag.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Key",
                                                "Value"
                                            ],
                                            "type": "object"
                                        },
                                        "maxItems": 1000,
                                        "type": "array"
                                    },
                                    "Type": {
                                        "description": "<p>The type of parameter that you want to add to the system.</p> <p>Items in a <code>StringList</code> must be separated by a comma (,). You can't use other punctuation or special character to escape items in the list. If you have a parameter value that requires a comma, then use the <code>String</code> data type.</p> <note> <p> <code>SecureString</code> is not currently supported for AWS CloudFormation templates or in the China Regions.</p> </note>",
                                        "enum": [
                                            "String",
                                            "StringList",
                                            "SecureString"
                                        ],
                                        "type": "string"
                                    },
                                    "Value": {
                                        "description": "The parameter value that you want to add to the system.",
                                        "maxLength": 4096,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Name",
                                    "Value",
                                    "Type"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#RegisterDefaultPatchBaseline": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Defines the default patch baseline.",
                "operationId": "RegisterDefaultPatchBaseline",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "BaselineId": {
                                            "description": "The ID of the default patch baseline.",
                                            "maxLength": 128,
                                            "minLength": 20,
                                            "pattern": "^[a-zA-Z0-9_\\-:/]{20,128}$",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidResourceId",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "DoesNotExistException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "BaselineId": {
                                        "description": "The ID of the patch baseline that should be the default patch baseline.",
                                        "maxLength": 128,
                                        "minLength": 20,
                                        "pattern": "^[a-zA-Z0-9_\\-:/]{20,128}$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "BaselineId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#RegisterPatchBaselineForPatchGroup": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Registers a patch baseline for a patch group.",
                "operationId": "RegisterPatchBaselineForPatchGroup",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "BaselineId": {
                                            "description": "The ID of the patch baseline the patch group was registered with.",
                                            "maxLength": 128,
                                            "minLength": 20,
                                            "pattern": "^[a-zA-Z0-9_\\-:/]{20,128}$",
                                            "type": "string"
                                        },
                                        "PatchGroup": {
                                            "description": "The name of the patch group registered with the patch baseline.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "AlreadyExistsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "DoesNotExistException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidResourceId",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ResourceLimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "BaselineId": {
                                        "description": "The ID of the patch baseline to register the patch group with.",
                                        "maxLength": 128,
                                        "minLength": 20,
                                        "pattern": "^[a-zA-Z0-9_\\-:/]{20,128}$",
                                        "type": "string"
                                    },
                                    "PatchGroup": {
                                        "description": "The name of the patch group that should be registered with the patch baseline.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "BaselineId",
                                    "PatchGroup"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#RegisterTargetWithMaintenanceWindow": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Registers a target with a Maintenance Window.",
                "operationId": "RegisterTargetWithMaintenanceWindow",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "WindowTargetId": {
                                            "description": "The ID of the target definition in this Maintenance Window.",
                                            "maxLength": 36,
                                            "minLength": 36,
                                            "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "IdempotentParameterMismatch",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "DoesNotExistException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ResourceLimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ClientToken": {
                                        "description": "User-provided idempotency token.",
                                        "maxLength": 64,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "Description": {
                                        "description": "An optional description for the target.",
                                        "format": "password",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "An optional name for the target.",
                                        "maxLength": 128,
                                        "minLength": 3,
                                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                        "type": "string"
                                    },
                                    "OwnerInformation": {
                                        "description": "User-provided value that will be included in any CloudWatch events raised while running tasks for these targets in this Maintenance Window.",
                                        "format": "password",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "ResourceType": {
                                        "description": "The type of target being registered with the Maintenance Window.",
                                        "enum": [
                                            "INSTANCE"
                                        ],
                                        "type": "string"
                                    },
                                    "Targets": {
                                        "description": "<p>The targets (either instances or tags). </p> <p>Specify instances using the following format:</p> <p> <code>Key=InstanceIds,Values=&lt;instance-id-1&gt;,&lt;instance-id-2&gt;</code> </p> <p>Specify tags using either of the following formats:</p> <p> <code>Key=tag:&lt;tag-key&gt;,Values=&lt;tag-value-1&gt;,&lt;tag-value-2&gt;</code> </p> <p> <code>Key=tag-key,Values=&lt;tag-key-1&gt;,&lt;tag-key-2&gt;</code> </p>",
                                        "items": {
                                            "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                                            "properties": {
                                                "Key": {
                                                    "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "maxItems": 50,
                                                    "minItems": 0,
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "maxItems": 5,
                                        "minItems": 0,
                                        "type": "array"
                                    },
                                    "WindowId": {
                                        "description": "The ID of the Maintenance Window the target should be registered with.",
                                        "maxLength": 20,
                                        "minLength": 20,
                                        "pattern": "^mw-[0-9a-f]{17}$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "WindowId",
                                    "ResourceType",
                                    "Targets"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#RegisterTaskWithMaintenanceWindow": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Adds a new task to a Maintenance Window.",
                "operationId": "RegisterTaskWithMaintenanceWindow",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "WindowTaskId": {
                                            "description": "The ID of the task in the Maintenance Window.",
                                            "maxLength": 36,
                                            "minLength": 36,
                                            "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "IdempotentParameterMismatch",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "DoesNotExistException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ResourceLimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "FeatureNotAvailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ClientToken": {
                                        "description": "User-provided idempotency token.",
                                        "maxLength": 64,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "Description": {
                                        "description": "An optional description for the task.",
                                        "format": "password",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "LoggingInfo": {
                                        "description": "<p>A structure containing information about an Amazon S3 bucket to write instance-level logs to. </p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an S3 bucket to contain logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> </note>",
                                        "properties": {
                                            "S3BucketName": {
                                                "description": "The name of an Amazon S3 bucket where execution logs are stored .",
                                                "maxLength": 63,
                                                "minLength": 3,
                                                "type": "string"
                                            },
                                            "S3KeyPrefix": {
                                                "description": "(Optional) The Amazon S3 bucket subfolder. ",
                                                "maxLength": 500,
                                                "type": "string"
                                            },
                                            "S3Region": {
                                                "description": "The region where the Amazon S3 bucket is located.",
                                                "maxLength": 20,
                                                "minLength": 3,
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "S3BucketName",
                                            "S3Region"
                                        ],
                                        "type": "object"
                                    },
                                    "MaxConcurrency": {
                                        "description": "The maximum number of targets this task can be run for in parallel.",
                                        "maxLength": 7,
                                        "minLength": 1,
                                        "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                                        "type": "string"
                                    },
                                    "MaxErrors": {
                                        "description": "The maximum number of errors allowed before this task stops being scheduled.",
                                        "maxLength": 7,
                                        "minLength": 1,
                                        "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "An optional name for the task.",
                                        "maxLength": 128,
                                        "minLength": 3,
                                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                        "type": "string"
                                    },
                                    "Priority": {
                                        "description": "The priority of the task in the Maintenance Window, the lower the number the higher the priority. Tasks in a Maintenance Window are scheduled in priority order with tasks that have the same priority scheduled in parallel.",
                                        "minimum": 0,
                                        "type": "integer"
                                    },
                                    "ServiceRoleArn": {
                                        "description": "<p>The role to assume when running the Maintenance Window task.</p> <p>If you do not specify a service role ARN, Systems Manager will use your account's service-linked role for Systems Manager by default. If no service-linked role for Systems Manager exists in your account, it will be created when you run <code>RegisterTaskWithMaintenanceWindow</code> without specifying a service role ARN.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/using-service-linked-roles.html#slr-permissions\">Service-Linked Role Permissions for Systems Manager</a> and <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-maintenance-permissions.html#maintenance-window-tasks-service-role\">Should I Use a Service-Linked Role or a Custom Service Role to Run Maintenance Window Tasks? </a> in the <i>AWS Systems Manager User Guide</i>.</p>",
                                        "type": "string"
                                    },
                                    "Targets": {
                                        "description": "<p>The targets (either instances or Maintenance Window targets).</p> <p>Specify instances using the following format: </p> <p> <code>Key=InstanceIds,Values=&lt;instance-id-1&gt;,&lt;instance-id-2&gt;</code> </p> <p>Specify Maintenance Window targets using the following format:</p> <p> <code>Key=&lt;WindowTargetIds&gt;,Values=&lt;window-target-id-1&gt;,&lt;window-target-id-2&gt;</code> </p>",
                                        "items": {
                                            "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                                            "properties": {
                                                "Key": {
                                                    "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "maxItems": 50,
                                                    "minItems": 0,
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "maxItems": 5,
                                        "minItems": 0,
                                        "type": "array"
                                    },
                                    "TaskArn": {
                                        "description": "The ARN of the task to execute ",
                                        "maxLength": 1600,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "TaskInvocationParameters": {
                                        "description": "The parameters that the task should use during execution. Populate only the fields that match the task type. All other fields should be empty. ",
                                        "properties": {
                                            "Automation": {
                                                "description": "The parameters for an AUTOMATION task type.",
                                                "properties": {
                                                    "DocumentVersion": {
                                                        "description": "The version of an Automation document to use during task execution.",
                                                        "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                                        "type": "string"
                                                    },
                                                    "Parameters": {
                                                        "description": "<p>The parameters for the AUTOMATION task.</p> <p>For information about specifying and updating task parameters, see <a>RegisterTaskWithMaintenanceWindow</a> and <a>UpdateMaintenanceWindowTask</a>.</p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an S3 bucket to contain logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p> <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p>For AUTOMATION task types, Systems Manager ignores any values specified for these parameters.</p> </note>",
                                                        "items": {
                                                            "properties": {
                                                                "key": {
                                                                    "maxLength": 30,
                                                                    "minLength": 1,
                                                                    "type": "string"
                                                                },
                                                                "value": {
                                                                    "items": {
                                                                        "maxLength": 512,
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    },
                                                                    "maxItems": 10,
                                                                    "minItems": 0,
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "maxItems": 200,
                                                        "minItems": 1,
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "Lambda": {
                                                "description": "The parameters for a LAMBDA task type.",
                                                "properties": {
                                                    "ClientContext": {
                                                        "description": "Pass client-specific information to the Lambda function that you are invoking. You can then process the client information in your Lambda function as you choose through the context variable.",
                                                        "maxLength": 8000,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "Payload": {
                                                        "description": "JSON to provide to your Lambda function as input.",
                                                        "format": "password",
                                                        "maxLength": 4096,
                                                        "type": "string"
                                                    },
                                                    "Qualifier": {
                                                        "description": "(Optional) Specify a Lambda function version or alias name. If you specify a function version, the action uses the qualified function ARN to invoke a specific Lambda function. If you specify an alias name, the action uses the alias ARN to invoke the Lambda function version to which the alias points.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "RunCommand": {
                                                "description": "The parameters for a RUN_COMMAND task type.",
                                                "properties": {
                                                    "Comment": {
                                                        "description": "Information about the command(s) to execute.",
                                                        "maxLength": 100,
                                                        "type": "string"
                                                    },
                                                    "DocumentHash": {
                                                        "description": "The SHA-256 or SHA-1 hash created by the system when the document was created. SHA-1 hashes have been deprecated.",
                                                        "maxLength": 256,
                                                        "type": "string"
                                                    },
                                                    "DocumentHashType": {
                                                        "description": "SHA-256 or SHA-1. SHA-1 hashes have been deprecated.",
                                                        "enum": [
                                                            "Sha256",
                                                            "Sha1"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "NotificationConfig": {
                                                        "description": "Configurations for sending notifications about command status changes on a per-instance basis.",
                                                        "properties": {
                                                            "NotificationArn": {
                                                                "description": "An Amazon Resource Name (ARN) for a Simple Notification Service (SNS) topic. Run Command pushes notifications about command status changes to this topic.",
                                                                "type": "string"
                                                            },
                                                            "NotificationEvents": {
                                                                "description": "The different events for which you can receive notifications. These events include the following: All (events), InProgress, Success, TimedOut, Cancelled, Failed. To learn more about these events, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/rc-sns-notifications.html\">Configuring Amazon SNS Notifications for Run Command</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                                "items": {
                                                                    "enum": [
                                                                        "All",
                                                                        "InProgress",
                                                                        "Success",
                                                                        "TimedOut",
                                                                        "Cancelled",
                                                                        "Failed"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "NotificationType": {
                                                                "description": "Command: Receive notification when the status of a command changes. Invocation: For commands sent to multiple instances, receive notification on a per-instance basis when the status of a command changes. ",
                                                                "enum": [
                                                                    "Command",
                                                                    "Invocation"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "OutputS3BucketName": {
                                                        "description": "The name of the Amazon S3 bucket.",
                                                        "maxLength": 63,
                                                        "minLength": 3,
                                                        "type": "string"
                                                    },
                                                    "OutputS3KeyPrefix": {
                                                        "description": "The Amazon S3 bucket subfolder.",
                                                        "maxLength": 500,
                                                        "type": "string"
                                                    },
                                                    "Parameters": {
                                                        "description": "The parameters for the RUN_COMMAND task execution.",
                                                        "items": {
                                                            "properties": {
                                                                "key": {
                                                                    "type": "string"
                                                                },
                                                                "value": {
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "ServiceRoleArn": {
                                                        "description": "The IAM service role to assume during task execution.",
                                                        "type": "string"
                                                    },
                                                    "TimeoutSeconds": {
                                                        "description": "If this time is reached and the command has not already started executing, it doesn't run.",
                                                        "maximum": 2592000,
                                                        "minimum": 30,
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "StepFunctions": {
                                                "description": "The parameters for a STEP_FUNCTION task type.",
                                                "properties": {
                                                    "Input": {
                                                        "description": "The inputs for the STEP_FUNCTION task.",
                                                        "format": "password",
                                                        "maxLength": 4096,
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the STEP_FUNCTION task.",
                                                        "maxLength": 80,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "TaskParameters": {
                                        "description": "<p>The parameters that should be passed to the task when it is executed.</p> <note> <p> <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> </note>",
                                        "items": {
                                            "properties": {
                                                "key": {
                                                    "maxLength": 255,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "description": "Defines the values for a task parameter.",
                                                    "properties": {
                                                        "Values": {
                                                            "description": "This field contains an array of 0 or more strings, each 1 to 255 characters in length.",
                                                            "items": {
                                                                "format": "password",
                                                                "maxLength": 255,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "TaskType": {
                                        "description": "The type of task being registered.",
                                        "enum": [
                                            "RUN_COMMAND",
                                            "AUTOMATION",
                                            "STEP_FUNCTIONS",
                                            "LAMBDA"
                                        ],
                                        "type": "string"
                                    },
                                    "WindowId": {
                                        "description": "The ID of the Maintenance Window the task should be added to.",
                                        "maxLength": 20,
                                        "minLength": 20,
                                        "pattern": "^mw-[0-9a-f]{17}$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "WindowId",
                                    "Targets",
                                    "TaskArn",
                                    "TaskType",
                                    "MaxConcurrency",
                                    "MaxErrors"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#RemoveTagsFromResource": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Removes all tags from the specified resource.",
                "operationId": "RemoveTagsFromResource",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidResourceType",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidResourceId",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "TooManyUpdates",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ResourceId": {
                                        "description": "<p>The resource ID for which you want to remove tags. Use the ID of the resource. Here are some examples:</p> <p>ManagedInstance: mi-012345abcde</p> <p>MaintenanceWindow: mw-012345abcde</p> <p>PatchBaseline: pb-012345abcde</p> <p>For the Document and Parameter values, use the name of the resource.</p> <note> <p>The ManagedInstance type for this API action is only for on-premises managed instances. You must specify the the name of the managed instance in the following format: mi-ID_number. For example, mi-1a2b3c4d5e6f.</p> </note>",
                                        "type": "string"
                                    },
                                    "ResourceType": {
                                        "description": "<p>The type of resource of which you want to remove a tag.</p> <note> <p>The ManagedInstance type for this API action is only for on-premises managed instances. You must specify the the name of the managed instance in the following format: mi-ID_number. For example, mi-1a2b3c4d5e6f.</p> </note>",
                                        "enum": [
                                            "Document",
                                            "ManagedInstance",
                                            "MaintenanceWindow",
                                            "Parameter",
                                            "PatchBaseline"
                                        ],
                                        "type": "string"
                                    },
                                    "TagKeys": {
                                        "description": "Tag keys that you want to remove from the specified resource.",
                                        "items": {
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "ResourceType",
                                    "ResourceId",
                                    "TagKeys"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ResetServiceSetting": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p> <code>ServiceSetting</code> is an account-level setting for an AWS service. This setting defines how a user interacts with or uses a service or a feature of a service. For example, if an AWS service charges money to the account based on feature or service usage, then the AWS service team might create a default setting of \"false\". This means the user can't use this feature unless they change the setting to \"true\" and intentionally opt in for a paid feature.</p> <p>Services map a <code>SettingId</code> object to a setting value. AWS services teams define the default value for a <code>SettingId</code>. You can't create a new <code>SettingId</code>, but you can overwrite the default value if you have the <code>ssm:UpdateServiceSetting</code> permission for the setting. Use the <a>GetServiceSetting</a> API action to view the current value. Use the <a>UpdateServiceSetting</a> API action to change the default setting. </p> <p>Reset the service setting for the account to the default value as provisioned by the AWS service team. </p>",
                "operationId": "ResetServiceSetting",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "The result body of the ResetServiceSetting API action.",
                                    "properties": {
                                        "ServiceSetting": {
                                            "description": "The current, effective service setting after calling the ResetServiceSetting API action.",
                                            "properties": {
                                                "ARN": {
                                                    "description": "The ARN of the service setting.",
                                                    "type": "string"
                                                },
                                                "LastModifiedDate": {
                                                    "description": "The last time the service setting was modified.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "LastModifiedUser": {
                                                    "description": "The ARN of the last modified user. This field is populated only if the setting value was overwritten.",
                                                    "type": "string"
                                                },
                                                "SettingId": {
                                                    "description": "The ID of the service setting.",
                                                    "maxLength": 1000,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "SettingValue": {
                                                    "description": "The value of the service setting.",
                                                    "maxLength": 4096,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "description": "<p>The status of the service setting. The value can be Default, Customized or PendingUpdate.</p> <ul> <li> <p>Default: The current setting uses a default value provisioned by the AWS service team.</p> </li> <li> <p>Customized: The current setting use a custom value specified by the customer.</p> </li> <li> <p>PendingUpdate: The current setting uses a default or custom value, but a setting change request is pending approval.</p> </li> </ul>",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ServiceSettingNotFound",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "TooManyUpdates",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "The request body of the ResetServiceSetting API action.",
                                "properties": {
                                    "SettingId": {
                                        "description": "The ID of the service setting to reset.",
                                        "maxLength": 1000,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "SettingId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ResumeSession": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Reconnects a session to an instance after it has been disconnected. Connections can be resumed for disconnected sessions, but not terminated sessions.</p> <note> <p>This command is primarily for use by client machines to automatically reconnect during intermittent network issues. It is not intended for any other use.</p> </note>",
                "operationId": "ResumeSession",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "SessionId": {
                                            "description": "The ID of the session.",
                                            "maxLength": 96,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "StreamUrl": {
                                            "description": "<p>A URL back to SSM Agent on the instance that the Session Manager client uses to send commands and receive output from the instance. Format: <code>wss://ssm-messages.<b>region</b>.amazonaws.com/v1/data-channel/<b>session-id</b>?stream=(input|output)</code>.</p> <p> <b>region</b> represents the Region identifier for an AWS Region supported by AWS Systems Manager, such as <code>us-east-2</code> for the US East (Ohio) Region. For a list of supported <b>region</b> values, see the <b>Region</b> column in the <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html#ssm_region\">AWS Systems Manager table of regions and endpoints</a> in the <i>AWS General Reference</i>.</p> <p> <b>session-id</b> represents the ID of a Session Manager session, such as <code>1a2b3c4dEXAMPLE</code>.</p>",
                                            "type": "string"
                                        },
                                        "TokenValue": {
                                            "description": "An encrypted token value containing session and caller information. Used to authenticate the connection to the instance.",
                                            "maxLength": 300,
                                            "minLength": 0,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "DoesNotExistException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "SessionId": {
                                        "description": "The ID of the disconnected session to resume.",
                                        "maxLength": 96,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "SessionId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#SendAutomationSignal": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Sends a signal to an Automation execution to change the current behavior or status of the execution. ",
                "operationId": "SendAutomationSignal",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "AutomationExecutionNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "AutomationStepNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidAutomationSignalException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "AutomationExecutionId": {
                                        "description": "The unique identifier for an existing Automation execution that you want to send the signal to.",
                                        "maxLength": 36,
                                        "minLength": 36,
                                        "type": "string"
                                    },
                                    "Payload": {
                                        "description": "The data sent with the signal. The data schema depends on the type of signal used in the request. ",
                                        "items": {
                                            "properties": {
                                                "key": {
                                                    "maxLength": 30,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "items": {
                                                        "maxLength": 512,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "maxItems": 10,
                                                    "minItems": 0,
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "maxItems": 200,
                                        "minItems": 1,
                                        "type": "array"
                                    },
                                    "SignalType": {
                                        "description": "The type of signal. Valid signal types include the following: Approve and Reject ",
                                        "enum": [
                                            "Approve",
                                            "Reject",
                                            "StartStep",
                                            "StopStep",
                                            "Resume"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "AutomationExecutionId",
                                    "SignalType"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#SendCommand": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Executes commands on one or more managed instances.",
                "operationId": "SendCommand",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Command": {
                                            "description": "The request as it was received by Systems Manager. Also provides the command ID which can be used future references to this request.",
                                            "properties": {
                                                "CloudWatchOutputConfig": {
                                                    "description": "CloudWatch Logs information where you want Systems Manager to send the command output.",
                                                    "properties": {
                                                        "CloudWatchLogGroupName": {
                                                            "description": "The name of the CloudWatch log group where you want to send command output. If you don't specify a group name, Systems Manager automatically creates a log group for you. The log group uses the following naming format: aws/ssm/<i>SystemsManagerDocumentName</i>.",
                                                            "maxLength": 512,
                                                            "minLength": 1,
                                                            "pattern": "[\\.\\-_/#A-Za-z0-9]+",
                                                            "type": "string"
                                                        },
                                                        "CloudWatchOutputEnabled": {
                                                            "description": "Enables Systems Manager to send command output to CloudWatch Logs.",
                                                            "type": "boolean"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "CommandId": {
                                                    "description": "A unique identifier for this command.",
                                                    "maxLength": 36,
                                                    "minLength": 36,
                                                    "type": "string"
                                                },
                                                "Comment": {
                                                    "description": "User-specified information about the command, such as a brief description of what the command should do.",
                                                    "maxLength": 100,
                                                    "type": "string"
                                                },
                                                "CompletedCount": {
                                                    "description": "The number of targets for which the command invocation reached a terminal state. Terminal states include the following: Success, Failed, Execution Timed Out, Delivery Timed Out, Canceled, Terminated, or Undeliverable.",
                                                    "type": "integer"
                                                },
                                                "DeliveryTimedOutCount": {
                                                    "description": "The number of targets for which the status is Delivery Timed Out.",
                                                    "type": "integer"
                                                },
                                                "DocumentName": {
                                                    "description": "The name of the document requested for execution.",
                                                    "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                                    "type": "string"
                                                },
                                                "DocumentVersion": {
                                                    "description": "The SSM document version.",
                                                    "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                                    "type": "string"
                                                },
                                                "ErrorCount": {
                                                    "description": "The number of targets for which the status is Failed or Execution Timed Out.",
                                                    "type": "integer"
                                                },
                                                "ExpiresAfter": {
                                                    "description": "If this time is reached and the command has not already started executing, it will not run. Calculated based on the ExpiresAfter user input provided as part of the SendCommand API.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "InstanceIds": {
                                                    "description": "The instance IDs against which this command was requested.",
                                                    "items": {
                                                        "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                                                        "type": "string"
                                                    },
                                                    "maxItems": 50,
                                                    "minItems": 0,
                                                    "type": "array"
                                                },
                                                "MaxConcurrency": {
                                                    "description": "The maximum number of instances that are allowed to execute the command at the same time. You can specify a number of instances, such as 10, or a percentage of instances, such as 10%. The default value is 50. For more information about how to use MaxConcurrency, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/run-command.html\">Executing Commands Using Systems Manager Run Command</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                    "maxLength": 7,
                                                    "minLength": 1,
                                                    "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                                                    "type": "string"
                                                },
                                                "MaxErrors": {
                                                    "description": "The maximum number of errors allowed before the system stops sending the command to additional targets. You can specify a number of errors, such as 10, or a percentage or errors, such as 10%. The default value is 0. For more information about how to use MaxErrors, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/run-command.html\">Executing Commands Using Systems Manager Run Command</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                    "maxLength": 7,
                                                    "minLength": 1,
                                                    "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                                                    "type": "string"
                                                },
                                                "NotificationConfig": {
                                                    "description": "Configurations for sending notifications about command status changes. ",
                                                    "properties": {
                                                        "NotificationArn": {
                                                            "description": "An Amazon Resource Name (ARN) for a Simple Notification Service (SNS) topic. Run Command pushes notifications about command status changes to this topic.",
                                                            "type": "string"
                                                        },
                                                        "NotificationEvents": {
                                                            "description": "The different events for which you can receive notifications. These events include the following: All (events), InProgress, Success, TimedOut, Cancelled, Failed. To learn more about these events, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/rc-sns-notifications.html\">Configuring Amazon SNS Notifications for Run Command</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                            "items": {
                                                                "enum": [
                                                                    "All",
                                                                    "InProgress",
                                                                    "Success",
                                                                    "TimedOut",
                                                                    "Cancelled",
                                                                    "Failed"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "NotificationType": {
                                                            "description": "Command: Receive notification when the status of a command changes. Invocation: For commands sent to multiple instances, receive notification on a per-instance basis when the status of a command changes. ",
                                                            "enum": [
                                                                "Command",
                                                                "Invocation"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "OutputS3BucketName": {
                                                    "description": "The S3 bucket where the responses to the command executions should be stored. This was requested when issuing the command.",
                                                    "maxLength": 63,
                                                    "minLength": 3,
                                                    "type": "string"
                                                },
                                                "OutputS3KeyPrefix": {
                                                    "description": "The S3 directory path inside the bucket where the responses to the command executions should be stored. This was requested when issuing the command.",
                                                    "maxLength": 500,
                                                    "type": "string"
                                                },
                                                "OutputS3Region": {
                                                    "description": "(Deprecated) You can no longer specify this parameter. The system ignores it. Instead, Systems Manager automatically determines the Amazon S3 bucket region.",
                                                    "maxLength": 20,
                                                    "minLength": 3,
                                                    "type": "string"
                                                },
                                                "Parameters": {
                                                    "description": "The parameter values to be inserted in the document when executing the command.",
                                                    "items": {
                                                        "properties": {
                                                            "key": {
                                                                "type": "string"
                                                            },
                                                            "value": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "RequestedDateTime": {
                                                    "description": "The date and time the command was requested.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "ServiceRole": {
                                                    "description": "The IAM service role that Run Command uses to act on your behalf when sending notifications about command status changes. ",
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "description": "The status of the command.",
                                                    "enum": [
                                                        "Pending",
                                                        "InProgress",
                                                        "Success",
                                                        "Cancelled",
                                                        "Failed",
                                                        "TimedOut",
                                                        "Cancelling"
                                                    ],
                                                    "type": "string"
                                                },
                                                "StatusDetails": {
                                                    "description": "<p>A detailed status of the command execution. StatusDetails includes more information than Status because it includes states resulting from error and concurrency control parameters. StatusDetails can show different results than Status. For more information about these statuses, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/monitor-commands.html\">Understanding Command Statuses</a> in the <i>AWS Systems Manager User Guide</i>. StatusDetails can be one of the following values:</p> <ul> <li> <p>Pending: The command has not been sent to any instances.</p> </li> <li> <p>In Progress: The command has been sent to at least one instance but has not reached a final state on all instances.</p> </li> <li> <p>Success: The command successfully executed on all invocations. This is a terminal state.</p> </li> <li> <p>Delivery Timed Out: The value of MaxErrors or more command invocations shows a status of Delivery Timed Out. This is a terminal state.</p> </li> <li> <p>Execution Timed Out: The value of MaxErrors or more command invocations shows a status of Execution Timed Out. This is a terminal state.</p> </li> <li> <p>Failed: The value of MaxErrors or more command invocations shows a status of Failed. This is a terminal state.</p> </li> <li> <p>Incomplete: The command was attempted on all instances and one or more invocations does not have a value of Success but not enough invocations failed for the status to be Failed. This is a terminal state.</p> </li> <li> <p>Canceled: The command was terminated before it was completed. This is a terminal state.</p> </li> <li> <p>Rate Exceeded: The number of instances targeted by the command exceeded the account limit for pending invocations. The system has canceled the command before executing it on any instance. This is a terminal state.</p> </li> </ul>",
                                                    "maxLength": 100,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "TargetCount": {
                                                    "description": "The number of targets for the command.",
                                                    "type": "integer"
                                                },
                                                "Targets": {
                                                    "description": "An array of search criteria that targets instances using a Key,Value combination that you specify. Targets is required if you don't provide one or more instance IDs in the call.",
                                                    "items": {
                                                        "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                                                        "properties": {
                                                            "Key": {
                                                                "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                                "maxLength": 128,
                                                                "minLength": 1,
                                                                "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                                                "type": "string"
                                                            },
                                                            "Values": {
                                                                "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "maxItems": 50,
                                                                "minItems": 0,
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "maxItems": 5,
                                                    "minItems": 0,
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "DuplicateInstanceId",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidInstanceId",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "InvalidDocument",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "InvalidDocumentVersion",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "InvalidOutputFolder",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "InvalidParameters",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "487": {
                        "description": "UnsupportedPlatformType",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "488": {
                        "description": "MaxDocumentSizeExceeded",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "489": {
                        "description": "InvalidRole",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "490": {
                        "description": "InvalidNotificationConfig",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "CloudWatchOutputConfig": {
                                        "description": "Enables Systems Manager to send Run Command output to Amazon CloudWatch Logs. ",
                                        "properties": {
                                            "CloudWatchLogGroupName": {
                                                "description": "The name of the CloudWatch log group where you want to send command output. If you don't specify a group name, Systems Manager automatically creates a log group for you. The log group uses the following naming format: aws/ssm/<i>SystemsManagerDocumentName</i>.",
                                                "maxLength": 512,
                                                "minLength": 1,
                                                "pattern": "[\\.\\-_/#A-Za-z0-9]+",
                                                "type": "string"
                                            },
                                            "CloudWatchOutputEnabled": {
                                                "description": "Enables Systems Manager to send command output to CloudWatch Logs.",
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "Comment": {
                                        "description": "User-specified information about the command, such as a brief description of what the command should do.",
                                        "maxLength": 100,
                                        "type": "string"
                                    },
                                    "DocumentHash": {
                                        "description": "<p>The Sha256 or Sha1 hash created by the system when the document was created. </p> <note> <p>Sha1 hashes have been deprecated.</p> </note>",
                                        "maxLength": 256,
                                        "type": "string"
                                    },
                                    "DocumentHashType": {
                                        "description": "<p>Sha256 or Sha1.</p> <note> <p>Sha1 hashes have been deprecated.</p> </note>",
                                        "enum": [
                                            "Sha256",
                                            "Sha1"
                                        ],
                                        "type": "string"
                                    },
                                    "DocumentName": {
                                        "description": "Required. The name of the Systems Manager document to execute. This can be a public document or a custom document.",
                                        "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                                        "type": "string"
                                    },
                                    "DocumentVersion": {
                                        "description": "<p>The SSM document version to use in the request. You can specify $DEFAULT, $LATEST, or a specific version number. If you execute commands by using the AWS CLI, then you must escape the first two options by using a backslash. If you specify a version number, then you don't need to use the backslash. For example:</p> <p>--document-version \"\\$DEFAULT\"</p> <p>--document-version \"\\$LATEST\"</p> <p>--document-version \"3\"</p>",
                                        "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                        "type": "string"
                                    },
                                    "InstanceIds": {
                                        "description": "The instance IDs where the command should execute. You can specify a maximum of 50 IDs. If you prefer not to list individual instance IDs, you can instead send commands to a fleet of instances using the Targets parameter, which accepts EC2 tags. For more information about how to use targets, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                        "items": {
                                            "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                                            "type": "string"
                                        },
                                        "maxItems": 50,
                                        "minItems": 0,
                                        "type": "array"
                                    },
                                    "MaxConcurrency": {
                                        "description": "(Optional) The maximum number of instances that are allowed to execute the command at the same time. You can specify a number such as 10 or a percentage such as 10%. The default value is 50. For more information about how to use MaxConcurrency, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-velocity\">Using Concurrency Controls</a> in the <i>AWS Systems Manager User Guide</i>.",
                                        "maxLength": 7,
                                        "minLength": 1,
                                        "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                                        "type": "string"
                                    },
                                    "MaxErrors": {
                                        "description": "The maximum number of errors allowed without the command failing. When the command fails one more time beyond the value of MaxErrors, the systems stops sending the command to additional targets. You can specify a number like 10 or a percentage like 10%. The default value is 0. For more information about how to use MaxErrors, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-maxerrors\">Using Error Controls</a> in the <i>AWS Systems Manager User Guide</i>.",
                                        "maxLength": 7,
                                        "minLength": 1,
                                        "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                                        "type": "string"
                                    },
                                    "NotificationConfig": {
                                        "description": "Configurations for sending notifications.",
                                        "properties": {
                                            "NotificationArn": {
                                                "description": "An Amazon Resource Name (ARN) for a Simple Notification Service (SNS) topic. Run Command pushes notifications about command status changes to this topic.",
                                                "type": "string"
                                            },
                                            "NotificationEvents": {
                                                "description": "The different events for which you can receive notifications. These events include the following: All (events), InProgress, Success, TimedOut, Cancelled, Failed. To learn more about these events, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/rc-sns-notifications.html\">Configuring Amazon SNS Notifications for Run Command</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                "items": {
                                                    "enum": [
                                                        "All",
                                                        "InProgress",
                                                        "Success",
                                                        "TimedOut",
                                                        "Cancelled",
                                                        "Failed"
                                                    ],
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "NotificationType": {
                                                "description": "Command: Receive notification when the status of a command changes. Invocation: For commands sent to multiple instances, receive notification on a per-instance basis when the status of a command changes. ",
                                                "enum": [
                                                    "Command",
                                                    "Invocation"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "OutputS3BucketName": {
                                        "description": "The name of the S3 bucket where command execution responses should be stored.",
                                        "maxLength": 63,
                                        "minLength": 3,
                                        "type": "string"
                                    },
                                    "OutputS3KeyPrefix": {
                                        "description": "The directory structure within the S3 bucket where the responses should be stored.",
                                        "maxLength": 500,
                                        "type": "string"
                                    },
                                    "OutputS3Region": {
                                        "description": "(Deprecated) You can no longer specify this parameter. The system ignores it. Instead, Systems Manager automatically determines the Amazon S3 bucket region.",
                                        "maxLength": 20,
                                        "minLength": 3,
                                        "type": "string"
                                    },
                                    "Parameters": {
                                        "description": "The required and optional parameters specified in the document being executed.",
                                        "items": {
                                            "properties": {
                                                "key": {
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "ServiceRoleArn": {
                                        "description": "The IAM role that Systems Manager uses to send notifications. ",
                                        "type": "string"
                                    },
                                    "Targets": {
                                        "description": "(Optional) An array of search criteria that targets instances using a Key,Value combination that you specify. Targets is required if you don't provide one or more instance IDs in the call. For more information about how to use targets, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                        "items": {
                                            "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                                            "properties": {
                                                "Key": {
                                                    "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "maxItems": 50,
                                                    "minItems": 0,
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "maxItems": 5,
                                        "minItems": 0,
                                        "type": "array"
                                    },
                                    "TimeoutSeconds": {
                                        "description": "If this time is reached and the command has not already started executing, it will not run.",
                                        "maximum": 2592000,
                                        "minimum": 30,
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "DocumentName"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#StartAssociationsOnce": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Use this API action to execute an association immediately and only one time. This action can be helpful when troubleshooting associations.",
                "operationId": "StartAssociationsOnce",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidAssociation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "AssociationDoesNotExist",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "AssociationIds": {
                                        "description": "The association IDs that you want to execute immediately and only one time.",
                                        "items": {
                                            "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                                            "type": "string"
                                        },
                                        "maxItems": 10,
                                        "minItems": 1,
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "AssociationIds"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#StartAutomationExecution": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Initiates execution of an Automation document.",
                "operationId": "StartAutomationExecution",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "AutomationExecutionId": {
                                            "description": "The unique ID of a newly scheduled automation execution.",
                                            "maxLength": 36,
                                            "minLength": 36,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "AutomationDefinitionNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidAutomationExecutionParametersException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "AutomationExecutionLimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "AutomationDefinitionVersionNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "IdempotentParameterMismatch",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "InvalidTarget",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ClientToken": {
                                        "description": "User-provided idempotency token. The token must be unique, is case insensitive, enforces the UUID format, and can't be reused.",
                                        "maxLength": 36,
                                        "minLength": 36,
                                        "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
                                        "type": "string"
                                    },
                                    "DocumentName": {
                                        "description": "The name of the Automation document to use for this execution.",
                                        "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                                        "type": "string"
                                    },
                                    "DocumentVersion": {
                                        "description": "The version of the Automation document to use for this execution.",
                                        "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                        "type": "string"
                                    },
                                    "MaxConcurrency": {
                                        "description": "The maximum number of targets allowed to run this task in parallel. You can specify a number, such as 10, or a percentage, such as 10%. The default value is 10.",
                                        "maxLength": 7,
                                        "minLength": 1,
                                        "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                                        "type": "string"
                                    },
                                    "MaxErrors": {
                                        "description": "<p>The number of errors that are allowed before the system stops running the automation on additional targets. You can specify either an absolute number of errors, for example 10, or a percentage of the target set, for example 10%. If you specify 3, for example, the system stops running the automation when the fourth error is received. If you specify 0, then the system stops running the automation on additional targets after the first error result is returned. If you run an automation on 50 resources and set max-errors to 10%, then the system stops running the automation on additional targets when the sixth error is received.</p> <p>Executions that are already running an automation when max-errors is reached are allowed to complete, but some of these executions may fail as well. If you need to ensure that there won't be more than max-errors failed executions, set max-concurrency to 1 so the executions proceed one at a time.</p>",
                                        "maxLength": 7,
                                        "minLength": 1,
                                        "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                                        "type": "string"
                                    },
                                    "Mode": {
                                        "description": "The execution mode of the automation. Valid modes include the following: Auto and Interactive. The default mode is Auto.",
                                        "enum": [
                                            "Auto",
                                            "Interactive"
                                        ],
                                        "type": "string"
                                    },
                                    "Parameters": {
                                        "description": "A key-value map of execution parameters, which match the declared parameters in the Automation document.",
                                        "items": {
                                            "properties": {
                                                "key": {
                                                    "maxLength": 30,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "items": {
                                                        "maxLength": 512,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "maxItems": 10,
                                                    "minItems": 0,
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "maxItems": 200,
                                        "minItems": 1,
                                        "type": "array"
                                    },
                                    "TargetLocations": {
                                        "description": "A location is a combination of AWS Regions and/or AWS accounts where you want to execute the Automation. Use this action to start an Automation in multiple Regions and multiple accounts. For more information, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-automation-multiple-accounts-and-regions.html\">Concurrently Executing Automations in Multiple AWS Regions and Accounts</a> in the <i>AWS Systems Manager User Guide</i>. ",
                                        "items": {
                                            "description": "The combination of AWS Regions and accounts targeted by the current Automation execution.",
                                            "properties": {
                                                "Accounts": {
                                                    "description": "The AWS accounts targeted by the current Automation execution.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "maxItems": 50,
                                                    "minItems": 1,
                                                    "type": "array"
                                                },
                                                "ExecutionRoleName": {
                                                    "description": "The Automation execution role used by the currently executing Automation.",
                                                    "maxLength": 64,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Regions": {
                                                    "description": "The AWS Regions targeted by the current Automation execution.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "maxItems": 50,
                                                    "minItems": 1,
                                                    "type": "array"
                                                },
                                                "TargetLocationMaxConcurrency": {
                                                    "description": "The maxium number of AWS accounts and AWS regions allowed to run the Automation concurrently ",
                                                    "maxLength": 7,
                                                    "minLength": 1,
                                                    "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                                                    "type": "string"
                                                },
                                                "TargetLocationMaxErrors": {
                                                    "description": "The maxium number of errors allowed before the system stops queueing additional Automation executions for the currently executing Automation. ",
                                                    "maxLength": 7,
                                                    "minLength": 1,
                                                    "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "maxItems": 100,
                                        "minItems": 1,
                                        "type": "array"
                                    },
                                    "TargetMaps": {
                                        "description": "A key-value mapping of document parameters to target resources. Both Targets and TargetMaps cannot be specified together.",
                                        "items": {
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "maxLength": 50,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "items": {
                                                            "maxLength": 50,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "maxItems": 25,
                                                        "minItems": 0,
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "maxItems": 20,
                                            "minItems": 1,
                                            "type": "array"
                                        },
                                        "maxItems": 300,
                                        "minItems": 0,
                                        "type": "array"
                                    },
                                    "TargetParameterName": {
                                        "description": "The name of the parameter used as the target resource for the rate-controlled execution. Required if you specify targets.",
                                        "maxLength": 30,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "Targets": {
                                        "description": "A key-value mapping to target resources. Required if you specify TargetParameterName.",
                                        "items": {
                                            "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                                            "properties": {
                                                "Key": {
                                                    "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "maxItems": 50,
                                                    "minItems": 0,
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "maxItems": 5,
                                        "minItems": 0,
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "DocumentName"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#StartSession": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Initiates a connection to a target (for example, an instance) for a Session Manager session. Returns a URL and token that can be used to open a WebSocket connection for sending input and receiving outputs.</p> <note> <p>AWS CLI usage: <code>start-session</code> is an interactive command that requires the Session Manager plugin to be installed on the client machine making the call. For information, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/session-manager-working-with-install-plugin.html\"> Install the Session Manager Plugin for the AWS CLI</a> in the <i>AWS Systems Manager User Guide</i>.</p> </note>",
                "operationId": "StartSession",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "SessionId": {
                                            "description": "The ID of the session.",
                                            "maxLength": 96,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "StreamUrl": {
                                            "description": "<p>A URL back to SSM Agent on the instance that the Session Manager client uses to send commands and receive output from the instance. Format: <code>wss://ssm-messages.<b>region</b>.amazonaws.com/v1/data-channel/<b>session-id</b>?stream=(input|output)</code> </p> <p> <b>region</b> represents the Region identifier for an AWS Region supported by AWS Systems Manager, such as <code>us-east-2</code> for the US East (Ohio) Region. For a list of supported <b>region</b> values, see the <b>Region</b> column in the <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html#ssm_region\">AWS Systems Manager table of regions and endpoints</a> in the <i>AWS General Reference</i>.</p> <p> <b>session-id</b> represents the ID of a Session Manager session, such as <code>1a2b3c4dEXAMPLE</code>.</p>",
                                            "type": "string"
                                        },
                                        "TokenValue": {
                                            "description": "An encrypted token value containing session and caller information. Used to authenticate the connection to the instance.",
                                            "maxLength": 300,
                                            "minLength": 0,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidDocument",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "TargetNotConnected",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "DocumentName": {
                                        "description": "The name of the SSM document to define the parameters and plugin settings for the session. For example, <code>SSM-SessionManagerRunShell</code>. If no document name is provided, a shell to the instance is launched by default.",
                                        "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                                        "type": "string"
                                    },
                                    "Parameters": {
                                        "description": "Reserved for future use.",
                                        "items": {
                                            "properties": {
                                                "key": {
                                                    "maxLength": 255,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "items": {
                                                        "maxLength": 65535,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "Target": {
                                        "description": "The instance to connect to for the session.",
                                        "maxLength": 50,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Target"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#StopAutomationExecution": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Stop an Automation that is currently executing.",
                "operationId": "StopAutomationExecution",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "AutomationExecutionNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidAutomationStatusUpdateException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "AutomationExecutionId": {
                                        "description": "The execution ID of the Automation to stop.",
                                        "maxLength": 36,
                                        "minLength": 36,
                                        "type": "string"
                                    },
                                    "Type": {
                                        "description": "The stop request type. Valid types include the following: Cancel and Complete. The default type is Cancel.",
                                        "enum": [
                                            "Complete",
                                            "Cancel"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "AutomationExecutionId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#TerminateSession": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Permanently ends a session and closes the data connection between the Session Manager client and SSM Agent on the instance. A terminated session cannot be resumed.",
                "operationId": "TerminateSession",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "SessionId": {
                                            "description": "The ID of the session that has been terminated.",
                                            "maxLength": 96,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "DoesNotExistException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "SessionId": {
                                        "description": "The ID of the session to terminate.",
                                        "maxLength": 96,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "SessionId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#UpdateAssociation": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Updates an association. You can update the association name and version, the document version, schedule, parameters, and Amazon S3 output.",
                "operationId": "UpdateAssociation",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "AssociationDescription": {
                                            "description": "The description of the association that was updated.",
                                            "properties": {
                                                "AssociationId": {
                                                    "description": "The association ID.",
                                                    "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                                                    "type": "string"
                                                },
                                                "AssociationName": {
                                                    "description": "The association name.",
                                                    "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                                    "type": "string"
                                                },
                                                "AssociationVersion": {
                                                    "description": "The association version.",
                                                    "pattern": "([$]LATEST)|([1-9][0-9]*)",
                                                    "type": "string"
                                                },
                                                "AutomationTargetParameterName": {
                                                    "description": "Specify the target for the association. This target is required for associations that use an Automation document and target resources by using rate controls.",
                                                    "maxLength": 50,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "ComplianceSeverity": {
                                                    "description": "The severity level that is assigned to the association.",
                                                    "enum": [
                                                        "CRITICAL",
                                                        "HIGH",
                                                        "MEDIUM",
                                                        "LOW",
                                                        "UNSPECIFIED"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Date": {
                                                    "description": "The date when the association was made.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "DocumentVersion": {
                                                    "description": "The document version.",
                                                    "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                                    "type": "string"
                                                },
                                                "InstanceId": {
                                                    "description": "The ID of the instance.",
                                                    "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                                                    "type": "string"
                                                },
                                                "LastExecutionDate": {
                                                    "description": "The date on which the association was last run.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "LastSuccessfulExecutionDate": {
                                                    "description": "The last date on which the association was successfully run.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "LastUpdateAssociationDate": {
                                                    "description": "The date when the association was last updated.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "MaxConcurrency": {
                                                    "description": "<p>The maximum number of targets allowed to run the association at the same time. You can specify a number, for example 10, or a percentage of the target set, for example 10%. The default value is 100%, which means all targets run the association at the same time.</p> <p>If a new instance starts and attempts to execute an association while Systems Manager is executing MaxConcurrency associations, the association is allowed to run. During the next association interval, the new instance will process its association within the limit specified for MaxConcurrency.</p>",
                                                    "maxLength": 7,
                                                    "minLength": 1,
                                                    "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                                                    "type": "string"
                                                },
                                                "MaxErrors": {
                                                    "description": "<p>The number of errors that are allowed before the system stops sending requests to run the association on additional targets. You can specify either an absolute number of errors, for example 10, or a percentage of the target set, for example 10%. If you specify 3, for example, the system stops sending requests when the fourth error is received. If you specify 0, then the system stops sending requests after the first error is returned. If you run an association on 50 instances and set MaxError to 10%, then the system stops sending the request when the sixth error is received.</p> <p>Executions that are already running an association when MaxErrors is reached are allowed to complete, but some of these executions may fail as well. If you need to ensure that there won't be more than max-errors failed executions, set MaxConcurrency to 1 so that executions proceed one at a time.</p>",
                                                    "maxLength": 7,
                                                    "minLength": 1,
                                                    "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the Systems Manager document.",
                                                    "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                                                    "type": "string"
                                                },
                                                "OutputLocation": {
                                                    "description": "An Amazon S3 bucket where you want to store the output details of the request.",
                                                    "properties": {
                                                        "S3Location": {
                                                            "description": "An Amazon S3 bucket where you want to store the results of this request.",
                                                            "properties": {
                                                                "OutputS3BucketName": {
                                                                    "description": "The name of the Amazon S3 bucket.",
                                                                    "maxLength": 63,
                                                                    "minLength": 3,
                                                                    "type": "string"
                                                                },
                                                                "OutputS3KeyPrefix": {
                                                                    "description": "The Amazon S3 bucket subfolder.",
                                                                    "maxLength": 500,
                                                                    "type": "string"
                                                                },
                                                                "OutputS3Region": {
                                                                    "description": "(Deprecated) You can no longer specify this parameter. The system ignores it. Instead, Systems Manager automatically determines the Amazon S3 bucket region.",
                                                                    "maxLength": 20,
                                                                    "minLength": 3,
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "Overview": {
                                                    "description": "Information about the association.",
                                                    "properties": {
                                                        "AssociationStatusAggregatedCount": {
                                                            "description": "Returns the number of targets for the association status. For example, if you created an association with two instances, and one of them was successful, this would return the count of instances by status.",
                                                            "items": {
                                                                "properties": {
                                                                    "key": {
                                                                        "type": "string"
                                                                    },
                                                                    "value": {
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "DetailedStatus": {
                                                            "description": "A detailed status of the association.",
                                                            "type": "string"
                                                        },
                                                        "Status": {
                                                            "description": "The status of the association. Status can be: Pending, Success, or Failed.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "Parameters": {
                                                    "description": "A description of the parameters for a document. ",
                                                    "items": {
                                                        "properties": {
                                                            "key": {
                                                                "type": "string"
                                                            },
                                                            "value": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "ScheduleExpression": {
                                                    "description": "A cron expression that specifies a schedule when the association runs.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "description": "The association status.",
                                                    "properties": {
                                                        "AdditionalInfo": {
                                                            "description": "A user-defined string.",
                                                            "maxLength": 1024,
                                                            "type": "string"
                                                        },
                                                        "Date": {
                                                            "description": "The date when the status changed.",
                                                            "format": "date-time",
                                                            "type": "string"
                                                        },
                                                        "Message": {
                                                            "description": "The reason for the status.",
                                                            "maxLength": 1024,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "Name": {
                                                            "description": "The status.",
                                                            "enum": [
                                                                "Pending",
                                                                "Success",
                                                                "Failed"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "Date",
                                                        "Name",
                                                        "Message"
                                                    ],
                                                    "type": "object"
                                                },
                                                "Targets": {
                                                    "description": "The instances targeted by the request. ",
                                                    "items": {
                                                        "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                                                        "properties": {
                                                            "Key": {
                                                                "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                                "maxLength": 128,
                                                                "minLength": 1,
                                                                "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                                                "type": "string"
                                                            },
                                                            "Values": {
                                                                "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "maxItems": 50,
                                                                "minItems": 0,
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "maxItems": 5,
                                                    "minItems": 0,
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidSchedule",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidParameters",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "InvalidOutputLocation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "InvalidDocumentVersion",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "AssociationDoesNotExist",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "InvalidUpdate",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "487": {
                        "description": "TooManyUpdates",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "488": {
                        "description": "InvalidDocument",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "489": {
                        "description": "InvalidTarget",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "490": {
                        "description": "InvalidAssociationVersion",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "491": {
                        "description": "AssociationVersionLimitExceeded",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "AssociationId": {
                                        "description": "The ID of the association you want to update. ",
                                        "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                                        "type": "string"
                                    },
                                    "AssociationName": {
                                        "description": "The name of the association that you want to update.",
                                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                        "type": "string"
                                    },
                                    "AssociationVersion": {
                                        "description": "This parameter is provided for concurrency control purposes. You must specify the latest association version in the service. If you want to ensure that this request succeeds, either specify <code>$LATEST</code>, or omit this parameter.",
                                        "pattern": "([$]LATEST)|([1-9][0-9]*)",
                                        "type": "string"
                                    },
                                    "AutomationTargetParameterName": {
                                        "description": "Specify the target for the association. This target is required for associations that use an Automation document and target resources by using rate controls.",
                                        "maxLength": 50,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "ComplianceSeverity": {
                                        "description": "The severity level to assign to the association.",
                                        "enum": [
                                            "CRITICAL",
                                            "HIGH",
                                            "MEDIUM",
                                            "LOW",
                                            "UNSPECIFIED"
                                        ],
                                        "type": "string"
                                    },
                                    "DocumentVersion": {
                                        "description": "The document version you want update for the association. ",
                                        "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                        "type": "string"
                                    },
                                    "MaxConcurrency": {
                                        "description": "<p>The maximum number of targets allowed to run the association at the same time. You can specify a number, for example 10, or a percentage of the target set, for example 10%. The default value is 100%, which means all targets run the association at the same time.</p> <p>If a new instance starts and attempts to execute an association while Systems Manager is executing MaxConcurrency associations, the association is allowed to run. During the next association interval, the new instance will process its association within the limit specified for MaxConcurrency.</p>",
                                        "maxLength": 7,
                                        "minLength": 1,
                                        "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                                        "type": "string"
                                    },
                                    "MaxErrors": {
                                        "description": "<p>The number of errors that are allowed before the system stops sending requests to run the association on additional targets. You can specify either an absolute number of errors, for example 10, or a percentage of the target set, for example 10%. If you specify 3, for example, the system stops sending requests when the fourth error is received. If you specify 0, then the system stops sending requests after the first error is returned. If you run an association on 50 instances and set MaxError to 10%, then the system stops sending the request when the sixth error is received.</p> <p>Executions that are already running an association when MaxErrors is reached are allowed to complete, but some of these executions may fail as well. If you need to ensure that there won't be more than max-errors failed executions, set MaxConcurrency to 1 so that executions proceed one at a time.</p>",
                                        "maxLength": 7,
                                        "minLength": 1,
                                        "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "<p>The name of the SSM document that contains the configuration information for the instance. You can specify Command, Policy, or Automation documents.</p> <p>You can specify AWS-predefined documents, documents you created, or a document that is shared with you from another account.</p> <p>For SSM documents that are shared with you from other AWS accounts, you must specify the complete SSM document ARN, in the following format:</p> <p> <code>arn:aws:ssm:<i>region</i>:<i>account-id</i>:document/<i>document-name</i> </code> </p> <p>For example:</p> <p> <code>arn:aws:ssm:us-east-2:12345678912:document/My-Shared-Document</code> </p> <p>For AWS-predefined documents and SSM documents you created in your account, you only need to specify the document name. For example, <code>AWS-ApplyPatchBaseline</code> or <code>My-Document</code>.</p>",
                                        "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                                        "type": "string"
                                    },
                                    "OutputLocation": {
                                        "description": "An Amazon S3 bucket where you want to store the results of this request.",
                                        "properties": {
                                            "S3Location": {
                                                "description": "An Amazon S3 bucket where you want to store the results of this request.",
                                                "properties": {
                                                    "OutputS3BucketName": {
                                                        "description": "The name of the Amazon S3 bucket.",
                                                        "maxLength": 63,
                                                        "minLength": 3,
                                                        "type": "string"
                                                    },
                                                    "OutputS3KeyPrefix": {
                                                        "description": "The Amazon S3 bucket subfolder.",
                                                        "maxLength": 500,
                                                        "type": "string"
                                                    },
                                                    "OutputS3Region": {
                                                        "description": "(Deprecated) You can no longer specify this parameter. The system ignores it. Instead, Systems Manager automatically determines the Amazon S3 bucket region.",
                                                        "maxLength": 20,
                                                        "minLength": 3,
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "Parameters": {
                                        "description": "The parameters you want to update for the association. If you create a parameter using Parameter Store, you can reference the parameter using {{ssm:parameter-name}}",
                                        "items": {
                                            "properties": {
                                                "key": {
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "ScheduleExpression": {
                                        "description": "The cron expression used to schedule the association that you want to update.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "Targets": {
                                        "description": "The targets of the association.",
                                        "items": {
                                            "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                                            "properties": {
                                                "Key": {
                                                    "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "maxItems": 50,
                                                    "minItems": 0,
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "maxItems": 5,
                                        "minItems": 0,
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "AssociationId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#UpdateAssociationStatus": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Updates the status of the Systems Manager document associated with the specified instance.",
                "operationId": "UpdateAssociationStatus",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "AssociationDescription": {
                                            "description": "Information about the association.",
                                            "properties": {
                                                "AssociationId": {
                                                    "description": "The association ID.",
                                                    "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                                                    "type": "string"
                                                },
                                                "AssociationName": {
                                                    "description": "The association name.",
                                                    "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                                    "type": "string"
                                                },
                                                "AssociationVersion": {
                                                    "description": "The association version.",
                                                    "pattern": "([$]LATEST)|([1-9][0-9]*)",
                                                    "type": "string"
                                                },
                                                "AutomationTargetParameterName": {
                                                    "description": "Specify the target for the association. This target is required for associations that use an Automation document and target resources by using rate controls.",
                                                    "maxLength": 50,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "ComplianceSeverity": {
                                                    "description": "The severity level that is assigned to the association.",
                                                    "enum": [
                                                        "CRITICAL",
                                                        "HIGH",
                                                        "MEDIUM",
                                                        "LOW",
                                                        "UNSPECIFIED"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Date": {
                                                    "description": "The date when the association was made.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "DocumentVersion": {
                                                    "description": "The document version.",
                                                    "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                                    "type": "string"
                                                },
                                                "InstanceId": {
                                                    "description": "The ID of the instance.",
                                                    "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                                                    "type": "string"
                                                },
                                                "LastExecutionDate": {
                                                    "description": "The date on which the association was last run.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "LastSuccessfulExecutionDate": {
                                                    "description": "The last date on which the association was successfully run.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "LastUpdateAssociationDate": {
                                                    "description": "The date when the association was last updated.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "MaxConcurrency": {
                                                    "description": "<p>The maximum number of targets allowed to run the association at the same time. You can specify a number, for example 10, or a percentage of the target set, for example 10%. The default value is 100%, which means all targets run the association at the same time.</p> <p>If a new instance starts and attempts to execute an association while Systems Manager is executing MaxConcurrency associations, the association is allowed to run. During the next association interval, the new instance will process its association within the limit specified for MaxConcurrency.</p>",
                                                    "maxLength": 7,
                                                    "minLength": 1,
                                                    "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                                                    "type": "string"
                                                },
                                                "MaxErrors": {
                                                    "description": "<p>The number of errors that are allowed before the system stops sending requests to run the association on additional targets. You can specify either an absolute number of errors, for example 10, or a percentage of the target set, for example 10%. If you specify 3, for example, the system stops sending requests when the fourth error is received. If you specify 0, then the system stops sending requests after the first error is returned. If you run an association on 50 instances and set MaxError to 10%, then the system stops sending the request when the sixth error is received.</p> <p>Executions that are already running an association when MaxErrors is reached are allowed to complete, but some of these executions may fail as well. If you need to ensure that there won't be more than max-errors failed executions, set MaxConcurrency to 1 so that executions proceed one at a time.</p>",
                                                    "maxLength": 7,
                                                    "minLength": 1,
                                                    "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the Systems Manager document.",
                                                    "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                                                    "type": "string"
                                                },
                                                "OutputLocation": {
                                                    "description": "An Amazon S3 bucket where you want to store the output details of the request.",
                                                    "properties": {
                                                        "S3Location": {
                                                            "description": "An Amazon S3 bucket where you want to store the results of this request.",
                                                            "properties": {
                                                                "OutputS3BucketName": {
                                                                    "description": "The name of the Amazon S3 bucket.",
                                                                    "maxLength": 63,
                                                                    "minLength": 3,
                                                                    "type": "string"
                                                                },
                                                                "OutputS3KeyPrefix": {
                                                                    "description": "The Amazon S3 bucket subfolder.",
                                                                    "maxLength": 500,
                                                                    "type": "string"
                                                                },
                                                                "OutputS3Region": {
                                                                    "description": "(Deprecated) You can no longer specify this parameter. The system ignores it. Instead, Systems Manager automatically determines the Amazon S3 bucket region.",
                                                                    "maxLength": 20,
                                                                    "minLength": 3,
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "Overview": {
                                                    "description": "Information about the association.",
                                                    "properties": {
                                                        "AssociationStatusAggregatedCount": {
                                                            "description": "Returns the number of targets for the association status. For example, if you created an association with two instances, and one of them was successful, this would return the count of instances by status.",
                                                            "items": {
                                                                "properties": {
                                                                    "key": {
                                                                        "type": "string"
                                                                    },
                                                                    "value": {
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "DetailedStatus": {
                                                            "description": "A detailed status of the association.",
                                                            "type": "string"
                                                        },
                                                        "Status": {
                                                            "description": "The status of the association. Status can be: Pending, Success, or Failed.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "Parameters": {
                                                    "description": "A description of the parameters for a document. ",
                                                    "items": {
                                                        "properties": {
                                                            "key": {
                                                                "type": "string"
                                                            },
                                                            "value": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "ScheduleExpression": {
                                                    "description": "A cron expression that specifies a schedule when the association runs.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "description": "The association status.",
                                                    "properties": {
                                                        "AdditionalInfo": {
                                                            "description": "A user-defined string.",
                                                            "maxLength": 1024,
                                                            "type": "string"
                                                        },
                                                        "Date": {
                                                            "description": "The date when the status changed.",
                                                            "format": "date-time",
                                                            "type": "string"
                                                        },
                                                        "Message": {
                                                            "description": "The reason for the status.",
                                                            "maxLength": 1024,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "Name": {
                                                            "description": "The status.",
                                                            "enum": [
                                                                "Pending",
                                                                "Success",
                                                                "Failed"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "Date",
                                                        "Name",
                                                        "Message"
                                                    ],
                                                    "type": "object"
                                                },
                                                "Targets": {
                                                    "description": "The instances targeted by the request. ",
                                                    "items": {
                                                        "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                                                        "properties": {
                                                            "Key": {
                                                                "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                                "maxLength": 128,
                                                                "minLength": 1,
                                                                "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                                                "type": "string"
                                                            },
                                                            "Values": {
                                                                "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "maxItems": 50,
                                                                "minItems": 0,
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "maxItems": 5,
                                                    "minItems": 0,
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidInstanceId",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidDocument",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "AssociationDoesNotExist",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "StatusUnchanged",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "TooManyUpdates",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "AssociationStatus": {
                                        "description": "The association status.",
                                        "properties": {
                                            "AdditionalInfo": {
                                                "description": "A user-defined string.",
                                                "maxLength": 1024,
                                                "type": "string"
                                            },
                                            "Date": {
                                                "description": "The date when the status changed.",
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "Message": {
                                                "description": "The reason for the status.",
                                                "maxLength": 1024,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "Name": {
                                                "description": "The status.",
                                                "enum": [
                                                    "Pending",
                                                    "Success",
                                                    "Failed"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "Date",
                                            "Name",
                                            "Message"
                                        ],
                                        "type": "object"
                                    },
                                    "InstanceId": {
                                        "description": "The ID of the instance.",
                                        "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "The name of the Systems Manager document.",
                                        "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Name",
                                    "InstanceId",
                                    "AssociationStatus"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#UpdateDocument": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "The document you want to update.",
                "operationId": "UpdateDocument",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DocumentDescription": {
                                            "description": "A description of the document that was updated.",
                                            "properties": {
                                                "AttachmentsInformation": {
                                                    "description": "Details about the document attachments, including names, locations, sizes, etc.",
                                                    "items": {
                                                        "description": "An attribute of an attachment, such as the attachment name.",
                                                        "properties": {
                                                            "Name": {
                                                                "description": "The name of the attachment.",
                                                                "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "CreatedDate": {
                                                    "description": "The date when the document was created.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "DefaultVersion": {
                                                    "description": "The default version.",
                                                    "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                                    "type": "string"
                                                },
                                                "Description": {
                                                    "description": "A description of the document. ",
                                                    "type": "string"
                                                },
                                                "DocumentFormat": {
                                                    "description": "The document format, either JSON or YAML.",
                                                    "enum": [
                                                        "YAML",
                                                        "JSON"
                                                    ],
                                                    "type": "string"
                                                },
                                                "DocumentType": {
                                                    "description": "The type of document.",
                                                    "enum": [
                                                        "Command",
                                                        "Policy",
                                                        "Automation",
                                                        "Session",
                                                        "Package"
                                                    ],
                                                    "type": "string"
                                                },
                                                "DocumentVersion": {
                                                    "description": "The document version.",
                                                    "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                                    "type": "string"
                                                },
                                                "Hash": {
                                                    "description": "<p>The Sha256 or Sha1 hash created by the system when the document was created. </p> <note> <p>Sha1 hashes have been deprecated.</p> </note>",
                                                    "maxLength": 256,
                                                    "type": "string"
                                                },
                                                "HashType": {
                                                    "description": "<p>The hash type of the document. Valid values include <code>Sha256</code> or <code>Sha1</code>.</p> <note> <p>Sha1 hashes have been deprecated.</p> </note>",
                                                    "enum": [
                                                        "Sha256",
                                                        "Sha1"
                                                    ],
                                                    "type": "string"
                                                },
                                                "LatestVersion": {
                                                    "description": "The latest version of the document.",
                                                    "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the Systems Manager document.",
                                                    "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                                                    "type": "string"
                                                },
                                                "Owner": {
                                                    "description": "The AWS user account that created the document.",
                                                    "type": "string"
                                                },
                                                "Parameters": {
                                                    "description": "A description of the parameters for a document.",
                                                    "items": {
                                                        "description": "Parameters specified in a System Manager document that execute on the server when the command is run. ",
                                                        "properties": {
                                                            "DefaultValue": {
                                                                "description": "If specified, the default values for the parameters. Parameters without a default value are required. Parameters with a default value are optional.",
                                                                "type": "string"
                                                            },
                                                            "Description": {
                                                                "description": "A description of what the parameter does, how to use it, the default value, and whether or not the parameter is optional.",
                                                                "type": "string"
                                                            },
                                                            "Name": {
                                                                "description": "The name of the parameter.",
                                                                "type": "string"
                                                            },
                                                            "Type": {
                                                                "description": "The type of parameter. The type can be either String or StringList.",
                                                                "enum": [
                                                                    "String",
                                                                    "StringList"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "PlatformTypes": {
                                                    "description": "The list of OS platforms compatible with this Systems Manager document. ",
                                                    "items": {
                                                        "enum": [
                                                            "Windows",
                                                            "Linux"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "SchemaVersion": {
                                                    "description": "The schema version.",
                                                    "pattern": "([0-9]+)\\.([0-9]+)",
                                                    "type": "string"
                                                },
                                                "Sha1": {
                                                    "description": "The SHA1 hash of the document, which you can use for verification.",
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "description": "The status of the Systems Manager document.",
                                                    "enum": [
                                                        "Creating",
                                                        "Active",
                                                        "Updating",
                                                        "Deleting",
                                                        "Failed"
                                                    ],
                                                    "type": "string"
                                                },
                                                "StatusInformation": {
                                                    "description": "A message returned by AWS Systems Manager that explains the <code>Status</code> value. For example, a <code>Failed</code> status might be explained by the <code>StatusInformation</code> message, \"The specified S3 bucket does not exist. Verify that the URL of the S3 bucket is correct.\"",
                                                    "type": "string"
                                                },
                                                "Tags": {
                                                    "description": "The tags, or metadata, that have been applied to the document.",
                                                    "items": {
                                                        "description": "Metadata that you assign to your AWS resources. Tags enable you to categorize your resources in different ways, for example, by purpose, owner, or environment. In Systems Manager, you can apply tags to documents, managed instances, Maintenance Windows, Parameter Store parameters, and patch baselines.",
                                                        "properties": {
                                                            "Key": {
                                                                "description": "The name of the tag.",
                                                                "maxLength": 128,
                                                                "minLength": 1,
                                                                "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                                "type": "string"
                                                            },
                                                            "Value": {
                                                                "description": "The value of the tag.",
                                                                "maxLength": 256,
                                                                "minLength": 1,
                                                                "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "Key",
                                                            "Value"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "maxItems": 1000,
                                                    "type": "array"
                                                },
                                                "TargetType": {
                                                    "description": "The target type which defines the kinds of resources the document can run on. For example, /AWS::EC2::Instance. For a list of valid resource types, see <a href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html\">AWS Resource Types Reference</a> in the <i>AWS CloudFormation User Guide</i>. ",
                                                    "maxLength": 200,
                                                    "pattern": "^\\/[\\w\\.\\-\\:\\/]*$",
                                                    "type": "string"
                                                },
                                                "VersionName": {
                                                    "description": "The version of the artifact associated with the document.",
                                                    "pattern": "^[a-zA-Z0-9_\\-.]{1,128}$",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "MaxDocumentSizeExceeded",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "DocumentVersionLimitExceeded",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "DuplicateDocumentContent",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "DuplicateDocumentVersionName",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "InvalidDocumentContent",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "InvalidDocumentVersion",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "487": {
                        "description": "InvalidDocumentSchemaVersion",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "488": {
                        "description": "InvalidDocument",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "489": {
                        "description": "InvalidDocumentOperation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Attachments": {
                                        "description": "A list of key and value pairs that describe attachments to a version of a document.",
                                        "items": {
                                            "description": "A key and value pair that identifies the location of an attachment to a document.",
                                            "properties": {
                                                "Key": {
                                                    "description": "The key of a key and value pair that identifies the location of an attachment to a document.",
                                                    "enum": [
                                                        "SourceUrl"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "The URL of the location of a document attachment, such as the URL of an Amazon S3 bucket.",
                                                    "items": {
                                                        "maxLength": 1024,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "maxItems": 1,
                                                    "minItems": 1,
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "maxItems": 1,
                                        "minItems": 0,
                                        "type": "array"
                                    },
                                    "Content": {
                                        "description": "A valid JSON or YAML string.",
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "DocumentFormat": {
                                        "description": "Specify the document format for the new document version. Systems Manager supports JSON and YAML documents. JSON is the default format.",
                                        "enum": [
                                            "YAML",
                                            "JSON"
                                        ],
                                        "type": "string"
                                    },
                                    "DocumentVersion": {
                                        "description": "The version of the document that you want to update.",
                                        "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "The name of the document that you want to update.",
                                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                        "type": "string"
                                    },
                                    "TargetType": {
                                        "description": "Specify a new target type for the document.",
                                        "maxLength": 200,
                                        "pattern": "^\\/[\\w\\.\\-\\:\\/]*$",
                                        "type": "string"
                                    },
                                    "VersionName": {
                                        "description": "An optional field specifying the version of the artifact you are updating with the document. For example, \"Release 12, Update 6\". This value is unique across all versions of a document, and cannot be changed.",
                                        "pattern": "^[a-zA-Z0-9_\\-.]{1,128}$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Content",
                                    "Name"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#UpdateDocumentDefaultVersion": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Set the default version of a document. ",
                "operationId": "UpdateDocumentDefaultVersion",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Description": {
                                            "description": "The description of a custom document that you want to set as the default version.",
                                            "properties": {
                                                "DefaultVersion": {
                                                    "description": "The default version of the document.",
                                                    "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                                    "type": "string"
                                                },
                                                "DefaultVersionName": {
                                                    "description": "The default version of the artifact associated with the document.",
                                                    "pattern": "^[a-zA-Z0-9_\\-.]{1,128}$",
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the document.",
                                                    "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidDocument",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidDocumentVersion",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "InvalidDocumentSchemaVersion",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "DocumentVersion": {
                                        "description": "The version of a custom document that you want to set as the default version.",
                                        "pattern": "(^[1-9][0-9]*$)",
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "The name of a custom document that you want to set as the default version.",
                                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Name",
                                    "DocumentVersion"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#UpdateMaintenanceWindow": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Updates an existing Maintenance Window. Only specified parameters are modified.",
                "operationId": "UpdateMaintenanceWindow",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "AllowUnassociatedTargets": {
                                            "description": "Whether targets must be registered with the Maintenance Window before tasks can be defined for those targets.",
                                            "type": "boolean"
                                        },
                                        "Cutoff": {
                                            "description": "The number of hours before the end of the Maintenance Window that Systems Manager stops scheduling new tasks for execution.",
                                            "maximum": 23,
                                            "minimum": 0,
                                            "type": "integer"
                                        },
                                        "Description": {
                                            "description": "An optional description of the update.",
                                            "format": "password",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "Duration": {
                                            "description": "The duration of the Maintenance Window in hours.",
                                            "maximum": 24,
                                            "minimum": 1,
                                            "type": "integer"
                                        },
                                        "Enabled": {
                                            "description": "Whether the Maintenance Window is enabled.",
                                            "type": "boolean"
                                        },
                                        "EndDate": {
                                            "description": "The date and time, in ISO-8601 Extended format, for when the Maintenance Window is scheduled to become inactive. The Maintenance Window will not run after this specified time.",
                                            "type": "string"
                                        },
                                        "Name": {
                                            "description": "The name of the Maintenance Window.",
                                            "maxLength": 128,
                                            "minLength": 3,
                                            "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                            "type": "string"
                                        },
                                        "Schedule": {
                                            "description": "The schedule of the Maintenance Window in the form of a cron or rate expression.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "ScheduleTimezone": {
                                            "description": "The time zone that the scheduled Maintenance Window executions are based on, in Internet Assigned Numbers Authority (IANA) format. For example: \"America/Los_Angeles\", \"etc/UTC\", or \"Asia/Seoul\". For more information, see the <a href=\"https://www.iana.org/time-zones\">Time Zone Database</a> on the IANA website.",
                                            "type": "string"
                                        },
                                        "StartDate": {
                                            "description": "The date and time, in ISO-8601 Extended format, for when the Maintenance Window is scheduled to become active. The Maintenance Window will not run before this specified time.",
                                            "type": "string"
                                        },
                                        "WindowId": {
                                            "description": "The ID of the created Maintenance Window.",
                                            "maxLength": 20,
                                            "minLength": 20,
                                            "pattern": "^mw-[0-9a-f]{17}$",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "DoesNotExistException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "AllowUnassociatedTargets": {
                                        "description": "Whether targets must be registered with the Maintenance Window before tasks can be defined for those targets.",
                                        "type": "boolean"
                                    },
                                    "Cutoff": {
                                        "description": "The number of hours before the end of the Maintenance Window that Systems Manager stops scheduling new tasks for execution.",
                                        "maximum": 23,
                                        "minimum": 0,
                                        "type": "integer"
                                    },
                                    "Description": {
                                        "description": "An optional description for the update request.",
                                        "format": "password",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "Duration": {
                                        "description": "The duration of the Maintenance Window in hours.",
                                        "maximum": 24,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "Enabled": {
                                        "description": "Whether the Maintenance Window is enabled.",
                                        "type": "boolean"
                                    },
                                    "EndDate": {
                                        "description": "The date and time, in ISO-8601 Extended format, for when you want the Maintenance Window to become inactive. EndDate allows you to set a date and time in the future when the Maintenance Window will no longer run.",
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "The name of the Maintenance Window.",
                                        "maxLength": 128,
                                        "minLength": 3,
                                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                        "type": "string"
                                    },
                                    "Replace": {
                                        "description": "If True, then all fields that are required by the CreateMaintenanceWindow action are also required for this API request. Optional fields that are not specified are set to null. ",
                                        "type": "boolean"
                                    },
                                    "Schedule": {
                                        "description": "The schedule of the Maintenance Window in the form of a cron or rate expression.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "ScheduleTimezone": {
                                        "description": "The time zone that the scheduled Maintenance Window executions are based on, in Internet Assigned Numbers Authority (IANA) format. For example: \"America/Los_Angeles\", \"etc/UTC\", or \"Asia/Seoul\". For more information, see the <a href=\"https://www.iana.org/time-zones\">Time Zone Database</a> on the IANA website.",
                                        "type": "string"
                                    },
                                    "StartDate": {
                                        "description": "The time zone that the scheduled Maintenance Window executions are based on, in Internet Assigned Numbers Authority (IANA) format. For example: \"America/Los_Angeles\", \"etc/UTC\", or \"Asia/Seoul\". For more information, see the <a href=\"https://www.iana.org/time-zones\">Time Zone Database</a> on the IANA website.",
                                        "type": "string"
                                    },
                                    "WindowId": {
                                        "description": "The ID of the Maintenance Window to update.",
                                        "maxLength": 20,
                                        "minLength": 20,
                                        "pattern": "^mw-[0-9a-f]{17}$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "WindowId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#UpdateMaintenanceWindowTarget": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Modifies the target of an existing Maintenance Window. You can't change the target type, but you can change the following:</p> <p>The target from being an ID target to a Tag target, or a Tag target to an ID target.</p> <p>IDs for an ID target.</p> <p>Tags for a Tag target.</p> <p>Owner.</p> <p>Name.</p> <p>Description.</p> <p>If a parameter is null, then the corresponding field is not modified.</p>",
                "operationId": "UpdateMaintenanceWindowTarget",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Description": {
                                            "description": "The updated description.",
                                            "format": "password",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "Name": {
                                            "description": "The updated name.",
                                            "maxLength": 128,
                                            "minLength": 3,
                                            "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                            "type": "string"
                                        },
                                        "OwnerInformation": {
                                            "description": "The updated owner.",
                                            "format": "password",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "Targets": {
                                            "description": "The updated targets.",
                                            "items": {
                                                "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                                                "properties": {
                                                    "Key": {
                                                        "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                                        "type": "string"
                                                    },
                                                    "Values": {
                                                        "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "maxItems": 50,
                                                        "minItems": 0,
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "maxItems": 5,
                                            "minItems": 0,
                                            "type": "array"
                                        },
                                        "WindowId": {
                                            "description": "The Maintenance Window ID specified in the update request.",
                                            "maxLength": 20,
                                            "minLength": 20,
                                            "pattern": "^mw-[0-9a-f]{17}$",
                                            "type": "string"
                                        },
                                        "WindowTargetId": {
                                            "description": "The target ID specified in the update request.",
                                            "maxLength": 36,
                                            "minLength": 36,
                                            "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "DoesNotExistException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Description": {
                                        "description": "An optional description for the update.",
                                        "format": "password",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "A name for the update.",
                                        "maxLength": 128,
                                        "minLength": 3,
                                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                        "type": "string"
                                    },
                                    "OwnerInformation": {
                                        "description": "User-provided value that will be included in any CloudWatch events raised while running tasks for these targets in this Maintenance Window.",
                                        "format": "password",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "Replace": {
                                        "description": "If True, then all fields that are required by the RegisterTargetWithMaintenanceWindow action are also required for this API request. Optional fields that are not specified are set to null.",
                                        "type": "boolean"
                                    },
                                    "Targets": {
                                        "description": "The targets to add or replace.",
                                        "items": {
                                            "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                                            "properties": {
                                                "Key": {
                                                    "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "maxItems": 50,
                                                    "minItems": 0,
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "maxItems": 5,
                                        "minItems": 0,
                                        "type": "array"
                                    },
                                    "WindowId": {
                                        "description": "The Maintenance Window ID with which to modify the target.",
                                        "maxLength": 20,
                                        "minLength": 20,
                                        "pattern": "^mw-[0-9a-f]{17}$",
                                        "type": "string"
                                    },
                                    "WindowTargetId": {
                                        "description": "The target ID to modify.",
                                        "maxLength": 36,
                                        "minLength": 36,
                                        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "WindowId",
                                    "WindowTargetId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#UpdateMaintenanceWindowTask": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Modifies a task assigned to a Maintenance Window. You can't change the task type, but you can change the following values:</p> <ul> <li> <p>TaskARN. For example, you can change a RUN_COMMAND task from AWS-RunPowerShellScript to AWS-RunShellScript.</p> </li> <li> <p>ServiceRoleArn</p> </li> <li> <p>TaskInvocationParameters</p> </li> <li> <p>Priority</p> </li> <li> <p>MaxConcurrency</p> </li> <li> <p>MaxErrors</p> </li> </ul> <p>If a parameter is null, then the corresponding field is not modified. Also, if you set Replace to true, then all fields required by the <a>RegisterTaskWithMaintenanceWindow</a> action are required for this request. Optional fields that aren't specified are set to null.</p>",
                "operationId": "UpdateMaintenanceWindowTask",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Description": {
                                            "description": "The updated task description.",
                                            "format": "password",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "LoggingInfo": {
                                            "description": "<p>The updated logging information in Amazon S3.</p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an S3 bucket to contain logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> </note>",
                                            "properties": {
                                                "S3BucketName": {
                                                    "description": "The name of an Amazon S3 bucket where execution logs are stored .",
                                                    "maxLength": 63,
                                                    "minLength": 3,
                                                    "type": "string"
                                                },
                                                "S3KeyPrefix": {
                                                    "description": "(Optional) The Amazon S3 bucket subfolder. ",
                                                    "maxLength": 500,
                                                    "type": "string"
                                                },
                                                "S3Region": {
                                                    "description": "The region where the Amazon S3 bucket is located.",
                                                    "maxLength": 20,
                                                    "minLength": 3,
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "S3BucketName",
                                                "S3Region"
                                            ],
                                            "type": "object"
                                        },
                                        "MaxConcurrency": {
                                            "description": "The updated MaxConcurrency value.",
                                            "maxLength": 7,
                                            "minLength": 1,
                                            "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                                            "type": "string"
                                        },
                                        "MaxErrors": {
                                            "description": "The updated MaxErrors value.",
                                            "maxLength": 7,
                                            "minLength": 1,
                                            "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                                            "type": "string"
                                        },
                                        "Name": {
                                            "description": "The updated task name.",
                                            "maxLength": 128,
                                            "minLength": 3,
                                            "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                            "type": "string"
                                        },
                                        "Priority": {
                                            "description": "The updated priority value.",
                                            "minimum": 0,
                                            "type": "integer"
                                        },
                                        "ServiceRoleArn": {
                                            "description": "The updated service role ARN value.",
                                            "type": "string"
                                        },
                                        "Targets": {
                                            "description": "The updated target values.",
                                            "items": {
                                                "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                                                "properties": {
                                                    "Key": {
                                                        "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                                        "type": "string"
                                                    },
                                                    "Values": {
                                                        "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "maxItems": 50,
                                                        "minItems": 0,
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "maxItems": 5,
                                            "minItems": 0,
                                            "type": "array"
                                        },
                                        "TaskArn": {
                                            "description": "The updated task ARN value.",
                                            "maxLength": 1600,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "TaskInvocationParameters": {
                                            "description": "The updated parameter values.",
                                            "properties": {
                                                "Automation": {
                                                    "description": "The parameters for an AUTOMATION task type.",
                                                    "properties": {
                                                        "DocumentVersion": {
                                                            "description": "The version of an Automation document to use during task execution.",
                                                            "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                                            "type": "string"
                                                        },
                                                        "Parameters": {
                                                            "description": "<p>The parameters for the AUTOMATION task.</p> <p>For information about specifying and updating task parameters, see <a>RegisterTaskWithMaintenanceWindow</a> and <a>UpdateMaintenanceWindowTask</a>.</p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an S3 bucket to contain logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p> <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p>For AUTOMATION task types, Systems Manager ignores any values specified for these parameters.</p> </note>",
                                                            "items": {
                                                                "properties": {
                                                                    "key": {
                                                                        "maxLength": 30,
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    },
                                                                    "value": {
                                                                        "items": {
                                                                            "maxLength": 512,
                                                                            "minLength": 1,
                                                                            "type": "string"
                                                                        },
                                                                        "maxItems": 10,
                                                                        "minItems": 0,
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "maxItems": 200,
                                                            "minItems": 1,
                                                            "type": "array"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "Lambda": {
                                                    "description": "The parameters for a LAMBDA task type.",
                                                    "properties": {
                                                        "ClientContext": {
                                                            "description": "Pass client-specific information to the Lambda function that you are invoking. You can then process the client information in your Lambda function as you choose through the context variable.",
                                                            "maxLength": 8000,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "Payload": {
                                                            "description": "JSON to provide to your Lambda function as input.",
                                                            "format": "password",
                                                            "maxLength": 4096,
                                                            "type": "string"
                                                        },
                                                        "Qualifier": {
                                                            "description": "(Optional) Specify a Lambda function version or alias name. If you specify a function version, the action uses the qualified function ARN to invoke a specific Lambda function. If you specify an alias name, the action uses the alias ARN to invoke the Lambda function version to which the alias points.",
                                                            "maxLength": 128,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "RunCommand": {
                                                    "description": "The parameters for a RUN_COMMAND task type.",
                                                    "properties": {
                                                        "Comment": {
                                                            "description": "Information about the command(s) to execute.",
                                                            "maxLength": 100,
                                                            "type": "string"
                                                        },
                                                        "DocumentHash": {
                                                            "description": "The SHA-256 or SHA-1 hash created by the system when the document was created. SHA-1 hashes have been deprecated.",
                                                            "maxLength": 256,
                                                            "type": "string"
                                                        },
                                                        "DocumentHashType": {
                                                            "description": "SHA-256 or SHA-1. SHA-1 hashes have been deprecated.",
                                                            "enum": [
                                                                "Sha256",
                                                                "Sha1"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "NotificationConfig": {
                                                            "description": "Configurations for sending notifications about command status changes on a per-instance basis.",
                                                            "properties": {
                                                                "NotificationArn": {
                                                                    "description": "An Amazon Resource Name (ARN) for a Simple Notification Service (SNS) topic. Run Command pushes notifications about command status changes to this topic.",
                                                                    "type": "string"
                                                                },
                                                                "NotificationEvents": {
                                                                    "description": "The different events for which you can receive notifications. These events include the following: All (events), InProgress, Success, TimedOut, Cancelled, Failed. To learn more about these events, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/rc-sns-notifications.html\">Configuring Amazon SNS Notifications for Run Command</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                                    "items": {
                                                                        "enum": [
                                                                            "All",
                                                                            "InProgress",
                                                                            "Success",
                                                                            "TimedOut",
                                                                            "Cancelled",
                                                                            "Failed"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "NotificationType": {
                                                                    "description": "Command: Receive notification when the status of a command changes. Invocation: For commands sent to multiple instances, receive notification on a per-instance basis when the status of a command changes. ",
                                                                    "enum": [
                                                                        "Command",
                                                                        "Invocation"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "OutputS3BucketName": {
                                                            "description": "The name of the Amazon S3 bucket.",
                                                            "maxLength": 63,
                                                            "minLength": 3,
                                                            "type": "string"
                                                        },
                                                        "OutputS3KeyPrefix": {
                                                            "description": "The Amazon S3 bucket subfolder.",
                                                            "maxLength": 500,
                                                            "type": "string"
                                                        },
                                                        "Parameters": {
                                                            "description": "The parameters for the RUN_COMMAND task execution.",
                                                            "items": {
                                                                "properties": {
                                                                    "key": {
                                                                        "type": "string"
                                                                    },
                                                                    "value": {
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "ServiceRoleArn": {
                                                            "description": "The IAM service role to assume during task execution.",
                                                            "type": "string"
                                                        },
                                                        "TimeoutSeconds": {
                                                            "description": "If this time is reached and the command has not already started executing, it doesn't run.",
                                                            "maximum": 2592000,
                                                            "minimum": 30,
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "StepFunctions": {
                                                    "description": "The parameters for a STEP_FUNCTION task type.",
                                                    "properties": {
                                                        "Input": {
                                                            "description": "The inputs for the STEP_FUNCTION task.",
                                                            "format": "password",
                                                            "maxLength": 4096,
                                                            "type": "string"
                                                        },
                                                        "Name": {
                                                            "description": "The name of the STEP_FUNCTION task.",
                                                            "maxLength": 80,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "TaskParameters": {
                                            "description": "<p>The updated parameter values.</p> <note> <p> <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> </note>",
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "maxLength": 255,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "description": "Defines the values for a task parameter.",
                                                        "properties": {
                                                            "Values": {
                                                                "description": "This field contains an array of 0 or more strings, each 1 to 255 characters in length.",
                                                                "items": {
                                                                    "format": "password",
                                                                    "maxLength": 255,
                                                                    "minLength": 1,
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "WindowId": {
                                            "description": "The ID of the Maintenance Window that was updated.",
                                            "maxLength": 20,
                                            "minLength": 20,
                                            "pattern": "^mw-[0-9a-f]{17}$",
                                            "type": "string"
                                        },
                                        "WindowTaskId": {
                                            "description": "The task ID of the Maintenance Window that was updated.",
                                            "maxLength": 36,
                                            "minLength": 36,
                                            "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "DoesNotExistException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Description": {
                                        "description": "The new task description to specify.",
                                        "format": "password",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "LoggingInfo": {
                                        "description": "<p>The new logging location in Amazon S3 to specify.</p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an S3 bucket to contain logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> </note>",
                                        "properties": {
                                            "S3BucketName": {
                                                "description": "The name of an Amazon S3 bucket where execution logs are stored .",
                                                "maxLength": 63,
                                                "minLength": 3,
                                                "type": "string"
                                            },
                                            "S3KeyPrefix": {
                                                "description": "(Optional) The Amazon S3 bucket subfolder. ",
                                                "maxLength": 500,
                                                "type": "string"
                                            },
                                            "S3Region": {
                                                "description": "The region where the Amazon S3 bucket is located.",
                                                "maxLength": 20,
                                                "minLength": 3,
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "S3BucketName",
                                            "S3Region"
                                        ],
                                        "type": "object"
                                    },
                                    "MaxConcurrency": {
                                        "description": "The new <code>MaxConcurrency</code> value you want to specify. <code>MaxConcurrency</code> is the number of targets that are allowed to run this task in parallel.",
                                        "maxLength": 7,
                                        "minLength": 1,
                                        "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                                        "type": "string"
                                    },
                                    "MaxErrors": {
                                        "description": "The new <code>MaxErrors</code> value to specify. <code>MaxErrors</code> is the maximum number of errors that are allowed before the task stops being scheduled.",
                                        "maxLength": 7,
                                        "minLength": 1,
                                        "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "The new task name to specify.",
                                        "maxLength": 128,
                                        "minLength": 3,
                                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                        "type": "string"
                                    },
                                    "Priority": {
                                        "description": "The new task priority to specify. The lower the number, the higher the priority. Tasks that have the same priority are scheduled in parallel.",
                                        "minimum": 0,
                                        "type": "integer"
                                    },
                                    "Replace": {
                                        "description": "If True, then all fields that are required by the RegisterTaskWithMaintenanceWndow action are also required for this API request. Optional fields that are not specified are set to null.",
                                        "type": "boolean"
                                    },
                                    "ServiceRoleArn": {
                                        "description": "<p>The IAM service role ARN to modify. The system assumes this role during task execution.</p> <p>If you do not specify a service role ARN, Systems Manager will use your account's service-linked role for Systems Manager by default. If no service-linked role for Systems Manager exists in your account, it will be created when you run <code>RegisterTaskWithMaintenanceWindow</code> without specifying a service role ARN.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/using-service-linked-roles.html#slr-permissions\">Service-Linked Role Permissions for Systems Manager</a> and <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-maintenance-permissions.html#maintenance-window-tasks-service-role\">Should I Use a Service-Linked Role or a Custom Service Role to Run Maintenance Window Tasks? </a> in the <i>AWS Systems Manager User Guide</i>.</p>",
                                        "type": "string"
                                    },
                                    "Targets": {
                                        "description": "The targets (either instances or tags) to modify. Instances are specified using Key=instanceids,Values=instanceID_1,instanceID_2. Tags are specified using Key=tag_name,Values=tag_value. ",
                                        "items": {
                                            "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                                            "properties": {
                                                "Key": {
                                                    "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "maxItems": 50,
                                                    "minItems": 0,
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "maxItems": 5,
                                        "minItems": 0,
                                        "type": "array"
                                    },
                                    "TaskArn": {
                                        "description": "The task ARN to modify.",
                                        "maxLength": 1600,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "TaskInvocationParameters": {
                                        "description": "The parameters that the task should use during execution. Populate only the fields that match the task type. All other fields should be empty.",
                                        "properties": {
                                            "Automation": {
                                                "description": "The parameters for an AUTOMATION task type.",
                                                "properties": {
                                                    "DocumentVersion": {
                                                        "description": "The version of an Automation document to use during task execution.",
                                                        "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                                        "type": "string"
                                                    },
                                                    "Parameters": {
                                                        "description": "<p>The parameters for the AUTOMATION task.</p> <p>For information about specifying and updating task parameters, see <a>RegisterTaskWithMaintenanceWindow</a> and <a>UpdateMaintenanceWindowTask</a>.</p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an S3 bucket to contain logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p> <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p>For AUTOMATION task types, Systems Manager ignores any values specified for these parameters.</p> </note>",
                                                        "items": {
                                                            "properties": {
                                                                "key": {
                                                                    "maxLength": 30,
                                                                    "minLength": 1,
                                                                    "type": "string"
                                                                },
                                                                "value": {
                                                                    "items": {
                                                                        "maxLength": 512,
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    },
                                                                    "maxItems": 10,
                                                                    "minItems": 0,
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "maxItems": 200,
                                                        "minItems": 1,
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "Lambda": {
                                                "description": "The parameters for a LAMBDA task type.",
                                                "properties": {
                                                    "ClientContext": {
                                                        "description": "Pass client-specific information to the Lambda function that you are invoking. You can then process the client information in your Lambda function as you choose through the context variable.",
                                                        "maxLength": 8000,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "Payload": {
                                                        "description": "JSON to provide to your Lambda function as input.",
                                                        "format": "password",
                                                        "maxLength": 4096,
                                                        "type": "string"
                                                    },
                                                    "Qualifier": {
                                                        "description": "(Optional) Specify a Lambda function version or alias name. If you specify a function version, the action uses the qualified function ARN to invoke a specific Lambda function. If you specify an alias name, the action uses the alias ARN to invoke the Lambda function version to which the alias points.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "RunCommand": {
                                                "description": "The parameters for a RUN_COMMAND task type.",
                                                "properties": {
                                                    "Comment": {
                                                        "description": "Information about the command(s) to execute.",
                                                        "maxLength": 100,
                                                        "type": "string"
                                                    },
                                                    "DocumentHash": {
                                                        "description": "The SHA-256 or SHA-1 hash created by the system when the document was created. SHA-1 hashes have been deprecated.",
                                                        "maxLength": 256,
                                                        "type": "string"
                                                    },
                                                    "DocumentHashType": {
                                                        "description": "SHA-256 or SHA-1. SHA-1 hashes have been deprecated.",
                                                        "enum": [
                                                            "Sha256",
                                                            "Sha1"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "NotificationConfig": {
                                                        "description": "Configurations for sending notifications about command status changes on a per-instance basis.",
                                                        "properties": {
                                                            "NotificationArn": {
                                                                "description": "An Amazon Resource Name (ARN) for a Simple Notification Service (SNS) topic. Run Command pushes notifications about command status changes to this topic.",
                                                                "type": "string"
                                                            },
                                                            "NotificationEvents": {
                                                                "description": "The different events for which you can receive notifications. These events include the following: All (events), InProgress, Success, TimedOut, Cancelled, Failed. To learn more about these events, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/rc-sns-notifications.html\">Configuring Amazon SNS Notifications for Run Command</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                                "items": {
                                                                    "enum": [
                                                                        "All",
                                                                        "InProgress",
                                                                        "Success",
                                                                        "TimedOut",
                                                                        "Cancelled",
                                                                        "Failed"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "NotificationType": {
                                                                "description": "Command: Receive notification when the status of a command changes. Invocation: For commands sent to multiple instances, receive notification on a per-instance basis when the status of a command changes. ",
                                                                "enum": [
                                                                    "Command",
                                                                    "Invocation"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "OutputS3BucketName": {
                                                        "description": "The name of the Amazon S3 bucket.",
                                                        "maxLength": 63,
                                                        "minLength": 3,
                                                        "type": "string"
                                                    },
                                                    "OutputS3KeyPrefix": {
                                                        "description": "The Amazon S3 bucket subfolder.",
                                                        "maxLength": 500,
                                                        "type": "string"
                                                    },
                                                    "Parameters": {
                                                        "description": "The parameters for the RUN_COMMAND task execution.",
                                                        "items": {
                                                            "properties": {
                                                                "key": {
                                                                    "type": "string"
                                                                },
                                                                "value": {
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "ServiceRoleArn": {
                                                        "description": "The IAM service role to assume during task execution.",
                                                        "type": "string"
                                                    },
                                                    "TimeoutSeconds": {
                                                        "description": "If this time is reached and the command has not already started executing, it doesn't run.",
                                                        "maximum": 2592000,
                                                        "minimum": 30,
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "StepFunctions": {
                                                "description": "The parameters for a STEP_FUNCTION task type.",
                                                "properties": {
                                                    "Input": {
                                                        "description": "The inputs for the STEP_FUNCTION task.",
                                                        "format": "password",
                                                        "maxLength": 4096,
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the STEP_FUNCTION task.",
                                                        "maxLength": 80,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "TaskParameters": {
                                        "description": "<p>The parameters to modify.</p> <note> <p> <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> </note> <p>The map has the following format:</p> <p>Key: string, between 1 and 255 characters</p> <p>Value: an array of strings, each string is between 1 and 255 characters</p>",
                                        "items": {
                                            "properties": {
                                                "key": {
                                                    "maxLength": 255,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "description": "Defines the values for a task parameter.",
                                                    "properties": {
                                                        "Values": {
                                                            "description": "This field contains an array of 0 or more strings, each 1 to 255 characters in length.",
                                                            "items": {
                                                                "format": "password",
                                                                "maxLength": 255,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "WindowId": {
                                        "description": "The Maintenance Window ID that contains the task to modify.",
                                        "maxLength": 20,
                                        "minLength": 20,
                                        "pattern": "^mw-[0-9a-f]{17}$",
                                        "type": "string"
                                    },
                                    "WindowTaskId": {
                                        "description": "The task ID to modify.",
                                        "maxLength": 36,
                                        "minLength": 36,
                                        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "WindowId",
                                    "WindowTaskId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#UpdateManagedInstanceRole": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Assigns or changes an Amazon Identity and Access Management (IAM) role to the managed instance.",
                "operationId": "UpdateManagedInstanceRole",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidInstanceId",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "IamRole": {
                                        "description": "The IAM role you want to assign or change.",
                                        "maxLength": 64,
                                        "type": "string"
                                    },
                                    "InstanceId": {
                                        "description": "The ID of the managed instance where you want to update the role.",
                                        "pattern": "^mi-[0-9a-f]{17}$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "InstanceId",
                                    "IamRole"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#UpdatePatchBaseline": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Modifies an existing patch baseline. Fields not specified in the request are left unchanged.</p> <note> <p>For information about valid key and value pairs in <code>PatchFilters</code> for each supported operating system type, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/APIReference/API_PatchFilter.html\">PatchFilter</a>.</p> </note>",
                "operationId": "UpdatePatchBaseline",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ApprovalRules": {
                                            "description": "A set of rules used to include patches in the baseline.",
                                            "properties": {
                                                "PatchRules": {
                                                    "description": "The rules that make up the rule group.",
                                                    "items": {
                                                        "description": "Defines an approval rule for a patch baseline.",
                                                        "properties": {
                                                            "ApproveAfterDays": {
                                                                "description": "The number of days after the release date of each patch matched by the rule that the patch is marked as approved in the patch baseline. For example, a value of <code>7</code> means that patches are approved seven days after they are released. ",
                                                                "maximum": 100,
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            },
                                                            "ComplianceLevel": {
                                                                "description": "A compliance severity level for all approved patches in a patch baseline. Valid compliance severity levels include the following: Unspecified, Critical, High, Medium, Low, and Informational.",
                                                                "enum": [
                                                                    "CRITICAL",
                                                                    "HIGH",
                                                                    "MEDIUM",
                                                                    "LOW",
                                                                    "INFORMATIONAL",
                                                                    "UNSPECIFIED"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "EnableNonSecurity": {
                                                                "description": "For instances identified by the approval rule filters, enables a patch baseline to apply non-security updates available in the specified repository. The default value is 'false'. Applies to Linux instances only.",
                                                                "type": "boolean"
                                                            },
                                                            "PatchFilterGroup": {
                                                                "description": "The patch filter group that defines the criteria for the rule.",
                                                                "properties": {
                                                                    "PatchFilters": {
                                                                        "description": "The set of patch filters that make up the group.",
                                                                        "items": {
                                                                            "description": "<p>Defines a patch filter.</p> <p>A patch filter consists of key/value pairs, but not all keys are valid for all operating system types. For example, the key <code>PRODUCT</code> is valid for all supported operating system types. The key <code>MSRC_SEVERITY</code>, however, is valid only for Windows operating systems, and the key <code>SECTION</code> is valid only for Ubuntu operating systems.</p> <p>Refer to the following sections for information about which keys may be used with each major operating system, and which values are valid for each key.</p> <p> <b>Windows Operating Systems</b> </p> <p>The supported keys for Windows operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>MSRC_SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Windows7</code> </p> </li> <li> <p> <code>Windows8</code> </p> </li> <li> <p> <code>Windows8.1</code> </p> </li> <li> <p> <code>Windows8Embedded</code> </p> </li> <li> <p> <code>Windows10</code> </p> </li> <li> <p> <code>Windows10LTSB</code> </p> </li> <li> <p> <code>WindowsServer2008</code> </p> </li> <li> <p> <code>WindowsServer2008R2</code> </p> </li> <li> <p> <code>WindowsServer2012</code> </p> </li> <li> <p> <code>WindowsServer2012R2</code> </p> </li> <li> <p> <code>WindowsServer2016</code> </p> </li> <li> <p> <code>WindowsServer2019</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>CriticalUpdates</code> </p> </li> <li> <p> <code>DefinitionUpdates</code> </p> </li> <li> <p> <code>Drivers</code> </p> </li> <li> <p> <code>FeaturePacks</code> </p> </li> <li> <p> <code>SecurityUpdates</code> </p> </li> <li> <p> <code>ServicePacks</code> </p> </li> <li> <p> <code>Tools</code> </p> </li> <li> <p> <code>UpdateRollups</code> </p> </li> <li> <p> <code>Updates</code> </p> </li> <li> <p> <code>Upgrades</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>MSRC_SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Moderate</code> </p> </li> <li> <p> <code>Low</code> </p> </li> <li> <p> <code>Unspecified</code> </p> </li> </ul> <p> <b>Ubuntu Operating Systems</b> </p> <p>The supported keys for Ubuntu operating systems are <code>PRODUCT</code>, <code>PRIORITY</code>, and <code>SECTION</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Ubuntu14.04</code> </p> </li> <li> <p> <code>Ubuntu16.04</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>PRIORITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Required</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Standard</code> </p> </li> <li> <p> <code>Optional</code> </p> </li> <li> <p> <code>Extra</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SECTION</code> </p> <p>Only the length of the key value is validated. Minimum length is 1. Maximum length is 64.</p> <p> <b>Amazon Linux Operating Systems</b> </p> <p>The supported keys for Amazon Linux operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>AmazonLinux2012.03</code> </p> </li> <li> <p> <code>AmazonLinux2012.09</code> </p> </li> <li> <p> <code>AmazonLinux2013.03</code> </p> </li> <li> <p> <code>AmazonLinux2013.09</code> </p> </li> <li> <p> <code>AmazonLinux2014.03</code> </p> </li> <li> <p> <code>AmazonLinux2014.09</code> </p> </li> <li> <p> <code>AmazonLinux2015.03</code> </p> </li> <li> <p> <code>AmazonLinux2015.09</code> </p> </li> <li> <p> <code>AmazonLinux2016.03</code> </p> </li> <li> <p> <code>AmazonLinux2016.09</code> </p> </li> <li> <p> <code>AmazonLinux2017.03</code> </p> </li> <li> <p> <code>AmazonLinux2017.09</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>Amazon Linux 2 Operating Systems</b> </p> <p>The supported keys for Amazon Linux 2 operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>AmazonLinux2</code> </p> </li> <li> <p> <code>AmazonLinux2.0</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>RedHat Enterprise Linux (RHEL) Operating Systems</b> </p> <p>The supported keys for RedHat Enterprise Linux operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>RedhatEnterpriseLinux6.5</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.6</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.7</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.8</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.9</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.0</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.1</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.2</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.3</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.4</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.5</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.6</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>SUSE Linux Enterprise Server (SLES) Operating Systems</b> </p> <p>The supported keys for SLES operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Suse12.0</code> </p> </li> <li> <p> <code>Suse12.1</code> </p> </li> <li> <p> <code>Suse12.2</code> </p> </li> <li> <p> <code>Suse12.3</code> </p> </li> <li> <p> <code>Suse12.4</code> </p> </li> <li> <p> <code>Suse12.5</code> </p> </li> <li> <p> <code>Suse12.6</code> </p> </li> <li> <p> <code>Suse12.7</code> </p> </li> <li> <p> <code>Suse12.8</code> </p> </li> <li> <p> <code>Suse12.9</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Optional</code> </p> </li> <li> <p> <code>Feature</code> </p> </li> <li> <p> <code>Document</code> </p> </li> <li> <p> <code>Yast</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Moderate</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>CentOS Operating Systems</b> </p> <p>The supported keys for CentOS operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>CentOS6.5</code> </p> </li> <li> <p> <code>CentOS6.6</code> </p> </li> <li> <p> <code>CentOS6.7</code> </p> </li> <li> <p> <code>CentOS6.8</code> </p> </li> <li> <p> <code>CentOS6.9</code> </p> </li> <li> <p> <code>CentOS7.0</code> </p> </li> <li> <p> <code>CentOS7.1</code> </p> </li> <li> <p> <code>CentOS7.2</code> </p> </li> <li> <p> <code>CentOS7.3</code> </p> </li> <li> <p> <code>CentOS7.4</code> </p> </li> <li> <p> <code>CentOS7.5</code> </p> </li> <li> <p> <code>CentOS7.6</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul>",
                                                                            "properties": {
                                                                                "Key": {
                                                                                    "description": "<p>The key for the filter.</p> <p>See <a>PatchFilter</a> for lists of valid keys for each operating system type.</p>",
                                                                                    "enum": [
                                                                                        "PRODUCT",
                                                                                        "CLASSIFICATION",
                                                                                        "MSRC_SEVERITY",
                                                                                        "PATCH_ID",
                                                                                        "SECTION",
                                                                                        "PRIORITY",
                                                                                        "SEVERITY"
                                                                                    ],
                                                                                    "type": "string"
                                                                                },
                                                                                "Values": {
                                                                                    "description": "<p>The value for the filter key.</p> <p>See <a>PatchFilter</a> for lists of valid values for each key based on operating system type.</p>",
                                                                                    "items": {
                                                                                        "maxLength": 64,
                                                                                        "minLength": 1,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "maxItems": 20,
                                                                                    "minItems": 1,
                                                                                    "type": "array"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "Key",
                                                                                "Values"
                                                                            ],
                                                                            "type": "object"
                                                                        },
                                                                        "maxItems": 4,
                                                                        "minItems": 0,
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "PatchFilters"
                                                                ],
                                                                "type": "object"
                                                            }
                                                        },
                                                        "required": [
                                                            "PatchFilterGroup",
                                                            "ApproveAfterDays"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "maxItems": 10,
                                                    "minItems": 0,
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "PatchRules"
                                            ],
                                            "type": "object"
                                        },
                                        "ApprovedPatches": {
                                            "description": "A list of explicitly approved patches for the baseline.",
                                            "items": {
                                                "maxLength": 100,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "maxItems": 50,
                                            "minItems": 0,
                                            "type": "array"
                                        },
                                        "ApprovedPatchesComplianceLevel": {
                                            "description": "The compliance severity level assigned to the patch baseline after the update completed.",
                                            "enum": [
                                                "CRITICAL",
                                                "HIGH",
                                                "MEDIUM",
                                                "LOW",
                                                "INFORMATIONAL",
                                                "UNSPECIFIED"
                                            ],
                                            "type": "string"
                                        },
                                        "ApprovedPatchesEnableNonSecurity": {
                                            "description": "Indicates whether the list of approved patches includes non-security updates that should be applied to the instances. The default value is 'false'. Applies to Linux instances only.",
                                            "type": "boolean"
                                        },
                                        "BaselineId": {
                                            "description": "The ID of the deleted patch baseline.",
                                            "maxLength": 128,
                                            "minLength": 20,
                                            "pattern": "^[a-zA-Z0-9_\\-:/]{20,128}$",
                                            "type": "string"
                                        },
                                        "CreatedDate": {
                                            "description": "The date when the patch baseline was created.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Description": {
                                            "description": "A description of the Patch Baseline.",
                                            "maxLength": 1024,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "GlobalFilters": {
                                            "description": "A set of global filters used to exclude patches from the baseline.",
                                            "properties": {
                                                "PatchFilters": {
                                                    "description": "The set of patch filters that make up the group.",
                                                    "items": {
                                                        "description": "<p>Defines a patch filter.</p> <p>A patch filter consists of key/value pairs, but not all keys are valid for all operating system types. For example, the key <code>PRODUCT</code> is valid for all supported operating system types. The key <code>MSRC_SEVERITY</code>, however, is valid only for Windows operating systems, and the key <code>SECTION</code> is valid only for Ubuntu operating systems.</p> <p>Refer to the following sections for information about which keys may be used with each major operating system, and which values are valid for each key.</p> <p> <b>Windows Operating Systems</b> </p> <p>The supported keys for Windows operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>MSRC_SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Windows7</code> </p> </li> <li> <p> <code>Windows8</code> </p> </li> <li> <p> <code>Windows8.1</code> </p> </li> <li> <p> <code>Windows8Embedded</code> </p> </li> <li> <p> <code>Windows10</code> </p> </li> <li> <p> <code>Windows10LTSB</code> </p> </li> <li> <p> <code>WindowsServer2008</code> </p> </li> <li> <p> <code>WindowsServer2008R2</code> </p> </li> <li> <p> <code>WindowsServer2012</code> </p> </li> <li> <p> <code>WindowsServer2012R2</code> </p> </li> <li> <p> <code>WindowsServer2016</code> </p> </li> <li> <p> <code>WindowsServer2019</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>CriticalUpdates</code> </p> </li> <li> <p> <code>DefinitionUpdates</code> </p> </li> <li> <p> <code>Drivers</code> </p> </li> <li> <p> <code>FeaturePacks</code> </p> </li> <li> <p> <code>SecurityUpdates</code> </p> </li> <li> <p> <code>ServicePacks</code> </p> </li> <li> <p> <code>Tools</code> </p> </li> <li> <p> <code>UpdateRollups</code> </p> </li> <li> <p> <code>Updates</code> </p> </li> <li> <p> <code>Upgrades</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>MSRC_SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Moderate</code> </p> </li> <li> <p> <code>Low</code> </p> </li> <li> <p> <code>Unspecified</code> </p> </li> </ul> <p> <b>Ubuntu Operating Systems</b> </p> <p>The supported keys for Ubuntu operating systems are <code>PRODUCT</code>, <code>PRIORITY</code>, and <code>SECTION</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Ubuntu14.04</code> </p> </li> <li> <p> <code>Ubuntu16.04</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>PRIORITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Required</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Standard</code> </p> </li> <li> <p> <code>Optional</code> </p> </li> <li> <p> <code>Extra</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SECTION</code> </p> <p>Only the length of the key value is validated. Minimum length is 1. Maximum length is 64.</p> <p> <b>Amazon Linux Operating Systems</b> </p> <p>The supported keys for Amazon Linux operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>AmazonLinux2012.03</code> </p> </li> <li> <p> <code>AmazonLinux2012.09</code> </p> </li> <li> <p> <code>AmazonLinux2013.03</code> </p> </li> <li> <p> <code>AmazonLinux2013.09</code> </p> </li> <li> <p> <code>AmazonLinux2014.03</code> </p> </li> <li> <p> <code>AmazonLinux2014.09</code> </p> </li> <li> <p> <code>AmazonLinux2015.03</code> </p> </li> <li> <p> <code>AmazonLinux2015.09</code> </p> </li> <li> <p> <code>AmazonLinux2016.03</code> </p> </li> <li> <p> <code>AmazonLinux2016.09</code> </p> </li> <li> <p> <code>AmazonLinux2017.03</code> </p> </li> <li> <p> <code>AmazonLinux2017.09</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>Amazon Linux 2 Operating Systems</b> </p> <p>The supported keys for Amazon Linux 2 operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>AmazonLinux2</code> </p> </li> <li> <p> <code>AmazonLinux2.0</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>RedHat Enterprise Linux (RHEL) Operating Systems</b> </p> <p>The supported keys for RedHat Enterprise Linux operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>RedhatEnterpriseLinux6.5</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.6</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.7</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.8</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.9</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.0</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.1</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.2</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.3</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.4</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.5</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.6</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>SUSE Linux Enterprise Server (SLES) Operating Systems</b> </p> <p>The supported keys for SLES operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Suse12.0</code> </p> </li> <li> <p> <code>Suse12.1</code> </p> </li> <li> <p> <code>Suse12.2</code> </p> </li> <li> <p> <code>Suse12.3</code> </p> </li> <li> <p> <code>Suse12.4</code> </p> </li> <li> <p> <code>Suse12.5</code> </p> </li> <li> <p> <code>Suse12.6</code> </p> </li> <li> <p> <code>Suse12.7</code> </p> </li> <li> <p> <code>Suse12.8</code> </p> </li> <li> <p> <code>Suse12.9</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Optional</code> </p> </li> <li> <p> <code>Feature</code> </p> </li> <li> <p> <code>Document</code> </p> </li> <li> <p> <code>Yast</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Moderate</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>CentOS Operating Systems</b> </p> <p>The supported keys for CentOS operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>CentOS6.5</code> </p> </li> <li> <p> <code>CentOS6.6</code> </p> </li> <li> <p> <code>CentOS6.7</code> </p> </li> <li> <p> <code>CentOS6.8</code> </p> </li> <li> <p> <code>CentOS6.9</code> </p> </li> <li> <p> <code>CentOS7.0</code> </p> </li> <li> <p> <code>CentOS7.1</code> </p> </li> <li> <p> <code>CentOS7.2</code> </p> </li> <li> <p> <code>CentOS7.3</code> </p> </li> <li> <p> <code>CentOS7.4</code> </p> </li> <li> <p> <code>CentOS7.5</code> </p> </li> <li> <p> <code>CentOS7.6</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul>",
                                                        "properties": {
                                                            "Key": {
                                                                "description": "<p>The key for the filter.</p> <p>See <a>PatchFilter</a> for lists of valid keys for each operating system type.</p>",
                                                                "enum": [
                                                                    "PRODUCT",
                                                                    "CLASSIFICATION",
                                                                    "MSRC_SEVERITY",
                                                                    "PATCH_ID",
                                                                    "SECTION",
                                                                    "PRIORITY",
                                                                    "SEVERITY"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "Values": {
                                                                "description": "<p>The value for the filter key.</p> <p>See <a>PatchFilter</a> for lists of valid values for each key based on operating system type.</p>",
                                                                "items": {
                                                                    "maxLength": 64,
                                                                    "minLength": 1,
                                                                    "type": "string"
                                                                },
                                                                "maxItems": 20,
                                                                "minItems": 1,
                                                                "type": "array"
                                                            }
                                                        },
                                                        "required": [
                                                            "Key",
                                                            "Values"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "maxItems": 4,
                                                    "minItems": 0,
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "PatchFilters"
                                            ],
                                            "type": "object"
                                        },
                                        "ModifiedDate": {
                                            "description": "The date when the patch baseline was last modified.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Name": {
                                            "description": "The name of the patch baseline.",
                                            "maxLength": 128,
                                            "minLength": 3,
                                            "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                            "type": "string"
                                        },
                                        "OperatingSystem": {
                                            "description": "The operating system rule used by the updated patch baseline.",
                                            "enum": [
                                                "WINDOWS",
                                                "AMAZON_LINUX",
                                                "AMAZON_LINUX_2",
                                                "UBUNTU",
                                                "REDHAT_ENTERPRISE_LINUX",
                                                "SUSE",
                                                "CENTOS"
                                            ],
                                            "type": "string"
                                        },
                                        "RejectedPatches": {
                                            "description": "A list of explicitly rejected patches for the baseline.",
                                            "items": {
                                                "maxLength": 100,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "maxItems": 50,
                                            "minItems": 0,
                                            "type": "array"
                                        },
                                        "RejectedPatchesAction": {
                                            "description": "The action specified to take on patches included in the RejectedPatches list. A patch can be allowed only if it is a dependency of another package, or blocked entirely along with packages that include it as a dependency.",
                                            "enum": [
                                                "ALLOW_AS_DEPENDENCY",
                                                "BLOCK"
                                            ],
                                            "type": "string"
                                        },
                                        "Sources": {
                                            "description": "Information about the patches to use to update the instances, including target operating systems and source repositories. Applies to Linux instances only.",
                                            "items": {
                                                "description": "Information about the patches to use to update the instances, including target operating systems and source repository. Applies to Linux instances only.",
                                                "properties": {
                                                    "Configuration": {
                                                        "description": "<p>The value of the yum repo configuration. For example:</p> <p> <code>[main]</code> </p> <p> <code>cachedir=/var/cache/yum/$basesearch$releasever</code> </p> <p> <code>keepcache=0</code> </p> <p> <code>debuglevel=2</code> </p>",
                                                        "format": "password",
                                                        "maxLength": 512,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The name specified to identify the patch source.",
                                                        "pattern": "^[a-zA-Z0-9_\\-.]{3,50}$",
                                                        "type": "string"
                                                    },
                                                    "Products": {
                                                        "description": "The specific operating system versions a patch repository applies to, such as \"Ubuntu16.04\", \"AmazonLinux2016.09\", \"RedhatEnterpriseLinux7.2\" or \"Suse12.7\". For lists of supported product values, see <a>PatchFilter</a>.",
                                                        "items": {
                                                            "maxLength": 128,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "maxItems": 20,
                                                        "minItems": 1,
                                                        "type": "array"
                                                    }
                                                },
                                                "required": [
                                                    "Name",
                                                    "Products",
                                                    "Configuration"
                                                ],
                                                "type": "object"
                                            },
                                            "maxItems": 20,
                                            "minItems": 0,
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "DoesNotExistException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ApprovalRules": {
                                        "description": "A set of rules used to include patches in the baseline.",
                                        "properties": {
                                            "PatchRules": {
                                                "description": "The rules that make up the rule group.",
                                                "items": {
                                                    "description": "Defines an approval rule for a patch baseline.",
                                                    "properties": {
                                                        "ApproveAfterDays": {
                                                            "description": "The number of days after the release date of each patch matched by the rule that the patch is marked as approved in the patch baseline. For example, a value of <code>7</code> means that patches are approved seven days after they are released. ",
                                                            "maximum": 100,
                                                            "minimum": 0,
                                                            "type": "integer"
                                                        },
                                                        "ComplianceLevel": {
                                                            "description": "A compliance severity level for all approved patches in a patch baseline. Valid compliance severity levels include the following: Unspecified, Critical, High, Medium, Low, and Informational.",
                                                            "enum": [
                                                                "CRITICAL",
                                                                "HIGH",
                                                                "MEDIUM",
                                                                "LOW",
                                                                "INFORMATIONAL",
                                                                "UNSPECIFIED"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "EnableNonSecurity": {
                                                            "description": "For instances identified by the approval rule filters, enables a patch baseline to apply non-security updates available in the specified repository. The default value is 'false'. Applies to Linux instances only.",
                                                            "type": "boolean"
                                                        },
                                                        "PatchFilterGroup": {
                                                            "description": "The patch filter group that defines the criteria for the rule.",
                                                            "properties": {
                                                                "PatchFilters": {
                                                                    "description": "The set of patch filters that make up the group.",
                                                                    "items": {
                                                                        "description": "<p>Defines a patch filter.</p> <p>A patch filter consists of key/value pairs, but not all keys are valid for all operating system types. For example, the key <code>PRODUCT</code> is valid for all supported operating system types. The key <code>MSRC_SEVERITY</code>, however, is valid only for Windows operating systems, and the key <code>SECTION</code> is valid only for Ubuntu operating systems.</p> <p>Refer to the following sections for information about which keys may be used with each major operating system, and which values are valid for each key.</p> <p> <b>Windows Operating Systems</b> </p> <p>The supported keys for Windows operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>MSRC_SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Windows7</code> </p> </li> <li> <p> <code>Windows8</code> </p> </li> <li> <p> <code>Windows8.1</code> </p> </li> <li> <p> <code>Windows8Embedded</code> </p> </li> <li> <p> <code>Windows10</code> </p> </li> <li> <p> <code>Windows10LTSB</code> </p> </li> <li> <p> <code>WindowsServer2008</code> </p> </li> <li> <p> <code>WindowsServer2008R2</code> </p> </li> <li> <p> <code>WindowsServer2012</code> </p> </li> <li> <p> <code>WindowsServer2012R2</code> </p> </li> <li> <p> <code>WindowsServer2016</code> </p> </li> <li> <p> <code>WindowsServer2019</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>CriticalUpdates</code> </p> </li> <li> <p> <code>DefinitionUpdates</code> </p> </li> <li> <p> <code>Drivers</code> </p> </li> <li> <p> <code>FeaturePacks</code> </p> </li> <li> <p> <code>SecurityUpdates</code> </p> </li> <li> <p> <code>ServicePacks</code> </p> </li> <li> <p> <code>Tools</code> </p> </li> <li> <p> <code>UpdateRollups</code> </p> </li> <li> <p> <code>Updates</code> </p> </li> <li> <p> <code>Upgrades</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>MSRC_SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Moderate</code> </p> </li> <li> <p> <code>Low</code> </p> </li> <li> <p> <code>Unspecified</code> </p> </li> </ul> <p> <b>Ubuntu Operating Systems</b> </p> <p>The supported keys for Ubuntu operating systems are <code>PRODUCT</code>, <code>PRIORITY</code>, and <code>SECTION</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Ubuntu14.04</code> </p> </li> <li> <p> <code>Ubuntu16.04</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>PRIORITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Required</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Standard</code> </p> </li> <li> <p> <code>Optional</code> </p> </li> <li> <p> <code>Extra</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SECTION</code> </p> <p>Only the length of the key value is validated. Minimum length is 1. Maximum length is 64.</p> <p> <b>Amazon Linux Operating Systems</b> </p> <p>The supported keys for Amazon Linux operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>AmazonLinux2012.03</code> </p> </li> <li> <p> <code>AmazonLinux2012.09</code> </p> </li> <li> <p> <code>AmazonLinux2013.03</code> </p> </li> <li> <p> <code>AmazonLinux2013.09</code> </p> </li> <li> <p> <code>AmazonLinux2014.03</code> </p> </li> <li> <p> <code>AmazonLinux2014.09</code> </p> </li> <li> <p> <code>AmazonLinux2015.03</code> </p> </li> <li> <p> <code>AmazonLinux2015.09</code> </p> </li> <li> <p> <code>AmazonLinux2016.03</code> </p> </li> <li> <p> <code>AmazonLinux2016.09</code> </p> </li> <li> <p> <code>AmazonLinux2017.03</code> </p> </li> <li> <p> <code>AmazonLinux2017.09</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>Amazon Linux 2 Operating Systems</b> </p> <p>The supported keys for Amazon Linux 2 operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>AmazonLinux2</code> </p> </li> <li> <p> <code>AmazonLinux2.0</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>RedHat Enterprise Linux (RHEL) Operating Systems</b> </p> <p>The supported keys for RedHat Enterprise Linux operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>RedhatEnterpriseLinux6.5</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.6</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.7</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.8</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.9</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.0</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.1</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.2</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.3</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.4</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.5</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.6</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>SUSE Linux Enterprise Server (SLES) Operating Systems</b> </p> <p>The supported keys for SLES operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Suse12.0</code> </p> </li> <li> <p> <code>Suse12.1</code> </p> </li> <li> <p> <code>Suse12.2</code> </p> </li> <li> <p> <code>Suse12.3</code> </p> </li> <li> <p> <code>Suse12.4</code> </p> </li> <li> <p> <code>Suse12.5</code> </p> </li> <li> <p> <code>Suse12.6</code> </p> </li> <li> <p> <code>Suse12.7</code> </p> </li> <li> <p> <code>Suse12.8</code> </p> </li> <li> <p> <code>Suse12.9</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Optional</code> </p> </li> <li> <p> <code>Feature</code> </p> </li> <li> <p> <code>Document</code> </p> </li> <li> <p> <code>Yast</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Moderate</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>CentOS Operating Systems</b> </p> <p>The supported keys for CentOS operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>CentOS6.5</code> </p> </li> <li> <p> <code>CentOS6.6</code> </p> </li> <li> <p> <code>CentOS6.7</code> </p> </li> <li> <p> <code>CentOS6.8</code> </p> </li> <li> <p> <code>CentOS6.9</code> </p> </li> <li> <p> <code>CentOS7.0</code> </p> </li> <li> <p> <code>CentOS7.1</code> </p> </li> <li> <p> <code>CentOS7.2</code> </p> </li> <li> <p> <code>CentOS7.3</code> </p> </li> <li> <p> <code>CentOS7.4</code> </p> </li> <li> <p> <code>CentOS7.5</code> </p> </li> <li> <p> <code>CentOS7.6</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul>",
                                                                        "properties": {
                                                                            "Key": {
                                                                                "description": "<p>The key for the filter.</p> <p>See <a>PatchFilter</a> for lists of valid keys for each operating system type.</p>",
                                                                                "enum": [
                                                                                    "PRODUCT",
                                                                                    "CLASSIFICATION",
                                                                                    "MSRC_SEVERITY",
                                                                                    "PATCH_ID",
                                                                                    "SECTION",
                                                                                    "PRIORITY",
                                                                                    "SEVERITY"
                                                                                ],
                                                                                "type": "string"
                                                                            },
                                                                            "Values": {
                                                                                "description": "<p>The value for the filter key.</p> <p>See <a>PatchFilter</a> for lists of valid values for each key based on operating system type.</p>",
                                                                                "items": {
                                                                                    "maxLength": 64,
                                                                                    "minLength": 1,
                                                                                    "type": "string"
                                                                                },
                                                                                "maxItems": 20,
                                                                                "minItems": 1,
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "Key",
                                                                            "Values"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "maxItems": 4,
                                                                    "minItems": 0,
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "required": [
                                                                "PatchFilters"
                                                            ],
                                                            "type": "object"
                                                        }
                                                    },
                                                    "required": [
                                                        "PatchFilterGroup",
                                                        "ApproveAfterDays"
                                                    ],
                                                    "type": "object"
                                                },
                                                "maxItems": 10,
                                                "minItems": 0,
                                                "type": "array"
                                            }
                                        },
                                        "required": [
                                            "PatchRules"
                                        ],
                                        "type": "object"
                                    },
                                    "ApprovedPatches": {
                                        "description": "<p>A list of explicitly approved patches for the baseline.</p> <p>For information about accepted formats for lists of approved patches and rejected patches, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/patch-manager-approved-rejected-package-name-formats.html\">Package Name Formats for Approved and Rejected Patch Lists</a> in the <i>AWS Systems Manager User Guide</i>.</p>",
                                        "items": {
                                            "maxLength": 100,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "maxItems": 50,
                                        "minItems": 0,
                                        "type": "array"
                                    },
                                    "ApprovedPatchesComplianceLevel": {
                                        "description": "Assigns a new compliance severity level to an existing patch baseline.",
                                        "enum": [
                                            "CRITICAL",
                                            "HIGH",
                                            "MEDIUM",
                                            "LOW",
                                            "INFORMATIONAL",
                                            "UNSPECIFIED"
                                        ],
                                        "type": "string"
                                    },
                                    "ApprovedPatchesEnableNonSecurity": {
                                        "description": "Indicates whether the list of approved patches includes non-security updates that should be applied to the instances. The default value is 'false'. Applies to Linux instances only.",
                                        "type": "boolean"
                                    },
                                    "BaselineId": {
                                        "description": "The ID of the patch baseline to update.",
                                        "maxLength": 128,
                                        "minLength": 20,
                                        "pattern": "^[a-zA-Z0-9_\\-:/]{20,128}$",
                                        "type": "string"
                                    },
                                    "Description": {
                                        "description": "A description of the patch baseline.",
                                        "maxLength": 1024,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "GlobalFilters": {
                                        "description": "A set of global filters used to include patches in the baseline.",
                                        "properties": {
                                            "PatchFilters": {
                                                "description": "The set of patch filters that make up the group.",
                                                "items": {
                                                    "description": "<p>Defines a patch filter.</p> <p>A patch filter consists of key/value pairs, but not all keys are valid for all operating system types. For example, the key <code>PRODUCT</code> is valid for all supported operating system types. The key <code>MSRC_SEVERITY</code>, however, is valid only for Windows operating systems, and the key <code>SECTION</code> is valid only for Ubuntu operating systems.</p> <p>Refer to the following sections for information about which keys may be used with each major operating system, and which values are valid for each key.</p> <p> <b>Windows Operating Systems</b> </p> <p>The supported keys for Windows operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>MSRC_SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Windows7</code> </p> </li> <li> <p> <code>Windows8</code> </p> </li> <li> <p> <code>Windows8.1</code> </p> </li> <li> <p> <code>Windows8Embedded</code> </p> </li> <li> <p> <code>Windows10</code> </p> </li> <li> <p> <code>Windows10LTSB</code> </p> </li> <li> <p> <code>WindowsServer2008</code> </p> </li> <li> <p> <code>WindowsServer2008R2</code> </p> </li> <li> <p> <code>WindowsServer2012</code> </p> </li> <li> <p> <code>WindowsServer2012R2</code> </p> </li> <li> <p> <code>WindowsServer2016</code> </p> </li> <li> <p> <code>WindowsServer2019</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>CriticalUpdates</code> </p> </li> <li> <p> <code>DefinitionUpdates</code> </p> </li> <li> <p> <code>Drivers</code> </p> </li> <li> <p> <code>FeaturePacks</code> </p> </li> <li> <p> <code>SecurityUpdates</code> </p> </li> <li> <p> <code>ServicePacks</code> </p> </li> <li> <p> <code>Tools</code> </p> </li> <li> <p> <code>UpdateRollups</code> </p> </li> <li> <p> <code>Updates</code> </p> </li> <li> <p> <code>Upgrades</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>MSRC_SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Moderate</code> </p> </li> <li> <p> <code>Low</code> </p> </li> <li> <p> <code>Unspecified</code> </p> </li> </ul> <p> <b>Ubuntu Operating Systems</b> </p> <p>The supported keys for Ubuntu operating systems are <code>PRODUCT</code>, <code>PRIORITY</code>, and <code>SECTION</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Ubuntu14.04</code> </p> </li> <li> <p> <code>Ubuntu16.04</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>PRIORITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Required</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Standard</code> </p> </li> <li> <p> <code>Optional</code> </p> </li> <li> <p> <code>Extra</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SECTION</code> </p> <p>Only the length of the key value is validated. Minimum length is 1. Maximum length is 64.</p> <p> <b>Amazon Linux Operating Systems</b> </p> <p>The supported keys for Amazon Linux operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>AmazonLinux2012.03</code> </p> </li> <li> <p> <code>AmazonLinux2012.09</code> </p> </li> <li> <p> <code>AmazonLinux2013.03</code> </p> </li> <li> <p> <code>AmazonLinux2013.09</code> </p> </li> <li> <p> <code>AmazonLinux2014.03</code> </p> </li> <li> <p> <code>AmazonLinux2014.09</code> </p> </li> <li> <p> <code>AmazonLinux2015.03</code> </p> </li> <li> <p> <code>AmazonLinux2015.09</code> </p> </li> <li> <p> <code>AmazonLinux2016.03</code> </p> </li> <li> <p> <code>AmazonLinux2016.09</code> </p> </li> <li> <p> <code>AmazonLinux2017.03</code> </p> </li> <li> <p> <code>AmazonLinux2017.09</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>Amazon Linux 2 Operating Systems</b> </p> <p>The supported keys for Amazon Linux 2 operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>AmazonLinux2</code> </p> </li> <li> <p> <code>AmazonLinux2.0</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>RedHat Enterprise Linux (RHEL) Operating Systems</b> </p> <p>The supported keys for RedHat Enterprise Linux operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>RedhatEnterpriseLinux6.5</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.6</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.7</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.8</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.9</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.0</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.1</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.2</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.3</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.4</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.5</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.6</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>SUSE Linux Enterprise Server (SLES) Operating Systems</b> </p> <p>The supported keys for SLES operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Suse12.0</code> </p> </li> <li> <p> <code>Suse12.1</code> </p> </li> <li> <p> <code>Suse12.2</code> </p> </li> <li> <p> <code>Suse12.3</code> </p> </li> <li> <p> <code>Suse12.4</code> </p> </li> <li> <p> <code>Suse12.5</code> </p> </li> <li> <p> <code>Suse12.6</code> </p> </li> <li> <p> <code>Suse12.7</code> </p> </li> <li> <p> <code>Suse12.8</code> </p> </li> <li> <p> <code>Suse12.9</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Optional</code> </p> </li> <li> <p> <code>Feature</code> </p> </li> <li> <p> <code>Document</code> </p> </li> <li> <p> <code>Yast</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Moderate</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>CentOS Operating Systems</b> </p> <p>The supported keys for CentOS operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>CentOS6.5</code> </p> </li> <li> <p> <code>CentOS6.6</code> </p> </li> <li> <p> <code>CentOS6.7</code> </p> </li> <li> <p> <code>CentOS6.8</code> </p> </li> <li> <p> <code>CentOS6.9</code> </p> </li> <li> <p> <code>CentOS7.0</code> </p> </li> <li> <p> <code>CentOS7.1</code> </p> </li> <li> <p> <code>CentOS7.2</code> </p> </li> <li> <p> <code>CentOS7.3</code> </p> </li> <li> <p> <code>CentOS7.4</code> </p> </li> <li> <p> <code>CentOS7.5</code> </p> </li> <li> <p> <code>CentOS7.6</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul>",
                                                    "properties": {
                                                        "Key": {
                                                            "description": "<p>The key for the filter.</p> <p>See <a>PatchFilter</a> for lists of valid keys for each operating system type.</p>",
                                                            "enum": [
                                                                "PRODUCT",
                                                                "CLASSIFICATION",
                                                                "MSRC_SEVERITY",
                                                                "PATCH_ID",
                                                                "SECTION",
                                                                "PRIORITY",
                                                                "SEVERITY"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "Values": {
                                                            "description": "<p>The value for the filter key.</p> <p>See <a>PatchFilter</a> for lists of valid values for each key based on operating system type.</p>",
                                                            "items": {
                                                                "maxLength": 64,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            },
                                                            "maxItems": 20,
                                                            "minItems": 1,
                                                            "type": "array"
                                                        }
                                                    },
                                                    "required": [
                                                        "Key",
                                                        "Values"
                                                    ],
                                                    "type": "object"
                                                },
                                                "maxItems": 4,
                                                "minItems": 0,
                                                "type": "array"
                                            }
                                        },
                                        "required": [
                                            "PatchFilters"
                                        ],
                                        "type": "object"
                                    },
                                    "Name": {
                                        "description": "The name of the patch baseline.",
                                        "maxLength": 128,
                                        "minLength": 3,
                                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                        "type": "string"
                                    },
                                    "RejectedPatches": {
                                        "description": "<p>A list of explicitly rejected patches for the baseline.</p> <p>For information about accepted formats for lists of approved patches and rejected patches, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/patch-manager-approved-rejected-package-name-formats.html\">Package Name Formats for Approved and Rejected Patch Lists</a> in the <i>AWS Systems Manager User Guide</i>.</p>",
                                        "items": {
                                            "maxLength": 100,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "maxItems": 50,
                                        "minItems": 0,
                                        "type": "array"
                                    },
                                    "RejectedPatchesAction": {
                                        "description": "<p>The action for Patch Manager to take on patches included in the RejectedPackages list.</p> <ul> <li> <p> <b>ALLOW_AS_DEPENDENCY</b>: A package in the Rejected patches list is installed only if it is a dependency of another package. It is considered compliant with the patch baseline, and its status is reported as <i>InstalledOther</i>. This is the default action if no option is specified.</p> </li> <li> <p> <b>BLOCK</b>: Packages in the RejectedPatches list, and packages that include them as dependencies, are not installed under any circumstances. If a package was installed before it was added to the Rejected patches list, it is considered non-compliant with the patch baseline, and its status is reported as <i>InstalledRejected</i>.</p> </li> </ul>",
                                        "enum": [
                                            "ALLOW_AS_DEPENDENCY",
                                            "BLOCK"
                                        ],
                                        "type": "string"
                                    },
                                    "Replace": {
                                        "description": "If True, then all fields that are required by the CreatePatchBaseline action are also required for this API request. Optional fields that are not specified are set to null.",
                                        "type": "boolean"
                                    },
                                    "Sources": {
                                        "description": "Information about the patches to use to update the instances, including target operating systems and source repositories. Applies to Linux instances only.",
                                        "items": {
                                            "description": "Information about the patches to use to update the instances, including target operating systems and source repository. Applies to Linux instances only.",
                                            "properties": {
                                                "Configuration": {
                                                    "description": "<p>The value of the yum repo configuration. For example:</p> <p> <code>[main]</code> </p> <p> <code>cachedir=/var/cache/yum/$basesearch$releasever</code> </p> <p> <code>keepcache=0</code> </p> <p> <code>debuglevel=2</code> </p>",
                                                    "format": "password",
                                                    "maxLength": 512,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name specified to identify the patch source.",
                                                    "pattern": "^[a-zA-Z0-9_\\-.]{3,50}$",
                                                    "type": "string"
                                                },
                                                "Products": {
                                                    "description": "The specific operating system versions a patch repository applies to, such as \"Ubuntu16.04\", \"AmazonLinux2016.09\", \"RedhatEnterpriseLinux7.2\" or \"Suse12.7\". For lists of supported product values, see <a>PatchFilter</a>.",
                                                    "items": {
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "maxItems": 20,
                                                    "minItems": 1,
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Name",
                                                "Products",
                                                "Configuration"
                                            ],
                                            "type": "object"
                                        },
                                        "maxItems": 20,
                                        "minItems": 0,
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "BaselineId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#UpdateServiceSetting": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p> <code>ServiceSetting</code> is an account-level setting for an AWS service. This setting defines how a user interacts with or uses a service or a feature of a service. For example, if an AWS service charges money to the account based on feature or service usage, then the AWS service team might create a default setting of \"false\". This means the user can't use this feature unless they change the setting to \"true\" and intentionally opt in for a paid feature.</p> <p>Services map a <code>SettingId</code> object to a setting value. AWS services teams define the default value for a <code>SettingId</code>. You can't create a new <code>SettingId</code>, but you can overwrite the default value if you have the <code>ssm:UpdateServiceSetting</code> permission for the setting. Use the <a>GetServiceSetting</a> API action to view the current value. Or, use the <a>ResetServiceSetting</a> to change the value back to the original value defined by the AWS service team.</p> <p>Update the service setting for the account. </p>",
                "operationId": "UpdateServiceSetting",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "The result body of the UpdateServiceSetting API action.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ServiceSettingNotFound",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "TooManyUpdates",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "The request body of the UpdateServiceSetting API action.",
                                "properties": {
                                    "SettingId": {
                                        "description": "The ID of the service setting to update.",
                                        "maxLength": 1000,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "SettingValue": {
                                        "description": "The new value to specify for the service setting.",
                                        "maxLength": 4096,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "SettingId",
                                    "SettingValue"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Account": {
                "type": "string"
            },
            "AccountId": {
                "pattern": "\\(\\?i\\)all\\|[0-9]\\{12\\}",
                "type": "string"
            },
            "AccountIdList": {
                "items": {
                    "pattern": "\\(\\?i\\)all\\|[0-9]\\{12\\}",
                    "type": "string"
                },
                "maxItems": 20,
                "type": "array"
            },
            "Accounts": {
                "items": {
                    "type": "string"
                },
                "maxItems": 50,
                "minItems": 1,
                "type": "array"
            },
            "Activation": {
                "description": "An activation registers one or more on-premises servers or virtual machines (VMs) with AWS so that you can configure those servers or VMs using Run Command. A server or VM that has been registered with AWS is called a managed instance.",
                "properties": {
                    "ActivationId": {
                        "description": "The ID created by Systems Manager when you submitted the activation.",
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "type": "string"
                    },
                    "CreatedDate": {
                        "description": "The date the activation was created.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "DefaultInstanceName": {
                        "description": "A name for the managed instance when it is created.",
                        "maxLength": 256,
                        "minLength": 0,
                        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                        "type": "string"
                    },
                    "Description": {
                        "description": "A user defined description of the activation.",
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    },
                    "ExpirationDate": {
                        "description": "The date when this activation can no longer be used to register managed instances.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "Expired": {
                        "description": "Whether or not the activation is expired.",
                        "type": "boolean"
                    },
                    "IamRole": {
                        "description": "The Amazon Identity and Access Management (IAM) role to assign to the managed instance.",
                        "maxLength": 64,
                        "type": "string"
                    },
                    "RegistrationLimit": {
                        "description": "The maximum number of managed instances that can be registered using this activation.",
                        "maximum": 1000,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "RegistrationsCount": {
                        "description": "The number of managed instances already registered with this activation.",
                        "maximum": 1000,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "Tags": {
                        "description": "Tags assigned to the activation.",
                        "items": {
                            "description": "Metadata that you assign to your AWS resources. Tags enable you to categorize your resources in different ways, for example, by purpose, owner, or environment. In Systems Manager, you can apply tags to documents, managed instances, Maintenance Windows, Parameter Store parameters, and patch baselines.",
                            "properties": {
                                "Key": {
                                    "description": "The name of the tag.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "The value of the tag.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Key",
                                "Value"
                            ],
                            "type": "object"
                        },
                        "maxItems": 1000,
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "ActivationCode": {
                "maxLength": 250,
                "minLength": 20,
                "type": "string"
            },
            "ActivationDescription": {
                "maxLength": 256,
                "minLength": 0,
                "type": "string"
            },
            "ActivationId": {
                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
            },
            "ActivationList": {
                "items": {
                    "description": "An activation registers one or more on-premises servers or virtual machines (VMs) with AWS so that you can configure those servers or VMs using Run Command. A server or VM that has been registered with AWS is called a managed instance.",
                    "properties": {
                        "ActivationId": {
                            "description": "The ID created by Systems Manager when you submitted the activation.",
                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                            "type": "string"
                        },
                        "CreatedDate": {
                            "description": "The date the activation was created.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "DefaultInstanceName": {
                            "description": "A name for the managed instance when it is created.",
                            "maxLength": 256,
                            "minLength": 0,
                            "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                            "type": "string"
                        },
                        "Description": {
                            "description": "A user defined description of the activation.",
                            "maxLength": 256,
                            "minLength": 0,
                            "type": "string"
                        },
                        "ExpirationDate": {
                            "description": "The date when this activation can no longer be used to register managed instances.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "Expired": {
                            "description": "Whether or not the activation is expired.",
                            "type": "boolean"
                        },
                        "IamRole": {
                            "description": "The Amazon Identity and Access Management (IAM) role to assign to the managed instance.",
                            "maxLength": 64,
                            "type": "string"
                        },
                        "RegistrationLimit": {
                            "description": "The maximum number of managed instances that can be registered using this activation.",
                            "maximum": 1000,
                            "minimum": 1,
                            "type": "integer"
                        },
                        "RegistrationsCount": {
                            "description": "The number of managed instances already registered with this activation.",
                            "maximum": 1000,
                            "minimum": 1,
                            "type": "integer"
                        },
                        "Tags": {
                            "description": "Tags assigned to the activation.",
                            "items": {
                                "description": "Metadata that you assign to your AWS resources. Tags enable you to categorize your resources in different ways, for example, by purpose, owner, or environment. In Systems Manager, you can apply tags to documents, managed instances, Maintenance Windows, Parameter Store parameters, and patch baselines.",
                                "properties": {
                                    "Key": {
                                        "description": "The name of the tag.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                        "type": "string"
                                    },
                                    "Value": {
                                        "description": "The value of the tag.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Key",
                                    "Value"
                                ],
                                "type": "object"
                            },
                            "maxItems": 1000,
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "AddTagsToResourceRequest": {
                "properties": {
                    "ResourceId": {
                        "description": "<p>The resource ID you want to tag.</p> <p>Use the ID of the resource. Here are some examples:</p> <p>ManagedInstance: mi-012345abcde</p> <p>MaintenanceWindow: mw-012345abcde</p> <p>PatchBaseline: pb-012345abcde</p> <p>For the Document and Parameter values, use the name of the resource.</p> <note> <p>The ManagedInstance type for this API action is only for on-premises managed instances. You must specify the the name of the managed instance in the following format: mi-ID_number. For example, mi-1a2b3c4d5e6f.</p> </note>",
                        "type": "string"
                    },
                    "ResourceType": {
                        "description": "<p>Specifies the type of resource you are tagging.</p> <note> <p>The ManagedInstance type for this API action is for on-premises managed instances. You must specify the the name of the managed instance in the following format: mi-ID_number. For example, mi-1a2b3c4d5e6f.</p> </note>",
                        "enum": [
                            "Document",
                            "ManagedInstance",
                            "MaintenanceWindow",
                            "Parameter",
                            "PatchBaseline"
                        ],
                        "type": "string"
                    },
                    "Tags": {
                        "description": "<p> One or more tags. The value parameter is required, but if you don't want the tag to have a value, specify the parameter with no value, and we set the value to an empty string. </p> <important> <p>Do not enter personally identifiable information in this field.</p> </important>",
                        "items": {
                            "description": "Metadata that you assign to your AWS resources. Tags enable you to categorize your resources in different ways, for example, by purpose, owner, or environment. In Systems Manager, you can apply tags to documents, managed instances, Maintenance Windows, Parameter Store parameters, and patch baselines.",
                            "properties": {
                                "Key": {
                                    "description": "The name of the tag.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "The value of the tag.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Key",
                                "Value"
                            ],
                            "type": "object"
                        },
                        "maxItems": 1000,
                        "type": "array"
                    }
                },
                "required": [
                    "ResourceType",
                    "ResourceId",
                    "Tags"
                ],
                "type": "object"
            },
            "AddTagsToResourceResult": {
                "properties": {},
                "type": "object"
            },
            "AgentErrorCode": {
                "maxLength": 10,
                "type": "string"
            },
            "AggregatorSchemaOnly": {
                "type": "boolean"
            },
            "AllowedPattern": {
                "maxLength": 1024,
                "minLength": 0,
                "type": "string"
            },
            "AlreadyExistsException": {},
            "ApproveAfterDays": {
                "maximum": 100,
                "minimum": 0,
                "type": "integer"
            },
            "AssociatedInstances": {},
            "Association": {
                "description": "Describes an association of a Systems Manager document and an instance.",
                "properties": {
                    "AssociationId": {
                        "description": "The ID created by the system when you create an association. An association is a binding between a document and a set of targets with a schedule.",
                        "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                        "type": "string"
                    },
                    "AssociationName": {
                        "description": "The association name.",
                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                        "type": "string"
                    },
                    "AssociationVersion": {
                        "description": "The association version.",
                        "pattern": "([$]LATEST)|([1-9][0-9]*)",
                        "type": "string"
                    },
                    "DocumentVersion": {
                        "description": "The version of the document used in the association.",
                        "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                        "type": "string"
                    },
                    "InstanceId": {
                        "description": "The ID of the instance.",
                        "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                        "type": "string"
                    },
                    "LastExecutionDate": {
                        "description": "The date on which the association was last run.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The name of the Systems Manager document.",
                        "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                        "type": "string"
                    },
                    "Overview": {
                        "description": "Information about the association.",
                        "properties": {
                            "AssociationStatusAggregatedCount": {
                                "description": "Returns the number of targets for the association status. For example, if you created an association with two instances, and one of them was successful, this would return the count of instances by status.",
                                "items": {
                                    "properties": {
                                        "key": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "DetailedStatus": {
                                "description": "A detailed status of the association.",
                                "type": "string"
                            },
                            "Status": {
                                "description": "The status of the association. Status can be: Pending, Success, or Failed.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "ScheduleExpression": {
                        "description": "A cron expression that specifies a schedule when the association runs.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Targets": {
                        "description": "The instances targeted by the request to create an association. ",
                        "items": {
                            "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                            "properties": {
                                "Key": {
                                    "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "maxItems": 50,
                                    "minItems": 0,
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 5,
                        "minItems": 0,
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "AssociationAlreadyExists": {},
            "AssociationComplianceSeverity": {
                "enum": [
                    "CRITICAL",
                    "HIGH",
                    "MEDIUM",
                    "LOW",
                    "UNSPECIFIED"
                ],
                "type": "string"
            },
            "AssociationDescription": {
                "description": "Describes the parameters for a document.",
                "properties": {
                    "AssociationId": {
                        "description": "The association ID.",
                        "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                        "type": "string"
                    },
                    "AssociationName": {
                        "description": "The association name.",
                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                        "type": "string"
                    },
                    "AssociationVersion": {
                        "description": "The association version.",
                        "pattern": "([$]LATEST)|([1-9][0-9]*)",
                        "type": "string"
                    },
                    "AutomationTargetParameterName": {
                        "description": "Specify the target for the association. This target is required for associations that use an Automation document and target resources by using rate controls.",
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string"
                    },
                    "ComplianceSeverity": {
                        "description": "The severity level that is assigned to the association.",
                        "enum": [
                            "CRITICAL",
                            "HIGH",
                            "MEDIUM",
                            "LOW",
                            "UNSPECIFIED"
                        ],
                        "type": "string"
                    },
                    "Date": {
                        "description": "The date when the association was made.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "DocumentVersion": {
                        "description": "The document version.",
                        "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                        "type": "string"
                    },
                    "InstanceId": {
                        "description": "The ID of the instance.",
                        "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                        "type": "string"
                    },
                    "LastExecutionDate": {
                        "description": "The date on which the association was last run.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "LastSuccessfulExecutionDate": {
                        "description": "The last date on which the association was successfully run.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "LastUpdateAssociationDate": {
                        "description": "The date when the association was last updated.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "MaxConcurrency": {
                        "description": "<p>The maximum number of targets allowed to run the association at the same time. You can specify a number, for example 10, or a percentage of the target set, for example 10%. The default value is 100%, which means all targets run the association at the same time.</p> <p>If a new instance starts and attempts to execute an association while Systems Manager is executing MaxConcurrency associations, the association is allowed to run. During the next association interval, the new instance will process its association within the limit specified for MaxConcurrency.</p>",
                        "maxLength": 7,
                        "minLength": 1,
                        "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                        "type": "string"
                    },
                    "MaxErrors": {
                        "description": "<p>The number of errors that are allowed before the system stops sending requests to run the association on additional targets. You can specify either an absolute number of errors, for example 10, or a percentage of the target set, for example 10%. If you specify 3, for example, the system stops sending requests when the fourth error is received. If you specify 0, then the system stops sending requests after the first error is returned. If you run an association on 50 instances and set MaxError to 10%, then the system stops sending the request when the sixth error is received.</p> <p>Executions that are already running an association when MaxErrors is reached are allowed to complete, but some of these executions may fail as well. If you need to ensure that there won't be more than max-errors failed executions, set MaxConcurrency to 1 so that executions proceed one at a time.</p>",
                        "maxLength": 7,
                        "minLength": 1,
                        "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The name of the Systems Manager document.",
                        "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                        "type": "string"
                    },
                    "OutputLocation": {
                        "description": "An Amazon S3 bucket where you want to store the output details of the request.",
                        "properties": {
                            "S3Location": {
                                "description": "An Amazon S3 bucket where you want to store the results of this request.",
                                "properties": {
                                    "OutputS3BucketName": {
                                        "description": "The name of the Amazon S3 bucket.",
                                        "maxLength": 63,
                                        "minLength": 3,
                                        "type": "string"
                                    },
                                    "OutputS3KeyPrefix": {
                                        "description": "The Amazon S3 bucket subfolder.",
                                        "maxLength": 500,
                                        "type": "string"
                                    },
                                    "OutputS3Region": {
                                        "description": "(Deprecated) You can no longer specify this parameter. The system ignores it. Instead, Systems Manager automatically determines the Amazon S3 bucket region.",
                                        "maxLength": 20,
                                        "minLength": 3,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    },
                    "Overview": {
                        "description": "Information about the association.",
                        "properties": {
                            "AssociationStatusAggregatedCount": {
                                "description": "Returns the number of targets for the association status. For example, if you created an association with two instances, and one of them was successful, this would return the count of instances by status.",
                                "items": {
                                    "properties": {
                                        "key": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "DetailedStatus": {
                                "description": "A detailed status of the association.",
                                "type": "string"
                            },
                            "Status": {
                                "description": "The status of the association. Status can be: Pending, Success, or Failed.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "Parameters": {
                        "description": "A description of the parameters for a document. ",
                        "items": {
                            "properties": {
                                "key": {
                                    "type": "string"
                                },
                                "value": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "ScheduleExpression": {
                        "description": "A cron expression that specifies a schedule when the association runs.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Status": {
                        "description": "The association status.",
                        "properties": {
                            "AdditionalInfo": {
                                "description": "A user-defined string.",
                                "maxLength": 1024,
                                "type": "string"
                            },
                            "Date": {
                                "description": "The date when the status changed.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "Message": {
                                "description": "The reason for the status.",
                                "maxLength": 1024,
                                "minLength": 1,
                                "type": "string"
                            },
                            "Name": {
                                "description": "The status.",
                                "enum": [
                                    "Pending",
                                    "Success",
                                    "Failed"
                                ],
                                "type": "string"
                            }
                        },
                        "required": [
                            "Date",
                            "Name",
                            "Message"
                        ],
                        "type": "object"
                    },
                    "Targets": {
                        "description": "The instances targeted by the request. ",
                        "items": {
                            "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                            "properties": {
                                "Key": {
                                    "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "maxItems": 50,
                                    "minItems": 0,
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 5,
                        "minItems": 0,
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "AssociationDescriptionList": {
                "items": {
                    "description": "Describes the parameters for a document.",
                    "properties": {
                        "AssociationId": {
                            "description": "The association ID.",
                            "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                            "type": "string"
                        },
                        "AssociationName": {
                            "description": "The association name.",
                            "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                            "type": "string"
                        },
                        "AssociationVersion": {
                            "description": "The association version.",
                            "pattern": "([$]LATEST)|([1-9][0-9]*)",
                            "type": "string"
                        },
                        "AutomationTargetParameterName": {
                            "description": "Specify the target for the association. This target is required for associations that use an Automation document and target resources by using rate controls.",
                            "maxLength": 50,
                            "minLength": 1,
                            "type": "string"
                        },
                        "ComplianceSeverity": {
                            "description": "The severity level that is assigned to the association.",
                            "enum": [
                                "CRITICAL",
                                "HIGH",
                                "MEDIUM",
                                "LOW",
                                "UNSPECIFIED"
                            ],
                            "type": "string"
                        },
                        "Date": {
                            "description": "The date when the association was made.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "DocumentVersion": {
                            "description": "The document version.",
                            "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                            "type": "string"
                        },
                        "InstanceId": {
                            "description": "The ID of the instance.",
                            "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                            "type": "string"
                        },
                        "LastExecutionDate": {
                            "description": "The date on which the association was last run.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "LastSuccessfulExecutionDate": {
                            "description": "The last date on which the association was successfully run.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "LastUpdateAssociationDate": {
                            "description": "The date when the association was last updated.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "MaxConcurrency": {
                            "description": "<p>The maximum number of targets allowed to run the association at the same time. You can specify a number, for example 10, or a percentage of the target set, for example 10%. The default value is 100%, which means all targets run the association at the same time.</p> <p>If a new instance starts and attempts to execute an association while Systems Manager is executing MaxConcurrency associations, the association is allowed to run. During the next association interval, the new instance will process its association within the limit specified for MaxConcurrency.</p>",
                            "maxLength": 7,
                            "minLength": 1,
                            "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                            "type": "string"
                        },
                        "MaxErrors": {
                            "description": "<p>The number of errors that are allowed before the system stops sending requests to run the association on additional targets. You can specify either an absolute number of errors, for example 10, or a percentage of the target set, for example 10%. If you specify 3, for example, the system stops sending requests when the fourth error is received. If you specify 0, then the system stops sending requests after the first error is returned. If you run an association on 50 instances and set MaxError to 10%, then the system stops sending the request when the sixth error is received.</p> <p>Executions that are already running an association when MaxErrors is reached are allowed to complete, but some of these executions may fail as well. If you need to ensure that there won't be more than max-errors failed executions, set MaxConcurrency to 1 so that executions proceed one at a time.</p>",
                            "maxLength": 7,
                            "minLength": 1,
                            "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                            "type": "string"
                        },
                        "Name": {
                            "description": "The name of the Systems Manager document.",
                            "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                            "type": "string"
                        },
                        "OutputLocation": {
                            "description": "An Amazon S3 bucket where you want to store the output details of the request.",
                            "properties": {
                                "S3Location": {
                                    "description": "An Amazon S3 bucket where you want to store the results of this request.",
                                    "properties": {
                                        "OutputS3BucketName": {
                                            "description": "The name of the Amazon S3 bucket.",
                                            "maxLength": 63,
                                            "minLength": 3,
                                            "type": "string"
                                        },
                                        "OutputS3KeyPrefix": {
                                            "description": "The Amazon S3 bucket subfolder.",
                                            "maxLength": 500,
                                            "type": "string"
                                        },
                                        "OutputS3Region": {
                                            "description": "(Deprecated) You can no longer specify this parameter. The system ignores it. Instead, Systems Manager automatically determines the Amazon S3 bucket region.",
                                            "maxLength": 20,
                                            "minLength": 3,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "Overview": {
                            "description": "Information about the association.",
                            "properties": {
                                "AssociationStatusAggregatedCount": {
                                    "description": "Returns the number of targets for the association status. For example, if you created an association with two instances, and one of them was successful, this would return the count of instances by status.",
                                    "items": {
                                        "properties": {
                                            "key": {
                                                "type": "string"
                                            },
                                            "value": {
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "DetailedStatus": {
                                    "description": "A detailed status of the association.",
                                    "type": "string"
                                },
                                "Status": {
                                    "description": "The status of the association. Status can be: Pending, Success, or Failed.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "Parameters": {
                            "description": "A description of the parameters for a document. ",
                            "items": {
                                "properties": {
                                    "key": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "ScheduleExpression": {
                            "description": "A cron expression that specifies a schedule when the association runs.",
                            "maxLength": 256,
                            "minLength": 1,
                            "type": "string"
                        },
                        "Status": {
                            "description": "The association status.",
                            "properties": {
                                "AdditionalInfo": {
                                    "description": "A user-defined string.",
                                    "maxLength": 1024,
                                    "type": "string"
                                },
                                "Date": {
                                    "description": "The date when the status changed.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "Message": {
                                    "description": "The reason for the status.",
                                    "maxLength": 1024,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "The status.",
                                    "enum": [
                                        "Pending",
                                        "Success",
                                        "Failed"
                                    ],
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Date",
                                "Name",
                                "Message"
                            ],
                            "type": "object"
                        },
                        "Targets": {
                            "description": "The instances targeted by the request. ",
                            "items": {
                                "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                                "properties": {
                                    "Key": {
                                        "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                        "type": "string"
                                    },
                                    "Values": {
                                        "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "maxItems": 50,
                                        "minItems": 0,
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            },
                            "maxItems": 5,
                            "minItems": 0,
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "AssociationDoesNotExist": {},
            "AssociationExecution": {
                "description": "Includes information about the specified association.",
                "properties": {
                    "AssociationId": {
                        "description": "The association ID.",
                        "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                        "type": "string"
                    },
                    "AssociationVersion": {
                        "description": "The association version.",
                        "pattern": "([$]LATEST)|([1-9][0-9]*)",
                        "type": "string"
                    },
                    "CreatedTime": {
                        "description": "The time the execution started.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "DetailedStatus": {
                        "description": "Detailed status information about the execution.",
                        "type": "string"
                    },
                    "ExecutionId": {
                        "description": "The execution ID for the association. If the association does not run at intervals or according to a schedule, then the ExecutionID is the same as the AssociationID.",
                        "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                        "type": "string"
                    },
                    "LastExecutionDate": {
                        "description": "The date of the last execution.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "ResourceCountByStatus": {
                        "description": "An aggregate status of the resources in the execution based on the status type.",
                        "type": "string"
                    },
                    "Status": {
                        "description": "The status of the association execution.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AssociationExecutionDoesNotExist": {},
            "AssociationExecutionFilter": {
                "description": "Filters used in the request.",
                "properties": {
                    "Key": {
                        "description": "The key value used in the request.",
                        "enum": [
                            "ExecutionId",
                            "Status",
                            "CreatedTime"
                        ],
                        "type": "string"
                    },
                    "Type": {
                        "description": "The filter type specified in the request.",
                        "enum": [
                            "EQUAL",
                            "LESS_THAN",
                            "GREATER_THAN"
                        ],
                        "type": "string"
                    },
                    "Value": {
                        "description": "The value specified for the key.",
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "Key",
                    "Value",
                    "Type"
                ],
                "type": "object"
            },
            "AssociationExecutionFilterKey": {
                "enum": [
                    "ExecutionId",
                    "Status",
                    "CreatedTime"
                ],
                "type": "string"
            },
            "AssociationExecutionFilterList": {
                "items": {
                    "description": "Filters used in the request.",
                    "properties": {
                        "Key": {
                            "description": "The key value used in the request.",
                            "enum": [
                                "ExecutionId",
                                "Status",
                                "CreatedTime"
                            ],
                            "type": "string"
                        },
                        "Type": {
                            "description": "The filter type specified in the request.",
                            "enum": [
                                "EQUAL",
                                "LESS_THAN",
                                "GREATER_THAN"
                            ],
                            "type": "string"
                        },
                        "Value": {
                            "description": "The value specified for the key.",
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    "required": [
                        "Key",
                        "Value",
                        "Type"
                    ],
                    "type": "object"
                },
                "minItems": 1,
                "type": "array"
            },
            "AssociationExecutionFilterValue": {
                "minLength": 1,
                "type": "string"
            },
            "AssociationExecutionId": {
                "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                "type": "string"
            },
            "AssociationExecutionTarget": {
                "description": "Includes information about the specified association execution.",
                "properties": {
                    "AssociationId": {
                        "description": "The association ID.",
                        "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                        "type": "string"
                    },
                    "AssociationVersion": {
                        "description": "The association version.",
                        "pattern": "([$]LATEST)|([1-9][0-9]*)",
                        "type": "string"
                    },
                    "DetailedStatus": {
                        "description": "Detailed information about the execution status.",
                        "type": "string"
                    },
                    "ExecutionId": {
                        "description": "The execution ID. If the association does not run at intervals or according to a schedule, then the ExecutionID is the same as the AssociationID.",
                        "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                        "type": "string"
                    },
                    "LastExecutionDate": {
                        "description": "The date of the last execution.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "OutputSource": {
                        "description": "The location where the association details are saved.",
                        "properties": {
                            "OutputSourceId": {
                                "description": "The ID of the output source, for example the URL of an Amazon S3 bucket.",
                                "maxLength": 36,
                                "minLength": 36,
                                "type": "string"
                            },
                            "OutputSourceType": {
                                "description": "The type of source where the association execution details are stored, for example, Amazon S3.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "ResourceId": {
                        "description": "The resource ID, for example, the instance ID where the association ran.",
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string"
                    },
                    "ResourceType": {
                        "description": "The resource type, for example, instance.",
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Status": {
                        "description": "The association execution status.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AssociationExecutionTargetsFilter": {
                "description": "Filters for the association execution.",
                "properties": {
                    "Key": {
                        "description": "The key value used in the request.",
                        "enum": [
                            "Status",
                            "ResourceId",
                            "ResourceType"
                        ],
                        "type": "string"
                    },
                    "Value": {
                        "description": "The value specified for the key.",
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "Key",
                    "Value"
                ],
                "type": "object"
            },
            "AssociationExecutionTargetsFilterKey": {
                "enum": [
                    "Status",
                    "ResourceId",
                    "ResourceType"
                ],
                "type": "string"
            },
            "AssociationExecutionTargetsFilterList": {
                "items": {
                    "description": "Filters for the association execution.",
                    "properties": {
                        "Key": {
                            "description": "The key value used in the request.",
                            "enum": [
                                "Status",
                                "ResourceId",
                                "ResourceType"
                            ],
                            "type": "string"
                        },
                        "Value": {
                            "description": "The value specified for the key.",
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    "required": [
                        "Key",
                        "Value"
                    ],
                    "type": "object"
                },
                "minItems": 1,
                "type": "array"
            },
            "AssociationExecutionTargetsFilterValue": {
                "minLength": 1,
                "type": "string"
            },
            "AssociationExecutionTargetsList": {
                "items": {
                    "description": "Includes information about the specified association execution.",
                    "properties": {
                        "AssociationId": {
                            "description": "The association ID.",
                            "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                            "type": "string"
                        },
                        "AssociationVersion": {
                            "description": "The association version.",
                            "pattern": "([$]LATEST)|([1-9][0-9]*)",
                            "type": "string"
                        },
                        "DetailedStatus": {
                            "description": "Detailed information about the execution status.",
                            "type": "string"
                        },
                        "ExecutionId": {
                            "description": "The execution ID. If the association does not run at intervals or according to a schedule, then the ExecutionID is the same as the AssociationID.",
                            "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                            "type": "string"
                        },
                        "LastExecutionDate": {
                            "description": "The date of the last execution.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "OutputSource": {
                            "description": "The location where the association details are saved.",
                            "properties": {
                                "OutputSourceId": {
                                    "description": "The ID of the output source, for example the URL of an Amazon S3 bucket.",
                                    "maxLength": 36,
                                    "minLength": 36,
                                    "type": "string"
                                },
                                "OutputSourceType": {
                                    "description": "The type of source where the association execution details are stored, for example, Amazon S3.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "ResourceId": {
                            "description": "The resource ID, for example, the instance ID where the association ran.",
                            "maxLength": 100,
                            "minLength": 1,
                            "type": "string"
                        },
                        "ResourceType": {
                            "description": "The resource type, for example, instance.",
                            "maxLength": 50,
                            "minLength": 1,
                            "type": "string"
                        },
                        "Status": {
                            "description": "The association execution status.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "AssociationExecutionsList": {
                "items": {
                    "description": "Includes information about the specified association.",
                    "properties": {
                        "AssociationId": {
                            "description": "The association ID.",
                            "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                            "type": "string"
                        },
                        "AssociationVersion": {
                            "description": "The association version.",
                            "pattern": "([$]LATEST)|([1-9][0-9]*)",
                            "type": "string"
                        },
                        "CreatedTime": {
                            "description": "The time the execution started.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "DetailedStatus": {
                            "description": "Detailed status information about the execution.",
                            "type": "string"
                        },
                        "ExecutionId": {
                            "description": "The execution ID for the association. If the association does not run at intervals or according to a schedule, then the ExecutionID is the same as the AssociationID.",
                            "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                            "type": "string"
                        },
                        "LastExecutionDate": {
                            "description": "The date of the last execution.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "ResourceCountByStatus": {
                            "description": "An aggregate status of the resources in the execution based on the status type.",
                            "type": "string"
                        },
                        "Status": {
                            "description": "The status of the association execution.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "AssociationFilter": {
                "description": "Describes a filter.",
                "properties": {
                    "key": {
                        "description": "The name of the filter.",
                        "enum": [
                            "InstanceId",
                            "Name",
                            "AssociationId",
                            "AssociationStatusName",
                            "LastExecutedBefore",
                            "LastExecutedAfter",
                            "AssociationName"
                        ],
                        "type": "string"
                    },
                    "value": {
                        "description": "The filter value.",
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "key",
                    "value"
                ],
                "type": "object"
            },
            "AssociationFilterKey": {
                "enum": [
                    "InstanceId",
                    "Name",
                    "AssociationId",
                    "AssociationStatusName",
                    "LastExecutedBefore",
                    "LastExecutedAfter",
                    "AssociationName"
                ],
                "type": "string"
            },
            "AssociationFilterList": {
                "items": {
                    "description": "Describes a filter.",
                    "properties": {
                        "key": {
                            "description": "The name of the filter.",
                            "enum": [
                                "InstanceId",
                                "Name",
                                "AssociationId",
                                "AssociationStatusName",
                                "LastExecutedBefore",
                                "LastExecutedAfter",
                                "AssociationName"
                            ],
                            "type": "string"
                        },
                        "value": {
                            "description": "The filter value.",
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    "required": [
                        "key",
                        "value"
                    ],
                    "type": "object"
                },
                "minItems": 1,
                "type": "array"
            },
            "AssociationFilterOperatorType": {
                "enum": [
                    "EQUAL",
                    "LESS_THAN",
                    "GREATER_THAN"
                ],
                "type": "string"
            },
            "AssociationFilterValue": {
                "minLength": 1,
                "type": "string"
            },
            "AssociationId": {
                "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                "type": "string"
            },
            "AssociationIdList": {
                "items": {
                    "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                    "type": "string"
                },
                "maxItems": 10,
                "minItems": 1,
                "type": "array"
            },
            "AssociationLimitExceeded": {},
            "AssociationList": {
                "items": {
                    "description": "Describes an association of a Systems Manager document and an instance.",
                    "properties": {
                        "AssociationId": {
                            "description": "The ID created by the system when you create an association. An association is a binding between a document and a set of targets with a schedule.",
                            "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                            "type": "string"
                        },
                        "AssociationName": {
                            "description": "The association name.",
                            "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                            "type": "string"
                        },
                        "AssociationVersion": {
                            "description": "The association version.",
                            "pattern": "([$]LATEST)|([1-9][0-9]*)",
                            "type": "string"
                        },
                        "DocumentVersion": {
                            "description": "The version of the document used in the association.",
                            "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                            "type": "string"
                        },
                        "InstanceId": {
                            "description": "The ID of the instance.",
                            "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                            "type": "string"
                        },
                        "LastExecutionDate": {
                            "description": "The date on which the association was last run.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "Name": {
                            "description": "The name of the Systems Manager document.",
                            "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                            "type": "string"
                        },
                        "Overview": {
                            "description": "Information about the association.",
                            "properties": {
                                "AssociationStatusAggregatedCount": {
                                    "description": "Returns the number of targets for the association status. For example, if you created an association with two instances, and one of them was successful, this would return the count of instances by status.",
                                    "items": {
                                        "properties": {
                                            "key": {
                                                "type": "string"
                                            },
                                            "value": {
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "DetailedStatus": {
                                    "description": "A detailed status of the association.",
                                    "type": "string"
                                },
                                "Status": {
                                    "description": "The status of the association. Status can be: Pending, Success, or Failed.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "ScheduleExpression": {
                            "description": "A cron expression that specifies a schedule when the association runs.",
                            "maxLength": 256,
                            "minLength": 1,
                            "type": "string"
                        },
                        "Targets": {
                            "description": "The instances targeted by the request to create an association. ",
                            "items": {
                                "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                                "properties": {
                                    "Key": {
                                        "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                        "type": "string"
                                    },
                                    "Values": {
                                        "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "maxItems": 50,
                                        "minItems": 0,
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            },
                            "maxItems": 5,
                            "minItems": 0,
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "AssociationName": {
                "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                "type": "string"
            },
            "AssociationOverview": {
                "description": "Information about the association.",
                "properties": {
                    "AssociationStatusAggregatedCount": {
                        "description": "Returns the number of targets for the association status. For example, if you created an association with two instances, and one of them was successful, this would return the count of instances by status.",
                        "items": {
                            "properties": {
                                "key": {
                                    "type": "string"
                                },
                                "value": {
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "DetailedStatus": {
                        "description": "A detailed status of the association.",
                        "type": "string"
                    },
                    "Status": {
                        "description": "The status of the association. Status can be: Pending, Success, or Failed.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AssociationResourceId": {
                "maxLength": 100,
                "minLength": 1,
                "type": "string"
            },
            "AssociationResourceType": {
                "maxLength": 50,
                "minLength": 1,
                "type": "string"
            },
            "AssociationStatus": {
                "description": "Describes an association status.",
                "properties": {
                    "AdditionalInfo": {
                        "description": "A user-defined string.",
                        "maxLength": 1024,
                        "type": "string"
                    },
                    "Date": {
                        "description": "The date when the status changed.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "Message": {
                        "description": "The reason for the status.",
                        "maxLength": 1024,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Name": {
                        "description": "The status.",
                        "enum": [
                            "Pending",
                            "Success",
                            "Failed"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "Date",
                    "Name",
                    "Message"
                ],
                "type": "object"
            },
            "AssociationStatusAggregatedCount": {
                "items": {
                    "properties": {
                        "key": {
                            "type": "string"
                        },
                        "value": {
                            "type": "integer"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "AssociationStatusName": {
                "enum": [
                    "Pending",
                    "Success",
                    "Failed"
                ],
                "type": "string"
            },
            "AssociationVersion": {
                "pattern": "([$]LATEST)|([1-9][0-9]*)",
                "type": "string"
            },
            "AssociationVersionInfo": {
                "description": "Information about the association version.",
                "properties": {
                    "AssociationId": {
                        "description": "The ID created by the system when the association was created.",
                        "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                        "type": "string"
                    },
                    "AssociationName": {
                        "description": "The name specified for the association version when the association version was created.",
                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                        "type": "string"
                    },
                    "AssociationVersion": {
                        "description": "The association version.",
                        "pattern": "([$]LATEST)|([1-9][0-9]*)",
                        "type": "string"
                    },
                    "ComplianceSeverity": {
                        "description": "The severity level that is assigned to the association.",
                        "enum": [
                            "CRITICAL",
                            "HIGH",
                            "MEDIUM",
                            "LOW",
                            "UNSPECIFIED"
                        ],
                        "type": "string"
                    },
                    "CreatedDate": {
                        "description": "The date the association version was created.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "DocumentVersion": {
                        "description": "The version of a Systems Manager document used when the association version was created.",
                        "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                        "type": "string"
                    },
                    "MaxConcurrency": {
                        "description": "<p>The maximum number of targets allowed to run the association at the same time. You can specify a number, for example 10, or a percentage of the target set, for example 10%. The default value is 100%, which means all targets run the association at the same time.</p> <p>If a new instance starts and attempts to execute an association while Systems Manager is executing MaxConcurrency associations, the association is allowed to run. During the next association interval, the new instance will process its association within the limit specified for MaxConcurrency.</p>",
                        "maxLength": 7,
                        "minLength": 1,
                        "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                        "type": "string"
                    },
                    "MaxErrors": {
                        "description": "<p>The number of errors that are allowed before the system stops sending requests to run the association on additional targets. You can specify either an absolute number of errors, for example 10, or a percentage of the target set, for example 10%. If you specify 3, for example, the system stops sending requests when the fourth error is received. If you specify 0, then the system stops sending requests after the first error is returned. If you run an association on 50 instances and set MaxError to 10%, then the system stops sending the request when the sixth error is received.</p> <p>Executions that are already running an association when MaxErrors is reached are allowed to complete, but some of these executions may fail as well. If you need to ensure that there won't be more than max-errors failed executions, set MaxConcurrency to 1 so that executions proceed one at a time.</p>",
                        "maxLength": 7,
                        "minLength": 1,
                        "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The name specified when the association was created.",
                        "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                        "type": "string"
                    },
                    "OutputLocation": {
                        "description": "The location in Amazon S3 specified for the association when the association version was created.",
                        "properties": {
                            "S3Location": {
                                "description": "An Amazon S3 bucket where you want to store the results of this request.",
                                "properties": {
                                    "OutputS3BucketName": {
                                        "description": "The name of the Amazon S3 bucket.",
                                        "maxLength": 63,
                                        "minLength": 3,
                                        "type": "string"
                                    },
                                    "OutputS3KeyPrefix": {
                                        "description": "The Amazon S3 bucket subfolder.",
                                        "maxLength": 500,
                                        "type": "string"
                                    },
                                    "OutputS3Region": {
                                        "description": "(Deprecated) You can no longer specify this parameter. The system ignores it. Instead, Systems Manager automatically determines the Amazon S3 bucket region.",
                                        "maxLength": 20,
                                        "minLength": 3,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    },
                    "Parameters": {
                        "description": "Parameters specified when the association version was created.",
                        "items": {
                            "properties": {
                                "key": {
                                    "type": "string"
                                },
                                "value": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "ScheduleExpression": {
                        "description": "The cron or rate schedule specified for the association when the association version was created.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Targets": {
                        "description": "The targets specified for the association when the association version was created. ",
                        "items": {
                            "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                            "properties": {
                                "Key": {
                                    "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "maxItems": 50,
                                    "minItems": 0,
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 5,
                        "minItems": 0,
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "AssociationVersionLimitExceeded": {},
            "AssociationVersionList": {
                "items": {
                    "description": "Information about the association version.",
                    "properties": {
                        "AssociationId": {
                            "description": "The ID created by the system when the association was created.",
                            "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                            "type": "string"
                        },
                        "AssociationName": {
                            "description": "The name specified for the association version when the association version was created.",
                            "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                            "type": "string"
                        },
                        "AssociationVersion": {
                            "description": "The association version.",
                            "pattern": "([$]LATEST)|([1-9][0-9]*)",
                            "type": "string"
                        },
                        "ComplianceSeverity": {
                            "description": "The severity level that is assigned to the association.",
                            "enum": [
                                "CRITICAL",
                                "HIGH",
                                "MEDIUM",
                                "LOW",
                                "UNSPECIFIED"
                            ],
                            "type": "string"
                        },
                        "CreatedDate": {
                            "description": "The date the association version was created.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "DocumentVersion": {
                            "description": "The version of a Systems Manager document used when the association version was created.",
                            "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                            "type": "string"
                        },
                        "MaxConcurrency": {
                            "description": "<p>The maximum number of targets allowed to run the association at the same time. You can specify a number, for example 10, or a percentage of the target set, for example 10%. The default value is 100%, which means all targets run the association at the same time.</p> <p>If a new instance starts and attempts to execute an association while Systems Manager is executing MaxConcurrency associations, the association is allowed to run. During the next association interval, the new instance will process its association within the limit specified for MaxConcurrency.</p>",
                            "maxLength": 7,
                            "minLength": 1,
                            "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                            "type": "string"
                        },
                        "MaxErrors": {
                            "description": "<p>The number of errors that are allowed before the system stops sending requests to run the association on additional targets. You can specify either an absolute number of errors, for example 10, or a percentage of the target set, for example 10%. If you specify 3, for example, the system stops sending requests when the fourth error is received. If you specify 0, then the system stops sending requests after the first error is returned. If you run an association on 50 instances and set MaxError to 10%, then the system stops sending the request when the sixth error is received.</p> <p>Executions that are already running an association when MaxErrors is reached are allowed to complete, but some of these executions may fail as well. If you need to ensure that there won't be more than max-errors failed executions, set MaxConcurrency to 1 so that executions proceed one at a time.</p>",
                            "maxLength": 7,
                            "minLength": 1,
                            "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                            "type": "string"
                        },
                        "Name": {
                            "description": "The name specified when the association was created.",
                            "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                            "type": "string"
                        },
                        "OutputLocation": {
                            "description": "The location in Amazon S3 specified for the association when the association version was created.",
                            "properties": {
                                "S3Location": {
                                    "description": "An Amazon S3 bucket where you want to store the results of this request.",
                                    "properties": {
                                        "OutputS3BucketName": {
                                            "description": "The name of the Amazon S3 bucket.",
                                            "maxLength": 63,
                                            "minLength": 3,
                                            "type": "string"
                                        },
                                        "OutputS3KeyPrefix": {
                                            "description": "The Amazon S3 bucket subfolder.",
                                            "maxLength": 500,
                                            "type": "string"
                                        },
                                        "OutputS3Region": {
                                            "description": "(Deprecated) You can no longer specify this parameter. The system ignores it. Instead, Systems Manager automatically determines the Amazon S3 bucket region.",
                                            "maxLength": 20,
                                            "minLength": 3,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "Parameters": {
                            "description": "Parameters specified when the association version was created.",
                            "items": {
                                "properties": {
                                    "key": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "ScheduleExpression": {
                            "description": "The cron or rate schedule specified for the association when the association version was created.",
                            "maxLength": 256,
                            "minLength": 1,
                            "type": "string"
                        },
                        "Targets": {
                            "description": "The targets specified for the association when the association version was created. ",
                            "items": {
                                "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                                "properties": {
                                    "Key": {
                                        "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                        "type": "string"
                                    },
                                    "Values": {
                                        "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "maxItems": 50,
                                        "minItems": 0,
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            },
                            "maxItems": 5,
                            "minItems": 0,
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "minItems": 1,
                "type": "array"
            },
            "AttachmentContent": {
                "description": "A structure that includes attributes that describe a document attachment.",
                "properties": {
                    "Hash": {
                        "description": "The cryptographic hash value of the document content.",
                        "maxLength": 256,
                        "type": "string"
                    },
                    "HashType": {
                        "description": "The hash algorithm used to calculate the hash value.",
                        "enum": [
                            "Sha256"
                        ],
                        "type": "string"
                    },
                    "Name": {
                        "description": "The name of an attachment.",
                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                        "type": "string"
                    },
                    "Size": {
                        "description": "The size of an attachment in bytes.",
                        "type": "integer"
                    },
                    "Url": {
                        "description": "The URL location of the attachment content.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AttachmentContentList": {
                "items": {
                    "description": "A structure that includes attributes that describe a document attachment.",
                    "properties": {
                        "Hash": {
                            "description": "The cryptographic hash value of the document content.",
                            "maxLength": 256,
                            "type": "string"
                        },
                        "HashType": {
                            "description": "The hash algorithm used to calculate the hash value.",
                            "enum": [
                                "Sha256"
                            ],
                            "type": "string"
                        },
                        "Name": {
                            "description": "The name of an attachment.",
                            "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                            "type": "string"
                        },
                        "Size": {
                            "description": "The size of an attachment in bytes.",
                            "type": "integer"
                        },
                        "Url": {
                            "description": "The URL location of the attachment content.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "AttachmentHash": {
                "maxLength": 256,
                "type": "string"
            },
            "AttachmentHashType": {
                "enum": [
                    "Sha256"
                ],
                "type": "string"
            },
            "AttachmentInformation": {
                "description": "An attribute of an attachment, such as the attachment name.",
                "properties": {
                    "Name": {
                        "description": "The name of the attachment.",
                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AttachmentInformationList": {
                "items": {
                    "description": "An attribute of an attachment, such as the attachment name.",
                    "properties": {
                        "Name": {
                            "description": "The name of the attachment.",
                            "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "AttachmentName": {
                "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                "type": "string"
            },
            "AttachmentUrl": {
                "type": "string"
            },
            "AttachmentsSource": {
                "description": "A key and value pair that identifies the location of an attachment to a document.",
                "properties": {
                    "Key": {
                        "description": "The key of a key and value pair that identifies the location of an attachment to a document.",
                        "enum": [
                            "SourceUrl"
                        ],
                        "type": "string"
                    },
                    "Values": {
                        "description": "The URL of the location of a document attachment, such as the URL of an Amazon S3 bucket.",
                        "items": {
                            "maxLength": 1024,
                            "minLength": 1,
                            "type": "string"
                        },
                        "maxItems": 1,
                        "minItems": 1,
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "AttachmentsSourceKey": {
                "enum": [
                    "SourceUrl"
                ],
                "type": "string"
            },
            "AttachmentsSourceList": {
                "items": {
                    "description": "A key and value pair that identifies the location of an attachment to a document.",
                    "properties": {
                        "Key": {
                            "description": "The key of a key and value pair that identifies the location of an attachment to a document.",
                            "enum": [
                                "SourceUrl"
                            ],
                            "type": "string"
                        },
                        "Values": {
                            "description": "The URL of the location of a document attachment, such as the URL of an Amazon S3 bucket.",
                            "items": {
                                "maxLength": 1024,
                                "minLength": 1,
                                "type": "string"
                            },
                            "maxItems": 1,
                            "minItems": 1,
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "maxItems": 1,
                "minItems": 0,
                "type": "array"
            },
            "AttachmentsSourceValue": {
                "maxLength": 1024,
                "minLength": 1,
                "type": "string"
            },
            "AttachmentsSourceValues": {
                "items": {
                    "maxLength": 1024,
                    "minLength": 1,
                    "type": "string"
                },
                "maxItems": 1,
                "minItems": 1,
                "type": "array"
            },
            "AttributeName": {
                "maxLength": 64,
                "minLength": 1,
                "type": "string"
            },
            "AttributeValue": {
                "maxLength": 4096,
                "minLength": 0,
                "type": "string"
            },
            "AutomationActionName": {
                "pattern": "^aws:[a-zA-Z]{3,25}$",
                "type": "string"
            },
            "AutomationDefinitionNotFoundException": {},
            "AutomationDefinitionVersionNotFoundException": {},
            "AutomationExecution": {
                "description": "Detailed information about the current state of an individual Automation execution.",
                "properties": {
                    "AutomationExecutionId": {
                        "description": "The execution ID.",
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string"
                    },
                    "AutomationExecutionStatus": {
                        "description": "The execution status of the Automation.",
                        "enum": [
                            "Pending",
                            "InProgress",
                            "Waiting",
                            "Success",
                            "TimedOut",
                            "Cancelling",
                            "Cancelled",
                            "Failed"
                        ],
                        "type": "string"
                    },
                    "CurrentAction": {
                        "description": "The action of the currently executing step.",
                        "type": "string"
                    },
                    "CurrentStepName": {
                        "description": "The name of the currently executing step.",
                        "type": "string"
                    },
                    "DocumentName": {
                        "description": "The name of the Automation document used during the execution.",
                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                        "type": "string"
                    },
                    "DocumentVersion": {
                        "description": "The version of the document to use during execution.",
                        "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                        "type": "string"
                    },
                    "ExecutedBy": {
                        "description": "The Amazon Resource Name (ARN) of the user who executed the automation.",
                        "type": "string"
                    },
                    "ExecutionEndTime": {
                        "description": "The time the execution finished.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "ExecutionStartTime": {
                        "description": "The time the execution started.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "FailureMessage": {
                        "description": "A message describing why an execution has failed, if the status is set to Failed.",
                        "type": "string"
                    },
                    "MaxConcurrency": {
                        "description": "The MaxConcurrency value specified by the user when the execution started.",
                        "maxLength": 7,
                        "minLength": 1,
                        "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                        "type": "string"
                    },
                    "MaxErrors": {
                        "description": "The MaxErrors value specified by the user when the execution started.",
                        "maxLength": 7,
                        "minLength": 1,
                        "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                        "type": "string"
                    },
                    "Mode": {
                        "description": "The automation execution mode.",
                        "enum": [
                            "Auto",
                            "Interactive"
                        ],
                        "type": "string"
                    },
                    "Outputs": {
                        "description": "The list of execution outputs as defined in the automation document.",
                        "items": {
                            "properties": {
                                "key": {
                                    "maxLength": 30,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "value": {
                                    "items": {
                                        "maxLength": 512,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "maxItems": 10,
                                    "minItems": 0,
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 200,
                        "minItems": 1,
                        "type": "array"
                    },
                    "Parameters": {
                        "description": "The key-value map of execution parameters, which were supplied when calling StartAutomationExecution.",
                        "items": {
                            "properties": {
                                "key": {
                                    "maxLength": 30,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "value": {
                                    "items": {
                                        "maxLength": 512,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "maxItems": 10,
                                    "minItems": 0,
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 200,
                        "minItems": 1,
                        "type": "array"
                    },
                    "ParentAutomationExecutionId": {
                        "description": "The AutomationExecutionId of the parent automation.",
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string"
                    },
                    "ProgressCounters": {
                        "description": "An aggregate of step execution statuses displayed in the AWS Console for a multi-Region and multi-account Automation execution.",
                        "properties": {
                            "CancelledSteps": {
                                "description": "The total number of steps that the system cancelled in all specified AWS Regions and accounts for the current Automation execution.",
                                "type": "integer"
                            },
                            "FailedSteps": {
                                "description": "The total number of steps that failed to execute in all specified AWS Regions and accounts for the current Automation execution.",
                                "type": "integer"
                            },
                            "SuccessSteps": {
                                "description": "The total number of steps that successfully completed in all specified AWS Regions and accounts for the current Automation execution.",
                                "type": "integer"
                            },
                            "TimedOutSteps": {
                                "description": "The total number of steps that timed out in all specified AWS Regions and accounts for the current Automation execution.",
                                "type": "integer"
                            },
                            "TotalSteps": {
                                "description": "The total number of steps executed in all specified AWS Regions and accounts for the current Automation execution.",
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    },
                    "ResolvedTargets": {
                        "description": "A list of resolved targets in the rate control execution.",
                        "properties": {
                            "ParameterValues": {
                                "description": "A list of parameter values sent to targets that resolved during the Automation execution.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "Truncated": {
                                "description": "A boolean value indicating whether the resolved target list is truncated.",
                                "type": "boolean"
                            }
                        },
                        "type": "object"
                    },
                    "StepExecutions": {
                        "description": "A list of details about the current state of all steps that comprise an execution. An Automation document contains a list of steps that are executed in order.",
                        "items": {
                            "description": "Detailed information about an the execution state of an Automation step.",
                            "properties": {
                                "Action": {
                                    "description": "The action this step performs. The action determines the behavior of the step.",
                                    "pattern": "^aws:[a-zA-Z]{3,25}$",
                                    "type": "string"
                                },
                                "ExecutionEndTime": {
                                    "description": "If a step has finished execution, this contains the time the execution ended. If the step has not yet concluded, this field is not populated.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "ExecutionStartTime": {
                                    "description": "If a step has begun execution, this contains the time the step started. If the step is in Pending status, this field is not populated.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "FailureDetails": {
                                    "description": "Information about the Automation failure.",
                                    "properties": {
                                        "Details": {
                                            "description": "Detailed information about the Automation step failure.",
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "maxLength": 30,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "items": {
                                                            "maxLength": 512,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "maxItems": 10,
                                                        "minItems": 0,
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "maxItems": 200,
                                            "minItems": 1,
                                            "type": "array"
                                        },
                                        "FailureStage": {
                                            "description": "The stage of the Automation execution when the failure occurred. The stages include the following: InputValidation, PreVerification, Invocation, PostVerification.",
                                            "type": "string"
                                        },
                                        "FailureType": {
                                            "description": "The type of Automation failure. Failure types include the following: Action, Permission, Throttling, Verification, Internal.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "FailureMessage": {
                                    "description": "If a step failed, this message explains why the execution failed.",
                                    "type": "string"
                                },
                                "Inputs": {
                                    "description": "Fully-resolved values passed into the step before execution.",
                                    "items": {
                                        "properties": {
                                            "key": {
                                                "type": "string"
                                            },
                                            "value": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "IsCritical": {
                                    "description": "The flag which can be used to help decide whether the failure of current step leads to the Automation failure.",
                                    "type": "boolean"
                                },
                                "IsEnd": {
                                    "description": "The flag which can be used to end automation no matter whether the step succeeds or fails.",
                                    "type": "boolean"
                                },
                                "MaxAttempts": {
                                    "description": "The maximum number of tries to run the action of the step. The default value is 1.",
                                    "type": "integer"
                                },
                                "NextStep": {
                                    "description": "The next step after the step succeeds.",
                                    "type": "string"
                                },
                                "OnFailure": {
                                    "description": "The action to take if the step fails. The default value is Abort.",
                                    "type": "string"
                                },
                                "Outputs": {
                                    "description": "Returned values from the execution of the step.",
                                    "items": {
                                        "properties": {
                                            "key": {
                                                "maxLength": 30,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "value": {
                                                "items": {
                                                    "maxLength": 512,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "maxItems": 10,
                                                "minItems": 0,
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "maxItems": 200,
                                    "minItems": 1,
                                    "type": "array"
                                },
                                "OverriddenParameters": {
                                    "description": "A user-specified list of parameters to override when executing a step.",
                                    "items": {
                                        "properties": {
                                            "key": {
                                                "maxLength": 30,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "value": {
                                                "items": {
                                                    "maxLength": 512,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "maxItems": 10,
                                                "minItems": 0,
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "maxItems": 200,
                                    "minItems": 1,
                                    "type": "array"
                                },
                                "Response": {
                                    "description": "A message associated with the response code for an execution.",
                                    "type": "string"
                                },
                                "ResponseCode": {
                                    "description": "The response code returned by the execution of the step.",
                                    "type": "string"
                                },
                                "StepExecutionId": {
                                    "description": "The unique ID of a step execution.",
                                    "type": "string"
                                },
                                "StepName": {
                                    "description": "The name of this execution step.",
                                    "type": "string"
                                },
                                "StepStatus": {
                                    "description": "The execution status for this step. Valid values include: Pending, InProgress, Success, Cancelled, Failed, and TimedOut.",
                                    "enum": [
                                        "Pending",
                                        "InProgress",
                                        "Waiting",
                                        "Success",
                                        "TimedOut",
                                        "Cancelling",
                                        "Cancelled",
                                        "Failed"
                                    ],
                                    "type": "string"
                                },
                                "TargetLocation": {
                                    "description": "The combination of AWS Regions and accounts targeted by the current Automation execution.",
                                    "properties": {
                                        "Accounts": {
                                            "description": "The AWS accounts targeted by the current Automation execution.",
                                            "items": {
                                                "type": "string"
                                            },
                                            "maxItems": 50,
                                            "minItems": 1,
                                            "type": "array"
                                        },
                                        "ExecutionRoleName": {
                                            "description": "The Automation execution role used by the currently executing Automation.",
                                            "maxLength": 64,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "Regions": {
                                            "description": "The AWS Regions targeted by the current Automation execution.",
                                            "items": {
                                                "type": "string"
                                            },
                                            "maxItems": 50,
                                            "minItems": 1,
                                            "type": "array"
                                        },
                                        "TargetLocationMaxConcurrency": {
                                            "description": "The maxium number of AWS accounts and AWS regions allowed to run the Automation concurrently ",
                                            "maxLength": 7,
                                            "minLength": 1,
                                            "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                                            "type": "string"
                                        },
                                        "TargetLocationMaxErrors": {
                                            "description": "The maxium number of errors allowed before the system stops queueing additional Automation executions for the currently executing Automation. ",
                                            "maxLength": 7,
                                            "minLength": 1,
                                            "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "Targets": {
                                    "description": "The targets for the step execution.",
                                    "items": {
                                        "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                                        "properties": {
                                            "Key": {
                                                "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                "maxLength": 128,
                                                "minLength": 1,
                                                "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                                "type": "string"
                                            },
                                            "Values": {
                                                "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "maxItems": 50,
                                                "minItems": 0,
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "maxItems": 5,
                                    "minItems": 0,
                                    "type": "array"
                                },
                                "TimeoutSeconds": {
                                    "description": "The timeout seconds of the step.",
                                    "type": "integer"
                                },
                                "ValidNextSteps": {
                                    "description": "Strategies used when step fails, we support Continue and Abort. Abort will fail the automation when the step fails. Continue will ignore the failure of current step and allow automation to execute the next step. With conditional branching, we add step:stepName to support the automation to go to another specific step.",
                                    "items": {
                                        "maxLength": 65535,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "StepExecutionsTruncated": {
                        "description": "A boolean value that indicates if the response contains the full list of the Automation step executions. If true, use the DescribeAutomationStepExecutions API action to get the full list of step executions.",
                        "type": "boolean"
                    },
                    "Target": {
                        "description": "The target of the execution.",
                        "type": "string"
                    },
                    "TargetLocations": {
                        "description": "The combination of AWS Regions and/or AWS accounts where you want to execute the Automation.",
                        "items": {
                            "description": "The combination of AWS Regions and accounts targeted by the current Automation execution.",
                            "properties": {
                                "Accounts": {
                                    "description": "The AWS accounts targeted by the current Automation execution.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "maxItems": 50,
                                    "minItems": 1,
                                    "type": "array"
                                },
                                "ExecutionRoleName": {
                                    "description": "The Automation execution role used by the currently executing Automation.",
                                    "maxLength": 64,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Regions": {
                                    "description": "The AWS Regions targeted by the current Automation execution.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "maxItems": 50,
                                    "minItems": 1,
                                    "type": "array"
                                },
                                "TargetLocationMaxConcurrency": {
                                    "description": "The maxium number of AWS accounts and AWS regions allowed to run the Automation concurrently ",
                                    "maxLength": 7,
                                    "minLength": 1,
                                    "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                                    "type": "string"
                                },
                                "TargetLocationMaxErrors": {
                                    "description": "The maxium number of errors allowed before the system stops queueing additional Automation executions for the currently executing Automation. ",
                                    "maxLength": 7,
                                    "minLength": 1,
                                    "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 100,
                        "minItems": 1,
                        "type": "array"
                    },
                    "TargetMaps": {
                        "description": "The specified key-value mapping of document parameters to target resources.",
                        "items": {
                            "items": {
                                "properties": {
                                    "key": {
                                        "maxLength": 50,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "value": {
                                        "items": {
                                            "maxLength": 50,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "maxItems": 25,
                                        "minItems": 0,
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            },
                            "maxItems": 20,
                            "minItems": 1,
                            "type": "array"
                        },
                        "maxItems": 300,
                        "minItems": 0,
                        "type": "array"
                    },
                    "TargetParameterName": {
                        "description": "The parameter name.",
                        "maxLength": 30,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Targets": {
                        "description": "The specified targets.",
                        "items": {
                            "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                            "properties": {
                                "Key": {
                                    "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "maxItems": 50,
                                    "minItems": 0,
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 5,
                        "minItems": 0,
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "AutomationExecutionFilter": {
                "description": "A filter used to match specific automation executions. This is used to limit the scope of Automation execution information returned.",
                "properties": {
                    "Key": {
                        "description": "One or more keys to limit the results. Valid filter keys include the following: DocumentNamePrefix, ExecutionStatus, ExecutionId, ParentExecutionId, CurrentAction, StartTimeBefore, StartTimeAfter.",
                        "enum": [
                            "DocumentNamePrefix",
                            "ExecutionStatus",
                            "ExecutionId",
                            "ParentExecutionId",
                            "CurrentAction",
                            "StartTimeBefore",
                            "StartTimeAfter",
                            "AutomationType"
                        ],
                        "type": "string"
                    },
                    "Values": {
                        "description": "The values used to limit the execution information associated with the filter's key.",
                        "items": {
                            "maxLength": 150,
                            "minLength": 1,
                            "type": "string"
                        },
                        "maxItems": 10,
                        "minItems": 1,
                        "type": "array"
                    }
                },
                "required": [
                    "Key",
                    "Values"
                ],
                "type": "object"
            },
            "AutomationExecutionFilterKey": {
                "enum": [
                    "DocumentNamePrefix",
                    "ExecutionStatus",
                    "ExecutionId",
                    "ParentExecutionId",
                    "CurrentAction",
                    "StartTimeBefore",
                    "StartTimeAfter",
                    "AutomationType"
                ],
                "type": "string"
            },
            "AutomationExecutionFilterList": {
                "items": {
                    "description": "A filter used to match specific automation executions. This is used to limit the scope of Automation execution information returned.",
                    "properties": {
                        "Key": {
                            "description": "One or more keys to limit the results. Valid filter keys include the following: DocumentNamePrefix, ExecutionStatus, ExecutionId, ParentExecutionId, CurrentAction, StartTimeBefore, StartTimeAfter.",
                            "enum": [
                                "DocumentNamePrefix",
                                "ExecutionStatus",
                                "ExecutionId",
                                "ParentExecutionId",
                                "CurrentAction",
                                "StartTimeBefore",
                                "StartTimeAfter",
                                "AutomationType"
                            ],
                            "type": "string"
                        },
                        "Values": {
                            "description": "The values used to limit the execution information associated with the filter's key.",
                            "items": {
                                "maxLength": 150,
                                "minLength": 1,
                                "type": "string"
                            },
                            "maxItems": 10,
                            "minItems": 1,
                            "type": "array"
                        }
                    },
                    "required": [
                        "Key",
                        "Values"
                    ],
                    "type": "object"
                },
                "maxItems": 10,
                "minItems": 1,
                "type": "array"
            },
            "AutomationExecutionFilterValue": {
                "maxLength": 150,
                "minLength": 1,
                "type": "string"
            },
            "AutomationExecutionFilterValueList": {
                "items": {
                    "maxLength": 150,
                    "minLength": 1,
                    "type": "string"
                },
                "maxItems": 10,
                "minItems": 1,
                "type": "array"
            },
            "AutomationExecutionId": {
                "maxLength": 36,
                "minLength": 36,
                "type": "string"
            },
            "AutomationExecutionLimitExceededException": {},
            "AutomationExecutionMetadata": {
                "description": "Details about a specific Automation execution.",
                "properties": {
                    "AutomationExecutionId": {
                        "description": "The execution ID.",
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string"
                    },
                    "AutomationExecutionStatus": {
                        "description": "The status of the execution. Valid values include: Running, Succeeded, Failed, Timed out, or Cancelled.",
                        "enum": [
                            "Pending",
                            "InProgress",
                            "Waiting",
                            "Success",
                            "TimedOut",
                            "Cancelling",
                            "Cancelled",
                            "Failed"
                        ],
                        "type": "string"
                    },
                    "AutomationType": {
                        "description": "Use this filter with <a>DescribeAutomationExecutions</a>. Specify either Local or CrossAccount. CrossAccount is an Automation that executes in multiple AWS Regions and accounts. For more information, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-automation-multiple-accounts-and-regions.html\">Concurrently Executing Automations in Multiple AWS Regions and Accounts</a> in the <i>AWS Systems Manager User Guide</i>. ",
                        "enum": [
                            "CrossAccount",
                            "Local"
                        ],
                        "type": "string"
                    },
                    "CurrentAction": {
                        "description": "The action of the currently executing step.",
                        "type": "string"
                    },
                    "CurrentStepName": {
                        "description": "The name of the currently executing step.",
                        "type": "string"
                    },
                    "DocumentName": {
                        "description": "The name of the Automation document used during execution.",
                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                        "type": "string"
                    },
                    "DocumentVersion": {
                        "description": "The document version used during the execution.",
                        "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                        "type": "string"
                    },
                    "ExecutedBy": {
                        "description": "The IAM role ARN of the user who executed the Automation.",
                        "type": "string"
                    },
                    "ExecutionEndTime": {
                        "description": "The time the execution finished. This is not populated if the execution is still in progress.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "ExecutionStartTime": {
                        "description": "The time the execution started.&gt;",
                        "format": "date-time",
                        "type": "string"
                    },
                    "FailureMessage": {
                        "description": "The list of execution outputs as defined in the Automation document.",
                        "type": "string"
                    },
                    "LogFile": {
                        "description": "An Amazon S3 bucket where execution information is stored.",
                        "type": "string"
                    },
                    "MaxConcurrency": {
                        "description": "The MaxConcurrency value specified by the user when starting the Automation.",
                        "maxLength": 7,
                        "minLength": 1,
                        "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                        "type": "string"
                    },
                    "MaxErrors": {
                        "description": "The MaxErrors value specified by the user when starting the Automation.",
                        "maxLength": 7,
                        "minLength": 1,
                        "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                        "type": "string"
                    },
                    "Mode": {
                        "description": "The Automation execution mode.",
                        "enum": [
                            "Auto",
                            "Interactive"
                        ],
                        "type": "string"
                    },
                    "Outputs": {
                        "description": "The list of execution outputs as defined in the Automation document.",
                        "items": {
                            "properties": {
                                "key": {
                                    "maxLength": 30,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "value": {
                                    "items": {
                                        "maxLength": 512,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "maxItems": 10,
                                    "minItems": 0,
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 200,
                        "minItems": 1,
                        "type": "array"
                    },
                    "ParentAutomationExecutionId": {
                        "description": "The ExecutionId of the parent Automation.",
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string"
                    },
                    "ResolvedTargets": {
                        "description": "A list of targets that resolved during the execution.",
                        "properties": {
                            "ParameterValues": {
                                "description": "A list of parameter values sent to targets that resolved during the Automation execution.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "Truncated": {
                                "description": "A boolean value indicating whether the resolved target list is truncated.",
                                "type": "boolean"
                            }
                        },
                        "type": "object"
                    },
                    "Target": {
                        "description": "The list of execution outputs as defined in the Automation document.",
                        "type": "string"
                    },
                    "TargetMaps": {
                        "description": "The specified key-value mapping of document parameters to target resources.",
                        "items": {
                            "items": {
                                "properties": {
                                    "key": {
                                        "maxLength": 50,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "value": {
                                        "items": {
                                            "maxLength": 50,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "maxItems": 25,
                                        "minItems": 0,
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            },
                            "maxItems": 20,
                            "minItems": 1,
                            "type": "array"
                        },
                        "maxItems": 300,
                        "minItems": 0,
                        "type": "array"
                    },
                    "TargetParameterName": {
                        "description": "The list of execution outputs as defined in the Automation document.",
                        "maxLength": 30,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Targets": {
                        "description": "The targets defined by the user when starting the Automation.",
                        "items": {
                            "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                            "properties": {
                                "Key": {
                                    "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "maxItems": 50,
                                    "minItems": 0,
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 5,
                        "minItems": 0,
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "AutomationExecutionMetadataList": {
                "items": {
                    "description": "Details about a specific Automation execution.",
                    "properties": {
                        "AutomationExecutionId": {
                            "description": "The execution ID.",
                            "maxLength": 36,
                            "minLength": 36,
                            "type": "string"
                        },
                        "AutomationExecutionStatus": {
                            "description": "The status of the execution. Valid values include: Running, Succeeded, Failed, Timed out, or Cancelled.",
                            "enum": [
                                "Pending",
                                "InProgress",
                                "Waiting",
                                "Success",
                                "TimedOut",
                                "Cancelling",
                                "Cancelled",
                                "Failed"
                            ],
                            "type": "string"
                        },
                        "AutomationType": {
                            "description": "Use this filter with <a>DescribeAutomationExecutions</a>. Specify either Local or CrossAccount. CrossAccount is an Automation that executes in multiple AWS Regions and accounts. For more information, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-automation-multiple-accounts-and-regions.html\">Concurrently Executing Automations in Multiple AWS Regions and Accounts</a> in the <i>AWS Systems Manager User Guide</i>. ",
                            "enum": [
                                "CrossAccount",
                                "Local"
                            ],
                            "type": "string"
                        },
                        "CurrentAction": {
                            "description": "The action of the currently executing step.",
                            "type": "string"
                        },
                        "CurrentStepName": {
                            "description": "The name of the currently executing step.",
                            "type": "string"
                        },
                        "DocumentName": {
                            "description": "The name of the Automation document used during execution.",
                            "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                            "type": "string"
                        },
                        "DocumentVersion": {
                            "description": "The document version used during the execution.",
                            "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                            "type": "string"
                        },
                        "ExecutedBy": {
                            "description": "The IAM role ARN of the user who executed the Automation.",
                            "type": "string"
                        },
                        "ExecutionEndTime": {
                            "description": "The time the execution finished. This is not populated if the execution is still in progress.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "ExecutionStartTime": {
                            "description": "The time the execution started.&gt;",
                            "format": "date-time",
                            "type": "string"
                        },
                        "FailureMessage": {
                            "description": "The list of execution outputs as defined in the Automation document.",
                            "type": "string"
                        },
                        "LogFile": {
                            "description": "An Amazon S3 bucket where execution information is stored.",
                            "type": "string"
                        },
                        "MaxConcurrency": {
                            "description": "The MaxConcurrency value specified by the user when starting the Automation.",
                            "maxLength": 7,
                            "minLength": 1,
                            "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                            "type": "string"
                        },
                        "MaxErrors": {
                            "description": "The MaxErrors value specified by the user when starting the Automation.",
                            "maxLength": 7,
                            "minLength": 1,
                            "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                            "type": "string"
                        },
                        "Mode": {
                            "description": "The Automation execution mode.",
                            "enum": [
                                "Auto",
                                "Interactive"
                            ],
                            "type": "string"
                        },
                        "Outputs": {
                            "description": "The list of execution outputs as defined in the Automation document.",
                            "items": {
                                "properties": {
                                    "key": {
                                        "maxLength": 30,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "value": {
                                        "items": {
                                            "maxLength": 512,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "maxItems": 10,
                                        "minItems": 0,
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            },
                            "maxItems": 200,
                            "minItems": 1,
                            "type": "array"
                        },
                        "ParentAutomationExecutionId": {
                            "description": "The ExecutionId of the parent Automation.",
                            "maxLength": 36,
                            "minLength": 36,
                            "type": "string"
                        },
                        "ResolvedTargets": {
                            "description": "A list of targets that resolved during the execution.",
                            "properties": {
                                "ParameterValues": {
                                    "description": "A list of parameter values sent to targets that resolved during the Automation execution.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "Truncated": {
                                    "description": "A boolean value indicating whether the resolved target list is truncated.",
                                    "type": "boolean"
                                }
                            },
                            "type": "object"
                        },
                        "Target": {
                            "description": "The list of execution outputs as defined in the Automation document.",
                            "type": "string"
                        },
                        "TargetMaps": {
                            "description": "The specified key-value mapping of document parameters to target resources.",
                            "items": {
                                "items": {
                                    "properties": {
                                        "key": {
                                            "maxLength": 50,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "value": {
                                            "items": {
                                                "maxLength": 50,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "maxItems": 25,
                                            "minItems": 0,
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                },
                                "maxItems": 20,
                                "minItems": 1,
                                "type": "array"
                            },
                            "maxItems": 300,
                            "minItems": 0,
                            "type": "array"
                        },
                        "TargetParameterName": {
                            "description": "The list of execution outputs as defined in the Automation document.",
                            "maxLength": 30,
                            "minLength": 1,
                            "type": "string"
                        },
                        "Targets": {
                            "description": "The targets defined by the user when starting the Automation.",
                            "items": {
                                "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                                "properties": {
                                    "Key": {
                                        "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                        "type": "string"
                                    },
                                    "Values": {
                                        "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "maxItems": 50,
                                        "minItems": 0,
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            },
                            "maxItems": 5,
                            "minItems": 0,
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "AutomationExecutionNotFoundException": {},
            "AutomationExecutionStatus": {
                "enum": [
                    "Pending",
                    "InProgress",
                    "Waiting",
                    "Success",
                    "TimedOut",
                    "Cancelling",
                    "Cancelled",
                    "Failed"
                ],
                "type": "string"
            },
            "AutomationParameterKey": {
                "maxLength": 30,
                "minLength": 1,
                "type": "string"
            },
            "AutomationParameterMap": {
                "items": {
                    "properties": {
                        "key": {
                            "maxLength": 30,
                            "minLength": 1,
                            "type": "string"
                        },
                        "value": {
                            "items": {
                                "maxLength": 512,
                                "minLength": 1,
                                "type": "string"
                            },
                            "maxItems": 10,
                            "minItems": 0,
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "maxItems": 200,
                "minItems": 1,
                "type": "array"
            },
            "AutomationParameterValue": {
                "maxLength": 512,
                "minLength": 1,
                "type": "string"
            },
            "AutomationParameterValueList": {
                "items": {
                    "maxLength": 512,
                    "minLength": 1,
                    "type": "string"
                },
                "maxItems": 10,
                "minItems": 0,
                "type": "array"
            },
            "AutomationStepNotFoundException": {},
            "AutomationTargetParameterName": {
                "maxLength": 50,
                "minLength": 1,
                "type": "string"
            },
            "AutomationType": {
                "enum": [
                    "CrossAccount",
                    "Local"
                ],
                "type": "string"
            },
            "BaselineDescription": {
                "maxLength": 1024,
                "minLength": 1,
                "type": "string"
            },
            "BaselineId": {
                "maxLength": 128,
                "minLength": 20,
                "pattern": "^[a-zA-Z0-9_\\-:/]{20,128}$",
                "type": "string"
            },
            "BaselineName": {
                "maxLength": 128,
                "minLength": 3,
                "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                "type": "string"
            },
            "BatchErrorMessage": {
                "type": "string"
            },
            "Boolean": {
                "type": "boolean"
            },
            "CancelCommandRequest": {
                "description": "<p/>",
                "properties": {
                    "CommandId": {
                        "description": "The ID of the command you want to cancel.",
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string"
                    },
                    "InstanceIds": {
                        "description": "(Optional) A list of instance IDs on which you want to cancel the command. If not provided, the command is canceled on every instance on which it was requested.",
                        "items": {
                            "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                            "type": "string"
                        },
                        "maxItems": 50,
                        "minItems": 0,
                        "type": "array"
                    }
                },
                "required": [
                    "CommandId"
                ],
                "type": "object"
            },
            "CancelCommandResult": {
                "description": "Whether or not the command was successfully canceled. There is no guarantee that a request can be canceled.",
                "properties": {},
                "type": "object"
            },
            "CancelMaintenanceWindowExecutionRequest": {
                "properties": {
                    "WindowExecutionId": {
                        "description": "The ID of the Maintenance Window execution to stop.",
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                        "type": "string"
                    }
                },
                "required": [
                    "WindowExecutionId"
                ],
                "type": "object"
            },
            "CancelMaintenanceWindowExecutionResult": {
                "properties": {
                    "WindowExecutionId": {
                        "description": "The ID of the Maintenance Window execution that has been stopped.",
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ClientToken": {
                "maxLength": 64,
                "minLength": 1,
                "type": "string"
            },
            "CloudWatchLogGroupName": {
                "maxLength": 512,
                "minLength": 1,
                "pattern": "[\\.\\-_/#A-Za-z0-9]+",
                "type": "string"
            },
            "CloudWatchOutputConfig": {
                "description": "Configuration options for sending command output to CloudWatch Logs.",
                "properties": {
                    "CloudWatchLogGroupName": {
                        "description": "The name of the CloudWatch log group where you want to send command output. If you don't specify a group name, Systems Manager automatically creates a log group for you. The log group uses the following naming format: aws/ssm/<i>SystemsManagerDocumentName</i>.",
                        "maxLength": 512,
                        "minLength": 1,
                        "pattern": "[\\.\\-_/#A-Za-z0-9]+",
                        "type": "string"
                    },
                    "CloudWatchOutputEnabled": {
                        "description": "Enables Systems Manager to send command output to CloudWatch Logs.",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "CloudWatchOutputEnabled": {
                "type": "boolean"
            },
            "Command": {
                "description": "Describes a command request.",
                "properties": {
                    "CloudWatchOutputConfig": {
                        "description": "CloudWatch Logs information where you want Systems Manager to send the command output.",
                        "properties": {
                            "CloudWatchLogGroupName": {
                                "description": "The name of the CloudWatch log group where you want to send command output. If you don't specify a group name, Systems Manager automatically creates a log group for you. The log group uses the following naming format: aws/ssm/<i>SystemsManagerDocumentName</i>.",
                                "maxLength": 512,
                                "minLength": 1,
                                "pattern": "[\\.\\-_/#A-Za-z0-9]+",
                                "type": "string"
                            },
                            "CloudWatchOutputEnabled": {
                                "description": "Enables Systems Manager to send command output to CloudWatch Logs.",
                                "type": "boolean"
                            }
                        },
                        "type": "object"
                    },
                    "CommandId": {
                        "description": "A unique identifier for this command.",
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string"
                    },
                    "Comment": {
                        "description": "User-specified information about the command, such as a brief description of what the command should do.",
                        "maxLength": 100,
                        "type": "string"
                    },
                    "CompletedCount": {
                        "description": "The number of targets for which the command invocation reached a terminal state. Terminal states include the following: Success, Failed, Execution Timed Out, Delivery Timed Out, Canceled, Terminated, or Undeliverable.",
                        "type": "integer"
                    },
                    "DeliveryTimedOutCount": {
                        "description": "The number of targets for which the status is Delivery Timed Out.",
                        "type": "integer"
                    },
                    "DocumentName": {
                        "description": "The name of the document requested for execution.",
                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                        "type": "string"
                    },
                    "DocumentVersion": {
                        "description": "The SSM document version.",
                        "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                        "type": "string"
                    },
                    "ErrorCount": {
                        "description": "The number of targets for which the status is Failed or Execution Timed Out.",
                        "type": "integer"
                    },
                    "ExpiresAfter": {
                        "description": "If this time is reached and the command has not already started executing, it will not run. Calculated based on the ExpiresAfter user input provided as part of the SendCommand API.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "InstanceIds": {
                        "description": "The instance IDs against which this command was requested.",
                        "items": {
                            "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                            "type": "string"
                        },
                        "maxItems": 50,
                        "minItems": 0,
                        "type": "array"
                    },
                    "MaxConcurrency": {
                        "description": "The maximum number of instances that are allowed to execute the command at the same time. You can specify a number of instances, such as 10, or a percentage of instances, such as 10%. The default value is 50. For more information about how to use MaxConcurrency, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/run-command.html\">Executing Commands Using Systems Manager Run Command</a> in the <i>AWS Systems Manager User Guide</i>.",
                        "maxLength": 7,
                        "minLength": 1,
                        "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                        "type": "string"
                    },
                    "MaxErrors": {
                        "description": "The maximum number of errors allowed before the system stops sending the command to additional targets. You can specify a number of errors, such as 10, or a percentage or errors, such as 10%. The default value is 0. For more information about how to use MaxErrors, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/run-command.html\">Executing Commands Using Systems Manager Run Command</a> in the <i>AWS Systems Manager User Guide</i>.",
                        "maxLength": 7,
                        "minLength": 1,
                        "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                        "type": "string"
                    },
                    "NotificationConfig": {
                        "description": "Configurations for sending notifications about command status changes. ",
                        "properties": {
                            "NotificationArn": {
                                "description": "An Amazon Resource Name (ARN) for a Simple Notification Service (SNS) topic. Run Command pushes notifications about command status changes to this topic.",
                                "type": "string"
                            },
                            "NotificationEvents": {
                                "description": "The different events for which you can receive notifications. These events include the following: All (events), InProgress, Success, TimedOut, Cancelled, Failed. To learn more about these events, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/rc-sns-notifications.html\">Configuring Amazon SNS Notifications for Run Command</a> in the <i>AWS Systems Manager User Guide</i>.",
                                "items": {
                                    "enum": [
                                        "All",
                                        "InProgress",
                                        "Success",
                                        "TimedOut",
                                        "Cancelled",
                                        "Failed"
                                    ],
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "NotificationType": {
                                "description": "Command: Receive notification when the status of a command changes. Invocation: For commands sent to multiple instances, receive notification on a per-instance basis when the status of a command changes. ",
                                "enum": [
                                    "Command",
                                    "Invocation"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "OutputS3BucketName": {
                        "description": "The S3 bucket where the responses to the command executions should be stored. This was requested when issuing the command.",
                        "maxLength": 63,
                        "minLength": 3,
                        "type": "string"
                    },
                    "OutputS3KeyPrefix": {
                        "description": "The S3 directory path inside the bucket where the responses to the command executions should be stored. This was requested when issuing the command.",
                        "maxLength": 500,
                        "type": "string"
                    },
                    "OutputS3Region": {
                        "description": "(Deprecated) You can no longer specify this parameter. The system ignores it. Instead, Systems Manager automatically determines the Amazon S3 bucket region.",
                        "maxLength": 20,
                        "minLength": 3,
                        "type": "string"
                    },
                    "Parameters": {
                        "description": "The parameter values to be inserted in the document when executing the command.",
                        "items": {
                            "properties": {
                                "key": {
                                    "type": "string"
                                },
                                "value": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "RequestedDateTime": {
                        "description": "The date and time the command was requested.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "ServiceRole": {
                        "description": "The IAM service role that Run Command uses to act on your behalf when sending notifications about command status changes. ",
                        "type": "string"
                    },
                    "Status": {
                        "description": "The status of the command.",
                        "enum": [
                            "Pending",
                            "InProgress",
                            "Success",
                            "Cancelled",
                            "Failed",
                            "TimedOut",
                            "Cancelling"
                        ],
                        "type": "string"
                    },
                    "StatusDetails": {
                        "description": "<p>A detailed status of the command execution. StatusDetails includes more information than Status because it includes states resulting from error and concurrency control parameters. StatusDetails can show different results than Status. For more information about these statuses, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/monitor-commands.html\">Understanding Command Statuses</a> in the <i>AWS Systems Manager User Guide</i>. StatusDetails can be one of the following values:</p> <ul> <li> <p>Pending: The command has not been sent to any instances.</p> </li> <li> <p>In Progress: The command has been sent to at least one instance but has not reached a final state on all instances.</p> </li> <li> <p>Success: The command successfully executed on all invocations. This is a terminal state.</p> </li> <li> <p>Delivery Timed Out: The value of MaxErrors or more command invocations shows a status of Delivery Timed Out. This is a terminal state.</p> </li> <li> <p>Execution Timed Out: The value of MaxErrors or more command invocations shows a status of Execution Timed Out. This is a terminal state.</p> </li> <li> <p>Failed: The value of MaxErrors or more command invocations shows a status of Failed. This is a terminal state.</p> </li> <li> <p>Incomplete: The command was attempted on all instances and one or more invocations does not have a value of Success but not enough invocations failed for the status to be Failed. This is a terminal state.</p> </li> <li> <p>Canceled: The command was terminated before it was completed. This is a terminal state.</p> </li> <li> <p>Rate Exceeded: The number of instances targeted by the command exceeded the account limit for pending invocations. The system has canceled the command before executing it on any instance. This is a terminal state.</p> </li> </ul>",
                        "maxLength": 100,
                        "minLength": 0,
                        "type": "string"
                    },
                    "TargetCount": {
                        "description": "The number of targets for the command.",
                        "type": "integer"
                    },
                    "Targets": {
                        "description": "An array of search criteria that targets instances using a Key,Value combination that you specify. Targets is required if you don't provide one or more instance IDs in the call.",
                        "items": {
                            "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                            "properties": {
                                "Key": {
                                    "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "maxItems": 50,
                                    "minItems": 0,
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 5,
                        "minItems": 0,
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "CommandFilter": {
                "description": "Describes a command filter.",
                "properties": {
                    "key": {
                        "description": "The name of the filter.",
                        "enum": [
                            "InvokedAfter",
                            "InvokedBefore",
                            "Status",
                            "ExecutionStage",
                            "DocumentName"
                        ],
                        "type": "string"
                    },
                    "value": {
                        "description": "<p>The filter value. Valid values for each filter key are as follows:</p> <ul> <li> <p> <b>InvokedAfter</b>: Specify a timestamp to limit your results. For example, specify <code>2018-07-07T00:00:00Z</code> to see a list of command executions occurring July 7, 2018, and later.</p> </li> <li> <p> <b>InvokedBefore</b>: Specify a timestamp to limit your results. For example, specify <code>2018-07-07T00:00:00Z</code> to see a list of command executions from before July 7, 2018.</p> </li> <li> <p> <b>Status</b>: Specify a valid command status to see a list of all command executions with that status. Status values you can specify include:</p> <ul> <li> <p> <code>Pending</code> </p> </li> <li> <p> <code>InProgress</code> </p> </li> <li> <p> <code>Success</code> </p> </li> <li> <p> <code>Cancelled</code> </p> </li> <li> <p> <code>Failed</code> </p> </li> <li> <p> <code>TimedOut</code> </p> </li> <li> <p> <code>Cancelling</code> </p> </li> </ul> </li> <li> <p> <b>DocumentName</b>: Specify name of the SSM document for which you want to see command execution results. For example, specify <code>AWS-RunPatchBaseline</code> to see command executions that used this SSM document to perform security patching operations on instances. </p> </li> <li> <p> <b>ExecutionStage</b>: Specify one of the following values:</p> <ul> <li> <p> <code>Executing</code>: Returns a list of command executions that are currently still running.</p> </li> <li> <p> <code>Complete</code>: Returns a list of command executions that have already completed. </p> </li> </ul> </li> </ul>",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "key",
                    "value"
                ],
                "type": "object"
            },
            "CommandFilterKey": {
                "enum": [
                    "InvokedAfter",
                    "InvokedBefore",
                    "Status",
                    "ExecutionStage",
                    "DocumentName"
                ],
                "type": "string"
            },
            "CommandFilterList": {
                "items": {
                    "description": "Describes a command filter.",
                    "properties": {
                        "key": {
                            "description": "The name of the filter.",
                            "enum": [
                                "InvokedAfter",
                                "InvokedBefore",
                                "Status",
                                "ExecutionStage",
                                "DocumentName"
                            ],
                            "type": "string"
                        },
                        "value": {
                            "description": "<p>The filter value. Valid values for each filter key are as follows:</p> <ul> <li> <p> <b>InvokedAfter</b>: Specify a timestamp to limit your results. For example, specify <code>2018-07-07T00:00:00Z</code> to see a list of command executions occurring July 7, 2018, and later.</p> </li> <li> <p> <b>InvokedBefore</b>: Specify a timestamp to limit your results. For example, specify <code>2018-07-07T00:00:00Z</code> to see a list of command executions from before July 7, 2018.</p> </li> <li> <p> <b>Status</b>: Specify a valid command status to see a list of all command executions with that status. Status values you can specify include:</p> <ul> <li> <p> <code>Pending</code> </p> </li> <li> <p> <code>InProgress</code> </p> </li> <li> <p> <code>Success</code> </p> </li> <li> <p> <code>Cancelled</code> </p> </li> <li> <p> <code>Failed</code> </p> </li> <li> <p> <code>TimedOut</code> </p> </li> <li> <p> <code>Cancelling</code> </p> </li> </ul> </li> <li> <p> <b>DocumentName</b>: Specify name of the SSM document for which you want to see command execution results. For example, specify <code>AWS-RunPatchBaseline</code> to see command executions that used this SSM document to perform security patching operations on instances. </p> </li> <li> <p> <b>ExecutionStage</b>: Specify one of the following values:</p> <ul> <li> <p> <code>Executing</code>: Returns a list of command executions that are currently still running.</p> </li> <li> <p> <code>Complete</code>: Returns a list of command executions that have already completed. </p> </li> </ul> </li> </ul>",
                            "maxLength": 128,
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    "required": [
                        "key",
                        "value"
                    ],
                    "type": "object"
                },
                "maxItems": 5,
                "minItems": 1,
                "type": "array"
            },
            "CommandFilterValue": {
                "maxLength": 128,
                "minLength": 1,
                "type": "string"
            },
            "CommandId": {
                "maxLength": 36,
                "minLength": 36,
                "type": "string"
            },
            "CommandInvocation": {
                "description": "An invocation is copy of a command sent to a specific instance. A command can apply to one or more instances. A command invocation applies to one instance. For example, if a user executes SendCommand against three instances, then a command invocation is created for each requested instance ID. A command invocation returns status and detail information about a command you executed. ",
                "properties": {
                    "CloudWatchOutputConfig": {
                        "description": "CloudWatch Logs information where you want Systems Manager to send the command output.",
                        "properties": {
                            "CloudWatchLogGroupName": {
                                "description": "The name of the CloudWatch log group where you want to send command output. If you don't specify a group name, Systems Manager automatically creates a log group for you. The log group uses the following naming format: aws/ssm/<i>SystemsManagerDocumentName</i>.",
                                "maxLength": 512,
                                "minLength": 1,
                                "pattern": "[\\.\\-_/#A-Za-z0-9]+",
                                "type": "string"
                            },
                            "CloudWatchOutputEnabled": {
                                "description": "Enables Systems Manager to send command output to CloudWatch Logs.",
                                "type": "boolean"
                            }
                        },
                        "type": "object"
                    },
                    "CommandId": {
                        "description": "The command against which this invocation was requested.",
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string"
                    },
                    "CommandPlugins": {
                        "items": {
                            "description": "Describes plugin details.",
                            "properties": {
                                "Name": {
                                    "description": "The name of the plugin. Must be one of the following: aws:updateAgent, aws:domainjoin, aws:applications, aws:runPowerShellScript, aws:psmodule, aws:cloudWatch, aws:runShellScript, or aws:updateSSMAgent. ",
                                    "minLength": 4,
                                    "type": "string"
                                },
                                "Output": {
                                    "description": "Output of the plugin execution.",
                                    "maxLength": 2500,
                                    "type": "string"
                                },
                                "OutputS3BucketName": {
                                    "description": "<p>The S3 bucket where the responses to the command executions should be stored. This was requested when issuing the command. For example, in the following response:</p> <p> test_folder/ab19cb99-a030-46dd-9dfc-8eSAMPLEPre-Fix/i-1234567876543/awsrunShellScript </p> <p>test_folder is the name of the Amazon S3 bucket;</p> <p> ab19cb99-a030-46dd-9dfc-8eSAMPLEPre-Fix is the name of the S3 prefix;</p> <p>i-1234567876543 is the instance ID;</p> <p>awsrunShellScript is the name of the plugin.</p>",
                                    "maxLength": 63,
                                    "minLength": 3,
                                    "type": "string"
                                },
                                "OutputS3KeyPrefix": {
                                    "description": "<p>The S3 directory path inside the bucket where the responses to the command executions should be stored. This was requested when issuing the command. For example, in the following response:</p> <p> test_folder/ab19cb99-a030-46dd-9dfc-8eSAMPLEPre-Fix/i-1234567876543/awsrunShellScript </p> <p>test_folder is the name of the Amazon S3 bucket;</p> <p> ab19cb99-a030-46dd-9dfc-8eSAMPLEPre-Fix is the name of the S3 prefix;</p> <p>i-1234567876543 is the instance ID;</p> <p>awsrunShellScript is the name of the plugin.</p>",
                                    "maxLength": 500,
                                    "type": "string"
                                },
                                "OutputS3Region": {
                                    "description": "(Deprecated) You can no longer specify this parameter. The system ignores it. Instead, Systems Manager automatically determines the Amazon S3 bucket region.",
                                    "maxLength": 20,
                                    "minLength": 3,
                                    "type": "string"
                                },
                                "ResponseCode": {
                                    "description": "A numeric response code generated after executing the plugin. ",
                                    "type": "integer"
                                },
                                "ResponseFinishDateTime": {
                                    "description": "The time the plugin stopped executing. Could stop prematurely if, for example, a cancel command was sent. ",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "ResponseStartDateTime": {
                                    "description": "The time the plugin started executing. ",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "StandardErrorUrl": {
                                    "description": "The URL for the complete text written by the plugin to stderr. If execution is not yet complete, then this string is empty.",
                                    "type": "string"
                                },
                                "StandardOutputUrl": {
                                    "description": "The URL for the complete text written by the plugin to stdout in Amazon S3. If the Amazon S3 bucket for the command was not specified, then this string is empty.",
                                    "type": "string"
                                },
                                "Status": {
                                    "description": "The status of this plugin. You can execute a document with multiple plugins.",
                                    "enum": [
                                        "Pending",
                                        "InProgress",
                                        "Success",
                                        "TimedOut",
                                        "Cancelled",
                                        "Failed"
                                    ],
                                    "type": "string"
                                },
                                "StatusDetails": {
                                    "description": "<p>A detailed status of the plugin execution. StatusDetails includes more information than Status because it includes states resulting from error and concurrency control parameters. StatusDetails can show different results than Status. For more information about these statuses, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/monitor-commands.html\">Understanding Command Statuses</a> in the <i>AWS Systems Manager User Guide</i>. StatusDetails can be one of the following values:</p> <ul> <li> <p>Pending: The command has not been sent to the instance.</p> </li> <li> <p>In Progress: The command has been sent to the instance but has not reached a terminal state.</p> </li> <li> <p>Success: The execution of the command or plugin was successfully completed. This is a terminal state.</p> </li> <li> <p>Delivery Timed Out: The command was not delivered to the instance before the delivery timeout expired. Delivery timeouts do not count against the parent command's MaxErrors limit, but they do contribute to whether the parent command status is Success or Incomplete. This is a terminal state.</p> </li> <li> <p>Execution Timed Out: Command execution started on the instance, but the execution was not complete before the execution timeout expired. Execution timeouts count against the MaxErrors limit of the parent command. This is a terminal state.</p> </li> <li> <p>Failed: The command was not successful on the instance. For a plugin, this indicates that the result code was not zero. For a command invocation, this indicates that the result code for one or more plugins was not zero. Invocation failures count against the MaxErrors limit of the parent command. This is a terminal state.</p> </li> <li> <p>Canceled: The command was terminated before it was completed. This is a terminal state.</p> </li> <li> <p>Undeliverable: The command can't be delivered to the instance. The instance might not exist, or it might not be responding. Undeliverable invocations don't count against the parent command's MaxErrors limit, and they don't contribute to whether the parent command status is Success or Incomplete. This is a terminal state.</p> </li> <li> <p>Terminated: The parent command exceeded its MaxErrors limit and subsequent command invocations were canceled by the system. This is a terminal state.</p> </li> </ul>",
                                    "maxLength": 100,
                                    "minLength": 0,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Comment": {
                        "description": "User-specified information about the command, such as a brief description of what the command should do.",
                        "maxLength": 100,
                        "type": "string"
                    },
                    "DocumentName": {
                        "description": "The document name that was requested for execution.",
                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                        "type": "string"
                    },
                    "DocumentVersion": {
                        "description": "The SSM document version.",
                        "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                        "type": "string"
                    },
                    "InstanceId": {
                        "description": "The instance ID in which this invocation was requested.",
                        "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                        "type": "string"
                    },
                    "InstanceName": {
                        "description": "The name of the invocation target. For Amazon EC2 instances this is the value for the aws:Name tag. For on-premises instances, this is the name of the instance.",
                        "maxLength": 255,
                        "type": "string"
                    },
                    "NotificationConfig": {
                        "description": "Configurations for sending notifications about command status changes on a per instance basis.",
                        "properties": {
                            "NotificationArn": {
                                "description": "An Amazon Resource Name (ARN) for a Simple Notification Service (SNS) topic. Run Command pushes notifications about command status changes to this topic.",
                                "type": "string"
                            },
                            "NotificationEvents": {
                                "description": "The different events for which you can receive notifications. These events include the following: All (events), InProgress, Success, TimedOut, Cancelled, Failed. To learn more about these events, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/rc-sns-notifications.html\">Configuring Amazon SNS Notifications for Run Command</a> in the <i>AWS Systems Manager User Guide</i>.",
                                "items": {
                                    "enum": [
                                        "All",
                                        "InProgress",
                                        "Success",
                                        "TimedOut",
                                        "Cancelled",
                                        "Failed"
                                    ],
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "NotificationType": {
                                "description": "Command: Receive notification when the status of a command changes. Invocation: For commands sent to multiple instances, receive notification on a per-instance basis when the status of a command changes. ",
                                "enum": [
                                    "Command",
                                    "Invocation"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "RequestedDateTime": {
                        "description": "The time and date the request was sent to this instance.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "ServiceRole": {
                        "description": "The IAM service role that Run Command uses to act on your behalf when sending notifications about command status changes on a per instance basis.",
                        "type": "string"
                    },
                    "StandardErrorUrl": {
                        "description": "The URL to the plugin's StdErr file in Amazon S3, if the Amazon S3 bucket was defined for the parent command. For an invocation, StandardErrorUrl is populated if there is just one plugin defined for the command, and the Amazon S3 bucket was defined for the command.",
                        "type": "string"
                    },
                    "StandardOutputUrl": {
                        "description": "The URL to the plugin's StdOut file in Amazon S3, if the Amazon S3 bucket was defined for the parent command. For an invocation, StandardOutputUrl is populated if there is just one plugin defined for the command, and the Amazon S3 bucket was defined for the command.",
                        "type": "string"
                    },
                    "Status": {
                        "description": "Whether or not the invocation succeeded, failed, or is pending.",
                        "enum": [
                            "Pending",
                            "InProgress",
                            "Delayed",
                            "Success",
                            "Cancelled",
                            "TimedOut",
                            "Failed",
                            "Cancelling"
                        ],
                        "type": "string"
                    },
                    "StatusDetails": {
                        "description": "<p>A detailed status of the command execution for each invocation (each instance targeted by the command). StatusDetails includes more information than Status because it includes states resulting from error and concurrency control parameters. StatusDetails can show different results than Status. For more information about these statuses, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/monitor-commands.html\">Understanding Command Statuses</a> in the <i>AWS Systems Manager User Guide</i>. StatusDetails can be one of the following values:</p> <ul> <li> <p>Pending: The command has not been sent to the instance.</p> </li> <li> <p>In Progress: The command has been sent to the instance but has not reached a terminal state.</p> </li> <li> <p>Success: The execution of the command or plugin was successfully completed. This is a terminal state.</p> </li> <li> <p>Delivery Timed Out: The command was not delivered to the instance before the delivery timeout expired. Delivery timeouts do not count against the parent command's MaxErrors limit, but they do contribute to whether the parent command status is Success or Incomplete. This is a terminal state.</p> </li> <li> <p>Execution Timed Out: Command execution started on the instance, but the execution was not complete before the execution timeout expired. Execution timeouts count against the MaxErrors limit of the parent command. This is a terminal state.</p> </li> <li> <p>Failed: The command was not successful on the instance. For a plugin, this indicates that the result code was not zero. For a command invocation, this indicates that the result code for one or more plugins was not zero. Invocation failures count against the MaxErrors limit of the parent command. This is a terminal state.</p> </li> <li> <p>Canceled: The command was terminated before it was completed. This is a terminal state.</p> </li> <li> <p>Undeliverable: The command can't be delivered to the instance. The instance might not exist or might not be responding. Undeliverable invocations don't count against the parent command's MaxErrors limit and don't contribute to whether the parent command status is Success or Incomplete. This is a terminal state.</p> </li> <li> <p>Terminated: The parent command exceeded its MaxErrors limit and subsequent command invocations were canceled by the system. This is a terminal state.</p> </li> </ul>",
                        "maxLength": 100,
                        "minLength": 0,
                        "type": "string"
                    },
                    "TraceOutput": {
                        "description": " Gets the trace output sent by the agent. ",
                        "maxLength": 2500,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CommandInvocationList": {
                "items": {
                    "description": "An invocation is copy of a command sent to a specific instance. A command can apply to one or more instances. A command invocation applies to one instance. For example, if a user executes SendCommand against three instances, then a command invocation is created for each requested instance ID. A command invocation returns status and detail information about a command you executed. ",
                    "properties": {
                        "CloudWatchOutputConfig": {
                            "description": "CloudWatch Logs information where you want Systems Manager to send the command output.",
                            "properties": {
                                "CloudWatchLogGroupName": {
                                    "description": "The name of the CloudWatch log group where you want to send command output. If you don't specify a group name, Systems Manager automatically creates a log group for you. The log group uses the following naming format: aws/ssm/<i>SystemsManagerDocumentName</i>.",
                                    "maxLength": 512,
                                    "minLength": 1,
                                    "pattern": "[\\.\\-_/#A-Za-z0-9]+",
                                    "type": "string"
                                },
                                "CloudWatchOutputEnabled": {
                                    "description": "Enables Systems Manager to send command output to CloudWatch Logs.",
                                    "type": "boolean"
                                }
                            },
                            "type": "object"
                        },
                        "CommandId": {
                            "description": "The command against which this invocation was requested.",
                            "maxLength": 36,
                            "minLength": 36,
                            "type": "string"
                        },
                        "CommandPlugins": {
                            "items": {
                                "description": "Describes plugin details.",
                                "properties": {
                                    "Name": {
                                        "description": "The name of the plugin. Must be one of the following: aws:updateAgent, aws:domainjoin, aws:applications, aws:runPowerShellScript, aws:psmodule, aws:cloudWatch, aws:runShellScript, or aws:updateSSMAgent. ",
                                        "minLength": 4,
                                        "type": "string"
                                    },
                                    "Output": {
                                        "description": "Output of the plugin execution.",
                                        "maxLength": 2500,
                                        "type": "string"
                                    },
                                    "OutputS3BucketName": {
                                        "description": "<p>The S3 bucket where the responses to the command executions should be stored. This was requested when issuing the command. For example, in the following response:</p> <p> test_folder/ab19cb99-a030-46dd-9dfc-8eSAMPLEPre-Fix/i-1234567876543/awsrunShellScript </p> <p>test_folder is the name of the Amazon S3 bucket;</p> <p> ab19cb99-a030-46dd-9dfc-8eSAMPLEPre-Fix is the name of the S3 prefix;</p> <p>i-1234567876543 is the instance ID;</p> <p>awsrunShellScript is the name of the plugin.</p>",
                                        "maxLength": 63,
                                        "minLength": 3,
                                        "type": "string"
                                    },
                                    "OutputS3KeyPrefix": {
                                        "description": "<p>The S3 directory path inside the bucket where the responses to the command executions should be stored. This was requested when issuing the command. For example, in the following response:</p> <p> test_folder/ab19cb99-a030-46dd-9dfc-8eSAMPLEPre-Fix/i-1234567876543/awsrunShellScript </p> <p>test_folder is the name of the Amazon S3 bucket;</p> <p> ab19cb99-a030-46dd-9dfc-8eSAMPLEPre-Fix is the name of the S3 prefix;</p> <p>i-1234567876543 is the instance ID;</p> <p>awsrunShellScript is the name of the plugin.</p>",
                                        "maxLength": 500,
                                        "type": "string"
                                    },
                                    "OutputS3Region": {
                                        "description": "(Deprecated) You can no longer specify this parameter. The system ignores it. Instead, Systems Manager automatically determines the Amazon S3 bucket region.",
                                        "maxLength": 20,
                                        "minLength": 3,
                                        "type": "string"
                                    },
                                    "ResponseCode": {
                                        "description": "A numeric response code generated after executing the plugin. ",
                                        "type": "integer"
                                    },
                                    "ResponseFinishDateTime": {
                                        "description": "The time the plugin stopped executing. Could stop prematurely if, for example, a cancel command was sent. ",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "ResponseStartDateTime": {
                                        "description": "The time the plugin started executing. ",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "StandardErrorUrl": {
                                        "description": "The URL for the complete text written by the plugin to stderr. If execution is not yet complete, then this string is empty.",
                                        "type": "string"
                                    },
                                    "StandardOutputUrl": {
                                        "description": "The URL for the complete text written by the plugin to stdout in Amazon S3. If the Amazon S3 bucket for the command was not specified, then this string is empty.",
                                        "type": "string"
                                    },
                                    "Status": {
                                        "description": "The status of this plugin. You can execute a document with multiple plugins.",
                                        "enum": [
                                            "Pending",
                                            "InProgress",
                                            "Success",
                                            "TimedOut",
                                            "Cancelled",
                                            "Failed"
                                        ],
                                        "type": "string"
                                    },
                                    "StatusDetails": {
                                        "description": "<p>A detailed status of the plugin execution. StatusDetails includes more information than Status because it includes states resulting from error and concurrency control parameters. StatusDetails can show different results than Status. For more information about these statuses, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/monitor-commands.html\">Understanding Command Statuses</a> in the <i>AWS Systems Manager User Guide</i>. StatusDetails can be one of the following values:</p> <ul> <li> <p>Pending: The command has not been sent to the instance.</p> </li> <li> <p>In Progress: The command has been sent to the instance but has not reached a terminal state.</p> </li> <li> <p>Success: The execution of the command or plugin was successfully completed. This is a terminal state.</p> </li> <li> <p>Delivery Timed Out: The command was not delivered to the instance before the delivery timeout expired. Delivery timeouts do not count against the parent command's MaxErrors limit, but they do contribute to whether the parent command status is Success or Incomplete. This is a terminal state.</p> </li> <li> <p>Execution Timed Out: Command execution started on the instance, but the execution was not complete before the execution timeout expired. Execution timeouts count against the MaxErrors limit of the parent command. This is a terminal state.</p> </li> <li> <p>Failed: The command was not successful on the instance. For a plugin, this indicates that the result code was not zero. For a command invocation, this indicates that the result code for one or more plugins was not zero. Invocation failures count against the MaxErrors limit of the parent command. This is a terminal state.</p> </li> <li> <p>Canceled: The command was terminated before it was completed. This is a terminal state.</p> </li> <li> <p>Undeliverable: The command can't be delivered to the instance. The instance might not exist, or it might not be responding. Undeliverable invocations don't count against the parent command's MaxErrors limit, and they don't contribute to whether the parent command status is Success or Incomplete. This is a terminal state.</p> </li> <li> <p>Terminated: The parent command exceeded its MaxErrors limit and subsequent command invocations were canceled by the system. This is a terminal state.</p> </li> </ul>",
                                        "maxLength": 100,
                                        "minLength": 0,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "Comment": {
                            "description": "User-specified information about the command, such as a brief description of what the command should do.",
                            "maxLength": 100,
                            "type": "string"
                        },
                        "DocumentName": {
                            "description": "The document name that was requested for execution.",
                            "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                            "type": "string"
                        },
                        "DocumentVersion": {
                            "description": "The SSM document version.",
                            "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                            "type": "string"
                        },
                        "InstanceId": {
                            "description": "The instance ID in which this invocation was requested.",
                            "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                            "type": "string"
                        },
                        "InstanceName": {
                            "description": "The name of the invocation target. For Amazon EC2 instances this is the value for the aws:Name tag. For on-premises instances, this is the name of the instance.",
                            "maxLength": 255,
                            "type": "string"
                        },
                        "NotificationConfig": {
                            "description": "Configurations for sending notifications about command status changes on a per instance basis.",
                            "properties": {
                                "NotificationArn": {
                                    "description": "An Amazon Resource Name (ARN) for a Simple Notification Service (SNS) topic. Run Command pushes notifications about command status changes to this topic.",
                                    "type": "string"
                                },
                                "NotificationEvents": {
                                    "description": "The different events for which you can receive notifications. These events include the following: All (events), InProgress, Success, TimedOut, Cancelled, Failed. To learn more about these events, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/rc-sns-notifications.html\">Configuring Amazon SNS Notifications for Run Command</a> in the <i>AWS Systems Manager User Guide</i>.",
                                    "items": {
                                        "enum": [
                                            "All",
                                            "InProgress",
                                            "Success",
                                            "TimedOut",
                                            "Cancelled",
                                            "Failed"
                                        ],
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "NotificationType": {
                                    "description": "Command: Receive notification when the status of a command changes. Invocation: For commands sent to multiple instances, receive notification on a per-instance basis when the status of a command changes. ",
                                    "enum": [
                                        "Command",
                                        "Invocation"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "RequestedDateTime": {
                            "description": "The time and date the request was sent to this instance.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "ServiceRole": {
                            "description": "The IAM service role that Run Command uses to act on your behalf when sending notifications about command status changes on a per instance basis.",
                            "type": "string"
                        },
                        "StandardErrorUrl": {
                            "description": "The URL to the plugin's StdErr file in Amazon S3, if the Amazon S3 bucket was defined for the parent command. For an invocation, StandardErrorUrl is populated if there is just one plugin defined for the command, and the Amazon S3 bucket was defined for the command.",
                            "type": "string"
                        },
                        "StandardOutputUrl": {
                            "description": "The URL to the plugin's StdOut file in Amazon S3, if the Amazon S3 bucket was defined for the parent command. For an invocation, StandardOutputUrl is populated if there is just one plugin defined for the command, and the Amazon S3 bucket was defined for the command.",
                            "type": "string"
                        },
                        "Status": {
                            "description": "Whether or not the invocation succeeded, failed, or is pending.",
                            "enum": [
                                "Pending",
                                "InProgress",
                                "Delayed",
                                "Success",
                                "Cancelled",
                                "TimedOut",
                                "Failed",
                                "Cancelling"
                            ],
                            "type": "string"
                        },
                        "StatusDetails": {
                            "description": "<p>A detailed status of the command execution for each invocation (each instance targeted by the command). StatusDetails includes more information than Status because it includes states resulting from error and concurrency control parameters. StatusDetails can show different results than Status. For more information about these statuses, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/monitor-commands.html\">Understanding Command Statuses</a> in the <i>AWS Systems Manager User Guide</i>. StatusDetails can be one of the following values:</p> <ul> <li> <p>Pending: The command has not been sent to the instance.</p> </li> <li> <p>In Progress: The command has been sent to the instance but has not reached a terminal state.</p> </li> <li> <p>Success: The execution of the command or plugin was successfully completed. This is a terminal state.</p> </li> <li> <p>Delivery Timed Out: The command was not delivered to the instance before the delivery timeout expired. Delivery timeouts do not count against the parent command's MaxErrors limit, but they do contribute to whether the parent command status is Success or Incomplete. This is a terminal state.</p> </li> <li> <p>Execution Timed Out: Command execution started on the instance, but the execution was not complete before the execution timeout expired. Execution timeouts count against the MaxErrors limit of the parent command. This is a terminal state.</p> </li> <li> <p>Failed: The command was not successful on the instance. For a plugin, this indicates that the result code was not zero. For a command invocation, this indicates that the result code for one or more plugins was not zero. Invocation failures count against the MaxErrors limit of the parent command. This is a terminal state.</p> </li> <li> <p>Canceled: The command was terminated before it was completed. This is a terminal state.</p> </li> <li> <p>Undeliverable: The command can't be delivered to the instance. The instance might not exist or might not be responding. Undeliverable invocations don't count against the parent command's MaxErrors limit and don't contribute to whether the parent command status is Success or Incomplete. This is a terminal state.</p> </li> <li> <p>Terminated: The parent command exceeded its MaxErrors limit and subsequent command invocations were canceled by the system. This is a terminal state.</p> </li> </ul>",
                            "maxLength": 100,
                            "minLength": 0,
                            "type": "string"
                        },
                        "TraceOutput": {
                            "description": " Gets the trace output sent by the agent. ",
                            "maxLength": 2500,
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "CommandInvocationStatus": {
                "enum": [
                    "Pending",
                    "InProgress",
                    "Delayed",
                    "Success",
                    "Cancelled",
                    "TimedOut",
                    "Failed",
                    "Cancelling"
                ],
                "type": "string"
            },
            "CommandList": {
                "items": {
                    "description": "Describes a command request.",
                    "properties": {
                        "CloudWatchOutputConfig": {
                            "description": "CloudWatch Logs information where you want Systems Manager to send the command output.",
                            "properties": {
                                "CloudWatchLogGroupName": {
                                    "description": "The name of the CloudWatch log group where you want to send command output. If you don't specify a group name, Systems Manager automatically creates a log group for you. The log group uses the following naming format: aws/ssm/<i>SystemsManagerDocumentName</i>.",
                                    "maxLength": 512,
                                    "minLength": 1,
                                    "pattern": "[\\.\\-_/#A-Za-z0-9]+",
                                    "type": "string"
                                },
                                "CloudWatchOutputEnabled": {
                                    "description": "Enables Systems Manager to send command output to CloudWatch Logs.",
                                    "type": "boolean"
                                }
                            },
                            "type": "object"
                        },
                        "CommandId": {
                            "description": "A unique identifier for this command.",
                            "maxLength": 36,
                            "minLength": 36,
                            "type": "string"
                        },
                        "Comment": {
                            "description": "User-specified information about the command, such as a brief description of what the command should do.",
                            "maxLength": 100,
                            "type": "string"
                        },
                        "CompletedCount": {
                            "description": "The number of targets for which the command invocation reached a terminal state. Terminal states include the following: Success, Failed, Execution Timed Out, Delivery Timed Out, Canceled, Terminated, or Undeliverable.",
                            "type": "integer"
                        },
                        "DeliveryTimedOutCount": {
                            "description": "The number of targets for which the status is Delivery Timed Out.",
                            "type": "integer"
                        },
                        "DocumentName": {
                            "description": "The name of the document requested for execution.",
                            "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                            "type": "string"
                        },
                        "DocumentVersion": {
                            "description": "The SSM document version.",
                            "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                            "type": "string"
                        },
                        "ErrorCount": {
                            "description": "The number of targets for which the status is Failed or Execution Timed Out.",
                            "type": "integer"
                        },
                        "ExpiresAfter": {
                            "description": "If this time is reached and the command has not already started executing, it will not run. Calculated based on the ExpiresAfter user input provided as part of the SendCommand API.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "InstanceIds": {
                            "description": "The instance IDs against which this command was requested.",
                            "items": {
                                "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                                "type": "string"
                            },
                            "maxItems": 50,
                            "minItems": 0,
                            "type": "array"
                        },
                        "MaxConcurrency": {
                            "description": "The maximum number of instances that are allowed to execute the command at the same time. You can specify a number of instances, such as 10, or a percentage of instances, such as 10%. The default value is 50. For more information about how to use MaxConcurrency, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/run-command.html\">Executing Commands Using Systems Manager Run Command</a> in the <i>AWS Systems Manager User Guide</i>.",
                            "maxLength": 7,
                            "minLength": 1,
                            "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                            "type": "string"
                        },
                        "MaxErrors": {
                            "description": "The maximum number of errors allowed before the system stops sending the command to additional targets. You can specify a number of errors, such as 10, or a percentage or errors, such as 10%. The default value is 0. For more information about how to use MaxErrors, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/run-command.html\">Executing Commands Using Systems Manager Run Command</a> in the <i>AWS Systems Manager User Guide</i>.",
                            "maxLength": 7,
                            "minLength": 1,
                            "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                            "type": "string"
                        },
                        "NotificationConfig": {
                            "description": "Configurations for sending notifications about command status changes. ",
                            "properties": {
                                "NotificationArn": {
                                    "description": "An Amazon Resource Name (ARN) for a Simple Notification Service (SNS) topic. Run Command pushes notifications about command status changes to this topic.",
                                    "type": "string"
                                },
                                "NotificationEvents": {
                                    "description": "The different events for which you can receive notifications. These events include the following: All (events), InProgress, Success, TimedOut, Cancelled, Failed. To learn more about these events, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/rc-sns-notifications.html\">Configuring Amazon SNS Notifications for Run Command</a> in the <i>AWS Systems Manager User Guide</i>.",
                                    "items": {
                                        "enum": [
                                            "All",
                                            "InProgress",
                                            "Success",
                                            "TimedOut",
                                            "Cancelled",
                                            "Failed"
                                        ],
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "NotificationType": {
                                    "description": "Command: Receive notification when the status of a command changes. Invocation: For commands sent to multiple instances, receive notification on a per-instance basis when the status of a command changes. ",
                                    "enum": [
                                        "Command",
                                        "Invocation"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "OutputS3BucketName": {
                            "description": "The S3 bucket where the responses to the command executions should be stored. This was requested when issuing the command.",
                            "maxLength": 63,
                            "minLength": 3,
                            "type": "string"
                        },
                        "OutputS3KeyPrefix": {
                            "description": "The S3 directory path inside the bucket where the responses to the command executions should be stored. This was requested when issuing the command.",
                            "maxLength": 500,
                            "type": "string"
                        },
                        "OutputS3Region": {
                            "description": "(Deprecated) You can no longer specify this parameter. The system ignores it. Instead, Systems Manager automatically determines the Amazon S3 bucket region.",
                            "maxLength": 20,
                            "minLength": 3,
                            "type": "string"
                        },
                        "Parameters": {
                            "description": "The parameter values to be inserted in the document when executing the command.",
                            "items": {
                                "properties": {
                                    "key": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "RequestedDateTime": {
                            "description": "The date and time the command was requested.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "ServiceRole": {
                            "description": "The IAM service role that Run Command uses to act on your behalf when sending notifications about command status changes. ",
                            "type": "string"
                        },
                        "Status": {
                            "description": "The status of the command.",
                            "enum": [
                                "Pending",
                                "InProgress",
                                "Success",
                                "Cancelled",
                                "Failed",
                                "TimedOut",
                                "Cancelling"
                            ],
                            "type": "string"
                        },
                        "StatusDetails": {
                            "description": "<p>A detailed status of the command execution. StatusDetails includes more information than Status because it includes states resulting from error and concurrency control parameters. StatusDetails can show different results than Status. For more information about these statuses, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/monitor-commands.html\">Understanding Command Statuses</a> in the <i>AWS Systems Manager User Guide</i>. StatusDetails can be one of the following values:</p> <ul> <li> <p>Pending: The command has not been sent to any instances.</p> </li> <li> <p>In Progress: The command has been sent to at least one instance but has not reached a final state on all instances.</p> </li> <li> <p>Success: The command successfully executed on all invocations. This is a terminal state.</p> </li> <li> <p>Delivery Timed Out: The value of MaxErrors or more command invocations shows a status of Delivery Timed Out. This is a terminal state.</p> </li> <li> <p>Execution Timed Out: The value of MaxErrors or more command invocations shows a status of Execution Timed Out. This is a terminal state.</p> </li> <li> <p>Failed: The value of MaxErrors or more command invocations shows a status of Failed. This is a terminal state.</p> </li> <li> <p>Incomplete: The command was attempted on all instances and one or more invocations does not have a value of Success but not enough invocations failed for the status to be Failed. This is a terminal state.</p> </li> <li> <p>Canceled: The command was terminated before it was completed. This is a terminal state.</p> </li> <li> <p>Rate Exceeded: The number of instances targeted by the command exceeded the account limit for pending invocations. The system has canceled the command before executing it on any instance. This is a terminal state.</p> </li> </ul>",
                            "maxLength": 100,
                            "minLength": 0,
                            "type": "string"
                        },
                        "TargetCount": {
                            "description": "The number of targets for the command.",
                            "type": "integer"
                        },
                        "Targets": {
                            "description": "An array of search criteria that targets instances using a Key,Value combination that you specify. Targets is required if you don't provide one or more instance IDs in the call.",
                            "items": {
                                "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                                "properties": {
                                    "Key": {
                                        "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                        "type": "string"
                                    },
                                    "Values": {
                                        "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "maxItems": 50,
                                        "minItems": 0,
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            },
                            "maxItems": 5,
                            "minItems": 0,
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "CommandMaxResults": {
                "maximum": 50,
                "minimum": 1,
                "type": "integer"
            },
            "CommandPlugin": {
                "description": "Describes plugin details.",
                "properties": {
                    "Name": {
                        "description": "The name of the plugin. Must be one of the following: aws:updateAgent, aws:domainjoin, aws:applications, aws:runPowerShellScript, aws:psmodule, aws:cloudWatch, aws:runShellScript, or aws:updateSSMAgent. ",
                        "minLength": 4,
                        "type": "string"
                    },
                    "Output": {
                        "description": "Output of the plugin execution.",
                        "maxLength": 2500,
                        "type": "string"
                    },
                    "OutputS3BucketName": {
                        "description": "<p>The S3 bucket where the responses to the command executions should be stored. This was requested when issuing the command. For example, in the following response:</p> <p> test_folder/ab19cb99-a030-46dd-9dfc-8eSAMPLEPre-Fix/i-1234567876543/awsrunShellScript </p> <p>test_folder is the name of the Amazon S3 bucket;</p> <p> ab19cb99-a030-46dd-9dfc-8eSAMPLEPre-Fix is the name of the S3 prefix;</p> <p>i-1234567876543 is the instance ID;</p> <p>awsrunShellScript is the name of the plugin.</p>",
                        "maxLength": 63,
                        "minLength": 3,
                        "type": "string"
                    },
                    "OutputS3KeyPrefix": {
                        "description": "<p>The S3 directory path inside the bucket where the responses to the command executions should be stored. This was requested when issuing the command. For example, in the following response:</p> <p> test_folder/ab19cb99-a030-46dd-9dfc-8eSAMPLEPre-Fix/i-1234567876543/awsrunShellScript </p> <p>test_folder is the name of the Amazon S3 bucket;</p> <p> ab19cb99-a030-46dd-9dfc-8eSAMPLEPre-Fix is the name of the S3 prefix;</p> <p>i-1234567876543 is the instance ID;</p> <p>awsrunShellScript is the name of the plugin.</p>",
                        "maxLength": 500,
                        "type": "string"
                    },
                    "OutputS3Region": {
                        "description": "(Deprecated) You can no longer specify this parameter. The system ignores it. Instead, Systems Manager automatically determines the Amazon S3 bucket region.",
                        "maxLength": 20,
                        "minLength": 3,
                        "type": "string"
                    },
                    "ResponseCode": {
                        "description": "A numeric response code generated after executing the plugin. ",
                        "type": "integer"
                    },
                    "ResponseFinishDateTime": {
                        "description": "The time the plugin stopped executing. Could stop prematurely if, for example, a cancel command was sent. ",
                        "format": "date-time",
                        "type": "string"
                    },
                    "ResponseStartDateTime": {
                        "description": "The time the plugin started executing. ",
                        "format": "date-time",
                        "type": "string"
                    },
                    "StandardErrorUrl": {
                        "description": "The URL for the complete text written by the plugin to stderr. If execution is not yet complete, then this string is empty.",
                        "type": "string"
                    },
                    "StandardOutputUrl": {
                        "description": "The URL for the complete text written by the plugin to stdout in Amazon S3. If the Amazon S3 bucket for the command was not specified, then this string is empty.",
                        "type": "string"
                    },
                    "Status": {
                        "description": "The status of this plugin. You can execute a document with multiple plugins.",
                        "enum": [
                            "Pending",
                            "InProgress",
                            "Success",
                            "TimedOut",
                            "Cancelled",
                            "Failed"
                        ],
                        "type": "string"
                    },
                    "StatusDetails": {
                        "description": "<p>A detailed status of the plugin execution. StatusDetails includes more information than Status because it includes states resulting from error and concurrency control parameters. StatusDetails can show different results than Status. For more information about these statuses, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/monitor-commands.html\">Understanding Command Statuses</a> in the <i>AWS Systems Manager User Guide</i>. StatusDetails can be one of the following values:</p> <ul> <li> <p>Pending: The command has not been sent to the instance.</p> </li> <li> <p>In Progress: The command has been sent to the instance but has not reached a terminal state.</p> </li> <li> <p>Success: The execution of the command or plugin was successfully completed. This is a terminal state.</p> </li> <li> <p>Delivery Timed Out: The command was not delivered to the instance before the delivery timeout expired. Delivery timeouts do not count against the parent command's MaxErrors limit, but they do contribute to whether the parent command status is Success or Incomplete. This is a terminal state.</p> </li> <li> <p>Execution Timed Out: Command execution started on the instance, but the execution was not complete before the execution timeout expired. Execution timeouts count against the MaxErrors limit of the parent command. This is a terminal state.</p> </li> <li> <p>Failed: The command was not successful on the instance. For a plugin, this indicates that the result code was not zero. For a command invocation, this indicates that the result code for one or more plugins was not zero. Invocation failures count against the MaxErrors limit of the parent command. This is a terminal state.</p> </li> <li> <p>Canceled: The command was terminated before it was completed. This is a terminal state.</p> </li> <li> <p>Undeliverable: The command can't be delivered to the instance. The instance might not exist, or it might not be responding. Undeliverable invocations don't count against the parent command's MaxErrors limit, and they don't contribute to whether the parent command status is Success or Incomplete. This is a terminal state.</p> </li> <li> <p>Terminated: The parent command exceeded its MaxErrors limit and subsequent command invocations were canceled by the system. This is a terminal state.</p> </li> </ul>",
                        "maxLength": 100,
                        "minLength": 0,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CommandPluginList": {
                "items": {
                    "description": "Describes plugin details.",
                    "properties": {
                        "Name": {
                            "description": "The name of the plugin. Must be one of the following: aws:updateAgent, aws:domainjoin, aws:applications, aws:runPowerShellScript, aws:psmodule, aws:cloudWatch, aws:runShellScript, or aws:updateSSMAgent. ",
                            "minLength": 4,
                            "type": "string"
                        },
                        "Output": {
                            "description": "Output of the plugin execution.",
                            "maxLength": 2500,
                            "type": "string"
                        },
                        "OutputS3BucketName": {
                            "description": "<p>The S3 bucket where the responses to the command executions should be stored. This was requested when issuing the command. For example, in the following response:</p> <p> test_folder/ab19cb99-a030-46dd-9dfc-8eSAMPLEPre-Fix/i-1234567876543/awsrunShellScript </p> <p>test_folder is the name of the Amazon S3 bucket;</p> <p> ab19cb99-a030-46dd-9dfc-8eSAMPLEPre-Fix is the name of the S3 prefix;</p> <p>i-1234567876543 is the instance ID;</p> <p>awsrunShellScript is the name of the plugin.</p>",
                            "maxLength": 63,
                            "minLength": 3,
                            "type": "string"
                        },
                        "OutputS3KeyPrefix": {
                            "description": "<p>The S3 directory path inside the bucket where the responses to the command executions should be stored. This was requested when issuing the command. For example, in the following response:</p> <p> test_folder/ab19cb99-a030-46dd-9dfc-8eSAMPLEPre-Fix/i-1234567876543/awsrunShellScript </p> <p>test_folder is the name of the Amazon S3 bucket;</p> <p> ab19cb99-a030-46dd-9dfc-8eSAMPLEPre-Fix is the name of the S3 prefix;</p> <p>i-1234567876543 is the instance ID;</p> <p>awsrunShellScript is the name of the plugin.</p>",
                            "maxLength": 500,
                            "type": "string"
                        },
                        "OutputS3Region": {
                            "description": "(Deprecated) You can no longer specify this parameter. The system ignores it. Instead, Systems Manager automatically determines the Amazon S3 bucket region.",
                            "maxLength": 20,
                            "minLength": 3,
                            "type": "string"
                        },
                        "ResponseCode": {
                            "description": "A numeric response code generated after executing the plugin. ",
                            "type": "integer"
                        },
                        "ResponseFinishDateTime": {
                            "description": "The time the plugin stopped executing. Could stop prematurely if, for example, a cancel command was sent. ",
                            "format": "date-time",
                            "type": "string"
                        },
                        "ResponseStartDateTime": {
                            "description": "The time the plugin started executing. ",
                            "format": "date-time",
                            "type": "string"
                        },
                        "StandardErrorUrl": {
                            "description": "The URL for the complete text written by the plugin to stderr. If execution is not yet complete, then this string is empty.",
                            "type": "string"
                        },
                        "StandardOutputUrl": {
                            "description": "The URL for the complete text written by the plugin to stdout in Amazon S3. If the Amazon S3 bucket for the command was not specified, then this string is empty.",
                            "type": "string"
                        },
                        "Status": {
                            "description": "The status of this plugin. You can execute a document with multiple plugins.",
                            "enum": [
                                "Pending",
                                "InProgress",
                                "Success",
                                "TimedOut",
                                "Cancelled",
                                "Failed"
                            ],
                            "type": "string"
                        },
                        "StatusDetails": {
                            "description": "<p>A detailed status of the plugin execution. StatusDetails includes more information than Status because it includes states resulting from error and concurrency control parameters. StatusDetails can show different results than Status. For more information about these statuses, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/monitor-commands.html\">Understanding Command Statuses</a> in the <i>AWS Systems Manager User Guide</i>. StatusDetails can be one of the following values:</p> <ul> <li> <p>Pending: The command has not been sent to the instance.</p> </li> <li> <p>In Progress: The command has been sent to the instance but has not reached a terminal state.</p> </li> <li> <p>Success: The execution of the command or plugin was successfully completed. This is a terminal state.</p> </li> <li> <p>Delivery Timed Out: The command was not delivered to the instance before the delivery timeout expired. Delivery timeouts do not count against the parent command's MaxErrors limit, but they do contribute to whether the parent command status is Success or Incomplete. This is a terminal state.</p> </li> <li> <p>Execution Timed Out: Command execution started on the instance, but the execution was not complete before the execution timeout expired. Execution timeouts count against the MaxErrors limit of the parent command. This is a terminal state.</p> </li> <li> <p>Failed: The command was not successful on the instance. For a plugin, this indicates that the result code was not zero. For a command invocation, this indicates that the result code for one or more plugins was not zero. Invocation failures count against the MaxErrors limit of the parent command. This is a terminal state.</p> </li> <li> <p>Canceled: The command was terminated before it was completed. This is a terminal state.</p> </li> <li> <p>Undeliverable: The command can't be delivered to the instance. The instance might not exist, or it might not be responding. Undeliverable invocations don't count against the parent command's MaxErrors limit, and they don't contribute to whether the parent command status is Success or Incomplete. This is a terminal state.</p> </li> <li> <p>Terminated: The parent command exceeded its MaxErrors limit and subsequent command invocations were canceled by the system. This is a terminal state.</p> </li> </ul>",
                            "maxLength": 100,
                            "minLength": 0,
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "CommandPluginName": {
                "minLength": 4,
                "type": "string"
            },
            "CommandPluginOutput": {
                "maxLength": 2500,
                "type": "string"
            },
            "CommandPluginStatus": {
                "enum": [
                    "Pending",
                    "InProgress",
                    "Success",
                    "TimedOut",
                    "Cancelled",
                    "Failed"
                ],
                "type": "string"
            },
            "CommandStatus": {
                "enum": [
                    "Pending",
                    "InProgress",
                    "Success",
                    "Cancelled",
                    "Failed",
                    "TimedOut",
                    "Cancelling"
                ],
                "type": "string"
            },
            "Comment": {
                "maxLength": 100,
                "type": "string"
            },
            "CompletedCount": {
                "type": "integer"
            },
            "ComplianceExecutionId": {
                "maxLength": 100,
                "type": "string"
            },
            "ComplianceExecutionSummary": {
                "description": "A summary of the call execution that includes an execution ID, the type of execution (for example, <code>Command</code>), and the date/time of the execution using a datetime object that is saved in the following format: yyyy-MM-dd'T'HH:mm:ss'Z'.",
                "properties": {
                    "ExecutionId": {
                        "description": "An ID created by the system when <code>PutComplianceItems</code> was called. For example, <code>CommandID</code> is a valid execution ID. You can use this ID in subsequent calls.",
                        "maxLength": 100,
                        "type": "string"
                    },
                    "ExecutionTime": {
                        "description": "The time the execution ran as a datetime object that is saved in the following format: yyyy-MM-dd'T'HH:mm:ss'Z'.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "ExecutionType": {
                        "description": "The type of execution. For example, <code>Command</code> is a valid execution type.",
                        "maxLength": 50,
                        "type": "string"
                    }
                },
                "required": [
                    "ExecutionTime"
                ],
                "type": "object"
            },
            "ComplianceExecutionType": {
                "maxLength": 50,
                "type": "string"
            },
            "ComplianceFilterValue": {
                "type": "string"
            },
            "ComplianceItem": {
                "description": "Information about the compliance as defined by the resource type. For example, for a patch resource type, <code>Items</code> includes information about the PatchSeverity, Classification, etc.",
                "properties": {
                    "ComplianceType": {
                        "description": "The compliance type. For example, Association (for a State Manager association), Patch, or Custom:<code>string</code> are all valid compliance types.",
                        "maxLength": 100,
                        "minLength": 1,
                        "pattern": "[A-Za-z0-9_\\-]\\w+|Custom:[a-zA-Z0-9_\\-]\\w+",
                        "type": "string"
                    },
                    "Details": {
                        "description": "A \"Key\": \"Value\" tag combination for the compliance item.",
                        "items": {
                            "properties": {
                                "key": {
                                    "maxLength": 64,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "value": {
                                    "maxLength": 4096,
                                    "minLength": 0,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "ExecutionSummary": {
                        "description": "A summary for the compliance item. The summary includes an execution ID, the execution type (for example, command), and the execution time.",
                        "properties": {
                            "ExecutionId": {
                                "description": "An ID created by the system when <code>PutComplianceItems</code> was called. For example, <code>CommandID</code> is a valid execution ID. You can use this ID in subsequent calls.",
                                "maxLength": 100,
                                "type": "string"
                            },
                            "ExecutionTime": {
                                "description": "The time the execution ran as a datetime object that is saved in the following format: yyyy-MM-dd'T'HH:mm:ss'Z'.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "ExecutionType": {
                                "description": "The type of execution. For example, <code>Command</code> is a valid execution type.",
                                "maxLength": 50,
                                "type": "string"
                            }
                        },
                        "required": [
                            "ExecutionTime"
                        ],
                        "type": "object"
                    },
                    "Id": {
                        "description": "An ID for the compliance item. For example, if the compliance item is a Windows patch, the ID could be the number of the KB article; for example: KB4010320.",
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string"
                    },
                    "ResourceId": {
                        "description": "An ID for the resource. For a managed instance, this is the instance ID.",
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string"
                    },
                    "ResourceType": {
                        "description": "The type of resource. <code>ManagedInstance</code> is currently the only supported resource type.",
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Severity": {
                        "description": "The severity of the compliance status. Severity can be one of the following: Critical, High, Medium, Low, Informational, Unspecified.",
                        "enum": [
                            "CRITICAL",
                            "HIGH",
                            "MEDIUM",
                            "LOW",
                            "INFORMATIONAL",
                            "UNSPECIFIED"
                        ],
                        "type": "string"
                    },
                    "Status": {
                        "description": "The status of the compliance item. An item is either COMPLIANT or NON_COMPLIANT.",
                        "enum": [
                            "COMPLIANT",
                            "NON_COMPLIANT"
                        ],
                        "type": "string"
                    },
                    "Title": {
                        "description": "A title for the compliance item. For example, if the compliance item is a Windows patch, the title could be the title of the KB article for the patch; for example: Security Update for Active Directory Federation Services.",
                        "maxLength": 500,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ComplianceItemContentHash": {
                "maxLength": 256,
                "type": "string"
            },
            "ComplianceItemDetails": {
                "items": {
                    "properties": {
                        "key": {
                            "maxLength": 64,
                            "minLength": 1,
                            "type": "string"
                        },
                        "value": {
                            "maxLength": 4096,
                            "minLength": 0,
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "ComplianceItemEntry": {
                "description": "Information about a compliance item.",
                "properties": {
                    "Details": {
                        "description": "A \"Key\": \"Value\" tag combination for the compliance item.",
                        "items": {
                            "properties": {
                                "key": {
                                    "maxLength": 64,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "value": {
                                    "maxLength": 4096,
                                    "minLength": 0,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Id": {
                        "description": "The compliance item ID. For example, if the compliance item is a Windows patch, the ID could be the number of the KB article.",
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Severity": {
                        "description": "The severity of the compliance status. Severity can be one of the following: Critical, High, Medium, Low, Informational, Unspecified.",
                        "enum": [
                            "CRITICAL",
                            "HIGH",
                            "MEDIUM",
                            "LOW",
                            "INFORMATIONAL",
                            "UNSPECIFIED"
                        ],
                        "type": "string"
                    },
                    "Status": {
                        "description": "The status of the compliance item. An item is either COMPLIANT or NON_COMPLIANT.",
                        "enum": [
                            "COMPLIANT",
                            "NON_COMPLIANT"
                        ],
                        "type": "string"
                    },
                    "Title": {
                        "description": "The title of the compliance item. For example, if the compliance item is a Windows patch, the title could be the title of the KB article for the patch; for example: Security Update for Active Directory Federation Services. ",
                        "maxLength": 500,
                        "type": "string"
                    }
                },
                "required": [
                    "Severity",
                    "Status"
                ],
                "type": "object"
            },
            "ComplianceItemEntryList": {
                "items": {
                    "description": "Information about a compliance item.",
                    "properties": {
                        "Details": {
                            "description": "A \"Key\": \"Value\" tag combination for the compliance item.",
                            "items": {
                                "properties": {
                                    "key": {
                                        "maxLength": 64,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "value": {
                                        "maxLength": 4096,
                                        "minLength": 0,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "Id": {
                            "description": "The compliance item ID. For example, if the compliance item is a Windows patch, the ID could be the number of the KB article.",
                            "maxLength": 100,
                            "minLength": 1,
                            "type": "string"
                        },
                        "Severity": {
                            "description": "The severity of the compliance status. Severity can be one of the following: Critical, High, Medium, Low, Informational, Unspecified.",
                            "enum": [
                                "CRITICAL",
                                "HIGH",
                                "MEDIUM",
                                "LOW",
                                "INFORMATIONAL",
                                "UNSPECIFIED"
                            ],
                            "type": "string"
                        },
                        "Status": {
                            "description": "The status of the compliance item. An item is either COMPLIANT or NON_COMPLIANT.",
                            "enum": [
                                "COMPLIANT",
                                "NON_COMPLIANT"
                            ],
                            "type": "string"
                        },
                        "Title": {
                            "description": "The title of the compliance item. For example, if the compliance item is a Windows patch, the title could be the title of the KB article for the patch; for example: Security Update for Active Directory Federation Services. ",
                            "maxLength": 500,
                            "type": "string"
                        }
                    },
                    "required": [
                        "Severity",
                        "Status"
                    ],
                    "type": "object"
                },
                "maxItems": 10000,
                "minItems": 0,
                "type": "array"
            },
            "ComplianceItemId": {
                "maxLength": 100,
                "minLength": 1,
                "type": "string"
            },
            "ComplianceItemList": {
                "items": {
                    "description": "Information about the compliance as defined by the resource type. For example, for a patch resource type, <code>Items</code> includes information about the PatchSeverity, Classification, etc.",
                    "properties": {
                        "ComplianceType": {
                            "description": "The compliance type. For example, Association (for a State Manager association), Patch, or Custom:<code>string</code> are all valid compliance types.",
                            "maxLength": 100,
                            "minLength": 1,
                            "pattern": "[A-Za-z0-9_\\-]\\w+|Custom:[a-zA-Z0-9_\\-]\\w+",
                            "type": "string"
                        },
                        "Details": {
                            "description": "A \"Key\": \"Value\" tag combination for the compliance item.",
                            "items": {
                                "properties": {
                                    "key": {
                                        "maxLength": 64,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "value": {
                                        "maxLength": 4096,
                                        "minLength": 0,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "ExecutionSummary": {
                            "description": "A summary for the compliance item. The summary includes an execution ID, the execution type (for example, command), and the execution time.",
                            "properties": {
                                "ExecutionId": {
                                    "description": "An ID created by the system when <code>PutComplianceItems</code> was called. For example, <code>CommandID</code> is a valid execution ID. You can use this ID in subsequent calls.",
                                    "maxLength": 100,
                                    "type": "string"
                                },
                                "ExecutionTime": {
                                    "description": "The time the execution ran as a datetime object that is saved in the following format: yyyy-MM-dd'T'HH:mm:ss'Z'.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "ExecutionType": {
                                    "description": "The type of execution. For example, <code>Command</code> is a valid execution type.",
                                    "maxLength": 50,
                                    "type": "string"
                                }
                            },
                            "required": [
                                "ExecutionTime"
                            ],
                            "type": "object"
                        },
                        "Id": {
                            "description": "An ID for the compliance item. For example, if the compliance item is a Windows patch, the ID could be the number of the KB article; for example: KB4010320.",
                            "maxLength": 100,
                            "minLength": 1,
                            "type": "string"
                        },
                        "ResourceId": {
                            "description": "An ID for the resource. For a managed instance, this is the instance ID.",
                            "maxLength": 100,
                            "minLength": 1,
                            "type": "string"
                        },
                        "ResourceType": {
                            "description": "The type of resource. <code>ManagedInstance</code> is currently the only supported resource type.",
                            "maxLength": 50,
                            "minLength": 1,
                            "type": "string"
                        },
                        "Severity": {
                            "description": "The severity of the compliance status. Severity can be one of the following: Critical, High, Medium, Low, Informational, Unspecified.",
                            "enum": [
                                "CRITICAL",
                                "HIGH",
                                "MEDIUM",
                                "LOW",
                                "INFORMATIONAL",
                                "UNSPECIFIED"
                            ],
                            "type": "string"
                        },
                        "Status": {
                            "description": "The status of the compliance item. An item is either COMPLIANT or NON_COMPLIANT.",
                            "enum": [
                                "COMPLIANT",
                                "NON_COMPLIANT"
                            ],
                            "type": "string"
                        },
                        "Title": {
                            "description": "A title for the compliance item. For example, if the compliance item is a Windows patch, the title could be the title of the KB article for the patch; for example: Security Update for Active Directory Federation Services.",
                            "maxLength": 500,
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "ComplianceItemTitle": {
                "maxLength": 500,
                "type": "string"
            },
            "ComplianceQueryOperatorType": {
                "enum": [
                    "EQUAL",
                    "NOT_EQUAL",
                    "BEGIN_WITH",
                    "LESS_THAN",
                    "GREATER_THAN"
                ],
                "type": "string"
            },
            "ComplianceResourceId": {
                "maxLength": 100,
                "minLength": 1,
                "type": "string"
            },
            "ComplianceResourceIdList": {
                "items": {
                    "maxLength": 100,
                    "minLength": 1,
                    "type": "string"
                },
                "minItems": 1,
                "type": "array"
            },
            "ComplianceResourceType": {
                "maxLength": 50,
                "minLength": 1,
                "type": "string"
            },
            "ComplianceResourceTypeList": {
                "items": {
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string"
                },
                "minItems": 1,
                "type": "array"
            },
            "ComplianceSeverity": {
                "enum": [
                    "CRITICAL",
                    "HIGH",
                    "MEDIUM",
                    "LOW",
                    "INFORMATIONAL",
                    "UNSPECIFIED"
                ],
                "type": "string"
            },
            "ComplianceStatus": {
                "enum": [
                    "COMPLIANT",
                    "NON_COMPLIANT"
                ],
                "type": "string"
            },
            "ComplianceStringFilter": {
                "description": "One or more filters. Use a filter to return a more specific list of results.",
                "properties": {
                    "Key": {
                        "description": "The name of the filter.",
                        "maxLength": 200,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Type": {
                        "description": "The type of comparison that should be performed for the value: Equal, NotEqual, BeginWith, LessThan, or GreaterThan.",
                        "enum": [
                            "EQUAL",
                            "NOT_EQUAL",
                            "BEGIN_WITH",
                            "LESS_THAN",
                            "GREATER_THAN"
                        ],
                        "type": "string"
                    },
                    "Values": {
                        "description": "The value for which to search.",
                        "items": {
                            "type": "string"
                        },
                        "maxItems": 20,
                        "minItems": 1,
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "ComplianceStringFilterKey": {
                "maxLength": 200,
                "minLength": 1,
                "type": "string"
            },
            "ComplianceStringFilterList": {
                "items": {
                    "description": "One or more filters. Use a filter to return a more specific list of results.",
                    "properties": {
                        "Key": {
                            "description": "The name of the filter.",
                            "maxLength": 200,
                            "minLength": 1,
                            "type": "string"
                        },
                        "Type": {
                            "description": "The type of comparison that should be performed for the value: Equal, NotEqual, BeginWith, LessThan, or GreaterThan.",
                            "enum": [
                                "EQUAL",
                                "NOT_EQUAL",
                                "BEGIN_WITH",
                                "LESS_THAN",
                                "GREATER_THAN"
                            ],
                            "type": "string"
                        },
                        "Values": {
                            "description": "The value for which to search.",
                            "items": {
                                "type": "string"
                            },
                            "maxItems": 20,
                            "minItems": 1,
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "ComplianceStringFilterValueList": {
                "items": {
                    "type": "string"
                },
                "maxItems": 20,
                "minItems": 1,
                "type": "array"
            },
            "ComplianceSummaryCount": {
                "type": "integer"
            },
            "ComplianceSummaryItem": {
                "description": "A summary of compliance information by compliance type.",
                "properties": {
                    "ComplianceType": {
                        "description": "The type of compliance item. For example, the compliance type can be Association, Patch, or Custom:string.",
                        "maxLength": 100,
                        "minLength": 1,
                        "pattern": "[A-Za-z0-9_\\-]\\w+|Custom:[a-zA-Z0-9_\\-]\\w+",
                        "type": "string"
                    },
                    "CompliantSummary": {
                        "description": "A list of COMPLIANT items for the specified compliance type.",
                        "properties": {
                            "CompliantCount": {
                                "description": "The total number of resources that are compliant.",
                                "type": "integer"
                            },
                            "SeveritySummary": {
                                "description": "A summary of the compliance severity by compliance type.",
                                "properties": {
                                    "CriticalCount": {
                                        "description": "The total number of resources or compliance items that have a severity level of critical. Critical severity is determined by the organization that published the compliance items.",
                                        "type": "integer"
                                    },
                                    "HighCount": {
                                        "description": "The total number of resources or compliance items that have a severity level of high. High severity is determined by the organization that published the compliance items.",
                                        "type": "integer"
                                    },
                                    "InformationalCount": {
                                        "description": "The total number of resources or compliance items that have a severity level of informational. Informational severity is determined by the organization that published the compliance items.",
                                        "type": "integer"
                                    },
                                    "LowCount": {
                                        "description": "The total number of resources or compliance items that have a severity level of low. Low severity is determined by the organization that published the compliance items.",
                                        "type": "integer"
                                    },
                                    "MediumCount": {
                                        "description": "The total number of resources or compliance items that have a severity level of medium. Medium severity is determined by the organization that published the compliance items.",
                                        "type": "integer"
                                    },
                                    "UnspecifiedCount": {
                                        "description": "The total number of resources or compliance items that have a severity level of unspecified. Unspecified severity is determined by the organization that published the compliance items.",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    },
                    "NonCompliantSummary": {
                        "description": "A list of NON_COMPLIANT items for the specified compliance type.",
                        "properties": {
                            "NonCompliantCount": {
                                "description": "The total number of compliance items that are not compliant.",
                                "type": "integer"
                            },
                            "SeveritySummary": {
                                "description": "A summary of the non-compliance severity by compliance type",
                                "properties": {
                                    "CriticalCount": {
                                        "description": "The total number of resources or compliance items that have a severity level of critical. Critical severity is determined by the organization that published the compliance items.",
                                        "type": "integer"
                                    },
                                    "HighCount": {
                                        "description": "The total number of resources or compliance items that have a severity level of high. High severity is determined by the organization that published the compliance items.",
                                        "type": "integer"
                                    },
                                    "InformationalCount": {
                                        "description": "The total number of resources or compliance items that have a severity level of informational. Informational severity is determined by the organization that published the compliance items.",
                                        "type": "integer"
                                    },
                                    "LowCount": {
                                        "description": "The total number of resources or compliance items that have a severity level of low. Low severity is determined by the organization that published the compliance items.",
                                        "type": "integer"
                                    },
                                    "MediumCount": {
                                        "description": "The total number of resources or compliance items that have a severity level of medium. Medium severity is determined by the organization that published the compliance items.",
                                        "type": "integer"
                                    },
                                    "UnspecifiedCount": {
                                        "description": "The total number of resources or compliance items that have a severity level of unspecified. Unspecified severity is determined by the organization that published the compliance items.",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ComplianceSummaryItemList": {
                "items": {
                    "description": "A summary of compliance information by compliance type.",
                    "properties": {
                        "ComplianceType": {
                            "description": "The type of compliance item. For example, the compliance type can be Association, Patch, or Custom:string.",
                            "maxLength": 100,
                            "minLength": 1,
                            "pattern": "[A-Za-z0-9_\\-]\\w+|Custom:[a-zA-Z0-9_\\-]\\w+",
                            "type": "string"
                        },
                        "CompliantSummary": {
                            "description": "A list of COMPLIANT items for the specified compliance type.",
                            "properties": {
                                "CompliantCount": {
                                    "description": "The total number of resources that are compliant.",
                                    "type": "integer"
                                },
                                "SeveritySummary": {
                                    "description": "A summary of the compliance severity by compliance type.",
                                    "properties": {
                                        "CriticalCount": {
                                            "description": "The total number of resources or compliance items that have a severity level of critical. Critical severity is determined by the organization that published the compliance items.",
                                            "type": "integer"
                                        },
                                        "HighCount": {
                                            "description": "The total number of resources or compliance items that have a severity level of high. High severity is determined by the organization that published the compliance items.",
                                            "type": "integer"
                                        },
                                        "InformationalCount": {
                                            "description": "The total number of resources or compliance items that have a severity level of informational. Informational severity is determined by the organization that published the compliance items.",
                                            "type": "integer"
                                        },
                                        "LowCount": {
                                            "description": "The total number of resources or compliance items that have a severity level of low. Low severity is determined by the organization that published the compliance items.",
                                            "type": "integer"
                                        },
                                        "MediumCount": {
                                            "description": "The total number of resources or compliance items that have a severity level of medium. Medium severity is determined by the organization that published the compliance items.",
                                            "type": "integer"
                                        },
                                        "UnspecifiedCount": {
                                            "description": "The total number of resources or compliance items that have a severity level of unspecified. Unspecified severity is determined by the organization that published the compliance items.",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "NonCompliantSummary": {
                            "description": "A list of NON_COMPLIANT items for the specified compliance type.",
                            "properties": {
                                "NonCompliantCount": {
                                    "description": "The total number of compliance items that are not compliant.",
                                    "type": "integer"
                                },
                                "SeveritySummary": {
                                    "description": "A summary of the non-compliance severity by compliance type",
                                    "properties": {
                                        "CriticalCount": {
                                            "description": "The total number of resources or compliance items that have a severity level of critical. Critical severity is determined by the organization that published the compliance items.",
                                            "type": "integer"
                                        },
                                        "HighCount": {
                                            "description": "The total number of resources or compliance items that have a severity level of high. High severity is determined by the organization that published the compliance items.",
                                            "type": "integer"
                                        },
                                        "InformationalCount": {
                                            "description": "The total number of resources or compliance items that have a severity level of informational. Informational severity is determined by the organization that published the compliance items.",
                                            "type": "integer"
                                        },
                                        "LowCount": {
                                            "description": "The total number of resources or compliance items that have a severity level of low. Low severity is determined by the organization that published the compliance items.",
                                            "type": "integer"
                                        },
                                        "MediumCount": {
                                            "description": "The total number of resources or compliance items that have a severity level of medium. Medium severity is determined by the organization that published the compliance items.",
                                            "type": "integer"
                                        },
                                        "UnspecifiedCount": {
                                            "description": "The total number of resources or compliance items that have a severity level of unspecified. Unspecified severity is determined by the organization that published the compliance items.",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "ComplianceTypeCountLimitExceededException": {},
            "ComplianceTypeName": {
                "maxLength": 100,
                "minLength": 1,
                "pattern": "[A-Za-z0-9_\\-]\\w+|Custom:[a-zA-Z0-9_\\-]\\w+",
                "type": "string"
            },
            "CompliantSummary": {
                "description": "A summary of resources that are compliant. The summary is organized according to the resource count for each compliance type.",
                "properties": {
                    "CompliantCount": {
                        "description": "The total number of resources that are compliant.",
                        "type": "integer"
                    },
                    "SeveritySummary": {
                        "description": "A summary of the compliance severity by compliance type.",
                        "properties": {
                            "CriticalCount": {
                                "description": "The total number of resources or compliance items that have a severity level of critical. Critical severity is determined by the organization that published the compliance items.",
                                "type": "integer"
                            },
                            "HighCount": {
                                "description": "The total number of resources or compliance items that have a severity level of high. High severity is determined by the organization that published the compliance items.",
                                "type": "integer"
                            },
                            "InformationalCount": {
                                "description": "The total number of resources or compliance items that have a severity level of informational. Informational severity is determined by the organization that published the compliance items.",
                                "type": "integer"
                            },
                            "LowCount": {
                                "description": "The total number of resources or compliance items that have a severity level of low. Low severity is determined by the organization that published the compliance items.",
                                "type": "integer"
                            },
                            "MediumCount": {
                                "description": "The total number of resources or compliance items that have a severity level of medium. Medium severity is determined by the organization that published the compliance items.",
                                "type": "integer"
                            },
                            "UnspecifiedCount": {
                                "description": "The total number of resources or compliance items that have a severity level of unspecified. Unspecified severity is determined by the organization that published the compliance items.",
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ComputerName": {
                "maxLength": 255,
                "minLength": 1,
                "type": "string"
            },
            "ConnectionStatus": {
                "enum": [
                    "Connected",
                    "NotConnected"
                ],
                "type": "string"
            },
            "ContentLength": {
                "type": "integer"
            },
            "CreateActivationRequest": {
                "properties": {
                    "DefaultInstanceName": {
                        "description": "<p>The name of the registered, managed instance as it will appear in the Amazon EC2 console or when you use the AWS command line tools to list EC2 resources.</p> <important> <p>Do not enter personally identifiable information in this field.</p> </important>",
                        "maxLength": 256,
                        "minLength": 0,
                        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                        "type": "string"
                    },
                    "Description": {
                        "description": "<p>A user-defined description of the resource that you want to register with Amazon EC2. </p> <important> <p>Do not enter personally identifiable information in this field.</p> </important>",
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    },
                    "ExpirationDate": {
                        "description": "The date by which this activation request should expire. The default value is 24 hours.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "IamRole": {
                        "description": "The Amazon Identity and Access Management (IAM) role that you want to assign to the managed instance. ",
                        "maxLength": 64,
                        "type": "string"
                    },
                    "RegistrationLimit": {
                        "description": "Specify the maximum number of managed instances you want to register. The default value is 1 instance.",
                        "maximum": 1000,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "Tags": {
                        "description": "<p>Optional metadata that you assign to a resource. Tags enable you to categorize a resource in different ways, such as by purpose, owner, or environment. For example, you might want to tag an activation to identify which servers or virtual machines (VMs) in your on-premises environment you intend to activate. In this case, you could specify the following key name/value pairs:</p> <ul> <li> <p> <code>Key=OS,Value=Windows</code> </p> </li> <li> <p> <code>Key=Environment,Value=Production</code> </p> </li> </ul> <important> <p>When you install SSM Agent on your on-premises servers and VMs, you specify an activation ID and code. When you specify the activation ID and code, tags assigned to the activation are automatically applied to the on-premises servers or VMs.</p> </important> <p>You can't add tags to or delete tags from an existing activation. You can tag your on-premises servers and VMs after they connect to Systems Manager for the first time and are assigned a managed instance ID. This means they are listed in the AWS Systems Manager console with an ID that is prefixed with \"mi-\". For information about how to add tags to your managed instances, see <a>AddTagsToResource</a>. For information about how to remove tags from your managed instances, see <a>RemoveTagsFromResource</a>.</p>",
                        "items": {
                            "description": "Metadata that you assign to your AWS resources. Tags enable you to categorize your resources in different ways, for example, by purpose, owner, or environment. In Systems Manager, you can apply tags to documents, managed instances, Maintenance Windows, Parameter Store parameters, and patch baselines.",
                            "properties": {
                                "Key": {
                                    "description": "The name of the tag.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "The value of the tag.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Key",
                                "Value"
                            ],
                            "type": "object"
                        },
                        "maxItems": 1000,
                        "type": "array"
                    }
                },
                "required": [
                    "IamRole"
                ],
                "type": "object"
            },
            "CreateActivationResult": {
                "properties": {
                    "ActivationCode": {
                        "description": "The code the system generates when it processes the activation. The activation code functions like a password to validate the activation ID. ",
                        "maxLength": 250,
                        "minLength": 20,
                        "type": "string"
                    },
                    "ActivationId": {
                        "description": "The ID number generated by the system when it processed the activation. The activation ID functions like a user name.",
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateAssociationBatchRequest": {
                "properties": {
                    "Entries": {
                        "description": "One or more associations.",
                        "items": {
                            "description": "Describes the association of a Systems Manager SSM document and an instance.",
                            "properties": {
                                "AssociationName": {
                                    "description": "Specify a descriptive name for the association.",
                                    "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                    "type": "string"
                                },
                                "AutomationTargetParameterName": {
                                    "description": "Specify the target for the association. This target is required for associations that use an Automation document and target resources by using rate controls.",
                                    "maxLength": 50,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "ComplianceSeverity": {
                                    "description": "The severity level to assign to the association.",
                                    "enum": [
                                        "CRITICAL",
                                        "HIGH",
                                        "MEDIUM",
                                        "LOW",
                                        "UNSPECIFIED"
                                    ],
                                    "type": "string"
                                },
                                "DocumentVersion": {
                                    "description": "The document version.",
                                    "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                    "type": "string"
                                },
                                "InstanceId": {
                                    "description": "The ID of the instance. ",
                                    "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                                    "type": "string"
                                },
                                "MaxConcurrency": {
                                    "description": "<p>The maximum number of targets allowed to run the association at the same time. You can specify a number, for example 10, or a percentage of the target set, for example 10%. The default value is 100%, which means all targets run the association at the same time.</p> <p>If a new instance starts and attempts to execute an association while Systems Manager is executing MaxConcurrency associations, the association is allowed to run. During the next association interval, the new instance will process its association within the limit specified for MaxConcurrency.</p>",
                                    "maxLength": 7,
                                    "minLength": 1,
                                    "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                                    "type": "string"
                                },
                                "MaxErrors": {
                                    "description": "<p>The number of errors that are allowed before the system stops sending requests to run the association on additional targets. You can specify either an absolute number of errors, for example 10, or a percentage of the target set, for example 10%. If you specify 3, for example, the system stops sending requests when the fourth error is received. If you specify 0, then the system stops sending requests after the first error is returned. If you run an association on 50 instances and set MaxError to 10%, then the system stops sending the request when the sixth error is received.</p> <p>Executions that are already running an association when MaxErrors is reached are allowed to complete, but some of these executions may fail as well. If you need to ensure that there won't be more than max-errors failed executions, set MaxConcurrency to 1 so that executions proceed one at a time.</p>",
                                    "maxLength": 7,
                                    "minLength": 1,
                                    "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "<p>The name of the SSM document that contains the configuration information for the instance. You can specify Command, Policy, or Automation documents.</p> <p>You can specify AWS-predefined documents, documents you created, or a document that is shared with you from another account.</p> <p>For SSM documents that are shared with you from other AWS accounts, you must specify the complete SSM document ARN, in the following format:</p> <p> <code>arn:aws:ssm:<i>region</i>:<i>account-id</i>:document/<i>document-name</i> </code> </p> <p>For example:</p> <p> <code>arn:aws:ssm:us-east-2:12345678912:document/My-Shared-Document</code> </p> <p>For AWS-predefined documents and SSM documents you created in your account, you only need to specify the document name. For example, <code>AWS-ApplyPatchBaseline</code> or <code>My-Document</code>.</p>",
                                    "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                                    "type": "string"
                                },
                                "OutputLocation": {
                                    "description": "An Amazon S3 bucket where you want to store the results of this request.",
                                    "properties": {
                                        "S3Location": {
                                            "description": "An Amazon S3 bucket where you want to store the results of this request.",
                                            "properties": {
                                                "OutputS3BucketName": {
                                                    "description": "The name of the Amazon S3 bucket.",
                                                    "maxLength": 63,
                                                    "minLength": 3,
                                                    "type": "string"
                                                },
                                                "OutputS3KeyPrefix": {
                                                    "description": "The Amazon S3 bucket subfolder.",
                                                    "maxLength": 500,
                                                    "type": "string"
                                                },
                                                "OutputS3Region": {
                                                    "description": "(Deprecated) You can no longer specify this parameter. The system ignores it. Instead, Systems Manager automatically determines the Amazon S3 bucket region.",
                                                    "maxLength": 20,
                                                    "minLength": 3,
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "Parameters": {
                                    "description": "A description of the parameters for a document. ",
                                    "items": {
                                        "properties": {
                                            "key": {
                                                "type": "string"
                                            },
                                            "value": {
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "ScheduleExpression": {
                                    "description": "A cron expression that specifies a schedule when the association runs.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Targets": {
                                    "description": "The instances targeted by the request.",
                                    "items": {
                                        "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                                        "properties": {
                                            "Key": {
                                                "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                "maxLength": 128,
                                                "minLength": 1,
                                                "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                                "type": "string"
                                            },
                                            "Values": {
                                                "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "maxItems": 50,
                                                "minItems": 0,
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "maxItems": 5,
                                    "minItems": 0,
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Name"
                            ],
                            "type": "object"
                        },
                        "minItems": 1,
                        "type": "array"
                    }
                },
                "required": [
                    "Entries"
                ],
                "type": "object"
            },
            "CreateAssociationBatchRequestEntries": {
                "items": {
                    "description": "Describes the association of a Systems Manager SSM document and an instance.",
                    "properties": {
                        "AssociationName": {
                            "description": "Specify a descriptive name for the association.",
                            "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                            "type": "string"
                        },
                        "AutomationTargetParameterName": {
                            "description": "Specify the target for the association. This target is required for associations that use an Automation document and target resources by using rate controls.",
                            "maxLength": 50,
                            "minLength": 1,
                            "type": "string"
                        },
                        "ComplianceSeverity": {
                            "description": "The severity level to assign to the association.",
                            "enum": [
                                "CRITICAL",
                                "HIGH",
                                "MEDIUM",
                                "LOW",
                                "UNSPECIFIED"
                            ],
                            "type": "string"
                        },
                        "DocumentVersion": {
                            "description": "The document version.",
                            "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                            "type": "string"
                        },
                        "InstanceId": {
                            "description": "The ID of the instance. ",
                            "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                            "type": "string"
                        },
                        "MaxConcurrency": {
                            "description": "<p>The maximum number of targets allowed to run the association at the same time. You can specify a number, for example 10, or a percentage of the target set, for example 10%. The default value is 100%, which means all targets run the association at the same time.</p> <p>If a new instance starts and attempts to execute an association while Systems Manager is executing MaxConcurrency associations, the association is allowed to run. During the next association interval, the new instance will process its association within the limit specified for MaxConcurrency.</p>",
                            "maxLength": 7,
                            "minLength": 1,
                            "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                            "type": "string"
                        },
                        "MaxErrors": {
                            "description": "<p>The number of errors that are allowed before the system stops sending requests to run the association on additional targets. You can specify either an absolute number of errors, for example 10, or a percentage of the target set, for example 10%. If you specify 3, for example, the system stops sending requests when the fourth error is received. If you specify 0, then the system stops sending requests after the first error is returned. If you run an association on 50 instances and set MaxError to 10%, then the system stops sending the request when the sixth error is received.</p> <p>Executions that are already running an association when MaxErrors is reached are allowed to complete, but some of these executions may fail as well. If you need to ensure that there won't be more than max-errors failed executions, set MaxConcurrency to 1 so that executions proceed one at a time.</p>",
                            "maxLength": 7,
                            "minLength": 1,
                            "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                            "type": "string"
                        },
                        "Name": {
                            "description": "<p>The name of the SSM document that contains the configuration information for the instance. You can specify Command, Policy, or Automation documents.</p> <p>You can specify AWS-predefined documents, documents you created, or a document that is shared with you from another account.</p> <p>For SSM documents that are shared with you from other AWS accounts, you must specify the complete SSM document ARN, in the following format:</p> <p> <code>arn:aws:ssm:<i>region</i>:<i>account-id</i>:document/<i>document-name</i> </code> </p> <p>For example:</p> <p> <code>arn:aws:ssm:us-east-2:12345678912:document/My-Shared-Document</code> </p> <p>For AWS-predefined documents and SSM documents you created in your account, you only need to specify the document name. For example, <code>AWS-ApplyPatchBaseline</code> or <code>My-Document</code>.</p>",
                            "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                            "type": "string"
                        },
                        "OutputLocation": {
                            "description": "An Amazon S3 bucket where you want to store the results of this request.",
                            "properties": {
                                "S3Location": {
                                    "description": "An Amazon S3 bucket where you want to store the results of this request.",
                                    "properties": {
                                        "OutputS3BucketName": {
                                            "description": "The name of the Amazon S3 bucket.",
                                            "maxLength": 63,
                                            "minLength": 3,
                                            "type": "string"
                                        },
                                        "OutputS3KeyPrefix": {
                                            "description": "The Amazon S3 bucket subfolder.",
                                            "maxLength": 500,
                                            "type": "string"
                                        },
                                        "OutputS3Region": {
                                            "description": "(Deprecated) You can no longer specify this parameter. The system ignores it. Instead, Systems Manager automatically determines the Amazon S3 bucket region.",
                                            "maxLength": 20,
                                            "minLength": 3,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "Parameters": {
                            "description": "A description of the parameters for a document. ",
                            "items": {
                                "properties": {
                                    "key": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "ScheduleExpression": {
                            "description": "A cron expression that specifies a schedule when the association runs.",
                            "maxLength": 256,
                            "minLength": 1,
                            "type": "string"
                        },
                        "Targets": {
                            "description": "The instances targeted by the request.",
                            "items": {
                                "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                                "properties": {
                                    "Key": {
                                        "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                        "type": "string"
                                    },
                                    "Values": {
                                        "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "maxItems": 50,
                                        "minItems": 0,
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            },
                            "maxItems": 5,
                            "minItems": 0,
                            "type": "array"
                        }
                    },
                    "required": [
                        "Name"
                    ],
                    "type": "object"
                },
                "minItems": 1,
                "type": "array"
            },
            "CreateAssociationBatchRequestEntry": {
                "description": "Describes the association of a Systems Manager SSM document and an instance.",
                "properties": {
                    "AssociationName": {
                        "description": "Specify a descriptive name for the association.",
                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                        "type": "string"
                    },
                    "AutomationTargetParameterName": {
                        "description": "Specify the target for the association. This target is required for associations that use an Automation document and target resources by using rate controls.",
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string"
                    },
                    "ComplianceSeverity": {
                        "description": "The severity level to assign to the association.",
                        "enum": [
                            "CRITICAL",
                            "HIGH",
                            "MEDIUM",
                            "LOW",
                            "UNSPECIFIED"
                        ],
                        "type": "string"
                    },
                    "DocumentVersion": {
                        "description": "The document version.",
                        "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                        "type": "string"
                    },
                    "InstanceId": {
                        "description": "The ID of the instance. ",
                        "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                        "type": "string"
                    },
                    "MaxConcurrency": {
                        "description": "<p>The maximum number of targets allowed to run the association at the same time. You can specify a number, for example 10, or a percentage of the target set, for example 10%. The default value is 100%, which means all targets run the association at the same time.</p> <p>If a new instance starts and attempts to execute an association while Systems Manager is executing MaxConcurrency associations, the association is allowed to run. During the next association interval, the new instance will process its association within the limit specified for MaxConcurrency.</p>",
                        "maxLength": 7,
                        "minLength": 1,
                        "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                        "type": "string"
                    },
                    "MaxErrors": {
                        "description": "<p>The number of errors that are allowed before the system stops sending requests to run the association on additional targets. You can specify either an absolute number of errors, for example 10, or a percentage of the target set, for example 10%. If you specify 3, for example, the system stops sending requests when the fourth error is received. If you specify 0, then the system stops sending requests after the first error is returned. If you run an association on 50 instances and set MaxError to 10%, then the system stops sending the request when the sixth error is received.</p> <p>Executions that are already running an association when MaxErrors is reached are allowed to complete, but some of these executions may fail as well. If you need to ensure that there won't be more than max-errors failed executions, set MaxConcurrency to 1 so that executions proceed one at a time.</p>",
                        "maxLength": 7,
                        "minLength": 1,
                        "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                        "type": "string"
                    },
                    "Name": {
                        "description": "<p>The name of the SSM document that contains the configuration information for the instance. You can specify Command, Policy, or Automation documents.</p> <p>You can specify AWS-predefined documents, documents you created, or a document that is shared with you from another account.</p> <p>For SSM documents that are shared with you from other AWS accounts, you must specify the complete SSM document ARN, in the following format:</p> <p> <code>arn:aws:ssm:<i>region</i>:<i>account-id</i>:document/<i>document-name</i> </code> </p> <p>For example:</p> <p> <code>arn:aws:ssm:us-east-2:12345678912:document/My-Shared-Document</code> </p> <p>For AWS-predefined documents and SSM documents you created in your account, you only need to specify the document name. For example, <code>AWS-ApplyPatchBaseline</code> or <code>My-Document</code>.</p>",
                        "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                        "type": "string"
                    },
                    "OutputLocation": {
                        "description": "An Amazon S3 bucket where you want to store the results of this request.",
                        "properties": {
                            "S3Location": {
                                "description": "An Amazon S3 bucket where you want to store the results of this request.",
                                "properties": {
                                    "OutputS3BucketName": {
                                        "description": "The name of the Amazon S3 bucket.",
                                        "maxLength": 63,
                                        "minLength": 3,
                                        "type": "string"
                                    },
                                    "OutputS3KeyPrefix": {
                                        "description": "The Amazon S3 bucket subfolder.",
                                        "maxLength": 500,
                                        "type": "string"
                                    },
                                    "OutputS3Region": {
                                        "description": "(Deprecated) You can no longer specify this parameter. The system ignores it. Instead, Systems Manager automatically determines the Amazon S3 bucket region.",
                                        "maxLength": 20,
                                        "minLength": 3,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    },
                    "Parameters": {
                        "description": "A description of the parameters for a document. ",
                        "items": {
                            "properties": {
                                "key": {
                                    "type": "string"
                                },
                                "value": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "ScheduleExpression": {
                        "description": "A cron expression that specifies a schedule when the association runs.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Targets": {
                        "description": "The instances targeted by the request.",
                        "items": {
                            "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                            "properties": {
                                "Key": {
                                    "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "maxItems": 50,
                                    "minItems": 0,
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 5,
                        "minItems": 0,
                        "type": "array"
                    }
                },
                "required": [
                    "Name"
                ],
                "type": "object"
            },
            "CreateAssociationBatchResult": {
                "properties": {
                    "Failed": {
                        "description": "Information about the associations that failed.",
                        "items": {
                            "description": "Describes a failed association.",
                            "properties": {
                                "Entry": {
                                    "description": "The association.",
                                    "properties": {
                                        "AssociationName": {
                                            "description": "Specify a descriptive name for the association.",
                                            "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                            "type": "string"
                                        },
                                        "AutomationTargetParameterName": {
                                            "description": "Specify the target for the association. This target is required for associations that use an Automation document and target resources by using rate controls.",
                                            "maxLength": 50,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "ComplianceSeverity": {
                                            "description": "The severity level to assign to the association.",
                                            "enum": [
                                                "CRITICAL",
                                                "HIGH",
                                                "MEDIUM",
                                                "LOW",
                                                "UNSPECIFIED"
                                            ],
                                            "type": "string"
                                        },
                                        "DocumentVersion": {
                                            "description": "The document version.",
                                            "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                            "type": "string"
                                        },
                                        "InstanceId": {
                                            "description": "The ID of the instance. ",
                                            "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                                            "type": "string"
                                        },
                                        "MaxConcurrency": {
                                            "description": "<p>The maximum number of targets allowed to run the association at the same time. You can specify a number, for example 10, or a percentage of the target set, for example 10%. The default value is 100%, which means all targets run the association at the same time.</p> <p>If a new instance starts and attempts to execute an association while Systems Manager is executing MaxConcurrency associations, the association is allowed to run. During the next association interval, the new instance will process its association within the limit specified for MaxConcurrency.</p>",
                                            "maxLength": 7,
                                            "minLength": 1,
                                            "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                                            "type": "string"
                                        },
                                        "MaxErrors": {
                                            "description": "<p>The number of errors that are allowed before the system stops sending requests to run the association on additional targets. You can specify either an absolute number of errors, for example 10, or a percentage of the target set, for example 10%. If you specify 3, for example, the system stops sending requests when the fourth error is received. If you specify 0, then the system stops sending requests after the first error is returned. If you run an association on 50 instances and set MaxError to 10%, then the system stops sending the request when the sixth error is received.</p> <p>Executions that are already running an association when MaxErrors is reached are allowed to complete, but some of these executions may fail as well. If you need to ensure that there won't be more than max-errors failed executions, set MaxConcurrency to 1 so that executions proceed one at a time.</p>",
                                            "maxLength": 7,
                                            "minLength": 1,
                                            "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                                            "type": "string"
                                        },
                                        "Name": {
                                            "description": "<p>The name of the SSM document that contains the configuration information for the instance. You can specify Command, Policy, or Automation documents.</p> <p>You can specify AWS-predefined documents, documents you created, or a document that is shared with you from another account.</p> <p>For SSM documents that are shared with you from other AWS accounts, you must specify the complete SSM document ARN, in the following format:</p> <p> <code>arn:aws:ssm:<i>region</i>:<i>account-id</i>:document/<i>document-name</i> </code> </p> <p>For example:</p> <p> <code>arn:aws:ssm:us-east-2:12345678912:document/My-Shared-Document</code> </p> <p>For AWS-predefined documents and SSM documents you created in your account, you only need to specify the document name. For example, <code>AWS-ApplyPatchBaseline</code> or <code>My-Document</code>.</p>",
                                            "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                                            "type": "string"
                                        },
                                        "OutputLocation": {
                                            "description": "An Amazon S3 bucket where you want to store the results of this request.",
                                            "properties": {
                                                "S3Location": {
                                                    "description": "An Amazon S3 bucket where you want to store the results of this request.",
                                                    "properties": {
                                                        "OutputS3BucketName": {
                                                            "description": "The name of the Amazon S3 bucket.",
                                                            "maxLength": 63,
                                                            "minLength": 3,
                                                            "type": "string"
                                                        },
                                                        "OutputS3KeyPrefix": {
                                                            "description": "The Amazon S3 bucket subfolder.",
                                                            "maxLength": 500,
                                                            "type": "string"
                                                        },
                                                        "OutputS3Region": {
                                                            "description": "(Deprecated) You can no longer specify this parameter. The system ignores it. Instead, Systems Manager automatically determines the Amazon S3 bucket region.",
                                                            "maxLength": 20,
                                                            "minLength": 3,
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "Parameters": {
                                            "description": "A description of the parameters for a document. ",
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "ScheduleExpression": {
                                            "description": "A cron expression that specifies a schedule when the association runs.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "Targets": {
                                            "description": "The instances targeted by the request.",
                                            "items": {
                                                "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                                                "properties": {
                                                    "Key": {
                                                        "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                                        "type": "string"
                                                    },
                                                    "Values": {
                                                        "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "maxItems": 50,
                                                        "minItems": 0,
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "maxItems": 5,
                                            "minItems": 0,
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "Name"
                                    ],
                                    "type": "object"
                                },
                                "Fault": {
                                    "description": "The source of the failure.",
                                    "enum": [
                                        "Client",
                                        "Server",
                                        "Unknown"
                                    ],
                                    "type": "string"
                                },
                                "Message": {
                                    "description": "A description of the failure.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Successful": {
                        "description": "Information about the associations that succeeded.",
                        "items": {
                            "description": "Describes the parameters for a document.",
                            "properties": {
                                "AssociationId": {
                                    "description": "The association ID.",
                                    "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                                    "type": "string"
                                },
                                "AssociationName": {
                                    "description": "The association name.",
                                    "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                    "type": "string"
                                },
                                "AssociationVersion": {
                                    "description": "The association version.",
                                    "pattern": "([$]LATEST)|([1-9][0-9]*)",
                                    "type": "string"
                                },
                                "AutomationTargetParameterName": {
                                    "description": "Specify the target for the association. This target is required for associations that use an Automation document and target resources by using rate controls.",
                                    "maxLength": 50,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "ComplianceSeverity": {
                                    "description": "The severity level that is assigned to the association.",
                                    "enum": [
                                        "CRITICAL",
                                        "HIGH",
                                        "MEDIUM",
                                        "LOW",
                                        "UNSPECIFIED"
                                    ],
                                    "type": "string"
                                },
                                "Date": {
                                    "description": "The date when the association was made.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "DocumentVersion": {
                                    "description": "The document version.",
                                    "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                    "type": "string"
                                },
                                "InstanceId": {
                                    "description": "The ID of the instance.",
                                    "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                                    "type": "string"
                                },
                                "LastExecutionDate": {
                                    "description": "The date on which the association was last run.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "LastSuccessfulExecutionDate": {
                                    "description": "The last date on which the association was successfully run.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "LastUpdateAssociationDate": {
                                    "description": "The date when the association was last updated.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "MaxConcurrency": {
                                    "description": "<p>The maximum number of targets allowed to run the association at the same time. You can specify a number, for example 10, or a percentage of the target set, for example 10%. The default value is 100%, which means all targets run the association at the same time.</p> <p>If a new instance starts and attempts to execute an association while Systems Manager is executing MaxConcurrency associations, the association is allowed to run. During the next association interval, the new instance will process its association within the limit specified for MaxConcurrency.</p>",
                                    "maxLength": 7,
                                    "minLength": 1,
                                    "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                                    "type": "string"
                                },
                                "MaxErrors": {
                                    "description": "<p>The number of errors that are allowed before the system stops sending requests to run the association on additional targets. You can specify either an absolute number of errors, for example 10, or a percentage of the target set, for example 10%. If you specify 3, for example, the system stops sending requests when the fourth error is received. If you specify 0, then the system stops sending requests after the first error is returned. If you run an association on 50 instances and set MaxError to 10%, then the system stops sending the request when the sixth error is received.</p> <p>Executions that are already running an association when MaxErrors is reached are allowed to complete, but some of these executions may fail as well. If you need to ensure that there won't be more than max-errors failed executions, set MaxConcurrency to 1 so that executions proceed one at a time.</p>",
                                    "maxLength": 7,
                                    "minLength": 1,
                                    "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "The name of the Systems Manager document.",
                                    "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                                    "type": "string"
                                },
                                "OutputLocation": {
                                    "description": "An Amazon S3 bucket where you want to store the output details of the request.",
                                    "properties": {
                                        "S3Location": {
                                            "description": "An Amazon S3 bucket where you want to store the results of this request.",
                                            "properties": {
                                                "OutputS3BucketName": {
                                                    "description": "The name of the Amazon S3 bucket.",
                                                    "maxLength": 63,
                                                    "minLength": 3,
                                                    "type": "string"
                                                },
                                                "OutputS3KeyPrefix": {
                                                    "description": "The Amazon S3 bucket subfolder.",
                                                    "maxLength": 500,
                                                    "type": "string"
                                                },
                                                "OutputS3Region": {
                                                    "description": "(Deprecated) You can no longer specify this parameter. The system ignores it. Instead, Systems Manager automatically determines the Amazon S3 bucket region.",
                                                    "maxLength": 20,
                                                    "minLength": 3,
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "Overview": {
                                    "description": "Information about the association.",
                                    "properties": {
                                        "AssociationStatusAggregatedCount": {
                                            "description": "Returns the number of targets for the association status. For example, if you created an association with two instances, and one of them was successful, this would return the count of instances by status.",
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "DetailedStatus": {
                                            "description": "A detailed status of the association.",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The status of the association. Status can be: Pending, Success, or Failed.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "Parameters": {
                                    "description": "A description of the parameters for a document. ",
                                    "items": {
                                        "properties": {
                                            "key": {
                                                "type": "string"
                                            },
                                            "value": {
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "ScheduleExpression": {
                                    "description": "A cron expression that specifies a schedule when the association runs.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Status": {
                                    "description": "The association status.",
                                    "properties": {
                                        "AdditionalInfo": {
                                            "description": "A user-defined string.",
                                            "maxLength": 1024,
                                            "type": "string"
                                        },
                                        "Date": {
                                            "description": "The date when the status changed.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Message": {
                                            "description": "The reason for the status.",
                                            "maxLength": 1024,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "Name": {
                                            "description": "The status.",
                                            "enum": [
                                                "Pending",
                                                "Success",
                                                "Failed"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "Date",
                                        "Name",
                                        "Message"
                                    ],
                                    "type": "object"
                                },
                                "Targets": {
                                    "description": "The instances targeted by the request. ",
                                    "items": {
                                        "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                                        "properties": {
                                            "Key": {
                                                "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                "maxLength": 128,
                                                "minLength": 1,
                                                "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                                "type": "string"
                                            },
                                            "Values": {
                                                "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "maxItems": 50,
                                                "minItems": 0,
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "maxItems": 5,
                                    "minItems": 0,
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "CreateAssociationRequest": {
                "properties": {
                    "AssociationName": {
                        "description": "Specify a descriptive name for the association.",
                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                        "type": "string"
                    },
                    "AutomationTargetParameterName": {
                        "description": "Specify the target for the association. This target is required for associations that use an Automation document and target resources by using rate controls.",
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string"
                    },
                    "ComplianceSeverity": {
                        "description": "The severity level to assign to the association.",
                        "enum": [
                            "CRITICAL",
                            "HIGH",
                            "MEDIUM",
                            "LOW",
                            "UNSPECIFIED"
                        ],
                        "type": "string"
                    },
                    "DocumentVersion": {
                        "description": "The document version you want to associate with the target(s). Can be a specific version or the default version.",
                        "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                        "type": "string"
                    },
                    "InstanceId": {
                        "description": "The instance ID.",
                        "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                        "type": "string"
                    },
                    "MaxConcurrency": {
                        "description": "<p>The maximum number of targets allowed to run the association at the same time. You can specify a number, for example 10, or a percentage of the target set, for example 10%. The default value is 100%, which means all targets run the association at the same time.</p> <p>If a new instance starts and attempts to execute an association while Systems Manager is executing MaxConcurrency associations, the association is allowed to run. During the next association interval, the new instance will process its association within the limit specified for MaxConcurrency.</p>",
                        "maxLength": 7,
                        "minLength": 1,
                        "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                        "type": "string"
                    },
                    "MaxErrors": {
                        "description": "<p>The number of errors that are allowed before the system stops sending requests to run the association on additional targets. You can specify either an absolute number of errors, for example 10, or a percentage of the target set, for example 10%. If you specify 3, for example, the system stops sending requests when the fourth error is received. If you specify 0, then the system stops sending requests after the first error is returned. If you run an association on 50 instances and set MaxError to 10%, then the system stops sending the request when the sixth error is received.</p> <p>Executions that are already running an association when MaxErrors is reached are allowed to complete, but some of these executions may fail as well. If you need to ensure that there won't be more than max-errors failed executions, set MaxConcurrency to 1 so that executions proceed one at a time.</p>",
                        "maxLength": 7,
                        "minLength": 1,
                        "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                        "type": "string"
                    },
                    "Name": {
                        "description": "<p>The name of the SSM document that contains the configuration information for the instance. You can specify Command, Policy, or Automation documents.</p> <p>You can specify AWS-predefined documents, documents you created, or a document that is shared with you from another account.</p> <p>For SSM documents that are shared with you from other AWS accounts, you must specify the complete SSM document ARN, in the following format:</p> <p> <code>arn:<i>partition</i>:ssm:<i>region</i>:<i>account-id</i>:document/<i>document-name</i> </code> </p> <p>For example:</p> <p> <code>arn:aws:ssm:us-east-2:12345678912:document/My-Shared-Document</code> </p> <p>For AWS-predefined documents and SSM documents you created in your account, you only need to specify the document name. For example, <code>AWS-ApplyPatchBaseline</code> or <code>My-Document</code>.</p>",
                        "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                        "type": "string"
                    },
                    "OutputLocation": {
                        "description": "An Amazon S3 bucket where you want to store the output details of the request.",
                        "properties": {
                            "S3Location": {
                                "description": "An Amazon S3 bucket where you want to store the results of this request.",
                                "properties": {
                                    "OutputS3BucketName": {
                                        "description": "The name of the Amazon S3 bucket.",
                                        "maxLength": 63,
                                        "minLength": 3,
                                        "type": "string"
                                    },
                                    "OutputS3KeyPrefix": {
                                        "description": "The Amazon S3 bucket subfolder.",
                                        "maxLength": 500,
                                        "type": "string"
                                    },
                                    "OutputS3Region": {
                                        "description": "(Deprecated) You can no longer specify this parameter. The system ignores it. Instead, Systems Manager automatically determines the Amazon S3 bucket region.",
                                        "maxLength": 20,
                                        "minLength": 3,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    },
                    "Parameters": {
                        "description": "The parameters for the documents runtime configuration. ",
                        "items": {
                            "properties": {
                                "key": {
                                    "type": "string"
                                },
                                "value": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "ScheduleExpression": {
                        "description": "A cron expression when the association will be applied to the target(s).",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Targets": {
                        "description": "The targets (either instances or tags) for the association.",
                        "items": {
                            "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                            "properties": {
                                "Key": {
                                    "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "maxItems": 50,
                                    "minItems": 0,
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 5,
                        "minItems": 0,
                        "type": "array"
                    }
                },
                "required": [
                    "Name"
                ],
                "type": "object"
            },
            "CreateAssociationResult": {
                "properties": {
                    "AssociationDescription": {
                        "description": "Information about the association.",
                        "properties": {
                            "AssociationId": {
                                "description": "The association ID.",
                                "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                                "type": "string"
                            },
                            "AssociationName": {
                                "description": "The association name.",
                                "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                "type": "string"
                            },
                            "AssociationVersion": {
                                "description": "The association version.",
                                "pattern": "([$]LATEST)|([1-9][0-9]*)",
                                "type": "string"
                            },
                            "AutomationTargetParameterName": {
                                "description": "Specify the target for the association. This target is required for associations that use an Automation document and target resources by using rate controls.",
                                "maxLength": 50,
                                "minLength": 1,
                                "type": "string"
                            },
                            "ComplianceSeverity": {
                                "description": "The severity level that is assigned to the association.",
                                "enum": [
                                    "CRITICAL",
                                    "HIGH",
                                    "MEDIUM",
                                    "LOW",
                                    "UNSPECIFIED"
                                ],
                                "type": "string"
                            },
                            "Date": {
                                "description": "The date when the association was made.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "DocumentVersion": {
                                "description": "The document version.",
                                "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                "type": "string"
                            },
                            "InstanceId": {
                                "description": "The ID of the instance.",
                                "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                                "type": "string"
                            },
                            "LastExecutionDate": {
                                "description": "The date on which the association was last run.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "LastSuccessfulExecutionDate": {
                                "description": "The last date on which the association was successfully run.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "LastUpdateAssociationDate": {
                                "description": "The date when the association was last updated.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "MaxConcurrency": {
                                "description": "<p>The maximum number of targets allowed to run the association at the same time. You can specify a number, for example 10, or a percentage of the target set, for example 10%. The default value is 100%, which means all targets run the association at the same time.</p> <p>If a new instance starts and attempts to execute an association while Systems Manager is executing MaxConcurrency associations, the association is allowed to run. During the next association interval, the new instance will process its association within the limit specified for MaxConcurrency.</p>",
                                "maxLength": 7,
                                "minLength": 1,
                                "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                                "type": "string"
                            },
                            "MaxErrors": {
                                "description": "<p>The number of errors that are allowed before the system stops sending requests to run the association on additional targets. You can specify either an absolute number of errors, for example 10, or a percentage of the target set, for example 10%. If you specify 3, for example, the system stops sending requests when the fourth error is received. If you specify 0, then the system stops sending requests after the first error is returned. If you run an association on 50 instances and set MaxError to 10%, then the system stops sending the request when the sixth error is received.</p> <p>Executions that are already running an association when MaxErrors is reached are allowed to complete, but some of these executions may fail as well. If you need to ensure that there won't be more than max-errors failed executions, set MaxConcurrency to 1 so that executions proceed one at a time.</p>",
                                "maxLength": 7,
                                "minLength": 1,
                                "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                                "type": "string"
                            },
                            "Name": {
                                "description": "The name of the Systems Manager document.",
                                "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                                "type": "string"
                            },
                            "OutputLocation": {
                                "description": "An Amazon S3 bucket where you want to store the output details of the request.",
                                "properties": {
                                    "S3Location": {
                                        "description": "An Amazon S3 bucket where you want to store the results of this request.",
                                        "properties": {
                                            "OutputS3BucketName": {
                                                "description": "The name of the Amazon S3 bucket.",
                                                "maxLength": 63,
                                                "minLength": 3,
                                                "type": "string"
                                            },
                                            "OutputS3KeyPrefix": {
                                                "description": "The Amazon S3 bucket subfolder.",
                                                "maxLength": 500,
                                                "type": "string"
                                            },
                                            "OutputS3Region": {
                                                "description": "(Deprecated) You can no longer specify this parameter. The system ignores it. Instead, Systems Manager automatically determines the Amazon S3 bucket region.",
                                                "maxLength": 20,
                                                "minLength": 3,
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "Overview": {
                                "description": "Information about the association.",
                                "properties": {
                                    "AssociationStatusAggregatedCount": {
                                        "description": "Returns the number of targets for the association status. For example, if you created an association with two instances, and one of them was successful, this would return the count of instances by status.",
                                        "items": {
                                            "properties": {
                                                "key": {
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "DetailedStatus": {
                                        "description": "A detailed status of the association.",
                                        "type": "string"
                                    },
                                    "Status": {
                                        "description": "The status of the association. Status can be: Pending, Success, or Failed.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "Parameters": {
                                "description": "A description of the parameters for a document. ",
                                "items": {
                                    "properties": {
                                        "key": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "ScheduleExpression": {
                                "description": "A cron expression that specifies a schedule when the association runs.",
                                "maxLength": 256,
                                "minLength": 1,
                                "type": "string"
                            },
                            "Status": {
                                "description": "The association status.",
                                "properties": {
                                    "AdditionalInfo": {
                                        "description": "A user-defined string.",
                                        "maxLength": 1024,
                                        "type": "string"
                                    },
                                    "Date": {
                                        "description": "The date when the status changed.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Message": {
                                        "description": "The reason for the status.",
                                        "maxLength": 1024,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "The status.",
                                        "enum": [
                                            "Pending",
                                            "Success",
                                            "Failed"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Date",
                                    "Name",
                                    "Message"
                                ],
                                "type": "object"
                            },
                            "Targets": {
                                "description": "The instances targeted by the request. ",
                                "items": {
                                    "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                                    "properties": {
                                        "Key": {
                                            "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                            "type": "string"
                                        },
                                        "Values": {
                                            "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                            "items": {
                                                "type": "string"
                                            },
                                            "maxItems": 50,
                                            "minItems": 0,
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                },
                                "maxItems": 5,
                                "minItems": 0,
                                "type": "array"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "CreateDocumentRequest": {
                "properties": {
                    "Attachments": {
                        "description": "A list of key and value pairs that describe attachments to a version of a document.",
                        "items": {
                            "description": "A key and value pair that identifies the location of an attachment to a document.",
                            "properties": {
                                "Key": {
                                    "description": "The key of a key and value pair that identifies the location of an attachment to a document.",
                                    "enum": [
                                        "SourceUrl"
                                    ],
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "The URL of the location of a document attachment, such as the URL of an Amazon S3 bucket.",
                                    "items": {
                                        "maxLength": 1024,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "maxItems": 1,
                                    "minItems": 1,
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 1,
                        "minItems": 0,
                        "type": "array"
                    },
                    "Content": {
                        "description": "A valid JSON or YAML string.",
                        "minLength": 1,
                        "type": "string"
                    },
                    "DocumentFormat": {
                        "description": "Specify the document format for the request. The document format can be either JSON or YAML. JSON is the default format.",
                        "enum": [
                            "YAML",
                            "JSON"
                        ],
                        "type": "string"
                    },
                    "DocumentType": {
                        "description": "The type of document to create. Valid document types include: <code>Command</code>, <code>Policy</code>, <code>Automation</code>, <code>Session</code>, and <code>Package</code>.",
                        "enum": [
                            "Command",
                            "Policy",
                            "Automation",
                            "Session",
                            "Package"
                        ],
                        "type": "string"
                    },
                    "Name": {
                        "description": "<p>A name for the Systems Manager document.</p> <important> <p>Do not use the following to begin the names of documents you create. They are reserved by AWS for use as document prefixes:</p> <ul> <li> <p> <code>aws</code> </p> </li> <li> <p> <code>amazon</code> </p> </li> <li> <p> <code>amzn</code> </p> </li> </ul> </important>",
                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                        "type": "string"
                    },
                    "Tags": {
                        "description": "<p>Optional metadata that you assign to a resource. Tags enable you to categorize a resource in different ways, such as by purpose, owner, or environment. For example, you might want to tag an SSM document to identify the types of targets or the environment where it will run. In this case, you could specify the following key name/value pairs:</p> <ul> <li> <p> <code>Key=OS,Value=Windows</code> </p> </li> <li> <p> <code>Key=Environment,Value=Production</code> </p> </li> </ul> <note> <p>To add tags to an existing SSM document, use the <a>AddTagsToResource</a> action.</p> </note>",
                        "items": {
                            "description": "Metadata that you assign to your AWS resources. Tags enable you to categorize your resources in different ways, for example, by purpose, owner, or environment. In Systems Manager, you can apply tags to documents, managed instances, Maintenance Windows, Parameter Store parameters, and patch baselines.",
                            "properties": {
                                "Key": {
                                    "description": "The name of the tag.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "The value of the tag.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Key",
                                "Value"
                            ],
                            "type": "object"
                        },
                        "maxItems": 1000,
                        "type": "array"
                    },
                    "TargetType": {
                        "description": "Specify a target type to define the kinds of resources the document can run on. For example, to run a document on EC2 instances, specify the following value: /AWS::EC2::Instance. If you specify a value of '/' the document can run on all types of resources. If you don't specify a value, the document can't run on any resources. For a list of valid resource types, see <a href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html\">AWS Resource Types Reference</a> in the <i>AWS CloudFormation User Guide</i>. ",
                        "maxLength": 200,
                        "pattern": "^\\/[\\w\\.\\-\\:\\/]*$",
                        "type": "string"
                    },
                    "VersionName": {
                        "description": "An optional field specifying the version of the artifact you are creating with the document. For example, \"Release 12, Update 6\". This value is unique across all versions of a document, and cannot be changed.",
                        "pattern": "^[a-zA-Z0-9_\\-.]{1,128}$",
                        "type": "string"
                    }
                },
                "required": [
                    "Content",
                    "Name"
                ],
                "type": "object"
            },
            "CreateDocumentResult": {
                "properties": {
                    "DocumentDescription": {
                        "description": "Information about the Systems Manager document.",
                        "properties": {
                            "AttachmentsInformation": {
                                "description": "Details about the document attachments, including names, locations, sizes, etc.",
                                "items": {
                                    "description": "An attribute of an attachment, such as the attachment name.",
                                    "properties": {
                                        "Name": {
                                            "description": "The name of the attachment.",
                                            "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "CreatedDate": {
                                "description": "The date when the document was created.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "DefaultVersion": {
                                "description": "The default version.",
                                "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                "type": "string"
                            },
                            "Description": {
                                "description": "A description of the document. ",
                                "type": "string"
                            },
                            "DocumentFormat": {
                                "description": "The document format, either JSON or YAML.",
                                "enum": [
                                    "YAML",
                                    "JSON"
                                ],
                                "type": "string"
                            },
                            "DocumentType": {
                                "description": "The type of document.",
                                "enum": [
                                    "Command",
                                    "Policy",
                                    "Automation",
                                    "Session",
                                    "Package"
                                ],
                                "type": "string"
                            },
                            "DocumentVersion": {
                                "description": "The document version.",
                                "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                "type": "string"
                            },
                            "Hash": {
                                "description": "<p>The Sha256 or Sha1 hash created by the system when the document was created. </p> <note> <p>Sha1 hashes have been deprecated.</p> </note>",
                                "maxLength": 256,
                                "type": "string"
                            },
                            "HashType": {
                                "description": "<p>The hash type of the document. Valid values include <code>Sha256</code> or <code>Sha1</code>.</p> <note> <p>Sha1 hashes have been deprecated.</p> </note>",
                                "enum": [
                                    "Sha256",
                                    "Sha1"
                                ],
                                "type": "string"
                            },
                            "LatestVersion": {
                                "description": "The latest version of the document.",
                                "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                "type": "string"
                            },
                            "Name": {
                                "description": "The name of the Systems Manager document.",
                                "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                                "type": "string"
                            },
                            "Owner": {
                                "description": "The AWS user account that created the document.",
                                "type": "string"
                            },
                            "Parameters": {
                                "description": "A description of the parameters for a document.",
                                "items": {
                                    "description": "Parameters specified in a System Manager document that execute on the server when the command is run. ",
                                    "properties": {
                                        "DefaultValue": {
                                            "description": "If specified, the default values for the parameters. Parameters without a default value are required. Parameters with a default value are optional.",
                                            "type": "string"
                                        },
                                        "Description": {
                                            "description": "A description of what the parameter does, how to use it, the default value, and whether or not the parameter is optional.",
                                            "type": "string"
                                        },
                                        "Name": {
                                            "description": "The name of the parameter.",
                                            "type": "string"
                                        },
                                        "Type": {
                                            "description": "The type of parameter. The type can be either String or StringList.",
                                            "enum": [
                                                "String",
                                                "StringList"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "PlatformTypes": {
                                "description": "The list of OS platforms compatible with this Systems Manager document. ",
                                "items": {
                                    "enum": [
                                        "Windows",
                                        "Linux"
                                    ],
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "SchemaVersion": {
                                "description": "The schema version.",
                                "pattern": "([0-9]+)\\.([0-9]+)",
                                "type": "string"
                            },
                            "Sha1": {
                                "description": "The SHA1 hash of the document, which you can use for verification.",
                                "type": "string"
                            },
                            "Status": {
                                "description": "The status of the Systems Manager document.",
                                "enum": [
                                    "Creating",
                                    "Active",
                                    "Updating",
                                    "Deleting",
                                    "Failed"
                                ],
                                "type": "string"
                            },
                            "StatusInformation": {
                                "description": "A message returned by AWS Systems Manager that explains the <code>Status</code> value. For example, a <code>Failed</code> status might be explained by the <code>StatusInformation</code> message, \"The specified S3 bucket does not exist. Verify that the URL of the S3 bucket is correct.\"",
                                "type": "string"
                            },
                            "Tags": {
                                "description": "The tags, or metadata, that have been applied to the document.",
                                "items": {
                                    "description": "Metadata that you assign to your AWS resources. Tags enable you to categorize your resources in different ways, for example, by purpose, owner, or environment. In Systems Manager, you can apply tags to documents, managed instances, Maintenance Windows, Parameter Store parameters, and patch baselines.",
                                    "properties": {
                                        "Key": {
                                            "description": "The name of the tag.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                            "type": "string"
                                        },
                                        "Value": {
                                            "description": "The value of the tag.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "Key",
                                        "Value"
                                    ],
                                    "type": "object"
                                },
                                "maxItems": 1000,
                                "type": "array"
                            },
                            "TargetType": {
                                "description": "The target type which defines the kinds of resources the document can run on. For example, /AWS::EC2::Instance. For a list of valid resource types, see <a href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html\">AWS Resource Types Reference</a> in the <i>AWS CloudFormation User Guide</i>. ",
                                "maxLength": 200,
                                "pattern": "^\\/[\\w\\.\\-\\:\\/]*$",
                                "type": "string"
                            },
                            "VersionName": {
                                "description": "The version of the artifact associated with the document.",
                                "pattern": "^[a-zA-Z0-9_\\-.]{1,128}$",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "CreateMaintenanceWindowRequest": {
                "properties": {
                    "AllowUnassociatedTargets": {
                        "description": "<p>Enables a Maintenance Window task to execute on managed instances, even if you have not registered those instances as targets. If enabled, then you must specify the unregistered instances (by instance ID) when you register a task with the Maintenance Window </p> <p>If you don't enable this option, then you must specify previously-registered targets when you register a task with the Maintenance Window. </p>",
                        "type": "boolean"
                    },
                    "ClientToken": {
                        "description": "User-provided idempotency token.",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Cutoff": {
                        "description": "The number of hours before the end of the Maintenance Window that Systems Manager stops scheduling new tasks for execution.",
                        "maximum": 23,
                        "minimum": 0,
                        "type": "integer"
                    },
                    "Description": {
                        "description": "An optional description for the Maintenance Window. We recommend specifying a description to help you organize your Maintenance Windows. ",
                        "format": "password",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Duration": {
                        "description": "The duration of the Maintenance Window in hours.",
                        "maximum": 24,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "EndDate": {
                        "description": "The date and time, in ISO-8601 Extended format, for when you want the Maintenance Window to become inactive. EndDate allows you to set a date and time in the future when the Maintenance Window will no longer run.",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The name of the Maintenance Window.",
                        "maxLength": 128,
                        "minLength": 3,
                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                        "type": "string"
                    },
                    "Schedule": {
                        "description": "The schedule of the Maintenance Window in the form of a cron or rate expression.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "ScheduleTimezone": {
                        "description": "The time zone that the scheduled Maintenance Window executions are based on, in Internet Assigned Numbers Authority (IANA) format. For example: \"America/Los_Angeles\", \"etc/UTC\", or \"Asia/Seoul\". For more information, see the <a href=\"https://www.iana.org/time-zones\">Time Zone Database</a> on the IANA website.",
                        "type": "string"
                    },
                    "StartDate": {
                        "description": "The date and time, in ISO-8601 Extended format, for when you want the Maintenance Window to become active. StartDate allows you to delay activation of the Maintenance Window until the specified future date.",
                        "type": "string"
                    },
                    "Tags": {
                        "description": "<p>Optional metadata that you assign to a resource. Tags enable you to categorize a resource in different ways, such as by purpose, owner, or environment. For example, you might want to tag a Maintenance Window to identify the type of tasks it will run, the types of targets, and the environment it will run in. In this case, you could specify the following key name/value pairs:</p> <ul> <li> <p> <code>Key=TaskType,Value=AgentUpdate</code> </p> </li> <li> <p> <code>Key=OS,Value=Windows</code> </p> </li> <li> <p> <code>Key=Environment,Value=Production</code> </p> </li> </ul> <note> <p>To add tags to an existing Maintenance Window, use the <a>AddTagsToResource</a> action.</p> </note>",
                        "items": {
                            "description": "Metadata that you assign to your AWS resources. Tags enable you to categorize your resources in different ways, for example, by purpose, owner, or environment. In Systems Manager, you can apply tags to documents, managed instances, Maintenance Windows, Parameter Store parameters, and patch baselines.",
                            "properties": {
                                "Key": {
                                    "description": "The name of the tag.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "The value of the tag.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Key",
                                "Value"
                            ],
                            "type": "object"
                        },
                        "maxItems": 1000,
                        "type": "array"
                    }
                },
                "required": [
                    "Name",
                    "Schedule",
                    "Duration",
                    "Cutoff",
                    "AllowUnassociatedTargets"
                ],
                "type": "object"
            },
            "CreateMaintenanceWindowResult": {
                "properties": {
                    "WindowId": {
                        "description": "The ID of the created Maintenance Window.",
                        "maxLength": 20,
                        "minLength": 20,
                        "pattern": "^mw-[0-9a-f]{17}$",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreatePatchBaselineRequest": {
                "properties": {
                    "ApprovalRules": {
                        "description": "A set of rules used to include patches in the baseline.",
                        "properties": {
                            "PatchRules": {
                                "description": "The rules that make up the rule group.",
                                "items": {
                                    "description": "Defines an approval rule for a patch baseline.",
                                    "properties": {
                                        "ApproveAfterDays": {
                                            "description": "The number of days after the release date of each patch matched by the rule that the patch is marked as approved in the patch baseline. For example, a value of <code>7</code> means that patches are approved seven days after they are released. ",
                                            "maximum": 100,
                                            "minimum": 0,
                                            "type": "integer"
                                        },
                                        "ComplianceLevel": {
                                            "description": "A compliance severity level for all approved patches in a patch baseline. Valid compliance severity levels include the following: Unspecified, Critical, High, Medium, Low, and Informational.",
                                            "enum": [
                                                "CRITICAL",
                                                "HIGH",
                                                "MEDIUM",
                                                "LOW",
                                                "INFORMATIONAL",
                                                "UNSPECIFIED"
                                            ],
                                            "type": "string"
                                        },
                                        "EnableNonSecurity": {
                                            "description": "For instances identified by the approval rule filters, enables a patch baseline to apply non-security updates available in the specified repository. The default value is 'false'. Applies to Linux instances only.",
                                            "type": "boolean"
                                        },
                                        "PatchFilterGroup": {
                                            "description": "The patch filter group that defines the criteria for the rule.",
                                            "properties": {
                                                "PatchFilters": {
                                                    "description": "The set of patch filters that make up the group.",
                                                    "items": {
                                                        "description": "<p>Defines a patch filter.</p> <p>A patch filter consists of key/value pairs, but not all keys are valid for all operating system types. For example, the key <code>PRODUCT</code> is valid for all supported operating system types. The key <code>MSRC_SEVERITY</code>, however, is valid only for Windows operating systems, and the key <code>SECTION</code> is valid only for Ubuntu operating systems.</p> <p>Refer to the following sections for information about which keys may be used with each major operating system, and which values are valid for each key.</p> <p> <b>Windows Operating Systems</b> </p> <p>The supported keys for Windows operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>MSRC_SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Windows7</code> </p> </li> <li> <p> <code>Windows8</code> </p> </li> <li> <p> <code>Windows8.1</code> </p> </li> <li> <p> <code>Windows8Embedded</code> </p> </li> <li> <p> <code>Windows10</code> </p> </li> <li> <p> <code>Windows10LTSB</code> </p> </li> <li> <p> <code>WindowsServer2008</code> </p> </li> <li> <p> <code>WindowsServer2008R2</code> </p> </li> <li> <p> <code>WindowsServer2012</code> </p> </li> <li> <p> <code>WindowsServer2012R2</code> </p> </li> <li> <p> <code>WindowsServer2016</code> </p> </li> <li> <p> <code>WindowsServer2019</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>CriticalUpdates</code> </p> </li> <li> <p> <code>DefinitionUpdates</code> </p> </li> <li> <p> <code>Drivers</code> </p> </li> <li> <p> <code>FeaturePacks</code> </p> </li> <li> <p> <code>SecurityUpdates</code> </p> </li> <li> <p> <code>ServicePacks</code> </p> </li> <li> <p> <code>Tools</code> </p> </li> <li> <p> <code>UpdateRollups</code> </p> </li> <li> <p> <code>Updates</code> </p> </li> <li> <p> <code>Upgrades</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>MSRC_SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Moderate</code> </p> </li> <li> <p> <code>Low</code> </p> </li> <li> <p> <code>Unspecified</code> </p> </li> </ul> <p> <b>Ubuntu Operating Systems</b> </p> <p>The supported keys for Ubuntu operating systems are <code>PRODUCT</code>, <code>PRIORITY</code>, and <code>SECTION</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Ubuntu14.04</code> </p> </li> <li> <p> <code>Ubuntu16.04</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>PRIORITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Required</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Standard</code> </p> </li> <li> <p> <code>Optional</code> </p> </li> <li> <p> <code>Extra</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SECTION</code> </p> <p>Only the length of the key value is validated. Minimum length is 1. Maximum length is 64.</p> <p> <b>Amazon Linux Operating Systems</b> </p> <p>The supported keys for Amazon Linux operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>AmazonLinux2012.03</code> </p> </li> <li> <p> <code>AmazonLinux2012.09</code> </p> </li> <li> <p> <code>AmazonLinux2013.03</code> </p> </li> <li> <p> <code>AmazonLinux2013.09</code> </p> </li> <li> <p> <code>AmazonLinux2014.03</code> </p> </li> <li> <p> <code>AmazonLinux2014.09</code> </p> </li> <li> <p> <code>AmazonLinux2015.03</code> </p> </li> <li> <p> <code>AmazonLinux2015.09</code> </p> </li> <li> <p> <code>AmazonLinux2016.03</code> </p> </li> <li> <p> <code>AmazonLinux2016.09</code> </p> </li> <li> <p> <code>AmazonLinux2017.03</code> </p> </li> <li> <p> <code>AmazonLinux2017.09</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>Amazon Linux 2 Operating Systems</b> </p> <p>The supported keys for Amazon Linux 2 operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>AmazonLinux2</code> </p> </li> <li> <p> <code>AmazonLinux2.0</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>RedHat Enterprise Linux (RHEL) Operating Systems</b> </p> <p>The supported keys for RedHat Enterprise Linux operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>RedhatEnterpriseLinux6.5</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.6</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.7</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.8</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.9</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.0</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.1</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.2</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.3</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.4</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.5</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.6</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>SUSE Linux Enterprise Server (SLES) Operating Systems</b> </p> <p>The supported keys for SLES operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Suse12.0</code> </p> </li> <li> <p> <code>Suse12.1</code> </p> </li> <li> <p> <code>Suse12.2</code> </p> </li> <li> <p> <code>Suse12.3</code> </p> </li> <li> <p> <code>Suse12.4</code> </p> </li> <li> <p> <code>Suse12.5</code> </p> </li> <li> <p> <code>Suse12.6</code> </p> </li> <li> <p> <code>Suse12.7</code> </p> </li> <li> <p> <code>Suse12.8</code> </p> </li> <li> <p> <code>Suse12.9</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Optional</code> </p> </li> <li> <p> <code>Feature</code> </p> </li> <li> <p> <code>Document</code> </p> </li> <li> <p> <code>Yast</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Moderate</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>CentOS Operating Systems</b> </p> <p>The supported keys for CentOS operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>CentOS6.5</code> </p> </li> <li> <p> <code>CentOS6.6</code> </p> </li> <li> <p> <code>CentOS6.7</code> </p> </li> <li> <p> <code>CentOS6.8</code> </p> </li> <li> <p> <code>CentOS6.9</code> </p> </li> <li> <p> <code>CentOS7.0</code> </p> </li> <li> <p> <code>CentOS7.1</code> </p> </li> <li> <p> <code>CentOS7.2</code> </p> </li> <li> <p> <code>CentOS7.3</code> </p> </li> <li> <p> <code>CentOS7.4</code> </p> </li> <li> <p> <code>CentOS7.5</code> </p> </li> <li> <p> <code>CentOS7.6</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul>",
                                                        "properties": {
                                                            "Key": {
                                                                "description": "<p>The key for the filter.</p> <p>See <a>PatchFilter</a> for lists of valid keys for each operating system type.</p>",
                                                                "enum": [
                                                                    "PRODUCT",
                                                                    "CLASSIFICATION",
                                                                    "MSRC_SEVERITY",
                                                                    "PATCH_ID",
                                                                    "SECTION",
                                                                    "PRIORITY",
                                                                    "SEVERITY"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "Values": {
                                                                "description": "<p>The value for the filter key.</p> <p>See <a>PatchFilter</a> for lists of valid values for each key based on operating system type.</p>",
                                                                "items": {
                                                                    "maxLength": 64,
                                                                    "minLength": 1,
                                                                    "type": "string"
                                                                },
                                                                "maxItems": 20,
                                                                "minItems": 1,
                                                                "type": "array"
                                                            }
                                                        },
                                                        "required": [
                                                            "Key",
                                                            "Values"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "maxItems": 4,
                                                    "minItems": 0,
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "PatchFilters"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "PatchFilterGroup",
                                        "ApproveAfterDays"
                                    ],
                                    "type": "object"
                                },
                                "maxItems": 10,
                                "minItems": 0,
                                "type": "array"
                            }
                        },
                        "required": [
                            "PatchRules"
                        ],
                        "type": "object"
                    },
                    "ApprovedPatches": {
                        "description": "<p>A list of explicitly approved patches for the baseline.</p> <p>For information about accepted formats for lists of approved patches and rejected patches, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/patch-manager-approved-rejected-package-name-formats.html\">Package Name Formats for Approved and Rejected Patch Lists</a> in the <i>AWS Systems Manager User Guide</i>.</p>",
                        "items": {
                            "maxLength": 100,
                            "minLength": 1,
                            "type": "string"
                        },
                        "maxItems": 50,
                        "minItems": 0,
                        "type": "array"
                    },
                    "ApprovedPatchesComplianceLevel": {
                        "description": "Defines the compliance level for approved patches. This means that if an approved patch is reported as missing, this is the severity of the compliance violation. The default value is UNSPECIFIED.",
                        "enum": [
                            "CRITICAL",
                            "HIGH",
                            "MEDIUM",
                            "LOW",
                            "INFORMATIONAL",
                            "UNSPECIFIED"
                        ],
                        "type": "string"
                    },
                    "ApprovedPatchesEnableNonSecurity": {
                        "description": "Indicates whether the list of approved patches includes non-security updates that should be applied to the instances. The default value is 'false'. Applies to Linux instances only.",
                        "type": "boolean"
                    },
                    "ClientToken": {
                        "description": "User-provided idempotency token.",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Description": {
                        "description": "A description of the patch baseline.",
                        "maxLength": 1024,
                        "minLength": 1,
                        "type": "string"
                    },
                    "GlobalFilters": {
                        "description": "A set of global filters used to include patches in the baseline.",
                        "properties": {
                            "PatchFilters": {
                                "description": "The set of patch filters that make up the group.",
                                "items": {
                                    "description": "<p>Defines a patch filter.</p> <p>A patch filter consists of key/value pairs, but not all keys are valid for all operating system types. For example, the key <code>PRODUCT</code> is valid for all supported operating system types. The key <code>MSRC_SEVERITY</code>, however, is valid only for Windows operating systems, and the key <code>SECTION</code> is valid only for Ubuntu operating systems.</p> <p>Refer to the following sections for information about which keys may be used with each major operating system, and which values are valid for each key.</p> <p> <b>Windows Operating Systems</b> </p> <p>The supported keys for Windows operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>MSRC_SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Windows7</code> </p> </li> <li> <p> <code>Windows8</code> </p> </li> <li> <p> <code>Windows8.1</code> </p> </li> <li> <p> <code>Windows8Embedded</code> </p> </li> <li> <p> <code>Windows10</code> </p> </li> <li> <p> <code>Windows10LTSB</code> </p> </li> <li> <p> <code>WindowsServer2008</code> </p> </li> <li> <p> <code>WindowsServer2008R2</code> </p> </li> <li> <p> <code>WindowsServer2012</code> </p> </li> <li> <p> <code>WindowsServer2012R2</code> </p> </li> <li> <p> <code>WindowsServer2016</code> </p> </li> <li> <p> <code>WindowsServer2019</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>CriticalUpdates</code> </p> </li> <li> <p> <code>DefinitionUpdates</code> </p> </li> <li> <p> <code>Drivers</code> </p> </li> <li> <p> <code>FeaturePacks</code> </p> </li> <li> <p> <code>SecurityUpdates</code> </p> </li> <li> <p> <code>ServicePacks</code> </p> </li> <li> <p> <code>Tools</code> </p> </li> <li> <p> <code>UpdateRollups</code> </p> </li> <li> <p> <code>Updates</code> </p> </li> <li> <p> <code>Upgrades</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>MSRC_SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Moderate</code> </p> </li> <li> <p> <code>Low</code> </p> </li> <li> <p> <code>Unspecified</code> </p> </li> </ul> <p> <b>Ubuntu Operating Systems</b> </p> <p>The supported keys for Ubuntu operating systems are <code>PRODUCT</code>, <code>PRIORITY</code>, and <code>SECTION</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Ubuntu14.04</code> </p> </li> <li> <p> <code>Ubuntu16.04</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>PRIORITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Required</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Standard</code> </p> </li> <li> <p> <code>Optional</code> </p> </li> <li> <p> <code>Extra</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SECTION</code> </p> <p>Only the length of the key value is validated. Minimum length is 1. Maximum length is 64.</p> <p> <b>Amazon Linux Operating Systems</b> </p> <p>The supported keys for Amazon Linux operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>AmazonLinux2012.03</code> </p> </li> <li> <p> <code>AmazonLinux2012.09</code> </p> </li> <li> <p> <code>AmazonLinux2013.03</code> </p> </li> <li> <p> <code>AmazonLinux2013.09</code> </p> </li> <li> <p> <code>AmazonLinux2014.03</code> </p> </li> <li> <p> <code>AmazonLinux2014.09</code> </p> </li> <li> <p> <code>AmazonLinux2015.03</code> </p> </li> <li> <p> <code>AmazonLinux2015.09</code> </p> </li> <li> <p> <code>AmazonLinux2016.03</code> </p> </li> <li> <p> <code>AmazonLinux2016.09</code> </p> </li> <li> <p> <code>AmazonLinux2017.03</code> </p> </li> <li> <p> <code>AmazonLinux2017.09</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>Amazon Linux 2 Operating Systems</b> </p> <p>The supported keys for Amazon Linux 2 operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>AmazonLinux2</code> </p> </li> <li> <p> <code>AmazonLinux2.0</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>RedHat Enterprise Linux (RHEL) Operating Systems</b> </p> <p>The supported keys for RedHat Enterprise Linux operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>RedhatEnterpriseLinux6.5</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.6</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.7</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.8</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.9</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.0</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.1</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.2</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.3</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.4</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.5</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.6</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>SUSE Linux Enterprise Server (SLES) Operating Systems</b> </p> <p>The supported keys for SLES operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Suse12.0</code> </p> </li> <li> <p> <code>Suse12.1</code> </p> </li> <li> <p> <code>Suse12.2</code> </p> </li> <li> <p> <code>Suse12.3</code> </p> </li> <li> <p> <code>Suse12.4</code> </p> </li> <li> <p> <code>Suse12.5</code> </p> </li> <li> <p> <code>Suse12.6</code> </p> </li> <li> <p> <code>Suse12.7</code> </p> </li> <li> <p> <code>Suse12.8</code> </p> </li> <li> <p> <code>Suse12.9</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Optional</code> </p> </li> <li> <p> <code>Feature</code> </p> </li> <li> <p> <code>Document</code> </p> </li> <li> <p> <code>Yast</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Moderate</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>CentOS Operating Systems</b> </p> <p>The supported keys for CentOS operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>CentOS6.5</code> </p> </li> <li> <p> <code>CentOS6.6</code> </p> </li> <li> <p> <code>CentOS6.7</code> </p> </li> <li> <p> <code>CentOS6.8</code> </p> </li> <li> <p> <code>CentOS6.9</code> </p> </li> <li> <p> <code>CentOS7.0</code> </p> </li> <li> <p> <code>CentOS7.1</code> </p> </li> <li> <p> <code>CentOS7.2</code> </p> </li> <li> <p> <code>CentOS7.3</code> </p> </li> <li> <p> <code>CentOS7.4</code> </p> </li> <li> <p> <code>CentOS7.5</code> </p> </li> <li> <p> <code>CentOS7.6</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul>",
                                    "properties": {
                                        "Key": {
                                            "description": "<p>The key for the filter.</p> <p>See <a>PatchFilter</a> for lists of valid keys for each operating system type.</p>",
                                            "enum": [
                                                "PRODUCT",
                                                "CLASSIFICATION",
                                                "MSRC_SEVERITY",
                                                "PATCH_ID",
                                                "SECTION",
                                                "PRIORITY",
                                                "SEVERITY"
                                            ],
                                            "type": "string"
                                        },
                                        "Values": {
                                            "description": "<p>The value for the filter key.</p> <p>See <a>PatchFilter</a> for lists of valid values for each key based on operating system type.</p>",
                                            "items": {
                                                "maxLength": 64,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "maxItems": 20,
                                            "minItems": 1,
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "Key",
                                        "Values"
                                    ],
                                    "type": "object"
                                },
                                "maxItems": 4,
                                "minItems": 0,
                                "type": "array"
                            }
                        },
                        "required": [
                            "PatchFilters"
                        ],
                        "type": "object"
                    },
                    "Name": {
                        "description": "The name of the patch baseline.",
                        "maxLength": 128,
                        "minLength": 3,
                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                        "type": "string"
                    },
                    "OperatingSystem": {
                        "description": "Defines the operating system the patch baseline applies to. The Default value is WINDOWS.",
                        "enum": [
                            "WINDOWS",
                            "AMAZON_LINUX",
                            "AMAZON_LINUX_2",
                            "UBUNTU",
                            "REDHAT_ENTERPRISE_LINUX",
                            "SUSE",
                            "CENTOS"
                        ],
                        "type": "string"
                    },
                    "RejectedPatches": {
                        "description": "<p>A list of explicitly rejected patches for the baseline.</p> <p>For information about accepted formats for lists of approved patches and rejected patches, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/patch-manager-approved-rejected-package-name-formats.html\">Package Name Formats for Approved and Rejected Patch Lists</a> in the <i>AWS Systems Manager User Guide</i>.</p>",
                        "items": {
                            "maxLength": 100,
                            "minLength": 1,
                            "type": "string"
                        },
                        "maxItems": 50,
                        "minItems": 0,
                        "type": "array"
                    },
                    "RejectedPatchesAction": {
                        "description": "<p>The action for Patch Manager to take on patches included in the RejectedPackages list.</p> <ul> <li> <p> <b>ALLOW_AS_DEPENDENCY</b>: A package in the Rejected patches list is installed only if it is a dependency of another package. It is considered compliant with the patch baseline, and its status is reported as <i>InstalledOther</i>. This is the default action if no option is specified.</p> </li> <li> <p> <b>BLOCK</b>: Packages in the RejectedPatches list, and packages that include them as dependencies, are not installed under any circumstances. If a package was installed before it was added to the Rejected patches list, it is considered non-compliant with the patch baseline, and its status is reported as <i>InstalledRejected</i>.</p> </li> </ul>",
                        "enum": [
                            "ALLOW_AS_DEPENDENCY",
                            "BLOCK"
                        ],
                        "type": "string"
                    },
                    "Sources": {
                        "description": "Information about the patches to use to update the instances, including target operating systems and source repositories. Applies to Linux instances only.",
                        "items": {
                            "description": "Information about the patches to use to update the instances, including target operating systems and source repository. Applies to Linux instances only.",
                            "properties": {
                                "Configuration": {
                                    "description": "<p>The value of the yum repo configuration. For example:</p> <p> <code>[main]</code> </p> <p> <code>cachedir=/var/cache/yum/$basesearch$releasever</code> </p> <p> <code>keepcache=0</code> </p> <p> <code>debuglevel=2</code> </p>",
                                    "format": "password",
                                    "maxLength": 512,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "The name specified to identify the patch source.",
                                    "pattern": "^[a-zA-Z0-9_\\-.]{3,50}$",
                                    "type": "string"
                                },
                                "Products": {
                                    "description": "The specific operating system versions a patch repository applies to, such as \"Ubuntu16.04\", \"AmazonLinux2016.09\", \"RedhatEnterpriseLinux7.2\" or \"Suse12.7\". For lists of supported product values, see <a>PatchFilter</a>.",
                                    "items": {
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "maxItems": 20,
                                    "minItems": 1,
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Name",
                                "Products",
                                "Configuration"
                            ],
                            "type": "object"
                        },
                        "maxItems": 20,
                        "minItems": 0,
                        "type": "array"
                    },
                    "Tags": {
                        "description": "<p>Optional metadata that you assign to a resource. Tags enable you to categorize a resource in different ways, such as by purpose, owner, or environment. For example, you might want to tag a patch baseline to identify the severity level of patches it specifies and the operating system family it applies to. In this case, you could specify the following key name/value pairs:</p> <ul> <li> <p> <code>Key=PatchSeverity,Value=Critical</code> </p> </li> <li> <p> <code>Key=OS,Value=Windows</code> </p> </li> </ul> <note> <p>To add tags to an existing patch baseline, use the <a>AddTagsToResource</a> action.</p> </note>",
                        "items": {
                            "description": "Metadata that you assign to your AWS resources. Tags enable you to categorize your resources in different ways, for example, by purpose, owner, or environment. In Systems Manager, you can apply tags to documents, managed instances, Maintenance Windows, Parameter Store parameters, and patch baselines.",
                            "properties": {
                                "Key": {
                                    "description": "The name of the tag.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "The value of the tag.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Key",
                                "Value"
                            ],
                            "type": "object"
                        },
                        "maxItems": 1000,
                        "type": "array"
                    }
                },
                "required": [
                    "Name"
                ],
                "type": "object"
            },
            "CreatePatchBaselineResult": {
                "properties": {
                    "BaselineId": {
                        "description": "The ID of the created patch baseline.",
                        "maxLength": 128,
                        "minLength": 20,
                        "pattern": "^[a-zA-Z0-9_\\-:/]{20,128}$",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateResourceDataSyncRequest": {
                "properties": {
                    "S3Destination": {
                        "description": "Amazon S3 configuration details for the sync.",
                        "properties": {
                            "AWSKMSKeyARN": {
                                "description": "The ARN of an encryption key for a destination in Amazon S3. Must belong to the same region as the destination Amazon S3 bucket.",
                                "maxLength": 512,
                                "minLength": 1,
                                "pattern": "arn:.*",
                                "type": "string"
                            },
                            "BucketName": {
                                "description": "The name of the Amazon S3 bucket where the aggregated data is stored.",
                                "maxLength": 2048,
                                "minLength": 1,
                                "type": "string"
                            },
                            "Prefix": {
                                "description": "An Amazon S3 prefix for the bucket.",
                                "maxLength": 256,
                                "minLength": 1,
                                "type": "string"
                            },
                            "Region": {
                                "description": "The AWS Region with the Amazon S3 bucket targeted by the Resource Data Sync.",
                                "maxLength": 64,
                                "minLength": 1,
                                "type": "string"
                            },
                            "SyncFormat": {
                                "description": "A supported sync format. The following format is currently supported: JsonSerDe",
                                "enum": [
                                    "JsonSerDe"
                                ],
                                "type": "string"
                            }
                        },
                        "required": [
                            "BucketName",
                            "SyncFormat",
                            "Region"
                        ],
                        "type": "object"
                    },
                    "SyncName": {
                        "description": "A name for the configuration.",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "SyncName",
                    "S3Destination"
                ],
                "type": "object"
            },
            "CreateResourceDataSyncResult": {
                "properties": {},
                "type": "object"
            },
            "CreatedDate": {
                "format": "date-time",
                "type": "string"
            },
            "CustomSchemaCountLimitExceededException": {},
            "DateTime": {
                "format": "date-time",
                "type": "string"
            },
            "DefaultBaseline": {
                "type": "boolean"
            },
            "DefaultInstanceName": {
                "maxLength": 256,
                "minLength": 0,
                "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                "type": "string"
            },
            "DeleteActivationRequest": {
                "properties": {
                    "ActivationId": {
                        "description": "The ID of the activation that you want to delete.",
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "type": "string"
                    }
                },
                "required": [
                    "ActivationId"
                ],
                "type": "object"
            },
            "DeleteActivationResult": {
                "properties": {},
                "type": "object"
            },
            "DeleteAssociationRequest": {
                "properties": {
                    "AssociationId": {
                        "description": "The association ID that you want to delete.",
                        "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                        "type": "string"
                    },
                    "InstanceId": {
                        "description": "The ID of the instance.",
                        "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The name of the Systems Manager document.",
                        "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DeleteAssociationResult": {
                "properties": {},
                "type": "object"
            },
            "DeleteDocumentRequest": {
                "properties": {
                    "Name": {
                        "description": "The name of the document.",
                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                        "type": "string"
                    }
                },
                "required": [
                    "Name"
                ],
                "type": "object"
            },
            "DeleteDocumentResult": {
                "properties": {},
                "type": "object"
            },
            "DeleteInventoryRequest": {
                "properties": {
                    "ClientToken": {
                        "description": "User-provided idempotency token.",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "DryRun": {
                        "description": "Use this option to view a summary of the deletion request without deleting any data or the data type. This option is useful when you only want to understand what will be deleted. Once you validate that the data to be deleted is what you intend to delete, you can run the same command without specifying the <code>DryRun</code> option.",
                        "type": "boolean"
                    },
                    "SchemaDeleteOption": {
                        "description": "<p>Use the <code>SchemaDeleteOption</code> to delete a custom inventory type (schema). If you don't choose this option, the system only deletes existing inventory data associated with the custom inventory type. Choose one of the following options:</p> <p>DisableSchema: If you choose this option, the system ignores all inventory data for the specified version, and any earlier versions. To enable this schema again, you must call the <code>PutInventory</code> action for a version greater than the disbled version.</p> <p>DeleteSchema: This option deletes the specified custom type from the Inventory service. You can recreate the schema later, if you want.</p>",
                        "enum": [
                            "DisableSchema",
                            "DeleteSchema"
                        ],
                        "type": "string"
                    },
                    "TypeName": {
                        "description": "The name of the custom inventory type for which you want to delete either all previously collected data, or the inventory type itself. ",
                        "maxLength": 100,
                        "minLength": 1,
                        "pattern": "^(AWS|Custom):.*$",
                        "type": "string"
                    }
                },
                "required": [
                    "TypeName"
                ],
                "type": "object"
            },
            "DeleteInventoryResult": {
                "properties": {
                    "DeletionId": {
                        "description": "Every <code>DeleteInventory</code> action is assigned a unique ID. This option returns a unique ID. You can use this ID to query the status of a delete operation. This option is useful for ensuring that a delete operation has completed before you begin other actions. ",
                        "type": "string"
                    },
                    "DeletionSummary": {
                        "description": "A summary of the delete operation. For more information about this summary, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-inventory-delete.html#sysman-inventory-delete-summary\">Understanding the Delete Inventory Summary</a> in the <i>AWS Systems Manager User Guide</i>.",
                        "properties": {
                            "RemainingCount": {
                                "description": "Remaining number of items to delete.",
                                "type": "integer"
                            },
                            "SummaryItems": {
                                "description": "A list of counts and versions for deleted items.",
                                "items": {
                                    "description": "Either a count, remaining count, or a version number in a delete inventory summary.",
                                    "properties": {
                                        "Count": {
                                            "description": "A count of the number of deleted items.",
                                            "type": "integer"
                                        },
                                        "RemainingCount": {
                                            "description": "The remaining number of items to delete.",
                                            "type": "integer"
                                        },
                                        "Version": {
                                            "description": "The inventory type version.",
                                            "pattern": "^([0-9]{1,6})(\\.[0-9]{1,6})$",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "TotalCount": {
                                "description": "The total number of items to delete. This count does not change during the delete operation.",
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    },
                    "TypeName": {
                        "description": "The name of the inventory data type specified in the request.",
                        "maxLength": 100,
                        "minLength": 1,
                        "pattern": "^(AWS|Custom):.*$",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DeleteMaintenanceWindowRequest": {
                "properties": {
                    "WindowId": {
                        "description": "The ID of the Maintenance Window to delete.",
                        "maxLength": 20,
                        "minLength": 20,
                        "pattern": "^mw-[0-9a-f]{17}$",
                        "type": "string"
                    }
                },
                "required": [
                    "WindowId"
                ],
                "type": "object"
            },
            "DeleteMaintenanceWindowResult": {
                "properties": {
                    "WindowId": {
                        "description": "The ID of the deleted Maintenance Window.",
                        "maxLength": 20,
                        "minLength": 20,
                        "pattern": "^mw-[0-9a-f]{17}$",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DeleteParameterRequest": {
                "properties": {
                    "Name": {
                        "description": "The name of the parameter to delete.",
                        "maxLength": 2048,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "Name"
                ],
                "type": "object"
            },
            "DeleteParameterResult": {
                "properties": {},
                "type": "object"
            },
            "DeleteParametersRequest": {
                "properties": {
                    "Names": {
                        "description": "The names of the parameters to delete.",
                        "items": {
                            "maxLength": 2048,
                            "minLength": 1,
                            "type": "string"
                        },
                        "maxItems": 10,
                        "minItems": 1,
                        "type": "array"
                    }
                },
                "required": [
                    "Names"
                ],
                "type": "object"
            },
            "DeleteParametersResult": {
                "properties": {
                    "DeletedParameters": {
                        "description": "The names of the deleted parameters.",
                        "items": {
                            "maxLength": 2048,
                            "minLength": 1,
                            "type": "string"
                        },
                        "maxItems": 10,
                        "minItems": 1,
                        "type": "array"
                    },
                    "InvalidParameters": {
                        "description": "The names of parameters that weren't deleted because the parameters are not valid.",
                        "items": {
                            "maxLength": 2048,
                            "minLength": 1,
                            "type": "string"
                        },
                        "maxItems": 10,
                        "minItems": 1,
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "DeletePatchBaselineRequest": {
                "properties": {
                    "BaselineId": {
                        "description": "The ID of the patch baseline to delete.",
                        "maxLength": 128,
                        "minLength": 20,
                        "pattern": "^[a-zA-Z0-9_\\-:/]{20,128}$",
                        "type": "string"
                    }
                },
                "required": [
                    "BaselineId"
                ],
                "type": "object"
            },
            "DeletePatchBaselineResult": {
                "properties": {
                    "BaselineId": {
                        "description": "The ID of the deleted patch baseline.",
                        "maxLength": 128,
                        "minLength": 20,
                        "pattern": "^[a-zA-Z0-9_\\-:/]{20,128}$",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DeleteResourceDataSyncRequest": {
                "properties": {
                    "SyncName": {
                        "description": "The name of the configuration to delete.",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "SyncName"
                ],
                "type": "object"
            },
            "DeleteResourceDataSyncResult": {
                "properties": {},
                "type": "object"
            },
            "DeliveryTimedOutCount": {
                "type": "integer"
            },
            "DeregisterManagedInstanceRequest": {
                "properties": {
                    "InstanceId": {
                        "description": "The ID assigned to the managed instance when you registered it using the activation process. ",
                        "pattern": "^mi-[0-9a-f]{17}$",
                        "type": "string"
                    }
                },
                "required": [
                    "InstanceId"
                ],
                "type": "object"
            },
            "DeregisterManagedInstanceResult": {
                "properties": {},
                "type": "object"
            },
            "DeregisterPatchBaselineForPatchGroupRequest": {
                "properties": {
                    "BaselineId": {
                        "description": "The ID of the patch baseline to deregister the patch group from.",
                        "maxLength": 128,
                        "minLength": 20,
                        "pattern": "^[a-zA-Z0-9_\\-:/]{20,128}$",
                        "type": "string"
                    },
                    "PatchGroup": {
                        "description": "The name of the patch group that should be deregistered from the patch baseline.",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                        "type": "string"
                    }
                },
                "required": [
                    "BaselineId",
                    "PatchGroup"
                ],
                "type": "object"
            },
            "DeregisterPatchBaselineForPatchGroupResult": {
                "properties": {
                    "BaselineId": {
                        "description": "The ID of the patch baseline the patch group was deregistered from.",
                        "maxLength": 128,
                        "minLength": 20,
                        "pattern": "^[a-zA-Z0-9_\\-:/]{20,128}$",
                        "type": "string"
                    },
                    "PatchGroup": {
                        "description": "The name of the patch group deregistered from the patch baseline.",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DeregisterTargetFromMaintenanceWindowRequest": {
                "properties": {
                    "Safe": {
                        "description": "The system checks if the target is being referenced by a task. If the target is being referenced, the system returns an error and does not deregister the target from the Maintenance Window.",
                        "type": "boolean"
                    },
                    "WindowId": {
                        "description": "The ID of the Maintenance Window the target should be removed from.",
                        "maxLength": 20,
                        "minLength": 20,
                        "pattern": "^mw-[0-9a-f]{17}$",
                        "type": "string"
                    },
                    "WindowTargetId": {
                        "description": "The ID of the target definition to remove.",
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                        "type": "string"
                    }
                },
                "required": [
                    "WindowId",
                    "WindowTargetId"
                ],
                "type": "object"
            },
            "DeregisterTargetFromMaintenanceWindowResult": {
                "properties": {
                    "WindowId": {
                        "description": "The ID of the Maintenance Window the target was removed from.",
                        "maxLength": 20,
                        "minLength": 20,
                        "pattern": "^mw-[0-9a-f]{17}$",
                        "type": "string"
                    },
                    "WindowTargetId": {
                        "description": "The ID of the removed target definition.",
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DeregisterTaskFromMaintenanceWindowRequest": {
                "properties": {
                    "WindowId": {
                        "description": "The ID of the Maintenance Window the task should be removed from.",
                        "maxLength": 20,
                        "minLength": 20,
                        "pattern": "^mw-[0-9a-f]{17}$",
                        "type": "string"
                    },
                    "WindowTaskId": {
                        "description": "The ID of the task to remove from the Maintenance Window.",
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                        "type": "string"
                    }
                },
                "required": [
                    "WindowId",
                    "WindowTaskId"
                ],
                "type": "object"
            },
            "DeregisterTaskFromMaintenanceWindowResult": {
                "properties": {
                    "WindowId": {
                        "description": "The ID of the Maintenance Window the task was removed from.",
                        "maxLength": 20,
                        "minLength": 20,
                        "pattern": "^mw-[0-9a-f]{17}$",
                        "type": "string"
                    },
                    "WindowTaskId": {
                        "description": "The ID of the task removed from the Maintenance Window.",
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DescribeActivationsFilter": {
                "description": "Filter for the DescribeActivation API.",
                "properties": {
                    "FilterKey": {
                        "description": "The name of the filter.",
                        "enum": [
                            "ActivationIds",
                            "DefaultInstanceName",
                            "IamRole"
                        ],
                        "type": "string"
                    },
                    "FilterValues": {
                        "description": "The filter values.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "DescribeActivationsFilterKeys": {
                "enum": [
                    "ActivationIds",
                    "DefaultInstanceName",
                    "IamRole"
                ],
                "type": "string"
            },
            "DescribeActivationsFilterList": {
                "items": {
                    "description": "Filter for the DescribeActivation API.",
                    "properties": {
                        "FilterKey": {
                            "description": "The name of the filter.",
                            "enum": [
                                "ActivationIds",
                                "DefaultInstanceName",
                                "IamRole"
                            ],
                            "type": "string"
                        },
                        "FilterValues": {
                            "description": "The filter values.",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "DescribeActivationsRequest": {
                "properties": {
                    "Filters": {
                        "description": "A filter to view information about your activations.",
                        "items": {
                            "description": "Filter for the DescribeActivation API.",
                            "properties": {
                                "FilterKey": {
                                    "description": "The name of the filter.",
                                    "enum": [
                                        "ActivationIds",
                                        "DefaultInstanceName",
                                        "IamRole"
                                    ],
                                    "type": "string"
                                },
                                "FilterValues": {
                                    "description": "The filter values.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "MaxResults": {
                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                        "maximum": 50,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "A token to start the list. Use this token to get the next set of results. ",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DescribeActivationsResult": {
                "properties": {
                    "ActivationList": {
                        "description": "A list of activations for your AWS account.",
                        "items": {
                            "description": "An activation registers one or more on-premises servers or virtual machines (VMs) with AWS so that you can configure those servers or VMs using Run Command. A server or VM that has been registered with AWS is called a managed instance.",
                            "properties": {
                                "ActivationId": {
                                    "description": "The ID created by Systems Manager when you submitted the activation.",
                                    "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                                    "type": "string"
                                },
                                "CreatedDate": {
                                    "description": "The date the activation was created.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "DefaultInstanceName": {
                                    "description": "A name for the managed instance when it is created.",
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                    "type": "string"
                                },
                                "Description": {
                                    "description": "A user defined description of the activation.",
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "ExpirationDate": {
                                    "description": "The date when this activation can no longer be used to register managed instances.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "Expired": {
                                    "description": "Whether or not the activation is expired.",
                                    "type": "boolean"
                                },
                                "IamRole": {
                                    "description": "The Amazon Identity and Access Management (IAM) role to assign to the managed instance.",
                                    "maxLength": 64,
                                    "type": "string"
                                },
                                "RegistrationLimit": {
                                    "description": "The maximum number of managed instances that can be registered using this activation.",
                                    "maximum": 1000,
                                    "minimum": 1,
                                    "type": "integer"
                                },
                                "RegistrationsCount": {
                                    "description": "The number of managed instances already registered with this activation.",
                                    "maximum": 1000,
                                    "minimum": 1,
                                    "type": "integer"
                                },
                                "Tags": {
                                    "description": "Tags assigned to the activation.",
                                    "items": {
                                        "description": "Metadata that you assign to your AWS resources. Tags enable you to categorize your resources in different ways, for example, by purpose, owner, or environment. In Systems Manager, you can apply tags to documents, managed instances, Maintenance Windows, Parameter Store parameters, and patch baselines.",
                                        "properties": {
                                            "Key": {
                                                "description": "The name of the tag.",
                                                "maxLength": 128,
                                                "minLength": 1,
                                                "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                "type": "string"
                                            },
                                            "Value": {
                                                "description": "The value of the tag.",
                                                "maxLength": 256,
                                                "minLength": 1,
                                                "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "Key",
                                            "Value"
                                        ],
                                        "type": "object"
                                    },
                                    "maxItems": 1000,
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "NextToken": {
                        "description": "The token for the next set of items to return. Use this token to get the next set of results. ",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DescribeAssociationExecutionTargetsRequest": {
                "properties": {
                    "AssociationId": {
                        "description": "The association ID that includes the execution for which you want to view details.",
                        "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                        "type": "string"
                    },
                    "ExecutionId": {
                        "description": "The execution ID for which you want to view details.",
                        "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                        "type": "string"
                    },
                    "Filters": {
                        "description": "<p>Filters for the request. You can specify the following filters and values.</p> <p>Status (EQUAL)</p> <p>ResourceId (EQUAL)</p> <p>ResourceType (EQUAL)</p>",
                        "items": {
                            "description": "Filters for the association execution.",
                            "properties": {
                                "Key": {
                                    "description": "The key value used in the request.",
                                    "enum": [
                                        "Status",
                                        "ResourceId",
                                        "ResourceType"
                                    ],
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "The value specified for the key.",
                                    "minLength": 1,
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Key",
                                "Value"
                            ],
                            "type": "object"
                        },
                        "minItems": 1,
                        "type": "array"
                    },
                    "MaxResults": {
                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                        "maximum": 50,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "A token to start the list. Use this token to get the next set of results. ",
                        "type": "string"
                    }
                },
                "required": [
                    "AssociationId",
                    "ExecutionId"
                ],
                "type": "object"
            },
            "DescribeAssociationExecutionTargetsResult": {
                "properties": {
                    "AssociationExecutionTargets": {
                        "description": "Information about the execution.",
                        "items": {
                            "description": "Includes information about the specified association execution.",
                            "properties": {
                                "AssociationId": {
                                    "description": "The association ID.",
                                    "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                                    "type": "string"
                                },
                                "AssociationVersion": {
                                    "description": "The association version.",
                                    "pattern": "([$]LATEST)|([1-9][0-9]*)",
                                    "type": "string"
                                },
                                "DetailedStatus": {
                                    "description": "Detailed information about the execution status.",
                                    "type": "string"
                                },
                                "ExecutionId": {
                                    "description": "The execution ID. If the association does not run at intervals or according to a schedule, then the ExecutionID is the same as the AssociationID.",
                                    "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                                    "type": "string"
                                },
                                "LastExecutionDate": {
                                    "description": "The date of the last execution.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "OutputSource": {
                                    "description": "The location where the association details are saved.",
                                    "properties": {
                                        "OutputSourceId": {
                                            "description": "The ID of the output source, for example the URL of an Amazon S3 bucket.",
                                            "maxLength": 36,
                                            "minLength": 36,
                                            "type": "string"
                                        },
                                        "OutputSourceType": {
                                            "description": "The type of source where the association execution details are stored, for example, Amazon S3.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "ResourceId": {
                                    "description": "The resource ID, for example, the instance ID where the association ran.",
                                    "maxLength": 100,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "ResourceType": {
                                    "description": "The resource type, for example, instance.",
                                    "maxLength": 50,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Status": {
                                    "description": "The association execution status.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "NextToken": {
                        "description": "The token for the next set of items to return. Use this token to get the next set of results.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DescribeAssociationExecutionsRequest": {
                "properties": {
                    "AssociationId": {
                        "description": "The association ID for which you want to view execution history details.",
                        "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                        "type": "string"
                    },
                    "Filters": {
                        "description": "<p>Filters for the request. You can specify the following filters and values.</p> <p>ExecutionId (EQUAL)</p> <p>Status (EQUAL)</p> <p>CreatedTime (EQUAL, GREATER_THAN, LESS_THAN)</p>",
                        "items": {
                            "description": "Filters used in the request.",
                            "properties": {
                                "Key": {
                                    "description": "The key value used in the request.",
                                    "enum": [
                                        "ExecutionId",
                                        "Status",
                                        "CreatedTime"
                                    ],
                                    "type": "string"
                                },
                                "Type": {
                                    "description": "The filter type specified in the request.",
                                    "enum": [
                                        "EQUAL",
                                        "LESS_THAN",
                                        "GREATER_THAN"
                                    ],
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "The value specified for the key.",
                                    "minLength": 1,
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Key",
                                "Value",
                                "Type"
                            ],
                            "type": "object"
                        },
                        "minItems": 1,
                        "type": "array"
                    },
                    "MaxResults": {
                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                        "maximum": 50,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "A token to start the list. Use this token to get the next set of results. ",
                        "type": "string"
                    }
                },
                "required": [
                    "AssociationId"
                ],
                "type": "object"
            },
            "DescribeAssociationExecutionsResult": {
                "properties": {
                    "AssociationExecutions": {
                        "description": "A list of the executions for the specified association ID.",
                        "items": {
                            "description": "Includes information about the specified association.",
                            "properties": {
                                "AssociationId": {
                                    "description": "The association ID.",
                                    "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                                    "type": "string"
                                },
                                "AssociationVersion": {
                                    "description": "The association version.",
                                    "pattern": "([$]LATEST)|([1-9][0-9]*)",
                                    "type": "string"
                                },
                                "CreatedTime": {
                                    "description": "The time the execution started.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "DetailedStatus": {
                                    "description": "Detailed status information about the execution.",
                                    "type": "string"
                                },
                                "ExecutionId": {
                                    "description": "The execution ID for the association. If the association does not run at intervals or according to a schedule, then the ExecutionID is the same as the AssociationID.",
                                    "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                                    "type": "string"
                                },
                                "LastExecutionDate": {
                                    "description": "The date of the last execution.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "ResourceCountByStatus": {
                                    "description": "An aggregate status of the resources in the execution based on the status type.",
                                    "type": "string"
                                },
                                "Status": {
                                    "description": "The status of the association execution.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "NextToken": {
                        "description": "The token for the next set of items to return. Use this token to get the next set of results.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DescribeAssociationRequest": {
                "properties": {
                    "AssociationId": {
                        "description": "The association ID for which you want information.",
                        "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                        "type": "string"
                    },
                    "AssociationVersion": {
                        "description": "Specify the association version to retrieve. To view the latest version, either specify <code>$LATEST</code> for this parameter, or omit this parameter. To view a list of all associations for an instance, use <a>ListAssociations</a>. To get a list of versions for a specific association, use <a>ListAssociationVersions</a>. ",
                        "pattern": "([$]LATEST)|([1-9][0-9]*)",
                        "type": "string"
                    },
                    "InstanceId": {
                        "description": "The instance ID.",
                        "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The name of the Systems Manager document.",
                        "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DescribeAssociationResult": {
                "properties": {
                    "AssociationDescription": {
                        "description": "Information about the association.",
                        "properties": {
                            "AssociationId": {
                                "description": "The association ID.",
                                "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                                "type": "string"
                            },
                            "AssociationName": {
                                "description": "The association name.",
                                "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                "type": "string"
                            },
                            "AssociationVersion": {
                                "description": "The association version.",
                                "pattern": "([$]LATEST)|([1-9][0-9]*)",
                                "type": "string"
                            },
                            "AutomationTargetParameterName": {
                                "description": "Specify the target for the association. This target is required for associations that use an Automation document and target resources by using rate controls.",
                                "maxLength": 50,
                                "minLength": 1,
                                "type": "string"
                            },
                            "ComplianceSeverity": {
                                "description": "The severity level that is assigned to the association.",
                                "enum": [
                                    "CRITICAL",
                                    "HIGH",
                                    "MEDIUM",
                                    "LOW",
                                    "UNSPECIFIED"
                                ],
                                "type": "string"
                            },
                            "Date": {
                                "description": "The date when the association was made.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "DocumentVersion": {
                                "description": "The document version.",
                                "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                "type": "string"
                            },
                            "InstanceId": {
                                "description": "The ID of the instance.",
                                "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                                "type": "string"
                            },
                            "LastExecutionDate": {
                                "description": "The date on which the association was last run.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "LastSuccessfulExecutionDate": {
                                "description": "The last date on which the association was successfully run.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "LastUpdateAssociationDate": {
                                "description": "The date when the association was last updated.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "MaxConcurrency": {
                                "description": "<p>The maximum number of targets allowed to run the association at the same time. You can specify a number, for example 10, or a percentage of the target set, for example 10%. The default value is 100%, which means all targets run the association at the same time.</p> <p>If a new instance starts and attempts to execute an association while Systems Manager is executing MaxConcurrency associations, the association is allowed to run. During the next association interval, the new instance will process its association within the limit specified for MaxConcurrency.</p>",
                                "maxLength": 7,
                                "minLength": 1,
                                "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                                "type": "string"
                            },
                            "MaxErrors": {
                                "description": "<p>The number of errors that are allowed before the system stops sending requests to run the association on additional targets. You can specify either an absolute number of errors, for example 10, or a percentage of the target set, for example 10%. If you specify 3, for example, the system stops sending requests when the fourth error is received. If you specify 0, then the system stops sending requests after the first error is returned. If you run an association on 50 instances and set MaxError to 10%, then the system stops sending the request when the sixth error is received.</p> <p>Executions that are already running an association when MaxErrors is reached are allowed to complete, but some of these executions may fail as well. If you need to ensure that there won't be more than max-errors failed executions, set MaxConcurrency to 1 so that executions proceed one at a time.</p>",
                                "maxLength": 7,
                                "minLength": 1,
                                "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                                "type": "string"
                            },
                            "Name": {
                                "description": "The name of the Systems Manager document.",
                                "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                                "type": "string"
                            },
                            "OutputLocation": {
                                "description": "An Amazon S3 bucket where you want to store the output details of the request.",
                                "properties": {
                                    "S3Location": {
                                        "description": "An Amazon S3 bucket where you want to store the results of this request.",
                                        "properties": {
                                            "OutputS3BucketName": {
                                                "description": "The name of the Amazon S3 bucket.",
                                                "maxLength": 63,
                                                "minLength": 3,
                                                "type": "string"
                                            },
                                            "OutputS3KeyPrefix": {
                                                "description": "The Amazon S3 bucket subfolder.",
                                                "maxLength": 500,
                                                "type": "string"
                                            },
                                            "OutputS3Region": {
                                                "description": "(Deprecated) You can no longer specify this parameter. The system ignores it. Instead, Systems Manager automatically determines the Amazon S3 bucket region.",
                                                "maxLength": 20,
                                                "minLength": 3,
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "Overview": {
                                "description": "Information about the association.",
                                "properties": {
                                    "AssociationStatusAggregatedCount": {
                                        "description": "Returns the number of targets for the association status. For example, if you created an association with two instances, and one of them was successful, this would return the count of instances by status.",
                                        "items": {
                                            "properties": {
                                                "key": {
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "DetailedStatus": {
                                        "description": "A detailed status of the association.",
                                        "type": "string"
                                    },
                                    "Status": {
                                        "description": "The status of the association. Status can be: Pending, Success, or Failed.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "Parameters": {
                                "description": "A description of the parameters for a document. ",
                                "items": {
                                    "properties": {
                                        "key": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "ScheduleExpression": {
                                "description": "A cron expression that specifies a schedule when the association runs.",
                                "maxLength": 256,
                                "minLength": 1,
                                "type": "string"
                            },
                            "Status": {
                                "description": "The association status.",
                                "properties": {
                                    "AdditionalInfo": {
                                        "description": "A user-defined string.",
                                        "maxLength": 1024,
                                        "type": "string"
                                    },
                                    "Date": {
                                        "description": "The date when the status changed.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Message": {
                                        "description": "The reason for the status.",
                                        "maxLength": 1024,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "The status.",
                                        "enum": [
                                            "Pending",
                                            "Success",
                                            "Failed"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Date",
                                    "Name",
                                    "Message"
                                ],
                                "type": "object"
                            },
                            "Targets": {
                                "description": "The instances targeted by the request. ",
                                "items": {
                                    "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                                    "properties": {
                                        "Key": {
                                            "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                            "type": "string"
                                        },
                                        "Values": {
                                            "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                            "items": {
                                                "type": "string"
                                            },
                                            "maxItems": 50,
                                            "minItems": 0,
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                },
                                "maxItems": 5,
                                "minItems": 0,
                                "type": "array"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "DescribeAutomationExecutionsRequest": {
                "properties": {
                    "Filters": {
                        "description": "Filters used to limit the scope of executions that are requested.",
                        "items": {
                            "description": "A filter used to match specific automation executions. This is used to limit the scope of Automation execution information returned.",
                            "properties": {
                                "Key": {
                                    "description": "One or more keys to limit the results. Valid filter keys include the following: DocumentNamePrefix, ExecutionStatus, ExecutionId, ParentExecutionId, CurrentAction, StartTimeBefore, StartTimeAfter.",
                                    "enum": [
                                        "DocumentNamePrefix",
                                        "ExecutionStatus",
                                        "ExecutionId",
                                        "ParentExecutionId",
                                        "CurrentAction",
                                        "StartTimeBefore",
                                        "StartTimeAfter",
                                        "AutomationType"
                                    ],
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "The values used to limit the execution information associated with the filter's key.",
                                    "items": {
                                        "maxLength": 150,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "maxItems": 10,
                                    "minItems": 1,
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Key",
                                "Values"
                            ],
                            "type": "object"
                        },
                        "maxItems": 10,
                        "minItems": 1,
                        "type": "array"
                    },
                    "MaxResults": {
                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                        "maximum": 50,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "The token for the next set of items to return. (You received this token from a previous call.)",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DescribeAutomationExecutionsResult": {
                "properties": {
                    "AutomationExecutionMetadataList": {
                        "description": "The list of details about each automation execution which has occurred which matches the filter specification, if any.",
                        "items": {
                            "description": "Details about a specific Automation execution.",
                            "properties": {
                                "AutomationExecutionId": {
                                    "description": "The execution ID.",
                                    "maxLength": 36,
                                    "minLength": 36,
                                    "type": "string"
                                },
                                "AutomationExecutionStatus": {
                                    "description": "The status of the execution. Valid values include: Running, Succeeded, Failed, Timed out, or Cancelled.",
                                    "enum": [
                                        "Pending",
                                        "InProgress",
                                        "Waiting",
                                        "Success",
                                        "TimedOut",
                                        "Cancelling",
                                        "Cancelled",
                                        "Failed"
                                    ],
                                    "type": "string"
                                },
                                "AutomationType": {
                                    "description": "Use this filter with <a>DescribeAutomationExecutions</a>. Specify either Local or CrossAccount. CrossAccount is an Automation that executes in multiple AWS Regions and accounts. For more information, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-automation-multiple-accounts-and-regions.html\">Concurrently Executing Automations in Multiple AWS Regions and Accounts</a> in the <i>AWS Systems Manager User Guide</i>. ",
                                    "enum": [
                                        "CrossAccount",
                                        "Local"
                                    ],
                                    "type": "string"
                                },
                                "CurrentAction": {
                                    "description": "The action of the currently executing step.",
                                    "type": "string"
                                },
                                "CurrentStepName": {
                                    "description": "The name of the currently executing step.",
                                    "type": "string"
                                },
                                "DocumentName": {
                                    "description": "The name of the Automation document used during execution.",
                                    "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                    "type": "string"
                                },
                                "DocumentVersion": {
                                    "description": "The document version used during the execution.",
                                    "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                    "type": "string"
                                },
                                "ExecutedBy": {
                                    "description": "The IAM role ARN of the user who executed the Automation.",
                                    "type": "string"
                                },
                                "ExecutionEndTime": {
                                    "description": "The time the execution finished. This is not populated if the execution is still in progress.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "ExecutionStartTime": {
                                    "description": "The time the execution started.&gt;",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "FailureMessage": {
                                    "description": "The list of execution outputs as defined in the Automation document.",
                                    "type": "string"
                                },
                                "LogFile": {
                                    "description": "An Amazon S3 bucket where execution information is stored.",
                                    "type": "string"
                                },
                                "MaxConcurrency": {
                                    "description": "The MaxConcurrency value specified by the user when starting the Automation.",
                                    "maxLength": 7,
                                    "minLength": 1,
                                    "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                                    "type": "string"
                                },
                                "MaxErrors": {
                                    "description": "The MaxErrors value specified by the user when starting the Automation.",
                                    "maxLength": 7,
                                    "minLength": 1,
                                    "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                                    "type": "string"
                                },
                                "Mode": {
                                    "description": "The Automation execution mode.",
                                    "enum": [
                                        "Auto",
                                        "Interactive"
                                    ],
                                    "type": "string"
                                },
                                "Outputs": {
                                    "description": "The list of execution outputs as defined in the Automation document.",
                                    "items": {
                                        "properties": {
                                            "key": {
                                                "maxLength": 30,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "value": {
                                                "items": {
                                                    "maxLength": 512,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "maxItems": 10,
                                                "minItems": 0,
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "maxItems": 200,
                                    "minItems": 1,
                                    "type": "array"
                                },
                                "ParentAutomationExecutionId": {
                                    "description": "The ExecutionId of the parent Automation.",
                                    "maxLength": 36,
                                    "minLength": 36,
                                    "type": "string"
                                },
                                "ResolvedTargets": {
                                    "description": "A list of targets that resolved during the execution.",
                                    "properties": {
                                        "ParameterValues": {
                                            "description": "A list of parameter values sent to targets that resolved during the Automation execution.",
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "Truncated": {
                                            "description": "A boolean value indicating whether the resolved target list is truncated.",
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                },
                                "Target": {
                                    "description": "The list of execution outputs as defined in the Automation document.",
                                    "type": "string"
                                },
                                "TargetMaps": {
                                    "description": "The specified key-value mapping of document parameters to target resources.",
                                    "items": {
                                        "items": {
                                            "properties": {
                                                "key": {
                                                    "maxLength": 50,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "items": {
                                                        "maxLength": 50,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "maxItems": 25,
                                                    "minItems": 0,
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "maxItems": 20,
                                        "minItems": 1,
                                        "type": "array"
                                    },
                                    "maxItems": 300,
                                    "minItems": 0,
                                    "type": "array"
                                },
                                "TargetParameterName": {
                                    "description": "The list of execution outputs as defined in the Automation document.",
                                    "maxLength": 30,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Targets": {
                                    "description": "The targets defined by the user when starting the Automation.",
                                    "items": {
                                        "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                                        "properties": {
                                            "Key": {
                                                "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                "maxLength": 128,
                                                "minLength": 1,
                                                "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                                "type": "string"
                                            },
                                            "Values": {
                                                "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "maxItems": 50,
                                                "minItems": 0,
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "maxItems": 5,
                                    "minItems": 0,
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "NextToken": {
                        "description": "The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DescribeAutomationStepExecutionsRequest": {
                "properties": {
                    "AutomationExecutionId": {
                        "description": "The Automation execution ID for which you want step execution descriptions.",
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string"
                    },
                    "Filters": {
                        "description": "One or more filters to limit the number of step executions returned by the request.",
                        "items": {
                            "description": "A filter to limit the amount of step execution information returned by the call.",
                            "properties": {
                                "Key": {
                                    "description": "One or more keys to limit the results. Valid filter keys include the following: StepName, Action, StepExecutionId, StepExecutionStatus, StartTimeBefore, StartTimeAfter.",
                                    "enum": [
                                        "StartTimeBefore",
                                        "StartTimeAfter",
                                        "StepExecutionStatus",
                                        "StepExecutionId",
                                        "StepName",
                                        "Action"
                                    ],
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "The values of the filter key.",
                                    "items": {
                                        "maxLength": 150,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "maxItems": 10,
                                    "minItems": 1,
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Key",
                                "Values"
                            ],
                            "type": "object"
                        },
                        "maxItems": 6,
                        "minItems": 1,
                        "type": "array"
                    },
                    "MaxResults": {
                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                        "maximum": 50,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "The token for the next set of items to return. (You received this token from a previous call.)",
                        "type": "string"
                    },
                    "ReverseOrder": {
                        "description": "A boolean that indicates whether to list step executions in reverse order by start time. The default value is false.",
                        "type": "boolean"
                    }
                },
                "required": [
                    "AutomationExecutionId"
                ],
                "type": "object"
            },
            "DescribeAutomationStepExecutionsResult": {
                "properties": {
                    "NextToken": {
                        "description": "The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.",
                        "type": "string"
                    },
                    "StepExecutions": {
                        "description": "A list of details about the current state of all steps that make up an execution.",
                        "items": {
                            "description": "Detailed information about an the execution state of an Automation step.",
                            "properties": {
                                "Action": {
                                    "description": "The action this step performs. The action determines the behavior of the step.",
                                    "pattern": "^aws:[a-zA-Z]{3,25}$",
                                    "type": "string"
                                },
                                "ExecutionEndTime": {
                                    "description": "If a step has finished execution, this contains the time the execution ended. If the step has not yet concluded, this field is not populated.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "ExecutionStartTime": {
                                    "description": "If a step has begun execution, this contains the time the step started. If the step is in Pending status, this field is not populated.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "FailureDetails": {
                                    "description": "Information about the Automation failure.",
                                    "properties": {
                                        "Details": {
                                            "description": "Detailed information about the Automation step failure.",
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "maxLength": 30,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "items": {
                                                            "maxLength": 512,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "maxItems": 10,
                                                        "minItems": 0,
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "maxItems": 200,
                                            "minItems": 1,
                                            "type": "array"
                                        },
                                        "FailureStage": {
                                            "description": "The stage of the Automation execution when the failure occurred. The stages include the following: InputValidation, PreVerification, Invocation, PostVerification.",
                                            "type": "string"
                                        },
                                        "FailureType": {
                                            "description": "The type of Automation failure. Failure types include the following: Action, Permission, Throttling, Verification, Internal.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "FailureMessage": {
                                    "description": "If a step failed, this message explains why the execution failed.",
                                    "type": "string"
                                },
                                "Inputs": {
                                    "description": "Fully-resolved values passed into the step before execution.",
                                    "items": {
                                        "properties": {
                                            "key": {
                                                "type": "string"
                                            },
                                            "value": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "IsCritical": {
                                    "description": "The flag which can be used to help decide whether the failure of current step leads to the Automation failure.",
                                    "type": "boolean"
                                },
                                "IsEnd": {
                                    "description": "The flag which can be used to end automation no matter whether the step succeeds or fails.",
                                    "type": "boolean"
                                },
                                "MaxAttempts": {
                                    "description": "The maximum number of tries to run the action of the step. The default value is 1.",
                                    "type": "integer"
                                },
                                "NextStep": {
                                    "description": "The next step after the step succeeds.",
                                    "type": "string"
                                },
                                "OnFailure": {
                                    "description": "The action to take if the step fails. The default value is Abort.",
                                    "type": "string"
                                },
                                "Outputs": {
                                    "description": "Returned values from the execution of the step.",
                                    "items": {
                                        "properties": {
                                            "key": {
                                                "maxLength": 30,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "value": {
                                                "items": {
                                                    "maxLength": 512,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "maxItems": 10,
                                                "minItems": 0,
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "maxItems": 200,
                                    "minItems": 1,
                                    "type": "array"
                                },
                                "OverriddenParameters": {
                                    "description": "A user-specified list of parameters to override when executing a step.",
                                    "items": {
                                        "properties": {
                                            "key": {
                                                "maxLength": 30,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "value": {
                                                "items": {
                                                    "maxLength": 512,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "maxItems": 10,
                                                "minItems": 0,
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "maxItems": 200,
                                    "minItems": 1,
                                    "type": "array"
                                },
                                "Response": {
                                    "description": "A message associated with the response code for an execution.",
                                    "type": "string"
                                },
                                "ResponseCode": {
                                    "description": "The response code returned by the execution of the step.",
                                    "type": "string"
                                },
                                "StepExecutionId": {
                                    "description": "The unique ID of a step execution.",
                                    "type": "string"
                                },
                                "StepName": {
                                    "description": "The name of this execution step.",
                                    "type": "string"
                                },
                                "StepStatus": {
                                    "description": "The execution status for this step. Valid values include: Pending, InProgress, Success, Cancelled, Failed, and TimedOut.",
                                    "enum": [
                                        "Pending",
                                        "InProgress",
                                        "Waiting",
                                        "Success",
                                        "TimedOut",
                                        "Cancelling",
                                        "Cancelled",
                                        "Failed"
                                    ],
                                    "type": "string"
                                },
                                "TargetLocation": {
                                    "description": "The combination of AWS Regions and accounts targeted by the current Automation execution.",
                                    "properties": {
                                        "Accounts": {
                                            "description": "The AWS accounts targeted by the current Automation execution.",
                                            "items": {
                                                "type": "string"
                                            },
                                            "maxItems": 50,
                                            "minItems": 1,
                                            "type": "array"
                                        },
                                        "ExecutionRoleName": {
                                            "description": "The Automation execution role used by the currently executing Automation.",
                                            "maxLength": 64,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "Regions": {
                                            "description": "The AWS Regions targeted by the current Automation execution.",
                                            "items": {
                                                "type": "string"
                                            },
                                            "maxItems": 50,
                                            "minItems": 1,
                                            "type": "array"
                                        },
                                        "TargetLocationMaxConcurrency": {
                                            "description": "The maxium number of AWS accounts and AWS regions allowed to run the Automation concurrently ",
                                            "maxLength": 7,
                                            "minLength": 1,
                                            "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                                            "type": "string"
                                        },
                                        "TargetLocationMaxErrors": {
                                            "description": "The maxium number of errors allowed before the system stops queueing additional Automation executions for the currently executing Automation. ",
                                            "maxLength": 7,
                                            "minLength": 1,
                                            "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "Targets": {
                                    "description": "The targets for the step execution.",
                                    "items": {
                                        "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                                        "properties": {
                                            "Key": {
                                                "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                "maxLength": 128,
                                                "minLength": 1,
                                                "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                                "type": "string"
                                            },
                                            "Values": {
                                                "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "maxItems": 50,
                                                "minItems": 0,
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "maxItems": 5,
                                    "minItems": 0,
                                    "type": "array"
                                },
                                "TimeoutSeconds": {
                                    "description": "The timeout seconds of the step.",
                                    "type": "integer"
                                },
                                "ValidNextSteps": {
                                    "description": "Strategies used when step fails, we support Continue and Abort. Abort will fail the automation when the step fails. Continue will ignore the failure of current step and allow automation to execute the next step. With conditional branching, we add step:stepName to support the automation to go to another specific step.",
                                    "items": {
                                        "maxLength": 65535,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "DescribeAvailablePatchesRequest": {
                "properties": {
                    "Filters": {
                        "description": "Filters used to scope down the returned patches.",
                        "items": {
                            "description": "Defines a filter used in Patch Manager APIs.",
                            "properties": {
                                "Key": {
                                    "description": "The key for the filter.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "The value for the filter.",
                                    "items": {
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 5,
                        "minItems": 0,
                        "type": "array"
                    },
                    "MaxResults": {
                        "description": "The maximum number of patches to return (per page).",
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "The token for the next set of items to return. (You received this token from a previous call.)",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DescribeAvailablePatchesResult": {
                "properties": {
                    "NextToken": {
                        "description": "The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.",
                        "type": "string"
                    },
                    "Patches": {
                        "description": "An array of patches. Each entry in the array is a patch structure.",
                        "items": {
                            "description": "Represents metadata about a patch.",
                            "properties": {
                                "Classification": {
                                    "description": "The classification of the patch (for example, SecurityUpdates, Updates, CriticalUpdates).",
                                    "type": "string"
                                },
                                "ContentUrl": {
                                    "description": "The URL where more information can be obtained about the patch.",
                                    "type": "string"
                                },
                                "Description": {
                                    "description": "The description of the patch.",
                                    "type": "string"
                                },
                                "Id": {
                                    "description": "The ID of the patch (this is different than the Microsoft Knowledge Base ID).",
                                    "maxLength": 100,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "KbNumber": {
                                    "description": "The Microsoft Knowledge Base ID of the patch.",
                                    "type": "string"
                                },
                                "Language": {
                                    "description": "The language of the patch if it's language-specific.",
                                    "type": "string"
                                },
                                "MsrcNumber": {
                                    "description": "The ID of the MSRC bulletin the patch is related to.",
                                    "type": "string"
                                },
                                "MsrcSeverity": {
                                    "description": "The severity of the patch (for example Critical, Important, Moderate).",
                                    "type": "string"
                                },
                                "Product": {
                                    "description": "The specific product the patch is applicable for (for example, WindowsServer2016).",
                                    "type": "string"
                                },
                                "ProductFamily": {
                                    "description": "The product family the patch is applicable for (for example, Windows).",
                                    "type": "string"
                                },
                                "ReleaseDate": {
                                    "description": "The date the patch was released.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "Title": {
                                    "description": "The title of the patch.",
                                    "type": "string"
                                },
                                "Vendor": {
                                    "description": "The name of the vendor providing the patch.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "DescribeDocumentPermissionRequest": {
                "properties": {
                    "Name": {
                        "description": "The name of the document for which you are the owner.",
                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                        "type": "string"
                    },
                    "PermissionType": {
                        "description": "The permission type for the document. The permission type can be <i>Share</i>.",
                        "enum": [
                            "Share"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "Name",
                    "PermissionType"
                ],
                "type": "object"
            },
            "DescribeDocumentPermissionResponse": {
                "properties": {
                    "AccountIds": {
                        "description": "The account IDs that have permission to use this document. The ID can be either an AWS account or <i>All</i>.",
                        "items": {
                            "pattern": "\\(\\?i\\)all\\|[0-9]\\{12\\}",
                            "type": "string"
                        },
                        "maxItems": 20,
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "DescribeDocumentRequest": {
                "properties": {
                    "DocumentVersion": {
                        "description": "The document version for which you want information. Can be a specific version or the default version.",
                        "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The name of the Systems Manager document.",
                        "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                        "type": "string"
                    },
                    "VersionName": {
                        "description": "An optional field specifying the version of the artifact associated with the document. For example, \"Release 12, Update 6\". This value is unique across all versions of a document, and cannot be changed.",
                        "pattern": "^[a-zA-Z0-9_\\-.]{1,128}$",
                        "type": "string"
                    }
                },
                "required": [
                    "Name"
                ],
                "type": "object"
            },
            "DescribeDocumentResult": {
                "properties": {
                    "Document": {
                        "description": "Information about the Systems Manager document.",
                        "properties": {
                            "AttachmentsInformation": {
                                "description": "Details about the document attachments, including names, locations, sizes, etc.",
                                "items": {
                                    "description": "An attribute of an attachment, such as the attachment name.",
                                    "properties": {
                                        "Name": {
                                            "description": "The name of the attachment.",
                                            "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "CreatedDate": {
                                "description": "The date when the document was created.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "DefaultVersion": {
                                "description": "The default version.",
                                "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                "type": "string"
                            },
                            "Description": {
                                "description": "A description of the document. ",
                                "type": "string"
                            },
                            "DocumentFormat": {
                                "description": "The document format, either JSON or YAML.",
                                "enum": [
                                    "YAML",
                                    "JSON"
                                ],
                                "type": "string"
                            },
                            "DocumentType": {
                                "description": "The type of document.",
                                "enum": [
                                    "Command",
                                    "Policy",
                                    "Automation",
                                    "Session",
                                    "Package"
                                ],
                                "type": "string"
                            },
                            "DocumentVersion": {
                                "description": "The document version.",
                                "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                "type": "string"
                            },
                            "Hash": {
                                "description": "<p>The Sha256 or Sha1 hash created by the system when the document was created. </p> <note> <p>Sha1 hashes have been deprecated.</p> </note>",
                                "maxLength": 256,
                                "type": "string"
                            },
                            "HashType": {
                                "description": "<p>The hash type of the document. Valid values include <code>Sha256</code> or <code>Sha1</code>.</p> <note> <p>Sha1 hashes have been deprecated.</p> </note>",
                                "enum": [
                                    "Sha256",
                                    "Sha1"
                                ],
                                "type": "string"
                            },
                            "LatestVersion": {
                                "description": "The latest version of the document.",
                                "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                "type": "string"
                            },
                            "Name": {
                                "description": "The name of the Systems Manager document.",
                                "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                                "type": "string"
                            },
                            "Owner": {
                                "description": "The AWS user account that created the document.",
                                "type": "string"
                            },
                            "Parameters": {
                                "description": "A description of the parameters for a document.",
                                "items": {
                                    "description": "Parameters specified in a System Manager document that execute on the server when the command is run. ",
                                    "properties": {
                                        "DefaultValue": {
                                            "description": "If specified, the default values for the parameters. Parameters without a default value are required. Parameters with a default value are optional.",
                                            "type": "string"
                                        },
                                        "Description": {
                                            "description": "A description of what the parameter does, how to use it, the default value, and whether or not the parameter is optional.",
                                            "type": "string"
                                        },
                                        "Name": {
                                            "description": "The name of the parameter.",
                                            "type": "string"
                                        },
                                        "Type": {
                                            "description": "The type of parameter. The type can be either String or StringList.",
                                            "enum": [
                                                "String",
                                                "StringList"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "PlatformTypes": {
                                "description": "The list of OS platforms compatible with this Systems Manager document. ",
                                "items": {
                                    "enum": [
                                        "Windows",
                                        "Linux"
                                    ],
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "SchemaVersion": {
                                "description": "The schema version.",
                                "pattern": "([0-9]+)\\.([0-9]+)",
                                "type": "string"
                            },
                            "Sha1": {
                                "description": "The SHA1 hash of the document, which you can use for verification.",
                                "type": "string"
                            },
                            "Status": {
                                "description": "The status of the Systems Manager document.",
                                "enum": [
                                    "Creating",
                                    "Active",
                                    "Updating",
                                    "Deleting",
                                    "Failed"
                                ],
                                "type": "string"
                            },
                            "StatusInformation": {
                                "description": "A message returned by AWS Systems Manager that explains the <code>Status</code> value. For example, a <code>Failed</code> status might be explained by the <code>StatusInformation</code> message, \"The specified S3 bucket does not exist. Verify that the URL of the S3 bucket is correct.\"",
                                "type": "string"
                            },
                            "Tags": {
                                "description": "The tags, or metadata, that have been applied to the document.",
                                "items": {
                                    "description": "Metadata that you assign to your AWS resources. Tags enable you to categorize your resources in different ways, for example, by purpose, owner, or environment. In Systems Manager, you can apply tags to documents, managed instances, Maintenance Windows, Parameter Store parameters, and patch baselines.",
                                    "properties": {
                                        "Key": {
                                            "description": "The name of the tag.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                            "type": "string"
                                        },
                                        "Value": {
                                            "description": "The value of the tag.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "Key",
                                        "Value"
                                    ],
                                    "type": "object"
                                },
                                "maxItems": 1000,
                                "type": "array"
                            },
                            "TargetType": {
                                "description": "The target type which defines the kinds of resources the document can run on. For example, /AWS::EC2::Instance. For a list of valid resource types, see <a href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html\">AWS Resource Types Reference</a> in the <i>AWS CloudFormation User Guide</i>. ",
                                "maxLength": 200,
                                "pattern": "^\\/[\\w\\.\\-\\:\\/]*$",
                                "type": "string"
                            },
                            "VersionName": {
                                "description": "The version of the artifact associated with the document.",
                                "pattern": "^[a-zA-Z0-9_\\-.]{1,128}$",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "DescribeEffectiveInstanceAssociationsRequest": {
                "properties": {
                    "InstanceId": {
                        "description": "The instance ID for which you want to view all associations.",
                        "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                        "type": "string"
                    },
                    "MaxResults": {
                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                        "maximum": 5,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "The token for the next set of items to return. (You received this token from a previous call.)",
                        "type": "string"
                    }
                },
                "required": [
                    "InstanceId"
                ],
                "type": "object"
            },
            "DescribeEffectiveInstanceAssociationsResult": {
                "properties": {
                    "Associations": {
                        "description": "The associations for the requested instance.",
                        "items": {
                            "description": "One or more association documents on the instance. ",
                            "properties": {
                                "AssociationId": {
                                    "description": "The association ID.",
                                    "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                                    "type": "string"
                                },
                                "AssociationVersion": {
                                    "description": "Version information for the association on the instance.",
                                    "pattern": "([$]LATEST)|([1-9][0-9]*)",
                                    "type": "string"
                                },
                                "Content": {
                                    "description": "The content of the association document for the instance(s).",
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "InstanceId": {
                                    "description": "The instance ID.",
                                    "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "NextToken": {
                        "description": "The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DescribeEffectivePatchesForPatchBaselineRequest": {
                "properties": {
                    "BaselineId": {
                        "description": "The ID of the patch baseline to retrieve the effective patches for.",
                        "maxLength": 128,
                        "minLength": 20,
                        "pattern": "^[a-zA-Z0-9_\\-:/]{20,128}$",
                        "type": "string"
                    },
                    "MaxResults": {
                        "description": "The maximum number of patches to return (per page).",
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "The token for the next set of items to return. (You received this token from a previous call.)",
                        "type": "string"
                    }
                },
                "required": [
                    "BaselineId"
                ],
                "type": "object"
            },
            "DescribeEffectivePatchesForPatchBaselineResult": {
                "properties": {
                    "EffectivePatches": {
                        "description": "An array of patches and patch status.",
                        "items": {
                            "description": "The EffectivePatch structure defines metadata about a patch along with the approval state of the patch in a particular patch baseline. The approval state includes information about whether the patch is currently approved, due to be approved by a rule, explicitly approved, or explicitly rejected and the date the patch was or will be approved.",
                            "properties": {
                                "Patch": {
                                    "description": "Provides metadata for a patch, including information such as the KB ID, severity, classification and a URL for where more information can be obtained about the patch.",
                                    "properties": {
                                        "Classification": {
                                            "description": "The classification of the patch (for example, SecurityUpdates, Updates, CriticalUpdates).",
                                            "type": "string"
                                        },
                                        "ContentUrl": {
                                            "description": "The URL where more information can be obtained about the patch.",
                                            "type": "string"
                                        },
                                        "Description": {
                                            "description": "The description of the patch.",
                                            "type": "string"
                                        },
                                        "Id": {
                                            "description": "The ID of the patch (this is different than the Microsoft Knowledge Base ID).",
                                            "maxLength": 100,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "KbNumber": {
                                            "description": "The Microsoft Knowledge Base ID of the patch.",
                                            "type": "string"
                                        },
                                        "Language": {
                                            "description": "The language of the patch if it's language-specific.",
                                            "type": "string"
                                        },
                                        "MsrcNumber": {
                                            "description": "The ID of the MSRC bulletin the patch is related to.",
                                            "type": "string"
                                        },
                                        "MsrcSeverity": {
                                            "description": "The severity of the patch (for example Critical, Important, Moderate).",
                                            "type": "string"
                                        },
                                        "Product": {
                                            "description": "The specific product the patch is applicable for (for example, WindowsServer2016).",
                                            "type": "string"
                                        },
                                        "ProductFamily": {
                                            "description": "The product family the patch is applicable for (for example, Windows).",
                                            "type": "string"
                                        },
                                        "ReleaseDate": {
                                            "description": "The date the patch was released.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Title": {
                                            "description": "The title of the patch.",
                                            "type": "string"
                                        },
                                        "Vendor": {
                                            "description": "The name of the vendor providing the patch.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "PatchStatus": {
                                    "description": "The status of the patch in a patch baseline. This includes information about whether the patch is currently approved, due to be approved by a rule, explicitly approved, or explicitly rejected and the date the patch was or will be approved.",
                                    "properties": {
                                        "ApprovalDate": {
                                            "description": "The date the patch was approved (or will be approved if the status is PENDING_APPROVAL).",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "ComplianceLevel": {
                                            "description": "The compliance severity level for a patch.",
                                            "enum": [
                                                "CRITICAL",
                                                "HIGH",
                                                "MEDIUM",
                                                "LOW",
                                                "INFORMATIONAL",
                                                "UNSPECIFIED"
                                            ],
                                            "type": "string"
                                        },
                                        "DeploymentStatus": {
                                            "description": "The approval status of a patch (APPROVED, PENDING_APPROVAL, EXPLICIT_APPROVED, EXPLICIT_REJECTED).",
                                            "enum": [
                                                "APPROVED",
                                                "PENDING_APPROVAL",
                                                "EXPLICIT_APPROVED",
                                                "EXPLICIT_REJECTED"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "NextToken": {
                        "description": "The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DescribeInstanceAssociationsStatusRequest": {
                "properties": {
                    "InstanceId": {
                        "description": "The instance IDs for which you want association status information.",
                        "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                        "type": "string"
                    },
                    "MaxResults": {
                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                        "maximum": 50,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "The token for the next set of items to return. (You received this token from a previous call.)",
                        "type": "string"
                    }
                },
                "required": [
                    "InstanceId"
                ],
                "type": "object"
            },
            "DescribeInstanceAssociationsStatusResult": {
                "properties": {
                    "InstanceAssociationStatusInfos": {
                        "description": "Status information about the association.",
                        "items": {
                            "description": "Status information about the instance association.",
                            "properties": {
                                "AssociationId": {
                                    "description": "The association ID.",
                                    "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                                    "type": "string"
                                },
                                "AssociationName": {
                                    "description": "The name of the association applied to the instance.",
                                    "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                    "type": "string"
                                },
                                "AssociationVersion": {
                                    "description": "The version of the association applied to the instance.",
                                    "pattern": "([$]LATEST)|([1-9][0-9]*)",
                                    "type": "string"
                                },
                                "DetailedStatus": {
                                    "description": "Detailed status information about the instance association.",
                                    "type": "string"
                                },
                                "DocumentVersion": {
                                    "description": "The association document verions.",
                                    "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                    "type": "string"
                                },
                                "ErrorCode": {
                                    "description": "An error code returned by the request to create the association.",
                                    "maxLength": 10,
                                    "type": "string"
                                },
                                "ExecutionDate": {
                                    "description": "The date the instance association executed. ",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "ExecutionSummary": {
                                    "description": "Summary information about association execution.",
                                    "maxLength": 512,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "InstanceId": {
                                    "description": "The instance ID where the association was created.",
                                    "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "The name of the association.",
                                    "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                                    "type": "string"
                                },
                                "OutputUrl": {
                                    "description": "A URL for an Amazon S3 bucket where you want to store the results of this request.",
                                    "properties": {
                                        "S3OutputUrl": {
                                            "description": "The URL of Amazon S3 bucket where you want to store the results of this request.",
                                            "properties": {
                                                "OutputUrl": {
                                                    "description": "A URL for an Amazon S3 bucket where you want to store the results of this request.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "Status": {
                                    "description": "Status information about the instance association.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "NextToken": {
                        "description": "The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DescribeInstanceInformationRequest": {
                "properties": {
                    "Filters": {
                        "description": "One or more filters. Use a filter to return a more specific list of instances. You can filter on Amazon EC2 tag. Specify tags by using a key-value mapping.",
                        "items": {
                            "description": "The filters to describe or get information about your managed instances.",
                            "properties": {
                                "Key": {
                                    "description": "<p>The filter key name to describe your instances. For example:</p> <p>\"InstanceIds\"|\"AgentVersion\"|\"PingStatus\"|\"PlatformTypes\"|\"ActivationIds\"|\"IamRole\"|\"ResourceType\"|\"AssociationStatus\"|\"Tag Key\"</p>",
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "The filter values.",
                                    "items": {
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "maxItems": 100,
                                    "minItems": 1,
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Key",
                                "Values"
                            ],
                            "type": "object"
                        },
                        "minItems": 0,
                        "type": "array"
                    },
                    "InstanceInformationFilterList": {
                        "description": "<p>This is a legacy method. We recommend that you don't use this method. Instead, use the <a>InstanceInformationFilter</a> action. The <code>InstanceInformationFilter</code> action enables you to return instance information by using tags that are specified as a key-value mapping. </p> <p>If you do use this method, then you can't use the <code>InstanceInformationFilter</code> action. Using this method and the <code>InstanceInformationFilter</code> action causes an exception error. </p>",
                        "items": {
                            "description": "<p>Describes a filter for a specific list of instances. You can filter instances information by using tags. You specify tags by using a key-value mapping.</p> <p>Use this action instead of the <a>DescribeInstanceInformationRequest$InstanceInformationFilterList</a> method. The <code>InstanceInformationFilterList</code> method is a legacy method and does not support tags. </p>",
                            "properties": {
                                "key": {
                                    "description": "The name of the filter. ",
                                    "enum": [
                                        "InstanceIds",
                                        "AgentVersion",
                                        "PingStatus",
                                        "PlatformTypes",
                                        "ActivationIds",
                                        "IamRole",
                                        "ResourceType",
                                        "AssociationStatus"
                                    ],
                                    "type": "string"
                                },
                                "valueSet": {
                                    "description": "The filter values.",
                                    "items": {
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "maxItems": 100,
                                    "minItems": 1,
                                    "type": "array"
                                }
                            },
                            "required": [
                                "key",
                                "valueSet"
                            ],
                            "type": "object"
                        },
                        "minItems": 0,
                        "type": "array"
                    },
                    "MaxResults": {
                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results. ",
                        "maximum": 50,
                        "minimum": 5,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "The token for the next set of items to return. (You received this token from a previous call.)",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DescribeInstanceInformationResult": {
                "properties": {
                    "InstanceInformationList": {
                        "description": "The instance information list.",
                        "items": {
                            "description": "Describes a filter for a specific list of instances. ",
                            "properties": {
                                "ActivationId": {
                                    "description": "The activation ID created by Systems Manager when the server or VM was registered.",
                                    "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                                    "type": "string"
                                },
                                "AgentVersion": {
                                    "description": "The version of SSM Agent running on your Linux instance. ",
                                    "pattern": "^[0-9]{1,6}(\\.[0-9]{1,6}){2,3}$",
                                    "type": "string"
                                },
                                "AssociationOverview": {
                                    "description": "Information about the association.",
                                    "properties": {
                                        "DetailedStatus": {
                                            "description": "Detailed status information about the aggregated associations.",
                                            "type": "string"
                                        },
                                        "InstanceAssociationStatusAggregatedCount": {
                                            "description": "The number of associations for the instance(s).",
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                },
                                "AssociationStatus": {
                                    "description": "The status of the association.",
                                    "type": "string"
                                },
                                "ComputerName": {
                                    "description": "The fully qualified host name of the managed instance.",
                                    "maxLength": 255,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "IPAddress": {
                                    "description": "The IP address of the managed instance.",
                                    "maxLength": 46,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "IamRole": {
                                    "description": "The Amazon Identity and Access Management (IAM) role assigned to the on-premises Systems Manager managed instances. This call does not return the IAM role for Amazon EC2 instances. ",
                                    "maxLength": 64,
                                    "type": "string"
                                },
                                "InstanceId": {
                                    "description": "The instance ID. ",
                                    "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                                    "type": "string"
                                },
                                "IsLatestVersion": {
                                    "description": "Indicates whether latest version of SSM Agent is running on your instance. Some older versions of Windows Server use the EC2Config service to process SSM requests. For this reason, this field does not indicate whether or not the latest version is installed on Windows managed instances.",
                                    "type": "boolean"
                                },
                                "LastAssociationExecutionDate": {
                                    "description": "The date the association was last executed.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "LastPingDateTime": {
                                    "description": "The date and time when agent last pinged Systems Manager service. ",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "LastSuccessfulAssociationExecutionDate": {
                                    "description": "The last date the association was successfully run.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "The name of the managed instance.",
                                    "type": "string"
                                },
                                "PingStatus": {
                                    "description": "Connection status of SSM Agent. ",
                                    "enum": [
                                        "Online",
                                        "ConnectionLost",
                                        "Inactive"
                                    ],
                                    "type": "string"
                                },
                                "PlatformName": {
                                    "description": "The name of the operating system platform running on your instance. ",
                                    "type": "string"
                                },
                                "PlatformType": {
                                    "description": "The operating system platform type. ",
                                    "enum": [
                                        "Windows",
                                        "Linux"
                                    ],
                                    "type": "string"
                                },
                                "PlatformVersion": {
                                    "description": "The version of the OS platform running on your instance. ",
                                    "type": "string"
                                },
                                "RegistrationDate": {
                                    "description": "The date the server or VM was registered with AWS as a managed instance.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "ResourceType": {
                                    "description": "The type of instance. Instances are either EC2 instances or managed instances. ",
                                    "enum": [
                                        "ManagedInstance",
                                        "Document",
                                        "EC2Instance"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "NextToken": {
                        "description": "The token to use when requesting the next set of items. If there are no additional items to return, the string is empty. ",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DescribeInstancePatchStatesForPatchGroupRequest": {
                "properties": {
                    "Filters": {
                        "description": "<p>Each entry in the array is a structure containing:</p> <p>Key (string between 1 and 200 characters)</p> <p> Values (array containing a single string)</p> <p> Type (string \"Equal\", \"NotEqual\", \"LessThan\", \"GreaterThan\")</p>",
                        "items": {
                            "description": "Defines a filter used in DescribeInstancePatchStatesForPatchGroup used to scope down the information returned by the API.",
                            "properties": {
                                "Key": {
                                    "description": "The key for the filter. Supported values are FailedCount, InstalledCount, InstalledOtherCount, MissingCount and NotApplicableCount.",
                                    "maxLength": 200,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Type": {
                                    "description": "The type of comparison that should be performed for the value: Equal, NotEqual, LessThan or GreaterThan.",
                                    "enum": [
                                        "Equal",
                                        "NotEqual",
                                        "LessThan",
                                        "GreaterThan"
                                    ],
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "The value for the filter, must be an integer greater than or equal to 0.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "maxItems": 1,
                                    "minItems": 1,
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Key",
                                "Values",
                                "Type"
                            ],
                            "type": "object"
                        },
                        "maxItems": 4,
                        "minItems": 0,
                        "type": "array"
                    },
                    "MaxResults": {
                        "description": "The maximum number of patches to return (per page).",
                        "maximum": 100,
                        "minimum": 10,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "The token for the next set of items to return. (You received this token from a previous call.)",
                        "type": "string"
                    },
                    "PatchGroup": {
                        "description": "The name of the patch group for which the patch state information should be retrieved.",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                        "type": "string"
                    }
                },
                "required": [
                    "PatchGroup"
                ],
                "type": "object"
            },
            "DescribeInstancePatchStatesForPatchGroupResult": {
                "properties": {
                    "InstancePatchStates": {
                        "description": "The high-level patch state for the requested instances. ",
                        "items": {
                            "description": "Defines the high-level patch compliance state for a managed instance, providing information about the number of installed, missing, not applicable, and failed patches along with metadata about the operation when this information was gathered for the instance.",
                            "properties": {
                                "BaselineId": {
                                    "description": "The ID of the patch baseline used to patch the instance.",
                                    "maxLength": 128,
                                    "minLength": 20,
                                    "pattern": "^[a-zA-Z0-9_\\-:/]{20,128}$",
                                    "type": "string"
                                },
                                "FailedCount": {
                                    "description": "The number of patches from the patch baseline that were attempted to be installed during the last patching operation, but failed to install.",
                                    "type": "integer"
                                },
                                "InstallOverrideList": {
                                    "description": "<p>An https URL or an Amazon S3 path-style URL to a list of patches to be installed. This patch installation list, which you maintain in an Amazon S3 bucket in YAML format and specify in the SSM document <code>AWS-RunPatchBaseline</code>, overrides the patches specified by the default patch baseline.</p> <p>For more information about the <code>InstallOverrideList</code> parameter, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/patch-manager-about-aws-runpatchbaseline.html\">About the SSM Document AWS-RunPatchBaseline</a> in the <i>AWS Systems Manager User Guide</i>.</p>",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "pattern": "^https://.+$|^s3://([^/]+)/(.*?([^/]+))$",
                                    "type": "string"
                                },
                                "InstalledCount": {
                                    "description": "The number of patches from the patch baseline that are installed on the instance.",
                                    "type": "integer"
                                },
                                "InstalledOtherCount": {
                                    "description": "The number of patches not specified in the patch baseline that are installed on the instance.",
                                    "type": "integer"
                                },
                                "InstalledRejectedCount": {
                                    "description": "<p>The number of instances with patches installed that are specified in a RejectedPatches list. Patches with a status of <i>InstalledRejected</i> were typically installed before they were added to a RejectedPatches list.</p> <note> <p>If ALLOW_AS_DEPENDENCY is the specified option for RejectedPatchesAction, the value of InstalledRejectedCount will always be 0 (zero).</p> </note>",
                                    "type": "integer"
                                },
                                "InstanceId": {
                                    "description": "The ID of the managed instance the high-level patch compliance information was collected for.",
                                    "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                                    "type": "string"
                                },
                                "MissingCount": {
                                    "description": "The number of patches from the patch baseline that are applicable for the instance but aren't currently installed.",
                                    "type": "integer"
                                },
                                "NotApplicableCount": {
                                    "description": "The number of patches from the patch baseline that aren't applicable for the instance and hence aren't installed on the instance.",
                                    "type": "integer"
                                },
                                "Operation": {
                                    "description": "The type of patching operation that was performed: SCAN (assess patch compliance state) or INSTALL (install missing patches).",
                                    "enum": [
                                        "Scan",
                                        "Install"
                                    ],
                                    "type": "string"
                                },
                                "OperationEndTime": {
                                    "description": "The time the most recent patching operation completed on the instance.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "OperationStartTime": {
                                    "description": "The time the most recent patching operation was started on the instance.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "OwnerInformation": {
                                    "description": "Placeholder information. This field will always be empty in the current release of the service.",
                                    "format": "password",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "PatchGroup": {
                                    "description": "The name of the patch group the managed instance belongs to.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                    "type": "string"
                                },
                                "SnapshotId": {
                                    "description": "The ID of the patch baseline snapshot used during the patching operation when this compliance data was collected.",
                                    "maxLength": 36,
                                    "minLength": 36,
                                    "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "InstanceId",
                                "PatchGroup",
                                "BaselineId",
                                "OperationStartTime",
                                "OperationEndTime",
                                "Operation"
                            ],
                            "type": "object"
                        },
                        "maxItems": 5,
                        "minItems": 1,
                        "type": "array"
                    },
                    "NextToken": {
                        "description": "The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DescribeInstancePatchStatesRequest": {
                "properties": {
                    "InstanceIds": {
                        "description": "The ID of the instance whose patch state information should be retrieved.",
                        "items": {
                            "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                            "type": "string"
                        },
                        "maxItems": 50,
                        "minItems": 0,
                        "type": "array"
                    },
                    "MaxResults": {
                        "description": "The maximum number of instances to return (per page).",
                        "maximum": 100,
                        "minimum": 10,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "The token for the next set of items to return. (You received this token from a previous call.)",
                        "type": "string"
                    }
                },
                "required": [
                    "InstanceIds"
                ],
                "type": "object"
            },
            "DescribeInstancePatchStatesResult": {
                "properties": {
                    "InstancePatchStates": {
                        "description": "The high-level patch state for the requested instances.",
                        "items": {
                            "description": "Defines the high-level patch compliance state for a managed instance, providing information about the number of installed, missing, not applicable, and failed patches along with metadata about the operation when this information was gathered for the instance.",
                            "properties": {
                                "BaselineId": {
                                    "description": "The ID of the patch baseline used to patch the instance.",
                                    "maxLength": 128,
                                    "minLength": 20,
                                    "pattern": "^[a-zA-Z0-9_\\-:/]{20,128}$",
                                    "type": "string"
                                },
                                "FailedCount": {
                                    "description": "The number of patches from the patch baseline that were attempted to be installed during the last patching operation, but failed to install.",
                                    "type": "integer"
                                },
                                "InstallOverrideList": {
                                    "description": "<p>An https URL or an Amazon S3 path-style URL to a list of patches to be installed. This patch installation list, which you maintain in an Amazon S3 bucket in YAML format and specify in the SSM document <code>AWS-RunPatchBaseline</code>, overrides the patches specified by the default patch baseline.</p> <p>For more information about the <code>InstallOverrideList</code> parameter, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/patch-manager-about-aws-runpatchbaseline.html\">About the SSM Document AWS-RunPatchBaseline</a> in the <i>AWS Systems Manager User Guide</i>.</p>",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "pattern": "^https://.+$|^s3://([^/]+)/(.*?([^/]+))$",
                                    "type": "string"
                                },
                                "InstalledCount": {
                                    "description": "The number of patches from the patch baseline that are installed on the instance.",
                                    "type": "integer"
                                },
                                "InstalledOtherCount": {
                                    "description": "The number of patches not specified in the patch baseline that are installed on the instance.",
                                    "type": "integer"
                                },
                                "InstalledRejectedCount": {
                                    "description": "<p>The number of instances with patches installed that are specified in a RejectedPatches list. Patches with a status of <i>InstalledRejected</i> were typically installed before they were added to a RejectedPatches list.</p> <note> <p>If ALLOW_AS_DEPENDENCY is the specified option for RejectedPatchesAction, the value of InstalledRejectedCount will always be 0 (zero).</p> </note>",
                                    "type": "integer"
                                },
                                "InstanceId": {
                                    "description": "The ID of the managed instance the high-level patch compliance information was collected for.",
                                    "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                                    "type": "string"
                                },
                                "MissingCount": {
                                    "description": "The number of patches from the patch baseline that are applicable for the instance but aren't currently installed.",
                                    "type": "integer"
                                },
                                "NotApplicableCount": {
                                    "description": "The number of patches from the patch baseline that aren't applicable for the instance and hence aren't installed on the instance.",
                                    "type": "integer"
                                },
                                "Operation": {
                                    "description": "The type of patching operation that was performed: SCAN (assess patch compliance state) or INSTALL (install missing patches).",
                                    "enum": [
                                        "Scan",
                                        "Install"
                                    ],
                                    "type": "string"
                                },
                                "OperationEndTime": {
                                    "description": "The time the most recent patching operation completed on the instance.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "OperationStartTime": {
                                    "description": "The time the most recent patching operation was started on the instance.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "OwnerInformation": {
                                    "description": "Placeholder information. This field will always be empty in the current release of the service.",
                                    "format": "password",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "PatchGroup": {
                                    "description": "The name of the patch group the managed instance belongs to.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                    "type": "string"
                                },
                                "SnapshotId": {
                                    "description": "The ID of the patch baseline snapshot used during the patching operation when this compliance data was collected.",
                                    "maxLength": 36,
                                    "minLength": 36,
                                    "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "InstanceId",
                                "PatchGroup",
                                "BaselineId",
                                "OperationStartTime",
                                "OperationEndTime",
                                "Operation"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "NextToken": {
                        "description": "The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DescribeInstancePatchesRequest": {
                "properties": {
                    "Filters": {
                        "description": "<p>Each entry in the array is a structure containing:</p> <p>Key (string, between 1 and 128 characters)</p> <p>Values (array of strings, each string between 1 and 256 characters)</p>",
                        "items": {
                            "description": "Defines a filter used in Patch Manager APIs.",
                            "properties": {
                                "Key": {
                                    "description": "The key for the filter.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "The value for the filter.",
                                    "items": {
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 5,
                        "minItems": 0,
                        "type": "array"
                    },
                    "InstanceId": {
                        "description": "The ID of the instance whose patch state information should be retrieved.",
                        "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                        "type": "string"
                    },
                    "MaxResults": {
                        "description": "The maximum number of patches to return (per page).",
                        "maximum": 100,
                        "minimum": 10,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "The token for the next set of items to return. (You received this token from a previous call.)",
                        "type": "string"
                    }
                },
                "required": [
                    "InstanceId"
                ],
                "type": "object"
            },
            "DescribeInstancePatchesResult": {
                "properties": {
                    "NextToken": {
                        "description": "The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.",
                        "type": "string"
                    },
                    "Patches": {
                        "description": "<p>Each entry in the array is a structure containing:</p> <p>Title (string)</p> <p>KBId (string)</p> <p>Classification (string)</p> <p>Severity (string)</p> <p>State (string, such as \"INSTALLED\" or \"FAILED\")</p> <p>InstalledTime (DateTime)</p> <p>InstalledBy (string)</p>",
                        "items": {
                            "description": "Information about the state of a patch on a particular instance as it relates to the patch baseline used to patch the instance.",
                            "properties": {
                                "Classification": {
                                    "description": "The classification of the patch (for example, SecurityUpdates, Updates, CriticalUpdates).",
                                    "type": "string"
                                },
                                "InstalledTime": {
                                    "description": "The date/time the patch was installed on the instance. Note that not all operating systems provide this level of information.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "KBId": {
                                    "description": "The operating system-specific ID of the patch.",
                                    "type": "string"
                                },
                                "Severity": {
                                    "description": "The severity of the patch (for example, Critical, Important, Moderate).",
                                    "type": "string"
                                },
                                "State": {
                                    "description": "<p>The state of the patch on the instance, such as INSTALLED or FAILED.</p> <p>For descriptions of each patch state, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-compliance-about.html#sysman-compliance-monitor-patch\">About Patch Compliance</a> in the <i>AWS Systems Manager User Guide</i>.</p>",
                                    "enum": [
                                        "INSTALLED",
                                        "INSTALLED_OTHER",
                                        "INSTALLED_REJECTED",
                                        "MISSING",
                                        "NOT_APPLICABLE",
                                        "FAILED"
                                    ],
                                    "type": "string"
                                },
                                "Title": {
                                    "description": "The title of the patch.",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Title",
                                "KBId",
                                "Classification",
                                "Severity",
                                "State",
                                "InstalledTime"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "DescribeInventoryDeletionsRequest": {
                "properties": {
                    "DeletionId": {
                        "description": "Specify the delete inventory ID for which you want information. This ID was returned by the <code>DeleteInventory</code> action.",
                        "type": "string"
                    },
                    "MaxResults": {
                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                        "maximum": 50,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "A token to start the list. Use this token to get the next set of results. ",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DescribeInventoryDeletionsResult": {
                "properties": {
                    "InventoryDeletions": {
                        "description": "A list of status items for deleted inventory.",
                        "items": {
                            "description": "Status information returned by the <code>DeleteInventory</code> action.",
                            "properties": {
                                "DeletionId": {
                                    "description": "The deletion ID returned by the <code>DeleteInventory</code> action.",
                                    "type": "string"
                                },
                                "DeletionStartTime": {
                                    "description": "The UTC timestamp when the delete operation started.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "DeletionSummary": {
                                    "description": "Information about the delete operation. For more information about this summary, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-inventory-delete.html#sysman-inventory-delete-summary\">Understanding the Delete Inventory Summary</a> in the <i>AWS Systems Manager User Guide</i>.",
                                    "properties": {
                                        "RemainingCount": {
                                            "description": "Remaining number of items to delete.",
                                            "type": "integer"
                                        },
                                        "SummaryItems": {
                                            "description": "A list of counts and versions for deleted items.",
                                            "items": {
                                                "description": "Either a count, remaining count, or a version number in a delete inventory summary.",
                                                "properties": {
                                                    "Count": {
                                                        "description": "A count of the number of deleted items.",
                                                        "type": "integer"
                                                    },
                                                    "RemainingCount": {
                                                        "description": "The remaining number of items to delete.",
                                                        "type": "integer"
                                                    },
                                                    "Version": {
                                                        "description": "The inventory type version.",
                                                        "pattern": "^([0-9]{1,6})(\\.[0-9]{1,6})$",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "TotalCount": {
                                            "description": "The total number of items to delete. This count does not change during the delete operation.",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                },
                                "LastStatus": {
                                    "description": "The status of the operation. Possible values are InProgress and Complete.",
                                    "enum": [
                                        "InProgress",
                                        "Complete"
                                    ],
                                    "type": "string"
                                },
                                "LastStatusMessage": {
                                    "description": "Information about the status.",
                                    "type": "string"
                                },
                                "LastStatusUpdateTime": {
                                    "description": "The UTC timestamp of when the last status report.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "TypeName": {
                                    "description": "The name of the inventory data type.",
                                    "maxLength": 100,
                                    "minLength": 1,
                                    "pattern": "^(AWS|Custom):.*$",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "NextToken": {
                        "description": "The token for the next set of items to return. Use this token to get the next set of results.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DescribeMaintenanceWindowExecutionTaskInvocationsRequest": {
                "properties": {
                    "Filters": {
                        "description": "Optional filters used to scope down the returned task invocations. The supported filter key is STATUS with the corresponding values PENDING, IN_PROGRESS, SUCCESS, FAILED, TIMED_OUT, CANCELLING, and CANCELLED.",
                        "items": {
                            "description": "Filter used in the request. Supported filter keys are Name and Enabled.",
                            "properties": {
                                "Key": {
                                    "description": "The name of the filter.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "The filter values.",
                                    "items": {
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 5,
                        "minItems": 0,
                        "type": "array"
                    },
                    "MaxResults": {
                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                        "maximum": 100,
                        "minimum": 10,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "The token for the next set of items to return. (You received this token from a previous call.)",
                        "type": "string"
                    },
                    "TaskId": {
                        "description": "The ID of the specific task in the Maintenance Window task that should be retrieved.",
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                        "type": "string"
                    },
                    "WindowExecutionId": {
                        "description": "The ID of the Maintenance Window execution the task is part of.",
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                        "type": "string"
                    }
                },
                "required": [
                    "WindowExecutionId",
                    "TaskId"
                ],
                "type": "object"
            },
            "DescribeMaintenanceWindowExecutionTaskInvocationsResult": {
                "properties": {
                    "NextToken": {
                        "description": "The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.",
                        "type": "string"
                    },
                    "WindowExecutionTaskInvocationIdentities": {
                        "description": "Information about the task invocation results per invocation.",
                        "items": {
                            "description": "Describes the information about a task invocation for a particular target as part of a task execution performed as part of a Maintenance Window execution.",
                            "properties": {
                                "EndTime": {
                                    "description": "The time the invocation finished.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "ExecutionId": {
                                    "description": "The ID of the action performed in the service that actually handled the task invocation. If the task type is RUN_COMMAND, this value is the command ID.",
                                    "type": "string"
                                },
                                "InvocationId": {
                                    "description": "The ID of the task invocation.",
                                    "maxLength": 36,
                                    "minLength": 36,
                                    "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                                    "type": "string"
                                },
                                "OwnerInformation": {
                                    "description": "User-provided value that was specified when the target was registered with the Maintenance Window. This was also included in any CloudWatch events raised during the task invocation.",
                                    "format": "password",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Parameters": {
                                    "description": "The parameters that were provided for the invocation when it was executed.",
                                    "format": "password",
                                    "type": "string"
                                },
                                "StartTime": {
                                    "description": "The time the invocation started.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "Status": {
                                    "description": "The status of the task invocation.",
                                    "enum": [
                                        "PENDING",
                                        "IN_PROGRESS",
                                        "SUCCESS",
                                        "FAILED",
                                        "TIMED_OUT",
                                        "CANCELLING",
                                        "CANCELLED",
                                        "SKIPPED_OVERLAPPING"
                                    ],
                                    "type": "string"
                                },
                                "StatusDetails": {
                                    "description": "The details explaining the status of the task invocation. Only available for certain Status values. ",
                                    "maxLength": 250,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "TaskExecutionId": {
                                    "description": "The ID of the specific task execution in the Maintenance Window execution.",
                                    "maxLength": 36,
                                    "minLength": 36,
                                    "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                                    "type": "string"
                                },
                                "TaskType": {
                                    "description": "The task type.",
                                    "enum": [
                                        "RUN_COMMAND",
                                        "AUTOMATION",
                                        "STEP_FUNCTIONS",
                                        "LAMBDA"
                                    ],
                                    "type": "string"
                                },
                                "WindowExecutionId": {
                                    "description": "The ID of the Maintenance Window execution that ran the task.",
                                    "maxLength": 36,
                                    "minLength": 36,
                                    "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                                    "type": "string"
                                },
                                "WindowTargetId": {
                                    "description": "The ID of the target definition in this Maintenance Window the invocation was performed for.",
                                    "maxLength": 36,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "DescribeMaintenanceWindowExecutionTasksRequest": {
                "properties": {
                    "Filters": {
                        "description": "Optional filters used to scope down the returned tasks. The supported filter key is STATUS with the corresponding values PENDING, IN_PROGRESS, SUCCESS, FAILED, TIMED_OUT, CANCELLING, and CANCELLED. ",
                        "items": {
                            "description": "Filter used in the request. Supported filter keys are Name and Enabled.",
                            "properties": {
                                "Key": {
                                    "description": "The name of the filter.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "The filter values.",
                                    "items": {
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 5,
                        "minItems": 0,
                        "type": "array"
                    },
                    "MaxResults": {
                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                        "maximum": 100,
                        "minimum": 10,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "The token for the next set of items to return. (You received this token from a previous call.)",
                        "type": "string"
                    },
                    "WindowExecutionId": {
                        "description": "The ID of the Maintenance Window execution whose task executions should be retrieved.",
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                        "type": "string"
                    }
                },
                "required": [
                    "WindowExecutionId"
                ],
                "type": "object"
            },
            "DescribeMaintenanceWindowExecutionTasksResult": {
                "properties": {
                    "NextToken": {
                        "description": "The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.",
                        "type": "string"
                    },
                    "WindowExecutionTaskIdentities": {
                        "description": "Information about the task executions.",
                        "items": {
                            "description": "Information about a task execution performed as part of a Maintenance Window execution.",
                            "properties": {
                                "EndTime": {
                                    "description": "The time the task execution finished.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "StartTime": {
                                    "description": "The time the task execution started.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "Status": {
                                    "description": "The status of the task execution.",
                                    "enum": [
                                        "PENDING",
                                        "IN_PROGRESS",
                                        "SUCCESS",
                                        "FAILED",
                                        "TIMED_OUT",
                                        "CANCELLING",
                                        "CANCELLED",
                                        "SKIPPED_OVERLAPPING"
                                    ],
                                    "type": "string"
                                },
                                "StatusDetails": {
                                    "description": "The details explaining the status of the task execution. Only available for certain status values.",
                                    "maxLength": 250,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "TaskArn": {
                                    "description": "The ARN of the executed task.",
                                    "maxLength": 1600,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "TaskExecutionId": {
                                    "description": "The ID of the specific task execution in the Maintenance Window execution.",
                                    "maxLength": 36,
                                    "minLength": 36,
                                    "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                                    "type": "string"
                                },
                                "TaskType": {
                                    "description": "The type of executed task.",
                                    "enum": [
                                        "RUN_COMMAND",
                                        "AUTOMATION",
                                        "STEP_FUNCTIONS",
                                        "LAMBDA"
                                    ],
                                    "type": "string"
                                },
                                "WindowExecutionId": {
                                    "description": "The ID of the Maintenance Window execution that ran the task.",
                                    "maxLength": 36,
                                    "minLength": 36,
                                    "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "DescribeMaintenanceWindowExecutionsRequest": {
                "properties": {
                    "Filters": {
                        "description": "<p>Each entry in the array is a structure containing:</p> <p>Key (string, between 1 and 128 characters)</p> <p>Values (array of strings, each string is between 1 and 256 characters)</p> <p>The supported Keys are ExecutedBefore and ExecutedAfter with the value being a date/time string such as 2016-11-04T05:00:00Z.</p>",
                        "items": {
                            "description": "Filter used in the request. Supported filter keys are Name and Enabled.",
                            "properties": {
                                "Key": {
                                    "description": "The name of the filter.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "The filter values.",
                                    "items": {
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 5,
                        "minItems": 0,
                        "type": "array"
                    },
                    "MaxResults": {
                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                        "maximum": 100,
                        "minimum": 10,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "The token for the next set of items to return. (You received this token from a previous call.)",
                        "type": "string"
                    },
                    "WindowId": {
                        "description": "The ID of the Maintenance Window whose executions should be retrieved.",
                        "maxLength": 20,
                        "minLength": 20,
                        "pattern": "^mw-[0-9a-f]{17}$",
                        "type": "string"
                    }
                },
                "required": [
                    "WindowId"
                ],
                "type": "object"
            },
            "DescribeMaintenanceWindowExecutionsResult": {
                "properties": {
                    "NextToken": {
                        "description": "The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.",
                        "type": "string"
                    },
                    "WindowExecutions": {
                        "description": "Information about the Maintenance Windows execution.",
                        "items": {
                            "description": "Describes the information about an execution of a Maintenance Window. ",
                            "properties": {
                                "EndTime": {
                                    "description": "The time the execution finished.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "StartTime": {
                                    "description": "The time the execution started.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "Status": {
                                    "description": "The status of the execution.",
                                    "enum": [
                                        "PENDING",
                                        "IN_PROGRESS",
                                        "SUCCESS",
                                        "FAILED",
                                        "TIMED_OUT",
                                        "CANCELLING",
                                        "CANCELLED",
                                        "SKIPPED_OVERLAPPING"
                                    ],
                                    "type": "string"
                                },
                                "StatusDetails": {
                                    "description": "The details explaining the Status. Only available for certain status values.",
                                    "maxLength": 250,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "WindowExecutionId": {
                                    "description": "The ID of the Maintenance Window execution.",
                                    "maxLength": 36,
                                    "minLength": 36,
                                    "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                                    "type": "string"
                                },
                                "WindowId": {
                                    "description": "The ID of the Maintenance Window.",
                                    "maxLength": 20,
                                    "minLength": 20,
                                    "pattern": "^mw-[0-9a-f]{17}$",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "DescribeMaintenanceWindowScheduleRequest": {
                "properties": {
                    "Filters": {
                        "description": "Filters used to limit the range of results. For example, you can limit Maintenance Window executions to only those scheduled before or after a certain date and time.",
                        "items": {
                            "description": "Defines a filter used in Patch Manager APIs.",
                            "properties": {
                                "Key": {
                                    "description": "The key for the filter.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "The value for the filter.",
                                    "items": {
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 5,
                        "minItems": 0,
                        "type": "array"
                    },
                    "MaxResults": {
                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                        "minimum": 1,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "The token for the next set of items to return. (You received this token from a previous call.)",
                        "type": "string"
                    },
                    "ResourceType": {
                        "description": "The type of resource you want to retrieve information about. For example, \"INSTANCE\".",
                        "enum": [
                            "INSTANCE"
                        ],
                        "type": "string"
                    },
                    "Targets": {
                        "description": "The instance ID or key/value pair to retrieve information about.",
                        "items": {
                            "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                            "properties": {
                                "Key": {
                                    "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "maxItems": 50,
                                    "minItems": 0,
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 5,
                        "minItems": 0,
                        "type": "array"
                    },
                    "WindowId": {
                        "description": "The ID of the Maintenance Window to retrieve information about.",
                        "maxLength": 20,
                        "minLength": 20,
                        "pattern": "^mw-[0-9a-f]{17}$",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DescribeMaintenanceWindowScheduleResult": {
                "properties": {
                    "NextToken": {
                        "description": "The token for the next set of items to return. (You use this token in the next call.)",
                        "type": "string"
                    },
                    "ScheduledWindowExecutions": {
                        "description": "Information about Maintenance Window executions scheduled for the specified time range.",
                        "items": {
                            "description": "Information about a scheduled execution for a Maintenance Window.",
                            "properties": {
                                "ExecutionTime": {
                                    "description": "The time, in ISO-8601 Extended format, that the Maintenance Window is scheduled to be run.",
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "The name of the Maintenance Window to be run.",
                                    "maxLength": 128,
                                    "minLength": 3,
                                    "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                    "type": "string"
                                },
                                "WindowId": {
                                    "description": "The ID of the Maintenance Window to be run.",
                                    "maxLength": 20,
                                    "minLength": 20,
                                    "pattern": "^mw-[0-9a-f]{17}$",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "DescribeMaintenanceWindowTargetsRequest": {
                "properties": {
                    "Filters": {
                        "description": "Optional filters that can be used to narrow down the scope of the returned window targets. The supported filter keys are Type, WindowTargetId and OwnerInformation.",
                        "items": {
                            "description": "Filter used in the request. Supported filter keys are Name and Enabled.",
                            "properties": {
                                "Key": {
                                    "description": "The name of the filter.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "The filter values.",
                                    "items": {
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 5,
                        "minItems": 0,
                        "type": "array"
                    },
                    "MaxResults": {
                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                        "maximum": 100,
                        "minimum": 10,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "The token for the next set of items to return. (You received this token from a previous call.)",
                        "type": "string"
                    },
                    "WindowId": {
                        "description": "The ID of the Maintenance Window whose targets should be retrieved.",
                        "maxLength": 20,
                        "minLength": 20,
                        "pattern": "^mw-[0-9a-f]{17}$",
                        "type": "string"
                    }
                },
                "required": [
                    "WindowId"
                ],
                "type": "object"
            },
            "DescribeMaintenanceWindowTargetsResult": {
                "properties": {
                    "NextToken": {
                        "description": "The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.",
                        "type": "string"
                    },
                    "Targets": {
                        "description": "Information about the targets in the Maintenance Window.",
                        "items": {
                            "description": "The target registered with the Maintenance Window.",
                            "properties": {
                                "Description": {
                                    "description": "A description of the target.",
                                    "format": "password",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "The target name.",
                                    "maxLength": 128,
                                    "minLength": 3,
                                    "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                    "type": "string"
                                },
                                "OwnerInformation": {
                                    "description": "User-provided value that will be included in any CloudWatch events raised while running tasks for these targets in this Maintenance Window.",
                                    "format": "password",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "ResourceType": {
                                    "description": "The type of target.",
                                    "enum": [
                                        "INSTANCE"
                                    ],
                                    "type": "string"
                                },
                                "Targets": {
                                    "description": "The targets (either instances or tags). Instances are specified using Key=instanceids,Values=&lt;instanceid1&gt;,&lt;instanceid2&gt;. Tags are specified using Key=&lt;tag name&gt;,Values=&lt;tag value&gt;.",
                                    "items": {
                                        "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                                        "properties": {
                                            "Key": {
                                                "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                "maxLength": 128,
                                                "minLength": 1,
                                                "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                                "type": "string"
                                            },
                                            "Values": {
                                                "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "maxItems": 50,
                                                "minItems": 0,
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "maxItems": 5,
                                    "minItems": 0,
                                    "type": "array"
                                },
                                "WindowId": {
                                    "description": "The Maintenance Window ID where the target is registered.",
                                    "maxLength": 20,
                                    "minLength": 20,
                                    "pattern": "^mw-[0-9a-f]{17}$",
                                    "type": "string"
                                },
                                "WindowTargetId": {
                                    "description": "The ID of the target.",
                                    "maxLength": 36,
                                    "minLength": 36,
                                    "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "DescribeMaintenanceWindowTasksRequest": {
                "properties": {
                    "Filters": {
                        "description": "Optional filters used to narrow down the scope of the returned tasks. The supported filter keys are WindowTaskId, TaskArn, Priority, and TaskType.",
                        "items": {
                            "description": "Filter used in the request. Supported filter keys are Name and Enabled.",
                            "properties": {
                                "Key": {
                                    "description": "The name of the filter.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "The filter values.",
                                    "items": {
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 5,
                        "minItems": 0,
                        "type": "array"
                    },
                    "MaxResults": {
                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                        "maximum": 100,
                        "minimum": 10,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "The token for the next set of items to return. (You received this token from a previous call.)",
                        "type": "string"
                    },
                    "WindowId": {
                        "description": "The ID of the Maintenance Window whose tasks should be retrieved.",
                        "maxLength": 20,
                        "minLength": 20,
                        "pattern": "^mw-[0-9a-f]{17}$",
                        "type": "string"
                    }
                },
                "required": [
                    "WindowId"
                ],
                "type": "object"
            },
            "DescribeMaintenanceWindowTasksResult": {
                "properties": {
                    "NextToken": {
                        "description": "The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.",
                        "type": "string"
                    },
                    "Tasks": {
                        "description": "Information about the tasks in the Maintenance Window.",
                        "items": {
                            "description": "Information about a task defined for a Maintenance Window.",
                            "properties": {
                                "Description": {
                                    "description": "A description of the task.",
                                    "format": "password",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "LoggingInfo": {
                                    "description": "<p>Information about an Amazon S3 bucket to write task-level logs to.</p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an S3 bucket to contain logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> </note>",
                                    "properties": {
                                        "S3BucketName": {
                                            "description": "The name of an Amazon S3 bucket where execution logs are stored .",
                                            "maxLength": 63,
                                            "minLength": 3,
                                            "type": "string"
                                        },
                                        "S3KeyPrefix": {
                                            "description": "(Optional) The Amazon S3 bucket subfolder. ",
                                            "maxLength": 500,
                                            "type": "string"
                                        },
                                        "S3Region": {
                                            "description": "The region where the Amazon S3 bucket is located.",
                                            "maxLength": 20,
                                            "minLength": 3,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "S3BucketName",
                                        "S3Region"
                                    ],
                                    "type": "object"
                                },
                                "MaxConcurrency": {
                                    "description": "The maximum number of targets this task can be run for in parallel.",
                                    "maxLength": 7,
                                    "minLength": 1,
                                    "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                                    "type": "string"
                                },
                                "MaxErrors": {
                                    "description": "The maximum number of errors allowed before this task stops being scheduled.",
                                    "maxLength": 7,
                                    "minLength": 1,
                                    "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "The task name.",
                                    "maxLength": 128,
                                    "minLength": 3,
                                    "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                    "type": "string"
                                },
                                "Priority": {
                                    "description": "The priority of the task in the Maintenance Window. The lower the number, the higher the priority. Tasks that have the same priority are scheduled in parallel.",
                                    "minimum": 0,
                                    "type": "integer"
                                },
                                "ServiceRoleArn": {
                                    "description": "The role that should be assumed when executing the task",
                                    "type": "string"
                                },
                                "Targets": {
                                    "description": "The targets (either instances or tags). Instances are specified using Key=instanceids,Values=&lt;instanceid1&gt;,&lt;instanceid2&gt;. Tags are specified using Key=&lt;tag name&gt;,Values=&lt;tag value&gt;.",
                                    "items": {
                                        "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                                        "properties": {
                                            "Key": {
                                                "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                "maxLength": 128,
                                                "minLength": 1,
                                                "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                                "type": "string"
                                            },
                                            "Values": {
                                                "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "maxItems": 50,
                                                "minItems": 0,
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "maxItems": 5,
                                    "minItems": 0,
                                    "type": "array"
                                },
                                "TaskArn": {
                                    "description": "The resource that the task uses during execution. For RUN_COMMAND and AUTOMATION task types, <code>TaskArn</code> is the Systems Manager document name or ARN. For LAMBDA tasks, it's the function name or ARN. For STEP_FUNCTION tasks, it's the state machine ARN.",
                                    "maxLength": 1600,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "TaskParameters": {
                                    "description": "<p>The parameters that should be passed to the task when it is executed.</p> <note> <p> <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> </note>",
                                    "items": {
                                        "properties": {
                                            "key": {
                                                "maxLength": 255,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "value": {
                                                "description": "Defines the values for a task parameter.",
                                                "properties": {
                                                    "Values": {
                                                        "description": "This field contains an array of 0 or more strings, each 1 to 255 characters in length.",
                                                        "items": {
                                                            "format": "password",
                                                            "maxLength": 255,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "Type": {
                                    "description": "The type of task. The type can be one of the following: RUN_COMMAND, AUTOMATION, LAMBDA, or STEP_FUNCTION.",
                                    "enum": [
                                        "RUN_COMMAND",
                                        "AUTOMATION",
                                        "STEP_FUNCTIONS",
                                        "LAMBDA"
                                    ],
                                    "type": "string"
                                },
                                "WindowId": {
                                    "description": "The Maintenance Window ID where the task is registered.",
                                    "maxLength": 20,
                                    "minLength": 20,
                                    "pattern": "^mw-[0-9a-f]{17}$",
                                    "type": "string"
                                },
                                "WindowTaskId": {
                                    "description": "The task ID.",
                                    "maxLength": 36,
                                    "minLength": 36,
                                    "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "DescribeMaintenanceWindowsForTargetRequest": {
                "properties": {
                    "MaxResults": {
                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                        "minimum": 1,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "The token for the next set of items to return. (You received this token from a previous call.)",
                        "type": "string"
                    },
                    "ResourceType": {
                        "description": "The type of resource you want to retrieve information about. For example, \"INSTANCE\".",
                        "enum": [
                            "INSTANCE"
                        ],
                        "type": "string"
                    },
                    "Targets": {
                        "description": "The instance ID or key/value pair to retrieve information about.",
                        "items": {
                            "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                            "properties": {
                                "Key": {
                                    "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "maxItems": 50,
                                    "minItems": 0,
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 5,
                        "minItems": 0,
                        "type": "array"
                    }
                },
                "required": [
                    "Targets",
                    "ResourceType"
                ],
                "type": "object"
            },
            "DescribeMaintenanceWindowsForTargetResult": {
                "properties": {
                    "NextToken": {
                        "description": "The token for the next set of items to return. (You use this token in the next call.)",
                        "type": "string"
                    },
                    "WindowIdentities": {
                        "description": "Information about the Maintenance Window targets and tasks an instance is associated with.",
                        "items": {
                            "description": "The Maintenance Window to which the specified target belongs.",
                            "properties": {
                                "Name": {
                                    "description": "The name of the Maintenance Window.",
                                    "maxLength": 128,
                                    "minLength": 3,
                                    "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                    "type": "string"
                                },
                                "WindowId": {
                                    "description": "The ID of the Maintenance Window.",
                                    "maxLength": 20,
                                    "minLength": 20,
                                    "pattern": "^mw-[0-9a-f]{17}$",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "DescribeMaintenanceWindowsRequest": {
                "properties": {
                    "Filters": {
                        "description": "Optional filters used to narrow down the scope of the returned Maintenance Windows. Supported filter keys are <b>Name</b> and <b>Enabled</b>.",
                        "items": {
                            "description": "Filter used in the request. Supported filter keys are Name and Enabled.",
                            "properties": {
                                "Key": {
                                    "description": "The name of the filter.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "The filter values.",
                                    "items": {
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 5,
                        "minItems": 0,
                        "type": "array"
                    },
                    "MaxResults": {
                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                        "maximum": 100,
                        "minimum": 10,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "The token for the next set of items to return. (You received this token from a previous call.)",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DescribeMaintenanceWindowsResult": {
                "properties": {
                    "NextToken": {
                        "description": "The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.",
                        "type": "string"
                    },
                    "WindowIdentities": {
                        "description": "Information about the Maintenance Windows.",
                        "items": {
                            "description": "Information about the Maintenance Window.",
                            "properties": {
                                "Cutoff": {
                                    "description": "The number of hours before the end of the Maintenance Window that Systems Manager stops scheduling new tasks for execution.",
                                    "maximum": 23,
                                    "minimum": 0,
                                    "type": "integer"
                                },
                                "Description": {
                                    "description": "A description of the Maintenance Window.",
                                    "format": "password",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Duration": {
                                    "description": "The duration of the Maintenance Window in hours.",
                                    "maximum": 24,
                                    "minimum": 1,
                                    "type": "integer"
                                },
                                "Enabled": {
                                    "description": "Whether the Maintenance Window is enabled.",
                                    "type": "boolean"
                                },
                                "EndDate": {
                                    "description": "The date and time, in ISO-8601 Extended format, for when the Maintenance Window is scheduled to become inactive.",
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "The name of the Maintenance Window.",
                                    "maxLength": 128,
                                    "minLength": 3,
                                    "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                    "type": "string"
                                },
                                "NextExecutionTime": {
                                    "description": "The next time the Maintenance Window will actually run, taking into account any specified times for the Maintenance Window to become active or inactive.",
                                    "type": "string"
                                },
                                "Schedule": {
                                    "description": "The schedule of the Maintenance Window in the form of a cron or rate expression.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "ScheduleTimezone": {
                                    "description": "The time zone that the scheduled Maintenance Window executions are based on, in Internet Assigned Numbers Authority (IANA) format.",
                                    "type": "string"
                                },
                                "StartDate": {
                                    "description": "The date and time, in ISO-8601 Extended format, for when the Maintenance Window is scheduled to become active.",
                                    "type": "string"
                                },
                                "WindowId": {
                                    "description": "The ID of the Maintenance Window.",
                                    "maxLength": 20,
                                    "minLength": 20,
                                    "pattern": "^mw-[0-9a-f]{17}$",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "DescribeParametersRequest": {
                "properties": {
                    "Filters": {
                        "description": "One or more filters. Use a filter to return a more specific list of results.",
                        "items": {
                            "description": "This data type is deprecated. Instead, use <a>ParameterStringFilter</a>.",
                            "properties": {
                                "Key": {
                                    "description": "The name of the filter.",
                                    "enum": [
                                        "Name",
                                        "Type",
                                        "KeyId"
                                    ],
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "The filter values.",
                                    "items": {
                                        "maxLength": 1024,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "maxItems": 50,
                                    "minItems": 1,
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Key",
                                "Values"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "MaxResults": {
                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                        "maximum": 50,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "The token for the next set of items to return. (You received this token from a previous call.)",
                        "type": "string"
                    },
                    "ParameterFilters": {
                        "description": "Filters to limit the request results.",
                        "items": {
                            "description": "<p>One or more filters. Use a filter to return a more specific list of results.</p> <note> <p>The <code>Name</code> field can't be used with the <a>GetParametersByPath</a> API action.</p> </note>",
                            "properties": {
                                "Key": {
                                    "description": "The name of the filter.",
                                    "maxLength": 132,
                                    "minLength": 1,
                                    "pattern": "tag:.+|Name|Type|KeyId|Path|Label",
                                    "type": "string"
                                },
                                "Option": {
                                    "description": "Valid options are Equals and BeginsWith. For Path filter, valid options are Recursive and OneLevel.",
                                    "maxLength": 10,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "The value you want to search for.",
                                    "items": {
                                        "maxLength": 1024,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "maxItems": 50,
                                    "minItems": 1,
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Key"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "DescribeParametersResult": {
                "properties": {
                    "NextToken": {
                        "description": "The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.",
                        "type": "string"
                    },
                    "Parameters": {
                        "description": "Parameters returned by the request.",
                        "items": {
                            "description": "Metada includes information like the ARN of the last user and the date/time the parameter was last used.",
                            "properties": {
                                "AllowedPattern": {
                                    "description": "<p>A parameter name can include only the following letters and symbols.</p> <p>a-zA-Z0-9_.-</p>",
                                    "maxLength": 1024,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "Description": {
                                    "description": "Description of the parameter actions.",
                                    "maxLength": 1024,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "KeyId": {
                                    "description": "The ID of the query key used for this parameter.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "pattern": "^([a-zA-Z0-9:/_-]+)$",
                                    "type": "string"
                                },
                                "LastModifiedDate": {
                                    "description": "Date the parameter was last changed or updated.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "LastModifiedUser": {
                                    "description": "Amazon Resource Name (ARN) of the AWS user who last changed the parameter.",
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "The parameter name.",
                                    "maxLength": 2048,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Type": {
                                    "description": "The type of parameter. Valid parameter types include the following: String, String list, Secure string.",
                                    "enum": [
                                        "String",
                                        "StringList",
                                        "SecureString"
                                    ],
                                    "type": "string"
                                },
                                "Version": {
                                    "description": "The parameter version.",
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "DescribePatchBaselinesRequest": {
                "properties": {
                    "Filters": {
                        "description": "<p>Each element in the array is a structure containing: </p> <p>Key: (string, \"NAME_PREFIX\" or \"OWNER\")</p> <p>Value: (array of strings, exactly 1 entry, between 1 and 255 characters)</p>",
                        "items": {
                            "description": "Defines a filter used in Patch Manager APIs.",
                            "properties": {
                                "Key": {
                                    "description": "The key for the filter.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "The value for the filter.",
                                    "items": {
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 5,
                        "minItems": 0,
                        "type": "array"
                    },
                    "MaxResults": {
                        "description": "The maximum number of patch baselines to return (per page).",
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "The token for the next set of items to return. (You received this token from a previous call.)",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DescribePatchBaselinesResult": {
                "properties": {
                    "BaselineIdentities": {
                        "description": "An array of PatchBaselineIdentity elements.",
                        "items": {
                            "description": "Defines the basic information about a patch baseline.",
                            "properties": {
                                "BaselineDescription": {
                                    "description": "The description of the patch baseline.",
                                    "maxLength": 1024,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "BaselineId": {
                                    "description": "The ID of the patch baseline.",
                                    "maxLength": 128,
                                    "minLength": 20,
                                    "pattern": "^[a-zA-Z0-9_\\-:/]{20,128}$",
                                    "type": "string"
                                },
                                "BaselineName": {
                                    "description": "The name of the patch baseline.",
                                    "maxLength": 128,
                                    "minLength": 3,
                                    "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                    "type": "string"
                                },
                                "DefaultBaseline": {
                                    "description": "Whether this is the default baseline. Note that Systems Manager supports creating multiple default patch baselines. For example, you can create a default patch baseline for each operating system.",
                                    "type": "boolean"
                                },
                                "OperatingSystem": {
                                    "description": "Defines the operating system the patch baseline applies to. The Default value is WINDOWS. ",
                                    "enum": [
                                        "WINDOWS",
                                        "AMAZON_LINUX",
                                        "AMAZON_LINUX_2",
                                        "UBUNTU",
                                        "REDHAT_ENTERPRISE_LINUX",
                                        "SUSE",
                                        "CENTOS"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "NextToken": {
                        "description": "The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DescribePatchGroupStateRequest": {
                "properties": {
                    "PatchGroup": {
                        "description": "The name of the patch group whose patch snapshot should be retrieved.",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                        "type": "string"
                    }
                },
                "required": [
                    "PatchGroup"
                ],
                "type": "object"
            },
            "DescribePatchGroupStateResult": {
                "properties": {
                    "Instances": {
                        "description": "The number of instances in the patch group.",
                        "type": "integer"
                    },
                    "InstancesWithFailedPatches": {
                        "description": "The number of instances with patches from the patch baseline that failed to install.",
                        "type": "integer"
                    },
                    "InstancesWithInstalledOtherPatches": {
                        "description": "The number of instances with patches installed that aren't defined in the patch baseline.",
                        "type": "integer"
                    },
                    "InstancesWithInstalledPatches": {
                        "description": "The number of instances with installed patches.",
                        "type": "integer"
                    },
                    "InstancesWithInstalledRejectedPatches": {
                        "description": "<p>The number of instances with patches installed that are specified in a RejectedPatches list. Patches with a status of <i>INSTALLED_REJECTED</i> were typically installed before they were added to a RejectedPatches list.</p> <note> <p>If ALLOW_AS_DEPENDENCY is the specified option for RejectedPatchesAction, the value of InstancesWithInstalledRejectedPatches will always be 0 (zero).</p> </note>",
                        "type": "integer"
                    },
                    "InstancesWithMissingPatches": {
                        "description": "The number of instances with missing patches from the patch baseline.",
                        "type": "integer"
                    },
                    "InstancesWithNotApplicablePatches": {
                        "description": "The number of instances with patches that aren't applicable.",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "DescribePatchGroupsRequest": {
                "properties": {
                    "Filters": {
                        "description": "One or more filters. Use a filter to return a more specific list of results.",
                        "items": {
                            "description": "Defines a filter used in Patch Manager APIs.",
                            "properties": {
                                "Key": {
                                    "description": "The key for the filter.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "The value for the filter.",
                                    "items": {
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 5,
                        "minItems": 0,
                        "type": "array"
                    },
                    "MaxResults": {
                        "description": "The maximum number of patch groups to return (per page).",
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "The token for the next set of items to return. (You received this token from a previous call.)",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DescribePatchGroupsResult": {
                "properties": {
                    "Mappings": {
                        "description": "<p>Each entry in the array contains:</p> <p>PatchGroup: string (between 1 and 256 characters, Regex: ^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$)</p> <p>PatchBaselineIdentity: A PatchBaselineIdentity element. </p>",
                        "items": {
                            "description": "The mapping between a patch group and the patch baseline the patch group is registered with.",
                            "properties": {
                                "BaselineIdentity": {
                                    "description": "The patch baseline the patch group is registered with.",
                                    "properties": {
                                        "BaselineDescription": {
                                            "description": "The description of the patch baseline.",
                                            "maxLength": 1024,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "BaselineId": {
                                            "description": "The ID of the patch baseline.",
                                            "maxLength": 128,
                                            "minLength": 20,
                                            "pattern": "^[a-zA-Z0-9_\\-:/]{20,128}$",
                                            "type": "string"
                                        },
                                        "BaselineName": {
                                            "description": "The name of the patch baseline.",
                                            "maxLength": 128,
                                            "minLength": 3,
                                            "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                            "type": "string"
                                        },
                                        "DefaultBaseline": {
                                            "description": "Whether this is the default baseline. Note that Systems Manager supports creating multiple default patch baselines. For example, you can create a default patch baseline for each operating system.",
                                            "type": "boolean"
                                        },
                                        "OperatingSystem": {
                                            "description": "Defines the operating system the patch baseline applies to. The Default value is WINDOWS. ",
                                            "enum": [
                                                "WINDOWS",
                                                "AMAZON_LINUX",
                                                "AMAZON_LINUX_2",
                                                "UBUNTU",
                                                "REDHAT_ENTERPRISE_LINUX",
                                                "SUSE",
                                                "CENTOS"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "PatchGroup": {
                                    "description": "The name of the patch group registered with the patch baseline.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "NextToken": {
                        "description": "The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DescribeSessionsRequest": {
                "properties": {
                    "Filters": {
                        "description": "One or more filters to limit the type of sessions returned by the request.",
                        "items": {
                            "description": "Describes a filter for Session Manager information.",
                            "properties": {
                                "key": {
                                    "description": "The name of the filter.",
                                    "enum": [
                                        "InvokedAfter",
                                        "InvokedBefore",
                                        "Target",
                                        "Owner",
                                        "Status"
                                    ],
                                    "type": "string"
                                },
                                "value": {
                                    "description": "<p>The filter value. Valid values for each filter key are as follows:</p> <ul> <li> <p>InvokedAfter: Specify a timestamp to limit your results. For example, specify 2018-08-29T00:00:00Z to see sessions that started August 29, 2018, and later.</p> </li> <li> <p>InvokedBefore: Specify a timestamp to limit your results. For example, specify 2018-08-29T00:00:00Z to see sessions that started before August 29, 2018.</p> </li> <li> <p>Target: Specify an instance to which session connections have been made.</p> </li> <li> <p>Owner: Specify an AWS user account to see a list of sessions started by that user.</p> </li> <li> <p>Status: Specify a valid session status to see a list of all sessions with that status. Status values you can specify include:</p> <ul> <li> <p>Connected</p> </li> <li> <p>Connecting</p> </li> <li> <p>Disconnected</p> </li> <li> <p>Terminated</p> </li> <li> <p>Terminating</p> </li> <li> <p>Failed</p> </li> </ul> </li> </ul>",
                                    "maxLength": 200,
                                    "minLength": 1,
                                    "type": "string"
                                }
                            },
                            "required": [
                                "key",
                                "value"
                            ],
                            "type": "object"
                        },
                        "maxItems": 5,
                        "minItems": 1,
                        "type": "array"
                    },
                    "MaxResults": {
                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                        "maximum": 200,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "The token for the next set of items to return. (You received this token from a previous call.)",
                        "type": "string"
                    },
                    "State": {
                        "description": "The session status to retrieve a list of sessions for. For example, \"Active\".",
                        "enum": [
                            "Active",
                            "History"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "State"
                ],
                "type": "object"
            },
            "DescribeSessionsResponse": {
                "properties": {
                    "NextToken": {
                        "description": "The token for the next set of items to return. (You received this token from a previous call.)",
                        "type": "string"
                    },
                    "Sessions": {
                        "description": "A list of sessions meeting the request parameters.",
                        "items": {
                            "description": "Information about a Session Manager connection to an instance.",
                            "properties": {
                                "Details": {
                                    "description": "Reserved for future use.",
                                    "maxLength": 1024,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "DocumentName": {
                                    "description": "The name of the Session Manager SSM document used to define the parameters and plugin settings for the session. For example, <code>SSM-SessionManagerRunShell</code>.",
                                    "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                    "type": "string"
                                },
                                "EndDate": {
                                    "description": "The date and time, in ISO-8601 Extended format, when the session was terminated.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "OutputUrl": {
                                    "description": "Reserved for future use.",
                                    "properties": {
                                        "CloudWatchOutputUrl": {
                                            "description": "Reserved for future use.",
                                            "maxLength": 2083,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "S3OutputUrl": {
                                            "description": "Reserved for future use.",
                                            "maxLength": 2083,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "Owner": {
                                    "description": "The ID of the AWS user account that started the session.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "SessionId": {
                                    "description": "The ID of the session.",
                                    "maxLength": 96,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "StartDate": {
                                    "description": "The date and time, in ISO-8601 Extended format, when the session began.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "Status": {
                                    "description": "The status of the session. For example, \"Connected\" or \"Terminated\".",
                                    "enum": [
                                        "Connected",
                                        "Connecting",
                                        "Disconnected",
                                        "Terminated",
                                        "Terminating",
                                        "Failed"
                                    ],
                                    "type": "string"
                                },
                                "Target": {
                                    "description": "The instance that the Session Manager session connected to.",
                                    "maxLength": 50,
                                    "minLength": 1,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "DescriptionInDocument": {
                "type": "string"
            },
            "DocumentARN": {
                "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                "type": "string"
            },
            "DocumentAlreadyExists": {},
            "DocumentContent": {
                "minLength": 1,
                "type": "string"
            },
            "DocumentDefaultVersionDescription": {
                "description": "A default version of a document.",
                "properties": {
                    "DefaultVersion": {
                        "description": "The default version of the document.",
                        "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                        "type": "string"
                    },
                    "DefaultVersionName": {
                        "description": "The default version of the artifact associated with the document.",
                        "pattern": "^[a-zA-Z0-9_\\-.]{1,128}$",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The name of the document.",
                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DocumentDescription": {
                "description": "Describes a Systems Manager document. ",
                "properties": {
                    "AttachmentsInformation": {
                        "description": "Details about the document attachments, including names, locations, sizes, etc.",
                        "items": {
                            "description": "An attribute of an attachment, such as the attachment name.",
                            "properties": {
                                "Name": {
                                    "description": "The name of the attachment.",
                                    "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "CreatedDate": {
                        "description": "The date when the document was created.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "DefaultVersion": {
                        "description": "The default version.",
                        "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                        "type": "string"
                    },
                    "Description": {
                        "description": "A description of the document. ",
                        "type": "string"
                    },
                    "DocumentFormat": {
                        "description": "The document format, either JSON or YAML.",
                        "enum": [
                            "YAML",
                            "JSON"
                        ],
                        "type": "string"
                    },
                    "DocumentType": {
                        "description": "The type of document.",
                        "enum": [
                            "Command",
                            "Policy",
                            "Automation",
                            "Session",
                            "Package"
                        ],
                        "type": "string"
                    },
                    "DocumentVersion": {
                        "description": "The document version.",
                        "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                        "type": "string"
                    },
                    "Hash": {
                        "description": "<p>The Sha256 or Sha1 hash created by the system when the document was created. </p> <note> <p>Sha1 hashes have been deprecated.</p> </note>",
                        "maxLength": 256,
                        "type": "string"
                    },
                    "HashType": {
                        "description": "<p>The hash type of the document. Valid values include <code>Sha256</code> or <code>Sha1</code>.</p> <note> <p>Sha1 hashes have been deprecated.</p> </note>",
                        "enum": [
                            "Sha256",
                            "Sha1"
                        ],
                        "type": "string"
                    },
                    "LatestVersion": {
                        "description": "The latest version of the document.",
                        "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The name of the Systems Manager document.",
                        "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                        "type": "string"
                    },
                    "Owner": {
                        "description": "The AWS user account that created the document.",
                        "type": "string"
                    },
                    "Parameters": {
                        "description": "A description of the parameters for a document.",
                        "items": {
                            "description": "Parameters specified in a System Manager document that execute on the server when the command is run. ",
                            "properties": {
                                "DefaultValue": {
                                    "description": "If specified, the default values for the parameters. Parameters without a default value are required. Parameters with a default value are optional.",
                                    "type": "string"
                                },
                                "Description": {
                                    "description": "A description of what the parameter does, how to use it, the default value, and whether or not the parameter is optional.",
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "The name of the parameter.",
                                    "type": "string"
                                },
                                "Type": {
                                    "description": "The type of parameter. The type can be either String or StringList.",
                                    "enum": [
                                        "String",
                                        "StringList"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "PlatformTypes": {
                        "description": "The list of OS platforms compatible with this Systems Manager document. ",
                        "items": {
                            "enum": [
                                "Windows",
                                "Linux"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "SchemaVersion": {
                        "description": "The schema version.",
                        "pattern": "([0-9]+)\\.([0-9]+)",
                        "type": "string"
                    },
                    "Sha1": {
                        "description": "The SHA1 hash of the document, which you can use for verification.",
                        "type": "string"
                    },
                    "Status": {
                        "description": "The status of the Systems Manager document.",
                        "enum": [
                            "Creating",
                            "Active",
                            "Updating",
                            "Deleting",
                            "Failed"
                        ],
                        "type": "string"
                    },
                    "StatusInformation": {
                        "description": "A message returned by AWS Systems Manager that explains the <code>Status</code> value. For example, a <code>Failed</code> status might be explained by the <code>StatusInformation</code> message, \"The specified S3 bucket does not exist. Verify that the URL of the S3 bucket is correct.\"",
                        "type": "string"
                    },
                    "Tags": {
                        "description": "The tags, or metadata, that have been applied to the document.",
                        "items": {
                            "description": "Metadata that you assign to your AWS resources. Tags enable you to categorize your resources in different ways, for example, by purpose, owner, or environment. In Systems Manager, you can apply tags to documents, managed instances, Maintenance Windows, Parameter Store parameters, and patch baselines.",
                            "properties": {
                                "Key": {
                                    "description": "The name of the tag.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "The value of the tag.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Key",
                                "Value"
                            ],
                            "type": "object"
                        },
                        "maxItems": 1000,
                        "type": "array"
                    },
                    "TargetType": {
                        "description": "The target type which defines the kinds of resources the document can run on. For example, /AWS::EC2::Instance. For a list of valid resource types, see <a href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html\">AWS Resource Types Reference</a> in the <i>AWS CloudFormation User Guide</i>. ",
                        "maxLength": 200,
                        "pattern": "^\\/[\\w\\.\\-\\:\\/]*$",
                        "type": "string"
                    },
                    "VersionName": {
                        "description": "The version of the artifact associated with the document.",
                        "pattern": "^[a-zA-Z0-9_\\-.]{1,128}$",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DocumentFilter": {
                "description": "Describes a filter.",
                "properties": {
                    "key": {
                        "description": "The name of the filter.",
                        "enum": [
                            "Name",
                            "Owner",
                            "PlatformTypes",
                            "DocumentType"
                        ],
                        "type": "string"
                    },
                    "value": {
                        "description": "The value of the filter.",
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "key",
                    "value"
                ],
                "type": "object"
            },
            "DocumentFilterKey": {
                "enum": [
                    "Name",
                    "Owner",
                    "PlatformTypes",
                    "DocumentType"
                ],
                "type": "string"
            },
            "DocumentFilterList": {
                "items": {
                    "description": "Describes a filter.",
                    "properties": {
                        "key": {
                            "description": "The name of the filter.",
                            "enum": [
                                "Name",
                                "Owner",
                                "PlatformTypes",
                                "DocumentType"
                            ],
                            "type": "string"
                        },
                        "value": {
                            "description": "The value of the filter.",
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    "required": [
                        "key",
                        "value"
                    ],
                    "type": "object"
                },
                "minItems": 1,
                "type": "array"
            },
            "DocumentFilterValue": {
                "minLength": 1,
                "type": "string"
            },
            "DocumentFormat": {
                "enum": [
                    "YAML",
                    "JSON"
                ],
                "type": "string"
            },
            "DocumentHash": {
                "maxLength": 256,
                "type": "string"
            },
            "DocumentHashType": {
                "enum": [
                    "Sha256",
                    "Sha1"
                ],
                "type": "string"
            },
            "DocumentIdentifier": {
                "description": "Describes the name of a Systems Manager document.",
                "properties": {
                    "DocumentFormat": {
                        "description": "The document format, either JSON or YAML.",
                        "enum": [
                            "YAML",
                            "JSON"
                        ],
                        "type": "string"
                    },
                    "DocumentType": {
                        "description": "The document type.",
                        "enum": [
                            "Command",
                            "Policy",
                            "Automation",
                            "Session",
                            "Package"
                        ],
                        "type": "string"
                    },
                    "DocumentVersion": {
                        "description": "The document version.",
                        "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The name of the Systems Manager document.",
                        "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                        "type": "string"
                    },
                    "Owner": {
                        "description": "The AWS user account that created the document.",
                        "type": "string"
                    },
                    "PlatformTypes": {
                        "description": "The operating system platform. ",
                        "items": {
                            "enum": [
                                "Windows",
                                "Linux"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "SchemaVersion": {
                        "description": "The schema version.",
                        "pattern": "([0-9]+)\\.([0-9]+)",
                        "type": "string"
                    },
                    "Tags": {
                        "description": "The tags, or metadata, that have been applied to the document.",
                        "items": {
                            "description": "Metadata that you assign to your AWS resources. Tags enable you to categorize your resources in different ways, for example, by purpose, owner, or environment. In Systems Manager, you can apply tags to documents, managed instances, Maintenance Windows, Parameter Store parameters, and patch baselines.",
                            "properties": {
                                "Key": {
                                    "description": "The name of the tag.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "The value of the tag.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Key",
                                "Value"
                            ],
                            "type": "object"
                        },
                        "maxItems": 1000,
                        "type": "array"
                    },
                    "TargetType": {
                        "description": "The target type which defines the kinds of resources the document can run on. For example, /AWS::EC2::Instance. For a list of valid resource types, see <a href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html\">AWS Resource Types Reference</a> in the <i>AWS CloudFormation User Guide</i>. ",
                        "maxLength": 200,
                        "pattern": "^\\/[\\w\\.\\-\\:\\/]*$",
                        "type": "string"
                    },
                    "VersionName": {
                        "description": "An optional field specifying the version of the artifact associated with the document. For example, \"Release 12, Update 6\". This value is unique across all versions of a document, and cannot be changed.",
                        "pattern": "^[a-zA-Z0-9_\\-.]{1,128}$",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DocumentIdentifierList": {
                "items": {
                    "description": "Describes the name of a Systems Manager document.",
                    "properties": {
                        "DocumentFormat": {
                            "description": "The document format, either JSON or YAML.",
                            "enum": [
                                "YAML",
                                "JSON"
                            ],
                            "type": "string"
                        },
                        "DocumentType": {
                            "description": "The document type.",
                            "enum": [
                                "Command",
                                "Policy",
                                "Automation",
                                "Session",
                                "Package"
                            ],
                            "type": "string"
                        },
                        "DocumentVersion": {
                            "description": "The document version.",
                            "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                            "type": "string"
                        },
                        "Name": {
                            "description": "The name of the Systems Manager document.",
                            "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                            "type": "string"
                        },
                        "Owner": {
                            "description": "The AWS user account that created the document.",
                            "type": "string"
                        },
                        "PlatformTypes": {
                            "description": "The operating system platform. ",
                            "items": {
                                "enum": [
                                    "Windows",
                                    "Linux"
                                ],
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "SchemaVersion": {
                            "description": "The schema version.",
                            "pattern": "([0-9]+)\\.([0-9]+)",
                            "type": "string"
                        },
                        "Tags": {
                            "description": "The tags, or metadata, that have been applied to the document.",
                            "items": {
                                "description": "Metadata that you assign to your AWS resources. Tags enable you to categorize your resources in different ways, for example, by purpose, owner, or environment. In Systems Manager, you can apply tags to documents, managed instances, Maintenance Windows, Parameter Store parameters, and patch baselines.",
                                "properties": {
                                    "Key": {
                                        "description": "The name of the tag.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                        "type": "string"
                                    },
                                    "Value": {
                                        "description": "The value of the tag.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Key",
                                    "Value"
                                ],
                                "type": "object"
                            },
                            "maxItems": 1000,
                            "type": "array"
                        },
                        "TargetType": {
                            "description": "The target type which defines the kinds of resources the document can run on. For example, /AWS::EC2::Instance. For a list of valid resource types, see <a href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html\">AWS Resource Types Reference</a> in the <i>AWS CloudFormation User Guide</i>. ",
                            "maxLength": 200,
                            "pattern": "^\\/[\\w\\.\\-\\:\\/]*$",
                            "type": "string"
                        },
                        "VersionName": {
                            "description": "An optional field specifying the version of the artifact associated with the document. For example, \"Release 12, Update 6\". This value is unique across all versions of a document, and cannot be changed.",
                            "pattern": "^[a-zA-Z0-9_\\-.]{1,128}$",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "DocumentKeyValuesFilter": {
                "description": "<p>One or more filters. Use a filter to return a more specific list of documents.</p> <p>For keys, you can specify one or more tags that have been applied to a document. </p> <p>Other valid values include Owner, Name, PlatformTypes, and DocumentType.</p> <p>Note that only one Owner can be specified in a request. For example: <code>Key=Owner,Values=Self</code>.</p> <p>If you use Name as a key, you can use a name prefix to return a list of documents. For example, in the AWS CLI, to return a list of all documents that begin with <code>Te</code>, run the following command:</p> <p> <code>aws ssm list-documents --filters Key=Name,Values=Te</code> </p> <p>If you specify more than two keys, only documents that are identified by all the tags are returned in the results. If you specify more than two values for a key, documents that are identified by any of the values are returned in the results.</p> <p>To specify a custom key and value pair, use the format <code>Key=tag:[tagName],Values=[valueName]</code>.</p> <p>For example, if you created a Key called region and are using the AWS CLI to call the <code>list-documents</code> command: </p> <p> <code>aws ssm list-documents --filters Key=tag:region,Values=east,west Key=Owner,Values=Self</code> </p>",
                "properties": {
                    "Key": {
                        "description": "The name of the filter key.",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Values": {
                        "description": "The value for the filter key.",
                        "items": {
                            "maxLength": 256,
                            "minLength": 1,
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "DocumentKeyValuesFilterKey": {
                "maxLength": 128,
                "minLength": 1,
                "type": "string"
            },
            "DocumentKeyValuesFilterList": {
                "items": {
                    "description": "<p>One or more filters. Use a filter to return a more specific list of documents.</p> <p>For keys, you can specify one or more tags that have been applied to a document. </p> <p>Other valid values include Owner, Name, PlatformTypes, and DocumentType.</p> <p>Note that only one Owner can be specified in a request. For example: <code>Key=Owner,Values=Self</code>.</p> <p>If you use Name as a key, you can use a name prefix to return a list of documents. For example, in the AWS CLI, to return a list of all documents that begin with <code>Te</code>, run the following command:</p> <p> <code>aws ssm list-documents --filters Key=Name,Values=Te</code> </p> <p>If you specify more than two keys, only documents that are identified by all the tags are returned in the results. If you specify more than two values for a key, documents that are identified by any of the values are returned in the results.</p> <p>To specify a custom key and value pair, use the format <code>Key=tag:[tagName],Values=[valueName]</code>.</p> <p>For example, if you created a Key called region and are using the AWS CLI to call the <code>list-documents</code> command: </p> <p> <code>aws ssm list-documents --filters Key=tag:region,Values=east,west Key=Owner,Values=Self</code> </p>",
                    "properties": {
                        "Key": {
                            "description": "The name of the filter key.",
                            "maxLength": 128,
                            "minLength": 1,
                            "type": "string"
                        },
                        "Values": {
                            "description": "The value for the filter key.",
                            "items": {
                                "maxLength": 256,
                                "minLength": 1,
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "maxItems": 6,
                "minItems": 0,
                "type": "array"
            },
            "DocumentKeyValuesFilterValue": {
                "maxLength": 256,
                "minLength": 1,
                "type": "string"
            },
            "DocumentKeyValuesFilterValues": {
                "items": {
                    "maxLength": 256,
                    "minLength": 1,
                    "type": "string"
                },
                "type": "array"
            },
            "DocumentLimitExceeded": {},
            "DocumentName": {
                "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                "type": "string"
            },
            "DocumentOwner": {
                "type": "string"
            },
            "DocumentParameter": {
                "description": "Parameters specified in a System Manager document that execute on the server when the command is run. ",
                "properties": {
                    "DefaultValue": {
                        "description": "If specified, the default values for the parameters. Parameters without a default value are required. Parameters with a default value are optional.",
                        "type": "string"
                    },
                    "Description": {
                        "description": "A description of what the parameter does, how to use it, the default value, and whether or not the parameter is optional.",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The name of the parameter.",
                        "type": "string"
                    },
                    "Type": {
                        "description": "The type of parameter. The type can be either String or StringList.",
                        "enum": [
                            "String",
                            "StringList"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DocumentParameterDefaultValue": {
                "type": "string"
            },
            "DocumentParameterDescrption": {
                "type": "string"
            },
            "DocumentParameterList": {
                "items": {
                    "description": "Parameters specified in a System Manager document that execute on the server when the command is run. ",
                    "properties": {
                        "DefaultValue": {
                            "description": "If specified, the default values for the parameters. Parameters without a default value are required. Parameters with a default value are optional.",
                            "type": "string"
                        },
                        "Description": {
                            "description": "A description of what the parameter does, how to use it, the default value, and whether or not the parameter is optional.",
                            "type": "string"
                        },
                        "Name": {
                            "description": "The name of the parameter.",
                            "type": "string"
                        },
                        "Type": {
                            "description": "The type of parameter. The type can be either String or StringList.",
                            "enum": [
                                "String",
                                "StringList"
                            ],
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "DocumentParameterName": {
                "type": "string"
            },
            "DocumentParameterType": {
                "enum": [
                    "String",
                    "StringList"
                ],
                "type": "string"
            },
            "DocumentPermissionLimit": {},
            "DocumentPermissionType": {
                "enum": [
                    "Share"
                ],
                "type": "string"
            },
            "DocumentSchemaVersion": {
                "pattern": "([0-9]+)\\.([0-9]+)",
                "type": "string"
            },
            "DocumentSha1": {
                "type": "string"
            },
            "DocumentStatus": {
                "description": "The status of a document.",
                "enum": [
                    "Creating",
                    "Active",
                    "Updating",
                    "Deleting",
                    "Failed"
                ],
                "type": "string"
            },
            "DocumentStatusInformation": {
                "type": "string"
            },
            "DocumentType": {
                "enum": [
                    "Command",
                    "Policy",
                    "Automation",
                    "Session",
                    "Package"
                ],
                "type": "string"
            },
            "DocumentVersion": {
                "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                "type": "string"
            },
            "DocumentVersionInfo": {
                "description": "Version information about the document.",
                "properties": {
                    "CreatedDate": {
                        "description": "The date the document was created.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "DocumentFormat": {
                        "description": "The document format, either JSON or YAML.",
                        "enum": [
                            "YAML",
                            "JSON"
                        ],
                        "type": "string"
                    },
                    "DocumentVersion": {
                        "description": "The document version.",
                        "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                        "type": "string"
                    },
                    "IsDefaultVersion": {
                        "description": "An identifier for the default version of the document.",
                        "type": "boolean"
                    },
                    "Name": {
                        "description": "The document name.",
                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                        "type": "string"
                    },
                    "Status": {
                        "description": "The status of the Systems Manager document, such as <code>Creating</code>, <code>Active</code>, <code>Failed</code>, and <code>Deleting</code>.",
                        "enum": [
                            "Creating",
                            "Active",
                            "Updating",
                            "Deleting",
                            "Failed"
                        ],
                        "type": "string"
                    },
                    "StatusInformation": {
                        "description": "A message returned by AWS Systems Manager that explains the <code>Status</code> value. For example, a <code>Failed</code> status might be explained by the <code>StatusInformation</code> message, \"The specified S3 bucket does not exist. Verify that the URL of the S3 bucket is correct.\"",
                        "type": "string"
                    },
                    "VersionName": {
                        "description": "The version of the artifact associated with the document. For example, \"Release 12, Update 6\". This value is unique across all versions of a document, and cannot be changed.",
                        "pattern": "^[a-zA-Z0-9_\\-.]{1,128}$",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DocumentVersionLimitExceeded": {},
            "DocumentVersionList": {
                "items": {
                    "description": "Version information about the document.",
                    "properties": {
                        "CreatedDate": {
                            "description": "The date the document was created.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "DocumentFormat": {
                            "description": "The document format, either JSON or YAML.",
                            "enum": [
                                "YAML",
                                "JSON"
                            ],
                            "type": "string"
                        },
                        "DocumentVersion": {
                            "description": "The document version.",
                            "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                            "type": "string"
                        },
                        "IsDefaultVersion": {
                            "description": "An identifier for the default version of the document.",
                            "type": "boolean"
                        },
                        "Name": {
                            "description": "The document name.",
                            "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                            "type": "string"
                        },
                        "Status": {
                            "description": "The status of the Systems Manager document, such as <code>Creating</code>, <code>Active</code>, <code>Failed</code>, and <code>Deleting</code>.",
                            "enum": [
                                "Creating",
                                "Active",
                                "Updating",
                                "Deleting",
                                "Failed"
                            ],
                            "type": "string"
                        },
                        "StatusInformation": {
                            "description": "A message returned by AWS Systems Manager that explains the <code>Status</code> value. For example, a <code>Failed</code> status might be explained by the <code>StatusInformation</code> message, \"The specified S3 bucket does not exist. Verify that the URL of the S3 bucket is correct.\"",
                            "type": "string"
                        },
                        "VersionName": {
                            "description": "The version of the artifact associated with the document. For example, \"Release 12, Update 6\". This value is unique across all versions of a document, and cannot be changed.",
                            "pattern": "^[a-zA-Z0-9_\\-.]{1,128}$",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "minItems": 1,
                "type": "array"
            },
            "DocumentVersionName": {
                "pattern": "^[a-zA-Z0-9_\\-.]{1,128}$",
                "type": "string"
            },
            "DocumentVersionNumber": {
                "pattern": "(^[1-9][0-9]*$)",
                "type": "string"
            },
            "DoesNotExistException": {},
            "DryRun": {
                "type": "boolean"
            },
            "DuplicateDocumentContent": {},
            "DuplicateDocumentVersionName": {},
            "DuplicateInstanceId": {},
            "EffectiveInstanceAssociationMaxResults": {
                "maximum": 5,
                "minimum": 1,
                "type": "integer"
            },
            "EffectivePatch": {
                "description": "The EffectivePatch structure defines metadata about a patch along with the approval state of the patch in a particular patch baseline. The approval state includes information about whether the patch is currently approved, due to be approved by a rule, explicitly approved, or explicitly rejected and the date the patch was or will be approved.",
                "properties": {
                    "Patch": {
                        "description": "Provides metadata for a patch, including information such as the KB ID, severity, classification and a URL for where more information can be obtained about the patch.",
                        "properties": {
                            "Classification": {
                                "description": "The classification of the patch (for example, SecurityUpdates, Updates, CriticalUpdates).",
                                "type": "string"
                            },
                            "ContentUrl": {
                                "description": "The URL where more information can be obtained about the patch.",
                                "type": "string"
                            },
                            "Description": {
                                "description": "The description of the patch.",
                                "type": "string"
                            },
                            "Id": {
                                "description": "The ID of the patch (this is different than the Microsoft Knowledge Base ID).",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                            },
                            "KbNumber": {
                                "description": "The Microsoft Knowledge Base ID of the patch.",
                                "type": "string"
                            },
                            "Language": {
                                "description": "The language of the patch if it's language-specific.",
                                "type": "string"
                            },
                            "MsrcNumber": {
                                "description": "The ID of the MSRC bulletin the patch is related to.",
                                "type": "string"
                            },
                            "MsrcSeverity": {
                                "description": "The severity of the patch (for example Critical, Important, Moderate).",
                                "type": "string"
                            },
                            "Product": {
                                "description": "The specific product the patch is applicable for (for example, WindowsServer2016).",
                                "type": "string"
                            },
                            "ProductFamily": {
                                "description": "The product family the patch is applicable for (for example, Windows).",
                                "type": "string"
                            },
                            "ReleaseDate": {
                                "description": "The date the patch was released.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "Title": {
                                "description": "The title of the patch.",
                                "type": "string"
                            },
                            "Vendor": {
                                "description": "The name of the vendor providing the patch.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "PatchStatus": {
                        "description": "The status of the patch in a patch baseline. This includes information about whether the patch is currently approved, due to be approved by a rule, explicitly approved, or explicitly rejected and the date the patch was or will be approved.",
                        "properties": {
                            "ApprovalDate": {
                                "description": "The date the patch was approved (or will be approved if the status is PENDING_APPROVAL).",
                                "format": "date-time",
                                "type": "string"
                            },
                            "ComplianceLevel": {
                                "description": "The compliance severity level for a patch.",
                                "enum": [
                                    "CRITICAL",
                                    "HIGH",
                                    "MEDIUM",
                                    "LOW",
                                    "INFORMATIONAL",
                                    "UNSPECIFIED"
                                ],
                                "type": "string"
                            },
                            "DeploymentStatus": {
                                "description": "The approval status of a patch (APPROVED, PENDING_APPROVAL, EXPLICIT_APPROVED, EXPLICIT_REJECTED).",
                                "enum": [
                                    "APPROVED",
                                    "PENDING_APPROVAL",
                                    "EXPLICIT_APPROVED",
                                    "EXPLICIT_REJECTED"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "EffectivePatchList": {
                "items": {
                    "description": "The EffectivePatch structure defines metadata about a patch along with the approval state of the patch in a particular patch baseline. The approval state includes information about whether the patch is currently approved, due to be approved by a rule, explicitly approved, or explicitly rejected and the date the patch was or will be approved.",
                    "properties": {
                        "Patch": {
                            "description": "Provides metadata for a patch, including information such as the KB ID, severity, classification and a URL for where more information can be obtained about the patch.",
                            "properties": {
                                "Classification": {
                                    "description": "The classification of the patch (for example, SecurityUpdates, Updates, CriticalUpdates).",
                                    "type": "string"
                                },
                                "ContentUrl": {
                                    "description": "The URL where more information can be obtained about the patch.",
                                    "type": "string"
                                },
                                "Description": {
                                    "description": "The description of the patch.",
                                    "type": "string"
                                },
                                "Id": {
                                    "description": "The ID of the patch (this is different than the Microsoft Knowledge Base ID).",
                                    "maxLength": 100,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "KbNumber": {
                                    "description": "The Microsoft Knowledge Base ID of the patch.",
                                    "type": "string"
                                },
                                "Language": {
                                    "description": "The language of the patch if it's language-specific.",
                                    "type": "string"
                                },
                                "MsrcNumber": {
                                    "description": "The ID of the MSRC bulletin the patch is related to.",
                                    "type": "string"
                                },
                                "MsrcSeverity": {
                                    "description": "The severity of the patch (for example Critical, Important, Moderate).",
                                    "type": "string"
                                },
                                "Product": {
                                    "description": "The specific product the patch is applicable for (for example, WindowsServer2016).",
                                    "type": "string"
                                },
                                "ProductFamily": {
                                    "description": "The product family the patch is applicable for (for example, Windows).",
                                    "type": "string"
                                },
                                "ReleaseDate": {
                                    "description": "The date the patch was released.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "Title": {
                                    "description": "The title of the patch.",
                                    "type": "string"
                                },
                                "Vendor": {
                                    "description": "The name of the vendor providing the patch.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "PatchStatus": {
                            "description": "The status of the patch in a patch baseline. This includes information about whether the patch is currently approved, due to be approved by a rule, explicitly approved, or explicitly rejected and the date the patch was or will be approved.",
                            "properties": {
                                "ApprovalDate": {
                                    "description": "The date the patch was approved (or will be approved if the status is PENDING_APPROVAL).",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "ComplianceLevel": {
                                    "description": "The compliance severity level for a patch.",
                                    "enum": [
                                        "CRITICAL",
                                        "HIGH",
                                        "MEDIUM",
                                        "LOW",
                                        "INFORMATIONAL",
                                        "UNSPECIFIED"
                                    ],
                                    "type": "string"
                                },
                                "DeploymentStatus": {
                                    "description": "The approval status of a patch (APPROVED, PENDING_APPROVAL, EXPLICIT_APPROVED, EXPLICIT_REJECTED).",
                                    "enum": [
                                        "APPROVED",
                                        "PENDING_APPROVAL",
                                        "EXPLICIT_APPROVED",
                                        "EXPLICIT_REJECTED"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "ErrorCount": {
                "type": "integer"
            },
            "ExecutionMode": {
                "enum": [
                    "Auto",
                    "Interactive"
                ],
                "type": "string"
            },
            "ExecutionRoleName": {
                "maxLength": 64,
                "minLength": 1,
                "type": "string"
            },
            "ExpirationDate": {
                "format": "date-time",
                "type": "string"
            },
            "FailedCreateAssociation": {
                "description": "Describes a failed association.",
                "properties": {
                    "Entry": {
                        "description": "The association.",
                        "properties": {
                            "AssociationName": {
                                "description": "Specify a descriptive name for the association.",
                                "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                "type": "string"
                            },
                            "AutomationTargetParameterName": {
                                "description": "Specify the target for the association. This target is required for associations that use an Automation document and target resources by using rate controls.",
                                "maxLength": 50,
                                "minLength": 1,
                                "type": "string"
                            },
                            "ComplianceSeverity": {
                                "description": "The severity level to assign to the association.",
                                "enum": [
                                    "CRITICAL",
                                    "HIGH",
                                    "MEDIUM",
                                    "LOW",
                                    "UNSPECIFIED"
                                ],
                                "type": "string"
                            },
                            "DocumentVersion": {
                                "description": "The document version.",
                                "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                "type": "string"
                            },
                            "InstanceId": {
                                "description": "The ID of the instance. ",
                                "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                                "type": "string"
                            },
                            "MaxConcurrency": {
                                "description": "<p>The maximum number of targets allowed to run the association at the same time. You can specify a number, for example 10, or a percentage of the target set, for example 10%. The default value is 100%, which means all targets run the association at the same time.</p> <p>If a new instance starts and attempts to execute an association while Systems Manager is executing MaxConcurrency associations, the association is allowed to run. During the next association interval, the new instance will process its association within the limit specified for MaxConcurrency.</p>",
                                "maxLength": 7,
                                "minLength": 1,
                                "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                                "type": "string"
                            },
                            "MaxErrors": {
                                "description": "<p>The number of errors that are allowed before the system stops sending requests to run the association on additional targets. You can specify either an absolute number of errors, for example 10, or a percentage of the target set, for example 10%. If you specify 3, for example, the system stops sending requests when the fourth error is received. If you specify 0, then the system stops sending requests after the first error is returned. If you run an association on 50 instances and set MaxError to 10%, then the system stops sending the request when the sixth error is received.</p> <p>Executions that are already running an association when MaxErrors is reached are allowed to complete, but some of these executions may fail as well. If you need to ensure that there won't be more than max-errors failed executions, set MaxConcurrency to 1 so that executions proceed one at a time.</p>",
                                "maxLength": 7,
                                "minLength": 1,
                                "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                                "type": "string"
                            },
                            "Name": {
                                "description": "<p>The name of the SSM document that contains the configuration information for the instance. You can specify Command, Policy, or Automation documents.</p> <p>You can specify AWS-predefined documents, documents you created, or a document that is shared with you from another account.</p> <p>For SSM documents that are shared with you from other AWS accounts, you must specify the complete SSM document ARN, in the following format:</p> <p> <code>arn:aws:ssm:<i>region</i>:<i>account-id</i>:document/<i>document-name</i> </code> </p> <p>For example:</p> <p> <code>arn:aws:ssm:us-east-2:12345678912:document/My-Shared-Document</code> </p> <p>For AWS-predefined documents and SSM documents you created in your account, you only need to specify the document name. For example, <code>AWS-ApplyPatchBaseline</code> or <code>My-Document</code>.</p>",
                                "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                                "type": "string"
                            },
                            "OutputLocation": {
                                "description": "An Amazon S3 bucket where you want to store the results of this request.",
                                "properties": {
                                    "S3Location": {
                                        "description": "An Amazon S3 bucket where you want to store the results of this request.",
                                        "properties": {
                                            "OutputS3BucketName": {
                                                "description": "The name of the Amazon S3 bucket.",
                                                "maxLength": 63,
                                                "minLength": 3,
                                                "type": "string"
                                            },
                                            "OutputS3KeyPrefix": {
                                                "description": "The Amazon S3 bucket subfolder.",
                                                "maxLength": 500,
                                                "type": "string"
                                            },
                                            "OutputS3Region": {
                                                "description": "(Deprecated) You can no longer specify this parameter. The system ignores it. Instead, Systems Manager automatically determines the Amazon S3 bucket region.",
                                                "maxLength": 20,
                                                "minLength": 3,
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "Parameters": {
                                "description": "A description of the parameters for a document. ",
                                "items": {
                                    "properties": {
                                        "key": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "ScheduleExpression": {
                                "description": "A cron expression that specifies a schedule when the association runs.",
                                "maxLength": 256,
                                "minLength": 1,
                                "type": "string"
                            },
                            "Targets": {
                                "description": "The instances targeted by the request.",
                                "items": {
                                    "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                                    "properties": {
                                        "Key": {
                                            "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                            "type": "string"
                                        },
                                        "Values": {
                                            "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                            "items": {
                                                "type": "string"
                                            },
                                            "maxItems": 50,
                                            "minItems": 0,
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                },
                                "maxItems": 5,
                                "minItems": 0,
                                "type": "array"
                            }
                        },
                        "required": [
                            "Name"
                        ],
                        "type": "object"
                    },
                    "Fault": {
                        "description": "The source of the failure.",
                        "enum": [
                            "Client",
                            "Server",
                            "Unknown"
                        ],
                        "type": "string"
                    },
                    "Message": {
                        "description": "A description of the failure.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "FailedCreateAssociationList": {
                "items": {
                    "description": "Describes a failed association.",
                    "properties": {
                        "Entry": {
                            "description": "The association.",
                            "properties": {
                                "AssociationName": {
                                    "description": "Specify a descriptive name for the association.",
                                    "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                    "type": "string"
                                },
                                "AutomationTargetParameterName": {
                                    "description": "Specify the target for the association. This target is required for associations that use an Automation document and target resources by using rate controls.",
                                    "maxLength": 50,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "ComplianceSeverity": {
                                    "description": "The severity level to assign to the association.",
                                    "enum": [
                                        "CRITICAL",
                                        "HIGH",
                                        "MEDIUM",
                                        "LOW",
                                        "UNSPECIFIED"
                                    ],
                                    "type": "string"
                                },
                                "DocumentVersion": {
                                    "description": "The document version.",
                                    "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                    "type": "string"
                                },
                                "InstanceId": {
                                    "description": "The ID of the instance. ",
                                    "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                                    "type": "string"
                                },
                                "MaxConcurrency": {
                                    "description": "<p>The maximum number of targets allowed to run the association at the same time. You can specify a number, for example 10, or a percentage of the target set, for example 10%. The default value is 100%, which means all targets run the association at the same time.</p> <p>If a new instance starts and attempts to execute an association while Systems Manager is executing MaxConcurrency associations, the association is allowed to run. During the next association interval, the new instance will process its association within the limit specified for MaxConcurrency.</p>",
                                    "maxLength": 7,
                                    "minLength": 1,
                                    "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                                    "type": "string"
                                },
                                "MaxErrors": {
                                    "description": "<p>The number of errors that are allowed before the system stops sending requests to run the association on additional targets. You can specify either an absolute number of errors, for example 10, or a percentage of the target set, for example 10%. If you specify 3, for example, the system stops sending requests when the fourth error is received. If you specify 0, then the system stops sending requests after the first error is returned. If you run an association on 50 instances and set MaxError to 10%, then the system stops sending the request when the sixth error is received.</p> <p>Executions that are already running an association when MaxErrors is reached are allowed to complete, but some of these executions may fail as well. If you need to ensure that there won't be more than max-errors failed executions, set MaxConcurrency to 1 so that executions proceed one at a time.</p>",
                                    "maxLength": 7,
                                    "minLength": 1,
                                    "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "<p>The name of the SSM document that contains the configuration information for the instance. You can specify Command, Policy, or Automation documents.</p> <p>You can specify AWS-predefined documents, documents you created, or a document that is shared with you from another account.</p> <p>For SSM documents that are shared with you from other AWS accounts, you must specify the complete SSM document ARN, in the following format:</p> <p> <code>arn:aws:ssm:<i>region</i>:<i>account-id</i>:document/<i>document-name</i> </code> </p> <p>For example:</p> <p> <code>arn:aws:ssm:us-east-2:12345678912:document/My-Shared-Document</code> </p> <p>For AWS-predefined documents and SSM documents you created in your account, you only need to specify the document name. For example, <code>AWS-ApplyPatchBaseline</code> or <code>My-Document</code>.</p>",
                                    "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                                    "type": "string"
                                },
                                "OutputLocation": {
                                    "description": "An Amazon S3 bucket where you want to store the results of this request.",
                                    "properties": {
                                        "S3Location": {
                                            "description": "An Amazon S3 bucket where you want to store the results of this request.",
                                            "properties": {
                                                "OutputS3BucketName": {
                                                    "description": "The name of the Amazon S3 bucket.",
                                                    "maxLength": 63,
                                                    "minLength": 3,
                                                    "type": "string"
                                                },
                                                "OutputS3KeyPrefix": {
                                                    "description": "The Amazon S3 bucket subfolder.",
                                                    "maxLength": 500,
                                                    "type": "string"
                                                },
                                                "OutputS3Region": {
                                                    "description": "(Deprecated) You can no longer specify this parameter. The system ignores it. Instead, Systems Manager automatically determines the Amazon S3 bucket region.",
                                                    "maxLength": 20,
                                                    "minLength": 3,
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "Parameters": {
                                    "description": "A description of the parameters for a document. ",
                                    "items": {
                                        "properties": {
                                            "key": {
                                                "type": "string"
                                            },
                                            "value": {
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "ScheduleExpression": {
                                    "description": "A cron expression that specifies a schedule when the association runs.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Targets": {
                                    "description": "The instances targeted by the request.",
                                    "items": {
                                        "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                                        "properties": {
                                            "Key": {
                                                "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                "maxLength": 128,
                                                "minLength": 1,
                                                "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                                "type": "string"
                                            },
                                            "Values": {
                                                "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "maxItems": 50,
                                                "minItems": 0,
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "maxItems": 5,
                                    "minItems": 0,
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Name"
                            ],
                            "type": "object"
                        },
                        "Fault": {
                            "description": "The source of the failure.",
                            "enum": [
                                "Client",
                                "Server",
                                "Unknown"
                            ],
                            "type": "string"
                        },
                        "Message": {
                            "description": "A description of the failure.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "FailureDetails": {
                "description": "Information about an Automation failure.",
                "properties": {
                    "Details": {
                        "description": "Detailed information about the Automation step failure.",
                        "items": {
                            "properties": {
                                "key": {
                                    "maxLength": 30,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "value": {
                                    "items": {
                                        "maxLength": 512,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "maxItems": 10,
                                    "minItems": 0,
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 200,
                        "minItems": 1,
                        "type": "array"
                    },
                    "FailureStage": {
                        "description": "The stage of the Automation execution when the failure occurred. The stages include the following: InputValidation, PreVerification, Invocation, PostVerification.",
                        "type": "string"
                    },
                    "FailureType": {
                        "description": "The type of Automation failure. Failure types include the following: Action, Permission, Throttling, Verification, Internal.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Fault": {
                "enum": [
                    "Client",
                    "Server",
                    "Unknown"
                ],
                "type": "string"
            },
            "FeatureNotAvailableException": {},
            "GetAutomationExecutionRequest": {
                "properties": {
                    "AutomationExecutionId": {
                        "description": "The unique identifier for an existing automation execution to examine. The execution ID is returned by StartAutomationExecution when the execution of an Automation document is initiated.",
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string"
                    }
                },
                "required": [
                    "AutomationExecutionId"
                ],
                "type": "object"
            },
            "GetAutomationExecutionResult": {
                "properties": {
                    "AutomationExecution": {
                        "description": "Detailed information about the current state of an automation execution.",
                        "properties": {
                            "AutomationExecutionId": {
                                "description": "The execution ID.",
                                "maxLength": 36,
                                "minLength": 36,
                                "type": "string"
                            },
                            "AutomationExecutionStatus": {
                                "description": "The execution status of the Automation.",
                                "enum": [
                                    "Pending",
                                    "InProgress",
                                    "Waiting",
                                    "Success",
                                    "TimedOut",
                                    "Cancelling",
                                    "Cancelled",
                                    "Failed"
                                ],
                                "type": "string"
                            },
                            "CurrentAction": {
                                "description": "The action of the currently executing step.",
                                "type": "string"
                            },
                            "CurrentStepName": {
                                "description": "The name of the currently executing step.",
                                "type": "string"
                            },
                            "DocumentName": {
                                "description": "The name of the Automation document used during the execution.",
                                "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                "type": "string"
                            },
                            "DocumentVersion": {
                                "description": "The version of the document to use during execution.",
                                "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                "type": "string"
                            },
                            "ExecutedBy": {
                                "description": "The Amazon Resource Name (ARN) of the user who executed the automation.",
                                "type": "string"
                            },
                            "ExecutionEndTime": {
                                "description": "The time the execution finished.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "ExecutionStartTime": {
                                "description": "The time the execution started.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "FailureMessage": {
                                "description": "A message describing why an execution has failed, if the status is set to Failed.",
                                "type": "string"
                            },
                            "MaxConcurrency": {
                                "description": "The MaxConcurrency value specified by the user when the execution started.",
                                "maxLength": 7,
                                "minLength": 1,
                                "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                                "type": "string"
                            },
                            "MaxErrors": {
                                "description": "The MaxErrors value specified by the user when the execution started.",
                                "maxLength": 7,
                                "minLength": 1,
                                "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                                "type": "string"
                            },
                            "Mode": {
                                "description": "The automation execution mode.",
                                "enum": [
                                    "Auto",
                                    "Interactive"
                                ],
                                "type": "string"
                            },
                            "Outputs": {
                                "description": "The list of execution outputs as defined in the automation document.",
                                "items": {
                                    "properties": {
                                        "key": {
                                            "maxLength": 30,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "value": {
                                            "items": {
                                                "maxLength": 512,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "maxItems": 10,
                                            "minItems": 0,
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                },
                                "maxItems": 200,
                                "minItems": 1,
                                "type": "array"
                            },
                            "Parameters": {
                                "description": "The key-value map of execution parameters, which were supplied when calling StartAutomationExecution.",
                                "items": {
                                    "properties": {
                                        "key": {
                                            "maxLength": 30,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "value": {
                                            "items": {
                                                "maxLength": 512,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "maxItems": 10,
                                            "minItems": 0,
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                },
                                "maxItems": 200,
                                "minItems": 1,
                                "type": "array"
                            },
                            "ParentAutomationExecutionId": {
                                "description": "The AutomationExecutionId of the parent automation.",
                                "maxLength": 36,
                                "minLength": 36,
                                "type": "string"
                            },
                            "ProgressCounters": {
                                "description": "An aggregate of step execution statuses displayed in the AWS Console for a multi-Region and multi-account Automation execution.",
                                "properties": {
                                    "CancelledSteps": {
                                        "description": "The total number of steps that the system cancelled in all specified AWS Regions and accounts for the current Automation execution.",
                                        "type": "integer"
                                    },
                                    "FailedSteps": {
                                        "description": "The total number of steps that failed to execute in all specified AWS Regions and accounts for the current Automation execution.",
                                        "type": "integer"
                                    },
                                    "SuccessSteps": {
                                        "description": "The total number of steps that successfully completed in all specified AWS Regions and accounts for the current Automation execution.",
                                        "type": "integer"
                                    },
                                    "TimedOutSteps": {
                                        "description": "The total number of steps that timed out in all specified AWS Regions and accounts for the current Automation execution.",
                                        "type": "integer"
                                    },
                                    "TotalSteps": {
                                        "description": "The total number of steps executed in all specified AWS Regions and accounts for the current Automation execution.",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            },
                            "ResolvedTargets": {
                                "description": "A list of resolved targets in the rate control execution.",
                                "properties": {
                                    "ParameterValues": {
                                        "description": "A list of parameter values sent to targets that resolved during the Automation execution.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "Truncated": {
                                        "description": "A boolean value indicating whether the resolved target list is truncated.",
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            },
                            "StepExecutions": {
                                "description": "A list of details about the current state of all steps that comprise an execution. An Automation document contains a list of steps that are executed in order.",
                                "items": {
                                    "description": "Detailed information about an the execution state of an Automation step.",
                                    "properties": {
                                        "Action": {
                                            "description": "The action this step performs. The action determines the behavior of the step.",
                                            "pattern": "^aws:[a-zA-Z]{3,25}$",
                                            "type": "string"
                                        },
                                        "ExecutionEndTime": {
                                            "description": "If a step has finished execution, this contains the time the execution ended. If the step has not yet concluded, this field is not populated.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "ExecutionStartTime": {
                                            "description": "If a step has begun execution, this contains the time the step started. If the step is in Pending status, this field is not populated.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "FailureDetails": {
                                            "description": "Information about the Automation failure.",
                                            "properties": {
                                                "Details": {
                                                    "description": "Detailed information about the Automation step failure.",
                                                    "items": {
                                                        "properties": {
                                                            "key": {
                                                                "maxLength": 30,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            },
                                                            "value": {
                                                                "items": {
                                                                    "maxLength": 512,
                                                                    "minLength": 1,
                                                                    "type": "string"
                                                                },
                                                                "maxItems": 10,
                                                                "minItems": 0,
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "maxItems": 200,
                                                    "minItems": 1,
                                                    "type": "array"
                                                },
                                                "FailureStage": {
                                                    "description": "The stage of the Automation execution when the failure occurred. The stages include the following: InputValidation, PreVerification, Invocation, PostVerification.",
                                                    "type": "string"
                                                },
                                                "FailureType": {
                                                    "description": "The type of Automation failure. Failure types include the following: Action, Permission, Throttling, Verification, Internal.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "FailureMessage": {
                                            "description": "If a step failed, this message explains why the execution failed.",
                                            "type": "string"
                                        },
                                        "Inputs": {
                                            "description": "Fully-resolved values passed into the step before execution.",
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "IsCritical": {
                                            "description": "The flag which can be used to help decide whether the failure of current step leads to the Automation failure.",
                                            "type": "boolean"
                                        },
                                        "IsEnd": {
                                            "description": "The flag which can be used to end automation no matter whether the step succeeds or fails.",
                                            "type": "boolean"
                                        },
                                        "MaxAttempts": {
                                            "description": "The maximum number of tries to run the action of the step. The default value is 1.",
                                            "type": "integer"
                                        },
                                        "NextStep": {
                                            "description": "The next step after the step succeeds.",
                                            "type": "string"
                                        },
                                        "OnFailure": {
                                            "description": "The action to take if the step fails. The default value is Abort.",
                                            "type": "string"
                                        },
                                        "Outputs": {
                                            "description": "Returned values from the execution of the step.",
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "maxLength": 30,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "items": {
                                                            "maxLength": 512,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "maxItems": 10,
                                                        "minItems": 0,
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "maxItems": 200,
                                            "minItems": 1,
                                            "type": "array"
                                        },
                                        "OverriddenParameters": {
                                            "description": "A user-specified list of parameters to override when executing a step.",
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "maxLength": 30,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "items": {
                                                            "maxLength": 512,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "maxItems": 10,
                                                        "minItems": 0,
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "maxItems": 200,
                                            "minItems": 1,
                                            "type": "array"
                                        },
                                        "Response": {
                                            "description": "A message associated with the response code for an execution.",
                                            "type": "string"
                                        },
                                        "ResponseCode": {
                                            "description": "The response code returned by the execution of the step.",
                                            "type": "string"
                                        },
                                        "StepExecutionId": {
                                            "description": "The unique ID of a step execution.",
                                            "type": "string"
                                        },
                                        "StepName": {
                                            "description": "The name of this execution step.",
                                            "type": "string"
                                        },
                                        "StepStatus": {
                                            "description": "The execution status for this step. Valid values include: Pending, InProgress, Success, Cancelled, Failed, and TimedOut.",
                                            "enum": [
                                                "Pending",
                                                "InProgress",
                                                "Waiting",
                                                "Success",
                                                "TimedOut",
                                                "Cancelling",
                                                "Cancelled",
                                                "Failed"
                                            ],
                                            "type": "string"
                                        },
                                        "TargetLocation": {
                                            "description": "The combination of AWS Regions and accounts targeted by the current Automation execution.",
                                            "properties": {
                                                "Accounts": {
                                                    "description": "The AWS accounts targeted by the current Automation execution.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "maxItems": 50,
                                                    "minItems": 1,
                                                    "type": "array"
                                                },
                                                "ExecutionRoleName": {
                                                    "description": "The Automation execution role used by the currently executing Automation.",
                                                    "maxLength": 64,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Regions": {
                                                    "description": "The AWS Regions targeted by the current Automation execution.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "maxItems": 50,
                                                    "minItems": 1,
                                                    "type": "array"
                                                },
                                                "TargetLocationMaxConcurrency": {
                                                    "description": "The maxium number of AWS accounts and AWS regions allowed to run the Automation concurrently ",
                                                    "maxLength": 7,
                                                    "minLength": 1,
                                                    "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                                                    "type": "string"
                                                },
                                                "TargetLocationMaxErrors": {
                                                    "description": "The maxium number of errors allowed before the system stops queueing additional Automation executions for the currently executing Automation. ",
                                                    "maxLength": 7,
                                                    "minLength": 1,
                                                    "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "Targets": {
                                            "description": "The targets for the step execution.",
                                            "items": {
                                                "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                                                "properties": {
                                                    "Key": {
                                                        "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                                        "type": "string"
                                                    },
                                                    "Values": {
                                                        "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "maxItems": 50,
                                                        "minItems": 0,
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "maxItems": 5,
                                            "minItems": 0,
                                            "type": "array"
                                        },
                                        "TimeoutSeconds": {
                                            "description": "The timeout seconds of the step.",
                                            "type": "integer"
                                        },
                                        "ValidNextSteps": {
                                            "description": "Strategies used when step fails, we support Continue and Abort. Abort will fail the automation when the step fails. Continue will ignore the failure of current step and allow automation to execute the next step. With conditional branching, we add step:stepName to support the automation to go to another specific step.",
                                            "items": {
                                                "maxLength": 65535,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "StepExecutionsTruncated": {
                                "description": "A boolean value that indicates if the response contains the full list of the Automation step executions. If true, use the DescribeAutomationStepExecutions API action to get the full list of step executions.",
                                "type": "boolean"
                            },
                            "Target": {
                                "description": "The target of the execution.",
                                "type": "string"
                            },
                            "TargetLocations": {
                                "description": "The combination of AWS Regions and/or AWS accounts where you want to execute the Automation.",
                                "items": {
                                    "description": "The combination of AWS Regions and accounts targeted by the current Automation execution.",
                                    "properties": {
                                        "Accounts": {
                                            "description": "The AWS accounts targeted by the current Automation execution.",
                                            "items": {
                                                "type": "string"
                                            },
                                            "maxItems": 50,
                                            "minItems": 1,
                                            "type": "array"
                                        },
                                        "ExecutionRoleName": {
                                            "description": "The Automation execution role used by the currently executing Automation.",
                                            "maxLength": 64,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "Regions": {
                                            "description": "The AWS Regions targeted by the current Automation execution.",
                                            "items": {
                                                "type": "string"
                                            },
                                            "maxItems": 50,
                                            "minItems": 1,
                                            "type": "array"
                                        },
                                        "TargetLocationMaxConcurrency": {
                                            "description": "The maxium number of AWS accounts and AWS regions allowed to run the Automation concurrently ",
                                            "maxLength": 7,
                                            "minLength": 1,
                                            "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                                            "type": "string"
                                        },
                                        "TargetLocationMaxErrors": {
                                            "description": "The maxium number of errors allowed before the system stops queueing additional Automation executions for the currently executing Automation. ",
                                            "maxLength": 7,
                                            "minLength": 1,
                                            "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "maxItems": 100,
                                "minItems": 1,
                                "type": "array"
                            },
                            "TargetMaps": {
                                "description": "The specified key-value mapping of document parameters to target resources.",
                                "items": {
                                    "items": {
                                        "properties": {
                                            "key": {
                                                "maxLength": 50,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "value": {
                                                "items": {
                                                    "maxLength": 50,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "maxItems": 25,
                                                "minItems": 0,
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "maxItems": 20,
                                    "minItems": 1,
                                    "type": "array"
                                },
                                "maxItems": 300,
                                "minItems": 0,
                                "type": "array"
                            },
                            "TargetParameterName": {
                                "description": "The parameter name.",
                                "maxLength": 30,
                                "minLength": 1,
                                "type": "string"
                            },
                            "Targets": {
                                "description": "The specified targets.",
                                "items": {
                                    "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                                    "properties": {
                                        "Key": {
                                            "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                            "type": "string"
                                        },
                                        "Values": {
                                            "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                            "items": {
                                                "type": "string"
                                            },
                                            "maxItems": 50,
                                            "minItems": 0,
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                },
                                "maxItems": 5,
                                "minItems": 0,
                                "type": "array"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "GetCommandInvocationRequest": {
                "properties": {
                    "CommandId": {
                        "description": "(Required) The parent command ID of the invocation plugin.",
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string"
                    },
                    "InstanceId": {
                        "description": "(Required) The ID of the managed instance targeted by the command. A managed instance can be an Amazon EC2 instance or an instance in your hybrid environment that is configured for Systems Manager.",
                        "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                        "type": "string"
                    },
                    "PluginName": {
                        "description": "(Optional) The name of the plugin for which you want detailed results. If the document contains only one plugin, the name can be omitted and the details will be returned.",
                        "minLength": 4,
                        "type": "string"
                    }
                },
                "required": [
                    "CommandId",
                    "InstanceId"
                ],
                "type": "object"
            },
            "GetCommandInvocationResult": {
                "properties": {
                    "CloudWatchOutputConfig": {
                        "description": "CloudWatch Logs information where Systems Manager sent the command output.",
                        "properties": {
                            "CloudWatchLogGroupName": {
                                "description": "The name of the CloudWatch log group where you want to send command output. If you don't specify a group name, Systems Manager automatically creates a log group for you. The log group uses the following naming format: aws/ssm/<i>SystemsManagerDocumentName</i>.",
                                "maxLength": 512,
                                "minLength": 1,
                                "pattern": "[\\.\\-_/#A-Za-z0-9]+",
                                "type": "string"
                            },
                            "CloudWatchOutputEnabled": {
                                "description": "Enables Systems Manager to send command output to CloudWatch Logs.",
                                "type": "boolean"
                            }
                        },
                        "type": "object"
                    },
                    "CommandId": {
                        "description": "The parent command ID of the invocation plugin.",
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string"
                    },
                    "Comment": {
                        "description": "The comment text for the command.",
                        "maxLength": 100,
                        "type": "string"
                    },
                    "DocumentName": {
                        "description": "The name of the document that was executed. For example, AWS-RunShellScript.",
                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                        "type": "string"
                    },
                    "DocumentVersion": {
                        "description": "The SSM document version used in the request.",
                        "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                        "type": "string"
                    },
                    "ExecutionElapsedTime": {
                        "description": "Duration since ExecutionStartDateTime.",
                        "pattern": "^([\\-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d(?!:))?)?(\\17[0-5]\\d([\\.,]\\d)?)?([zZ]|([\\-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$",
                        "type": "string"
                    },
                    "ExecutionEndDateTime": {
                        "description": "<p>The date and time the plugin was finished executing. Date and time are written in ISO 8601 format. For example, June 7, 2017 is represented as 2017-06-7. The following sample AWS CLI command uses the <code>InvokedAfter</code> filter.</p> <p> <code>aws ssm list-commands --filters key=InvokedAfter,value=2017-06-07T00:00:00Z</code> </p> <p>If the plugin has not started to execute, the string is empty.</p>",
                        "pattern": "^([\\-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d(?!:))?)?(\\17[0-5]\\d([\\.,]\\d)?)?([zZ]|([\\-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$",
                        "type": "string"
                    },
                    "ExecutionStartDateTime": {
                        "description": "<p>The date and time the plugin started executing. Date and time are written in ISO 8601 format. For example, June 7, 2017 is represented as 2017-06-7. The following sample AWS CLI command uses the <code>InvokedBefore</code> filter.</p> <p> <code>aws ssm list-commands --filters key=InvokedBefore,value=2017-06-07T00:00:00Z</code> </p> <p>If the plugin has not started to execute, the string is empty.</p>",
                        "pattern": "^([\\-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d(?!:))?)?(\\17[0-5]\\d([\\.,]\\d)?)?([zZ]|([\\-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$",
                        "type": "string"
                    },
                    "InstanceId": {
                        "description": "The ID of the managed instance targeted by the command. A managed instance can be an Amazon EC2 instance or an instance in your hybrid environment that is configured for Systems Manager.",
                        "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                        "type": "string"
                    },
                    "PluginName": {
                        "description": "The name of the plugin for which you want detailed results. For example, aws:RunShellScript is a plugin.",
                        "minLength": 4,
                        "type": "string"
                    },
                    "ResponseCode": {
                        "description": "The error level response code for the plugin script. If the response code is -1, then the command has not started executing on the instance, or it was not received by the instance.",
                        "type": "integer"
                    },
                    "StandardErrorContent": {
                        "description": "The first 8,000 characters written by the plugin to stderr. If the command has not finished executing, then this string is empty.",
                        "maxLength": 8000,
                        "type": "string"
                    },
                    "StandardErrorUrl": {
                        "description": "The URL for the complete text written by the plugin to stderr. If the command has not finished executing, then this string is empty.",
                        "type": "string"
                    },
                    "StandardOutputContent": {
                        "description": "The first 24,000 characters written by the plugin to stdout. If the command has not finished executing, if ExecutionStatus is neither Succeeded nor Failed, then this string is empty.",
                        "maxLength": 24000,
                        "type": "string"
                    },
                    "StandardOutputUrl": {
                        "description": "The URL for the complete text written by the plugin to stdout in Amazon S3. If an Amazon S3 bucket was not specified, then this string is empty.",
                        "type": "string"
                    },
                    "Status": {
                        "description": "The status of this invocation plugin. This status can be different than StatusDetails.",
                        "enum": [
                            "Pending",
                            "InProgress",
                            "Delayed",
                            "Success",
                            "Cancelled",
                            "TimedOut",
                            "Failed",
                            "Cancelling"
                        ],
                        "type": "string"
                    },
                    "StatusDetails": {
                        "description": "<p>A detailed status of the command execution for an invocation. StatusDetails includes more information than Status because it includes states resulting from error and concurrency control parameters. StatusDetails can show different results than Status. For more information about these statuses, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/monitor-commands.html\">Understanding Command Statuses</a> in the <i>AWS Systems Manager User Guide</i>. StatusDetails can be one of the following values:</p> <ul> <li> <p>Pending: The command has not been sent to the instance.</p> </li> <li> <p>In Progress: The command has been sent to the instance but has not reached a terminal state.</p> </li> <li> <p>Delayed: The system attempted to send the command to the target, but the target was not available. The instance might not be available because of network issues, the instance was stopped, etc. The system will try to deliver the command again.</p> </li> <li> <p>Success: The command or plugin was executed successfully. This is a terminal state.</p> </li> <li> <p>Delivery Timed Out: The command was not delivered to the instance before the delivery timeout expired. Delivery timeouts do not count against the parent command's MaxErrors limit, but they do contribute to whether the parent command status is Success or Incomplete. This is a terminal state.</p> </li> <li> <p>Execution Timed Out: The command started to execute on the instance, but the execution was not complete before the timeout expired. Execution timeouts count against the MaxErrors limit of the parent command. This is a terminal state.</p> </li> <li> <p>Failed: The command wasn't executed successfully on the instance. For a plugin, this indicates that the result code was not zero. For a command invocation, this indicates that the result code for one or more plugins was not zero. Invocation failures count against the MaxErrors limit of the parent command. This is a terminal state.</p> </li> <li> <p>Canceled: The command was terminated before it was completed. This is a terminal state.</p> </li> <li> <p>Undeliverable: The command can't be delivered to the instance. The instance might not exist or might not be responding. Undeliverable invocations don't count against the parent command's MaxErrors limit and don't contribute to whether the parent command status is Success or Incomplete. This is a terminal state.</p> </li> <li> <p>Terminated: The parent command exceeded its MaxErrors limit and subsequent command invocations were canceled by the system. This is a terminal state.</p> </li> </ul>",
                        "maxLength": 100,
                        "minLength": 0,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "GetConnectionStatusRequest": {
                "properties": {
                    "Target": {
                        "description": "The ID of the instance.",
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "Target"
                ],
                "type": "object"
            },
            "GetConnectionStatusResponse": {
                "properties": {
                    "Status": {
                        "description": "The status of the connection to the instance. For example, 'Connected' or 'Not Connected'.",
                        "enum": [
                            "Connected",
                            "NotConnected"
                        ],
                        "type": "string"
                    },
                    "Target": {
                        "description": "The ID of the instance to check connection status. ",
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "GetDefaultPatchBaselineRequest": {
                "properties": {
                    "OperatingSystem": {
                        "description": "Returns the default patch baseline for the specified operating system.",
                        "enum": [
                            "WINDOWS",
                            "AMAZON_LINUX",
                            "AMAZON_LINUX_2",
                            "UBUNTU",
                            "REDHAT_ENTERPRISE_LINUX",
                            "SUSE",
                            "CENTOS"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "GetDefaultPatchBaselineResult": {
                "properties": {
                    "BaselineId": {
                        "description": "The ID of the default patch baseline.",
                        "maxLength": 128,
                        "minLength": 20,
                        "pattern": "^[a-zA-Z0-9_\\-:/]{20,128}$",
                        "type": "string"
                    },
                    "OperatingSystem": {
                        "description": "The operating system for the returned patch baseline. ",
                        "enum": [
                            "WINDOWS",
                            "AMAZON_LINUX",
                            "AMAZON_LINUX_2",
                            "UBUNTU",
                            "REDHAT_ENTERPRISE_LINUX",
                            "SUSE",
                            "CENTOS"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "GetDeployablePatchSnapshotForInstanceRequest": {
                "properties": {
                    "InstanceId": {
                        "description": "The ID of the instance for which the appropriate patch snapshot should be retrieved.",
                        "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                        "type": "string"
                    },
                    "SnapshotId": {
                        "description": "The user-defined snapshot ID.",
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                        "type": "string"
                    }
                },
                "required": [
                    "InstanceId",
                    "SnapshotId"
                ],
                "type": "object"
            },
            "GetDeployablePatchSnapshotForInstanceResult": {
                "properties": {
                    "InstanceId": {
                        "description": "The ID of the instance.",
                        "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                        "type": "string"
                    },
                    "Product": {
                        "description": "Returns the specific operating system (for example Windows Server 2012 or Amazon Linux 2015.09) on the instance for the specified patch snapshot.",
                        "type": "string"
                    },
                    "SnapshotDownloadUrl": {
                        "description": "A pre-signed Amazon S3 URL that can be used to download the patch snapshot.",
                        "type": "string"
                    },
                    "SnapshotId": {
                        "description": "The user-defined snapshot ID.",
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "GetDocumentRequest": {
                "properties": {
                    "DocumentFormat": {
                        "description": "Returns the document in the specified format. The document format can be either JSON or YAML. JSON is the default format.",
                        "enum": [
                            "YAML",
                            "JSON"
                        ],
                        "type": "string"
                    },
                    "DocumentVersion": {
                        "description": "The document version for which you want information.",
                        "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The name of the Systems Manager document.",
                        "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                        "type": "string"
                    },
                    "VersionName": {
                        "description": "An optional field specifying the version of the artifact associated with the document. For example, \"Release 12, Update 6\". This value is unique across all versions of a document, and cannot be changed.",
                        "pattern": "^[a-zA-Z0-9_\\-.]{1,128}$",
                        "type": "string"
                    }
                },
                "required": [
                    "Name"
                ],
                "type": "object"
            },
            "GetDocumentResult": {
                "properties": {
                    "AttachmentsContent": {
                        "description": "A description of the document attachments, including names, locations, sizes, etc.",
                        "items": {
                            "description": "A structure that includes attributes that describe a document attachment.",
                            "properties": {
                                "Hash": {
                                    "description": "The cryptographic hash value of the document content.",
                                    "maxLength": 256,
                                    "type": "string"
                                },
                                "HashType": {
                                    "description": "The hash algorithm used to calculate the hash value.",
                                    "enum": [
                                        "Sha256"
                                    ],
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "The name of an attachment.",
                                    "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                    "type": "string"
                                },
                                "Size": {
                                    "description": "The size of an attachment in bytes.",
                                    "type": "integer"
                                },
                                "Url": {
                                    "description": "The URL location of the attachment content.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Content": {
                        "description": "The contents of the Systems Manager document.",
                        "minLength": 1,
                        "type": "string"
                    },
                    "DocumentFormat": {
                        "description": "The document format, either JSON or YAML.",
                        "enum": [
                            "YAML",
                            "JSON"
                        ],
                        "type": "string"
                    },
                    "DocumentType": {
                        "description": "The document type.",
                        "enum": [
                            "Command",
                            "Policy",
                            "Automation",
                            "Session",
                            "Package"
                        ],
                        "type": "string"
                    },
                    "DocumentVersion": {
                        "description": "The document version.",
                        "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The name of the Systems Manager document.",
                        "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                        "type": "string"
                    },
                    "Status": {
                        "description": "The status of the Systems Manager document, such as <code>Creating</code>, <code>Active</code>, <code>Updating</code>, <code>Failed</code>, and <code>Deleting</code>.",
                        "enum": [
                            "Creating",
                            "Active",
                            "Updating",
                            "Deleting",
                            "Failed"
                        ],
                        "type": "string"
                    },
                    "StatusInformation": {
                        "description": "A message returned by AWS Systems Manager that explains the <code>Status</code> value. For example, a <code>Failed</code> status might be explained by the <code>StatusInformation</code> message, \"The specified S3 bucket does not exist. Verify that the URL of the S3 bucket is correct.\"",
                        "type": "string"
                    },
                    "VersionName": {
                        "description": "The version of the artifact associated with the document. For example, \"Release 12, Update 6\". This value is unique across all versions of a document, and cannot be changed.",
                        "pattern": "^[a-zA-Z0-9_\\-.]{1,128}$",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "GetInventoryRequest": {
                "properties": {
                    "Aggregators": {
                        "description": "Returns counts of inventory types based on one or more expressions. For example, if you aggregate by using an expression that uses the <code>AWS:InstanceInformation.PlatformType</code> type, you can see a count of how many Windows and Linux instances exist in your inventoried fleet."
                    },
                    "Filters": {
                        "description": "One or more filters. Use a filter to return a more specific list of results.",
                        "items": {
                            "description": "One or more filters. Use a filter to return a more specific list of results.",
                            "properties": {
                                "Key": {
                                    "description": "The name of the filter key.",
                                    "maxLength": 200,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Type": {
                                    "description": "The type of filter. Valid values include the following: \"Equal\"|\"NotEqual\"|\"BeginWith\"|\"LessThan\"|\"GreaterThan\"",
                                    "enum": [
                                        "Equal",
                                        "NotEqual",
                                        "BeginWith",
                                        "LessThan",
                                        "GreaterThan",
                                        "Exists"
                                    ],
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "Inventory filter values. Example: inventory filter where instance IDs are specified as values Key=AWS:InstanceInformation.InstanceId,Values= i-a12b3c4d5e6g, i-1a2b3c4d5e6,Type=Equal ",
                                    "items": {
                                        "type": "string"
                                    },
                                    "maxItems": 40,
                                    "minItems": 1,
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Key",
                                "Values"
                            ],
                            "type": "object"
                        },
                        "maxItems": 5,
                        "minItems": 1,
                        "type": "array"
                    },
                    "MaxResults": {
                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                        "maximum": 50,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "The token for the next set of items to return. (You received this token from a previous call.)",
                        "type": "string"
                    },
                    "ResultAttributes": {
                        "description": "The list of inventory item types to return.",
                        "items": {
                            "description": "The inventory item result attribute.",
                            "properties": {
                                "TypeName": {
                                    "description": "Name of the inventory item type. Valid value: AWS:InstanceInformation. Default Value: AWS:InstanceInformation.",
                                    "maxLength": 100,
                                    "minLength": 1,
                                    "pattern": "^(AWS|Custom):.*$",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "TypeName"
                            ],
                            "type": "object"
                        },
                        "maxItems": 1,
                        "minItems": 1,
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "GetInventoryResult": {
                "properties": {
                    "Entities": {
                        "description": "Collection of inventory entities such as a collection of instance inventory. ",
                        "items": {
                            "description": "Inventory query results.",
                            "properties": {
                                "Data": {
                                    "description": "The data section in the inventory result entity JSON.",
                                    "items": {
                                        "properties": {
                                            "key": {
                                                "type": "string"
                                            },
                                            "value": {
                                                "description": "The inventory result item.",
                                                "properties": {
                                                    "CaptureTime": {
                                                        "description": "The time inventory item data was captured.",
                                                        "pattern": "^(20)[0-9][0-9]-(0[1-9]|1[012])-([12][0-9]|3[01]|0[1-9])(T)(2[0-3]|[0-1][0-9])(:[0-5][0-9])(:[0-5][0-9])(Z)$",
                                                        "type": "string"
                                                    },
                                                    "Content": {
                                                        "description": "Contains all the inventory data of the item type. Results include attribute names and values. ",
                                                        "items": {
                                                            "items": {
                                                                "properties": {
                                                                    "key": {
                                                                        "maxLength": 64,
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    },
                                                                    "value": {
                                                                        "maxLength": 4096,
                                                                        "minLength": 0,
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "maxItems": 50,
                                                            "minItems": 0,
                                                            "type": "array"
                                                        },
                                                        "maxItems": 10000,
                                                        "minItems": 0,
                                                        "type": "array"
                                                    },
                                                    "ContentHash": {
                                                        "description": "MD5 hash of the inventory item type contents. The content hash is used to determine whether to update inventory information. The PutInventory API does not update the inventory item type contents if the MD5 hash has not changed since last update. ",
                                                        "maxLength": 256,
                                                        "type": "string"
                                                    },
                                                    "SchemaVersion": {
                                                        "description": "The schema version for the inventory result item/",
                                                        "pattern": "^([0-9]{1,6})(\\.[0-9]{1,6})$",
                                                        "type": "string"
                                                    },
                                                    "TypeName": {
                                                        "description": "The name of the inventory result item type.",
                                                        "maxLength": 100,
                                                        "minLength": 1,
                                                        "pattern": "^(AWS|Custom):.*$",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "TypeName",
                                                    "SchemaVersion",
                                                    "Content"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "Id": {
                                    "description": "ID of the inventory result entity. For example, for managed instance inventory the result will be the managed instance ID. For EC2 instance inventory, the result will be the instance ID. ",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "NextToken": {
                        "description": "The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "GetInventorySchemaMaxResults": {
                "maximum": 200,
                "minimum": 50,
                "type": "integer"
            },
            "GetInventorySchemaRequest": {
                "properties": {
                    "Aggregator": {
                        "description": "Returns inventory schemas that support aggregation. For example, this call returns the <code>AWS:InstanceInformation</code> type, because it supports aggregation based on the <code>PlatformName</code>, <code>PlatformType</code>, and <code>PlatformVersion</code> attributes.",
                        "type": "boolean"
                    },
                    "MaxResults": {
                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                        "maximum": 200,
                        "minimum": 50,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "The token for the next set of items to return. (You received this token from a previous call.)",
                        "type": "string"
                    },
                    "SubType": {
                        "description": "Returns the sub-type schema for a specified inventory type.",
                        "type": "boolean"
                    },
                    "TypeName": {
                        "description": "The type of inventory item to return.",
                        "maxLength": 100,
                        "minLength": 0,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "GetInventorySchemaResult": {
                "properties": {
                    "NextToken": {
                        "description": "The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.",
                        "type": "string"
                    },
                    "Schemas": {
                        "description": "Inventory schemas returned by the request.",
                        "items": {
                            "description": "The inventory item schema definition. Users can use this to compose inventory query filters.",
                            "properties": {
                                "Attributes": {
                                    "description": "The schema attributes for inventory. This contains data type and attribute name.",
                                    "items": {
                                        "description": "Attributes are the entries within the inventory item content. It contains name and value.",
                                        "properties": {
                                            "DataType": {
                                                "description": "The data type of the inventory item attribute. ",
                                                "enum": [
                                                    "string",
                                                    "number"
                                                ],
                                                "type": "string"
                                            },
                                            "Name": {
                                                "description": "Name of the inventory item attribute.",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "Name",
                                            "DataType"
                                        ],
                                        "type": "object"
                                    },
                                    "maxItems": 50,
                                    "minItems": 1,
                                    "type": "array"
                                },
                                "DisplayName": {
                                    "description": "The alias name of the inventory type. The alias name is used for display purposes.",
                                    "type": "string"
                                },
                                "TypeName": {
                                    "description": "The name of the inventory type. Default inventory item type names start with AWS. Custom inventory type names will start with Custom. Default inventory item types include the following: AWS:AWSComponent, AWS:Application, AWS:InstanceInformation, AWS:Network, and AWS:WindowsUpdate.",
                                    "maxLength": 100,
                                    "minLength": 1,
                                    "pattern": "^(AWS|Custom):.*$",
                                    "type": "string"
                                },
                                "Version": {
                                    "description": "The schema version for the inventory item.",
                                    "pattern": "^([0-9]{1,6})(\\.[0-9]{1,6})$",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "TypeName",
                                "Attributes"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "GetMaintenanceWindowExecutionRequest": {
                "properties": {
                    "WindowExecutionId": {
                        "description": "The ID of the Maintenance Window execution that includes the task.",
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                        "type": "string"
                    }
                },
                "required": [
                    "WindowExecutionId"
                ],
                "type": "object"
            },
            "GetMaintenanceWindowExecutionResult": {
                "properties": {
                    "EndTime": {
                        "description": "The time the Maintenance Window finished executing.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "StartTime": {
                        "description": "The time the Maintenance Window started executing.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "Status": {
                        "description": "The status of the Maintenance Window execution.",
                        "enum": [
                            "PENDING",
                            "IN_PROGRESS",
                            "SUCCESS",
                            "FAILED",
                            "TIMED_OUT",
                            "CANCELLING",
                            "CANCELLED",
                            "SKIPPED_OVERLAPPING"
                        ],
                        "type": "string"
                    },
                    "StatusDetails": {
                        "description": "The details explaining the Status. Only available for certain status values.",
                        "maxLength": 250,
                        "minLength": 0,
                        "type": "string"
                    },
                    "TaskIds": {
                        "description": "The ID of the task executions from the Maintenance Window execution.",
                        "items": {
                            "maxLength": 36,
                            "minLength": 36,
                            "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "WindowExecutionId": {
                        "description": "The ID of the Maintenance Window execution.",
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "GetMaintenanceWindowExecutionTaskInvocationRequest": {
                "properties": {
                    "InvocationId": {
                        "description": "The invocation ID to retrieve.",
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                        "type": "string"
                    },
                    "TaskId": {
                        "description": "The ID of the specific task in the Maintenance Window task that should be retrieved. ",
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                        "type": "string"
                    },
                    "WindowExecutionId": {
                        "description": "The ID of the Maintenance Window execution for which the task is a part.",
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                        "type": "string"
                    }
                },
                "required": [
                    "WindowExecutionId",
                    "TaskId",
                    "InvocationId"
                ],
                "type": "object"
            },
            "GetMaintenanceWindowExecutionTaskInvocationResult": {
                "properties": {
                    "EndTime": {
                        "description": "The time that the task finished executing on the target.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "ExecutionId": {
                        "description": "The execution ID.",
                        "type": "string"
                    },
                    "InvocationId": {
                        "description": "The invocation ID.",
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                        "type": "string"
                    },
                    "OwnerInformation": {
                        "description": "User-provided value to be included in any CloudWatch events raised while running tasks for these targets in this Maintenance Window. ",
                        "format": "password",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Parameters": {
                        "description": "The parameters used at the time that the task executed.",
                        "format": "password",
                        "type": "string"
                    },
                    "StartTime": {
                        "description": "The time that the task started executing on the target.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "Status": {
                        "description": "The task status for an invocation.",
                        "enum": [
                            "PENDING",
                            "IN_PROGRESS",
                            "SUCCESS",
                            "FAILED",
                            "TIMED_OUT",
                            "CANCELLING",
                            "CANCELLED",
                            "SKIPPED_OVERLAPPING"
                        ],
                        "type": "string"
                    },
                    "StatusDetails": {
                        "description": "The details explaining the status. Details are only available for certain status values.",
                        "maxLength": 250,
                        "minLength": 0,
                        "type": "string"
                    },
                    "TaskExecutionId": {
                        "description": "The task execution ID.",
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                        "type": "string"
                    },
                    "TaskType": {
                        "description": "Retrieves the task type for a Maintenance Window. Task types include the following: LAMBDA, STEP_FUNCTION, AUTOMATION, RUN_COMMAND.",
                        "enum": [
                            "RUN_COMMAND",
                            "AUTOMATION",
                            "STEP_FUNCTIONS",
                            "LAMBDA"
                        ],
                        "type": "string"
                    },
                    "WindowExecutionId": {
                        "description": "The Maintenance Window execution ID.",
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                        "type": "string"
                    },
                    "WindowTargetId": {
                        "description": "The Maintenance Window target ID.",
                        "maxLength": 36,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "GetMaintenanceWindowExecutionTaskRequest": {
                "properties": {
                    "TaskId": {
                        "description": "The ID of the specific task execution in the Maintenance Window task that should be retrieved.",
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                        "type": "string"
                    },
                    "WindowExecutionId": {
                        "description": "The ID of the Maintenance Window execution that includes the task.",
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                        "type": "string"
                    }
                },
                "required": [
                    "WindowExecutionId",
                    "TaskId"
                ],
                "type": "object"
            },
            "GetMaintenanceWindowExecutionTaskResult": {
                "properties": {
                    "EndTime": {
                        "description": "The time the task execution completed.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "MaxConcurrency": {
                        "description": "The defined maximum number of task executions that could be run in parallel.",
                        "maxLength": 7,
                        "minLength": 1,
                        "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                        "type": "string"
                    },
                    "MaxErrors": {
                        "description": "The defined maximum number of task execution errors allowed before scheduling of the task execution would have been stopped.",
                        "maxLength": 7,
                        "minLength": 1,
                        "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                        "type": "string"
                    },
                    "Priority": {
                        "description": "The priority of the task.",
                        "minimum": 0,
                        "type": "integer"
                    },
                    "ServiceRole": {
                        "description": "The role that was assumed when executing the task.",
                        "type": "string"
                    },
                    "StartTime": {
                        "description": "The time the task execution started.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "Status": {
                        "description": "The status of the task.",
                        "enum": [
                            "PENDING",
                            "IN_PROGRESS",
                            "SUCCESS",
                            "FAILED",
                            "TIMED_OUT",
                            "CANCELLING",
                            "CANCELLED",
                            "SKIPPED_OVERLAPPING"
                        ],
                        "type": "string"
                    },
                    "StatusDetails": {
                        "description": "The details explaining the Status. Only available for certain status values.",
                        "maxLength": 250,
                        "minLength": 0,
                        "type": "string"
                    },
                    "TaskArn": {
                        "description": "The ARN of the executed task.",
                        "maxLength": 1600,
                        "minLength": 1,
                        "type": "string"
                    },
                    "TaskExecutionId": {
                        "description": "The ID of the specific task execution in the Maintenance Window task that was retrieved.",
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                        "type": "string"
                    },
                    "TaskParameters": {
                        "description": "<p>The parameters passed to the task when it was executed.</p> <note> <p> <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> </note> <p>The map has the following format:</p> <p>Key: string, between 1 and 255 characters</p> <p>Value: an array of strings, each string is between 1 and 255 characters</p>",
                        "items": {
                            "items": {
                                "properties": {
                                    "key": {
                                        "maxLength": 255,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "value": {
                                        "description": "Defines the values for a task parameter.",
                                        "properties": {
                                            "Values": {
                                                "description": "This field contains an array of 0 or more strings, each 1 to 255 characters in length.",
                                                "items": {
                                                    "format": "password",
                                                    "maxLength": 255,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "type": "array"
                    },
                    "Type": {
                        "description": "The type of task executed.",
                        "enum": [
                            "RUN_COMMAND",
                            "AUTOMATION",
                            "STEP_FUNCTIONS",
                            "LAMBDA"
                        ],
                        "type": "string"
                    },
                    "WindowExecutionId": {
                        "description": "The ID of the Maintenance Window execution that includes the task.",
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "GetMaintenanceWindowRequest": {
                "properties": {
                    "WindowId": {
                        "description": "The ID of the desired Maintenance Window.",
                        "maxLength": 20,
                        "minLength": 20,
                        "pattern": "^mw-[0-9a-f]{17}$",
                        "type": "string"
                    }
                },
                "required": [
                    "WindowId"
                ],
                "type": "object"
            },
            "GetMaintenanceWindowResult": {
                "properties": {
                    "AllowUnassociatedTargets": {
                        "description": "Whether targets must be registered with the Maintenance Window before tasks can be defined for those targets.",
                        "type": "boolean"
                    },
                    "CreatedDate": {
                        "description": "The date the Maintenance Window was created.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "Cutoff": {
                        "description": "The number of hours before the end of the Maintenance Window that Systems Manager stops scheduling new tasks for execution.",
                        "maximum": 23,
                        "minimum": 0,
                        "type": "integer"
                    },
                    "Description": {
                        "description": "The description of the Maintenance Window.",
                        "format": "password",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Duration": {
                        "description": "The duration of the Maintenance Window in hours.",
                        "maximum": 24,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "Enabled": {
                        "description": "Whether the Maintenance Windows is enabled.",
                        "type": "boolean"
                    },
                    "EndDate": {
                        "description": "The date and time, in ISO-8601 Extended format, for when the Maintenance Window is scheduled to become inactive. The Maintenance Window will not run after this specified time.",
                        "type": "string"
                    },
                    "ModifiedDate": {
                        "description": "The date the Maintenance Window was last modified.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The name of the Maintenance Window.",
                        "maxLength": 128,
                        "minLength": 3,
                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                        "type": "string"
                    },
                    "NextExecutionTime": {
                        "description": "The next time the Maintenance Window will actually run, taking into account any specified times for the Maintenance Window to become active or inactive.",
                        "type": "string"
                    },
                    "Schedule": {
                        "description": "The schedule of the Maintenance Window in the form of a cron or rate expression.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "ScheduleTimezone": {
                        "description": "The time zone that the scheduled Maintenance Window executions are based on, in Internet Assigned Numbers Authority (IANA) format. For example: \"America/Los_Angeles\", \"etc/UTC\", or \"Asia/Seoul\". For more information, see the <a href=\"https://www.iana.org/time-zones\">Time Zone Database</a> on the IANA website.",
                        "type": "string"
                    },
                    "StartDate": {
                        "description": "The date and time, in ISO-8601 Extended format, for when the Maintenance Window is scheduled to become active. The Maintenance Window will not run before this specified time.",
                        "type": "string"
                    },
                    "WindowId": {
                        "description": "The ID of the created Maintenance Window.",
                        "maxLength": 20,
                        "minLength": 20,
                        "pattern": "^mw-[0-9a-f]{17}$",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "GetMaintenanceWindowTaskRequest": {
                "properties": {
                    "WindowId": {
                        "description": "The Maintenance Window ID that includes the task to retrieve.",
                        "maxLength": 20,
                        "minLength": 20,
                        "pattern": "^mw-[0-9a-f]{17}$",
                        "type": "string"
                    },
                    "WindowTaskId": {
                        "description": "The Maintenance Window task ID to retrieve.",
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                        "type": "string"
                    }
                },
                "required": [
                    "WindowId",
                    "WindowTaskId"
                ],
                "type": "object"
            },
            "GetMaintenanceWindowTaskResult": {
                "properties": {
                    "Description": {
                        "description": "The retrieved task description.",
                        "format": "password",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "LoggingInfo": {
                        "description": "<p>The location in Amazon S3 where the task results are logged.</p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an S3 bucket to contain logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> </note>",
                        "properties": {
                            "S3BucketName": {
                                "description": "The name of an Amazon S3 bucket where execution logs are stored .",
                                "maxLength": 63,
                                "minLength": 3,
                                "type": "string"
                            },
                            "S3KeyPrefix": {
                                "description": "(Optional) The Amazon S3 bucket subfolder. ",
                                "maxLength": 500,
                                "type": "string"
                            },
                            "S3Region": {
                                "description": "The region where the Amazon S3 bucket is located.",
                                "maxLength": 20,
                                "minLength": 3,
                                "type": "string"
                            }
                        },
                        "required": [
                            "S3BucketName",
                            "S3Region"
                        ],
                        "type": "object"
                    },
                    "MaxConcurrency": {
                        "description": "The maximum number of targets allowed to run this task in parallel.",
                        "maxLength": 7,
                        "minLength": 1,
                        "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                        "type": "string"
                    },
                    "MaxErrors": {
                        "description": "The maximum number of errors allowed before the task stops being scheduled.",
                        "maxLength": 7,
                        "minLength": 1,
                        "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The retrieved task name.",
                        "maxLength": 128,
                        "minLength": 3,
                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                        "type": "string"
                    },
                    "Priority": {
                        "description": "The priority of the task when it executes. The lower the number, the higher the priority. Tasks that have the same priority are scheduled in parallel.",
                        "minimum": 0,
                        "type": "integer"
                    },
                    "ServiceRoleArn": {
                        "description": "The IAM service role to assume during task execution.",
                        "type": "string"
                    },
                    "Targets": {
                        "description": "The targets where the task should execute.",
                        "items": {
                            "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                            "properties": {
                                "Key": {
                                    "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "maxItems": 50,
                                    "minItems": 0,
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 5,
                        "minItems": 0,
                        "type": "array"
                    },
                    "TaskArn": {
                        "description": "The resource that the task used during execution. For RUN_COMMAND and AUTOMATION task types, the TaskArn is the Systems Manager Document name/ARN. For LAMBDA tasks, the value is the function name/ARN. For STEP_FUNCTION tasks, the value is the state machine ARN.",
                        "maxLength": 1600,
                        "minLength": 1,
                        "type": "string"
                    },
                    "TaskInvocationParameters": {
                        "description": "The parameters to pass to the task when it executes.",
                        "properties": {
                            "Automation": {
                                "description": "The parameters for an AUTOMATION task type.",
                                "properties": {
                                    "DocumentVersion": {
                                        "description": "The version of an Automation document to use during task execution.",
                                        "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                        "type": "string"
                                    },
                                    "Parameters": {
                                        "description": "<p>The parameters for the AUTOMATION task.</p> <p>For information about specifying and updating task parameters, see <a>RegisterTaskWithMaintenanceWindow</a> and <a>UpdateMaintenanceWindowTask</a>.</p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an S3 bucket to contain logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p> <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p>For AUTOMATION task types, Systems Manager ignores any values specified for these parameters.</p> </note>",
                                        "items": {
                                            "properties": {
                                                "key": {
                                                    "maxLength": 30,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "items": {
                                                        "maxLength": 512,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "maxItems": 10,
                                                    "minItems": 0,
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "maxItems": 200,
                                        "minItems": 1,
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            },
                            "Lambda": {
                                "description": "The parameters for a LAMBDA task type.",
                                "properties": {
                                    "ClientContext": {
                                        "description": "Pass client-specific information to the Lambda function that you are invoking. You can then process the client information in your Lambda function as you choose through the context variable.",
                                        "maxLength": 8000,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "Payload": {
                                        "description": "JSON to provide to your Lambda function as input.",
                                        "format": "password",
                                        "maxLength": 4096,
                                        "type": "string"
                                    },
                                    "Qualifier": {
                                        "description": "(Optional) Specify a Lambda function version or alias name. If you specify a function version, the action uses the qualified function ARN to invoke a specific Lambda function. If you specify an alias name, the action uses the alias ARN to invoke the Lambda function version to which the alias points.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "RunCommand": {
                                "description": "The parameters for a RUN_COMMAND task type.",
                                "properties": {
                                    "Comment": {
                                        "description": "Information about the command(s) to execute.",
                                        "maxLength": 100,
                                        "type": "string"
                                    },
                                    "DocumentHash": {
                                        "description": "The SHA-256 or SHA-1 hash created by the system when the document was created. SHA-1 hashes have been deprecated.",
                                        "maxLength": 256,
                                        "type": "string"
                                    },
                                    "DocumentHashType": {
                                        "description": "SHA-256 or SHA-1. SHA-1 hashes have been deprecated.",
                                        "enum": [
                                            "Sha256",
                                            "Sha1"
                                        ],
                                        "type": "string"
                                    },
                                    "NotificationConfig": {
                                        "description": "Configurations for sending notifications about command status changes on a per-instance basis.",
                                        "properties": {
                                            "NotificationArn": {
                                                "description": "An Amazon Resource Name (ARN) for a Simple Notification Service (SNS) topic. Run Command pushes notifications about command status changes to this topic.",
                                                "type": "string"
                                            },
                                            "NotificationEvents": {
                                                "description": "The different events for which you can receive notifications. These events include the following: All (events), InProgress, Success, TimedOut, Cancelled, Failed. To learn more about these events, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/rc-sns-notifications.html\">Configuring Amazon SNS Notifications for Run Command</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                "items": {
                                                    "enum": [
                                                        "All",
                                                        "InProgress",
                                                        "Success",
                                                        "TimedOut",
                                                        "Cancelled",
                                                        "Failed"
                                                    ],
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "NotificationType": {
                                                "description": "Command: Receive notification when the status of a command changes. Invocation: For commands sent to multiple instances, receive notification on a per-instance basis when the status of a command changes. ",
                                                "enum": [
                                                    "Command",
                                                    "Invocation"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "OutputS3BucketName": {
                                        "description": "The name of the Amazon S3 bucket.",
                                        "maxLength": 63,
                                        "minLength": 3,
                                        "type": "string"
                                    },
                                    "OutputS3KeyPrefix": {
                                        "description": "The Amazon S3 bucket subfolder.",
                                        "maxLength": 500,
                                        "type": "string"
                                    },
                                    "Parameters": {
                                        "description": "The parameters for the RUN_COMMAND task execution.",
                                        "items": {
                                            "properties": {
                                                "key": {
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "ServiceRoleArn": {
                                        "description": "The IAM service role to assume during task execution.",
                                        "type": "string"
                                    },
                                    "TimeoutSeconds": {
                                        "description": "If this time is reached and the command has not already started executing, it doesn't run.",
                                        "maximum": 2592000,
                                        "minimum": 30,
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            },
                            "StepFunctions": {
                                "description": "The parameters for a STEP_FUNCTION task type.",
                                "properties": {
                                    "Input": {
                                        "description": "The inputs for the STEP_FUNCTION task.",
                                        "format": "password",
                                        "maxLength": 4096,
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "The name of the STEP_FUNCTION task.",
                                        "maxLength": 80,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    },
                    "TaskParameters": {
                        "description": "<p>The parameters to pass to the task when it executes.</p> <note> <p> <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> </note>",
                        "items": {
                            "properties": {
                                "key": {
                                    "maxLength": 255,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "value": {
                                    "description": "Defines the values for a task parameter.",
                                    "properties": {
                                        "Values": {
                                            "description": "This field contains an array of 0 or more strings, each 1 to 255 characters in length.",
                                            "items": {
                                                "format": "password",
                                                "maxLength": 255,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "TaskType": {
                        "description": "The type of task to execute.",
                        "enum": [
                            "RUN_COMMAND",
                            "AUTOMATION",
                            "STEP_FUNCTIONS",
                            "LAMBDA"
                        ],
                        "type": "string"
                    },
                    "WindowId": {
                        "description": "The retrieved Maintenance Window ID.",
                        "maxLength": 20,
                        "minLength": 20,
                        "pattern": "^mw-[0-9a-f]{17}$",
                        "type": "string"
                    },
                    "WindowTaskId": {
                        "description": "The retrieved Maintenance Window task ID.",
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "GetParameterHistoryRequest": {
                "properties": {
                    "MaxResults": {
                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                        "maximum": 50,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "Name": {
                        "description": "The name of a parameter you want to query.",
                        "maxLength": 2048,
                        "minLength": 1,
                        "type": "string"
                    },
                    "NextToken": {
                        "description": "The token for the next set of items to return. (You received this token from a previous call.)",
                        "type": "string"
                    },
                    "WithDecryption": {
                        "description": "Return decrypted values for secure string parameters. This flag is ignored for String and StringList parameter types.",
                        "type": "boolean"
                    }
                },
                "required": [
                    "Name"
                ],
                "type": "object"
            },
            "GetParameterHistoryResult": {
                "properties": {
                    "NextToken": {
                        "description": "The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.",
                        "type": "string"
                    },
                    "Parameters": {
                        "description": "A list of parameters returned by the request.",
                        "items": {
                            "description": "Information about parameter usage.",
                            "properties": {
                                "AllowedPattern": {
                                    "description": "<p>Parameter names can include the following letters and symbols.</p> <p>a-zA-Z0-9_.-</p>",
                                    "maxLength": 1024,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "Description": {
                                    "description": "Information about the parameter.",
                                    "maxLength": 1024,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "KeyId": {
                                    "description": "The ID of the query key used for this parameter.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "pattern": "^([a-zA-Z0-9:/_-]+)$",
                                    "type": "string"
                                },
                                "Labels": {
                                    "description": "Labels assigned to the parameter version.",
                                    "items": {
                                        "maxLength": 100,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "maxItems": 10,
                                    "minItems": 1,
                                    "type": "array"
                                },
                                "LastModifiedDate": {
                                    "description": "Date the parameter was last changed or updated.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "LastModifiedUser": {
                                    "description": "Amazon Resource Name (ARN) of the AWS user who last changed the parameter.",
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "The name of the parameter.",
                                    "maxLength": 2048,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Type": {
                                    "description": "The type of parameter used.",
                                    "enum": [
                                        "String",
                                        "StringList",
                                        "SecureString"
                                    ],
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "The parameter value.",
                                    "maxLength": 4096,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Version": {
                                    "description": "The parameter version.",
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "GetParameterRequest": {
                "properties": {
                    "Name": {
                        "description": "The name of the parameter you want to query.",
                        "maxLength": 2048,
                        "minLength": 1,
                        "type": "string"
                    },
                    "WithDecryption": {
                        "description": "Return decrypted values for secure string parameters. This flag is ignored for String and StringList parameter types.",
                        "type": "boolean"
                    }
                },
                "required": [
                    "Name"
                ],
                "type": "object"
            },
            "GetParameterResult": {
                "properties": {
                    "Parameter": {
                        "description": "Information about a parameter.",
                        "properties": {
                            "ARN": {
                                "description": "The Amazon Resource Name (ARN) of the parameter.",
                                "type": "string"
                            },
                            "LastModifiedDate": {
                                "description": "Date the parameter was last changed or updated and the parameter version was created.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "Name": {
                                "description": "The name of the parameter.",
                                "maxLength": 2048,
                                "minLength": 1,
                                "type": "string"
                            },
                            "Selector": {
                                "description": "<p>Either the version number or the label used to retrieve the parameter value. Specify selectors by using one of the following formats:</p> <p>parameter_name:version</p> <p>parameter_name:label</p>",
                                "maxLength": 128,
                                "minLength": 0,
                                "type": "string"
                            },
                            "SourceResult": {
                                "description": "Applies to parameters that reference information in other AWS services. SourceResult is the raw result or response from the source.",
                                "type": "string"
                            },
                            "Type": {
                                "description": "The type of parameter. Valid values include the following: String, String list, Secure string.",
                                "enum": [
                                    "String",
                                    "StringList",
                                    "SecureString"
                                ],
                                "type": "string"
                            },
                            "Value": {
                                "description": "The parameter value.",
                                "maxLength": 4096,
                                "minLength": 1,
                                "type": "string"
                            },
                            "Version": {
                                "description": "The parameter version.",
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "GetParametersByPathMaxResults": {
                "maximum": 10,
                "minimum": 1,
                "type": "integer"
            },
            "GetParametersByPathRequest": {
                "properties": {
                    "MaxResults": {
                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                        "maximum": 10,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "A token to start the list. Use this token to get the next set of results. ",
                        "type": "string"
                    },
                    "ParameterFilters": {
                        "description": "<p>Filters to limit the request results.</p> <note> <p>You can't filter using the parameter name.</p> </note>",
                        "items": {
                            "description": "<p>One or more filters. Use a filter to return a more specific list of results.</p> <note> <p>The <code>Name</code> field can't be used with the <a>GetParametersByPath</a> API action.</p> </note>",
                            "properties": {
                                "Key": {
                                    "description": "The name of the filter.",
                                    "maxLength": 132,
                                    "minLength": 1,
                                    "pattern": "tag:.+|Name|Type|KeyId|Path|Label",
                                    "type": "string"
                                },
                                "Option": {
                                    "description": "Valid options are Equals and BeginsWith. For Path filter, valid options are Recursive and OneLevel.",
                                    "maxLength": 10,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "The value you want to search for.",
                                    "items": {
                                        "maxLength": 1024,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "maxItems": 50,
                                    "minItems": 1,
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Key"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Path": {
                        "description": "The hierarchy for the parameter. Hierarchies start with a forward slash (/) and end with the parameter name. A parameter name hierarchy can have a maximum of 15 levels. Here is an example of a hierarchy: <code>/Finance/Prod/IAD/WinServ2016/license33</code> ",
                        "maxLength": 2048,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Recursive": {
                        "description": "<p>Retrieve all parameters within a hierarchy.</p> <important> <p>If a user has access to a path, then the user can access all levels of that path. For example, if a user has permission to access path /a, then the user can also access /a/b. Even if a user has explicitly been denied access in IAM for parameter /a, they can still call the GetParametersByPath API action recursively and view /a/b.</p> </important>",
                        "type": "boolean"
                    },
                    "WithDecryption": {
                        "description": "Retrieve all parameters in a hierarchy with their value decrypted.",
                        "type": "boolean"
                    }
                },
                "required": [
                    "Path"
                ],
                "type": "object"
            },
            "GetParametersByPathResult": {
                "properties": {
                    "NextToken": {
                        "description": "The token for the next set of items to return. Use this token to get the next set of results.",
                        "type": "string"
                    },
                    "Parameters": {
                        "description": "A list of parameters found in the specified hierarchy.",
                        "items": {
                            "description": "An Amazon EC2 Systems Manager parameter in Parameter Store.",
                            "properties": {
                                "ARN": {
                                    "description": "The Amazon Resource Name (ARN) of the parameter.",
                                    "type": "string"
                                },
                                "LastModifiedDate": {
                                    "description": "Date the parameter was last changed or updated and the parameter version was created.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "The name of the parameter.",
                                    "maxLength": 2048,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Selector": {
                                    "description": "<p>Either the version number or the label used to retrieve the parameter value. Specify selectors by using one of the following formats:</p> <p>parameter_name:version</p> <p>parameter_name:label</p>",
                                    "maxLength": 128,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "SourceResult": {
                                    "description": "Applies to parameters that reference information in other AWS services. SourceResult is the raw result or response from the source.",
                                    "type": "string"
                                },
                                "Type": {
                                    "description": "The type of parameter. Valid values include the following: String, String list, Secure string.",
                                    "enum": [
                                        "String",
                                        "StringList",
                                        "SecureString"
                                    ],
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "The parameter value.",
                                    "maxLength": 4096,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Version": {
                                    "description": "The parameter version.",
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "GetParametersRequest": {
                "properties": {
                    "Names": {
                        "description": "Names of the parameters for which you want to query information.",
                        "items": {
                            "maxLength": 2048,
                            "minLength": 1,
                            "type": "string"
                        },
                        "maxItems": 10,
                        "minItems": 1,
                        "type": "array"
                    },
                    "WithDecryption": {
                        "description": "Return decrypted secure string value. Return decrypted values for secure string parameters. This flag is ignored for String and StringList parameter types.",
                        "type": "boolean"
                    }
                },
                "required": [
                    "Names"
                ],
                "type": "object"
            },
            "GetParametersResult": {
                "properties": {
                    "InvalidParameters": {
                        "description": "A list of parameters that are not formatted correctly or do not run when executed.",
                        "items": {
                            "maxLength": 2048,
                            "minLength": 1,
                            "type": "string"
                        },
                        "maxItems": 10,
                        "minItems": 1,
                        "type": "array"
                    },
                    "Parameters": {
                        "description": "A list of details for a parameter.",
                        "items": {
                            "description": "An Amazon EC2 Systems Manager parameter in Parameter Store.",
                            "properties": {
                                "ARN": {
                                    "description": "The Amazon Resource Name (ARN) of the parameter.",
                                    "type": "string"
                                },
                                "LastModifiedDate": {
                                    "description": "Date the parameter was last changed or updated and the parameter version was created.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "The name of the parameter.",
                                    "maxLength": 2048,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Selector": {
                                    "description": "<p>Either the version number or the label used to retrieve the parameter value. Specify selectors by using one of the following formats:</p> <p>parameter_name:version</p> <p>parameter_name:label</p>",
                                    "maxLength": 128,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "SourceResult": {
                                    "description": "Applies to parameters that reference information in other AWS services. SourceResult is the raw result or response from the source.",
                                    "type": "string"
                                },
                                "Type": {
                                    "description": "The type of parameter. Valid values include the following: String, String list, Secure string.",
                                    "enum": [
                                        "String",
                                        "StringList",
                                        "SecureString"
                                    ],
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "The parameter value.",
                                    "maxLength": 4096,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Version": {
                                    "description": "The parameter version.",
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "GetPatchBaselineForPatchGroupRequest": {
                "properties": {
                    "OperatingSystem": {
                        "description": "Returns he operating system rule specified for patch groups using the patch baseline.",
                        "enum": [
                            "WINDOWS",
                            "AMAZON_LINUX",
                            "AMAZON_LINUX_2",
                            "UBUNTU",
                            "REDHAT_ENTERPRISE_LINUX",
                            "SUSE",
                            "CENTOS"
                        ],
                        "type": "string"
                    },
                    "PatchGroup": {
                        "description": "The name of the patch group whose patch baseline should be retrieved.",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                        "type": "string"
                    }
                },
                "required": [
                    "PatchGroup"
                ],
                "type": "object"
            },
            "GetPatchBaselineForPatchGroupResult": {
                "properties": {
                    "BaselineId": {
                        "description": "The ID of the patch baseline that should be used for the patch group.",
                        "maxLength": 128,
                        "minLength": 20,
                        "pattern": "^[a-zA-Z0-9_\\-:/]{20,128}$",
                        "type": "string"
                    },
                    "OperatingSystem": {
                        "description": "The operating system rule specified for patch groups using the patch baseline.",
                        "enum": [
                            "WINDOWS",
                            "AMAZON_LINUX",
                            "AMAZON_LINUX_2",
                            "UBUNTU",
                            "REDHAT_ENTERPRISE_LINUX",
                            "SUSE",
                            "CENTOS"
                        ],
                        "type": "string"
                    },
                    "PatchGroup": {
                        "description": "The name of the patch group.",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "GetPatchBaselineRequest": {
                "properties": {
                    "BaselineId": {
                        "description": "The ID of the patch baseline to retrieve.",
                        "maxLength": 128,
                        "minLength": 20,
                        "pattern": "^[a-zA-Z0-9_\\-:/]{20,128}$",
                        "type": "string"
                    }
                },
                "required": [
                    "BaselineId"
                ],
                "type": "object"
            },
            "GetPatchBaselineResult": {
                "properties": {
                    "ApprovalRules": {
                        "description": "A set of rules used to include patches in the baseline.",
                        "properties": {
                            "PatchRules": {
                                "description": "The rules that make up the rule group.",
                                "items": {
                                    "description": "Defines an approval rule for a patch baseline.",
                                    "properties": {
                                        "ApproveAfterDays": {
                                            "description": "The number of days after the release date of each patch matched by the rule that the patch is marked as approved in the patch baseline. For example, a value of <code>7</code> means that patches are approved seven days after they are released. ",
                                            "maximum": 100,
                                            "minimum": 0,
                                            "type": "integer"
                                        },
                                        "ComplianceLevel": {
                                            "description": "A compliance severity level for all approved patches in a patch baseline. Valid compliance severity levels include the following: Unspecified, Critical, High, Medium, Low, and Informational.",
                                            "enum": [
                                                "CRITICAL",
                                                "HIGH",
                                                "MEDIUM",
                                                "LOW",
                                                "INFORMATIONAL",
                                                "UNSPECIFIED"
                                            ],
                                            "type": "string"
                                        },
                                        "EnableNonSecurity": {
                                            "description": "For instances identified by the approval rule filters, enables a patch baseline to apply non-security updates available in the specified repository. The default value is 'false'. Applies to Linux instances only.",
                                            "type": "boolean"
                                        },
                                        "PatchFilterGroup": {
                                            "description": "The patch filter group that defines the criteria for the rule.",
                                            "properties": {
                                                "PatchFilters": {
                                                    "description": "The set of patch filters that make up the group.",
                                                    "items": {
                                                        "description": "<p>Defines a patch filter.</p> <p>A patch filter consists of key/value pairs, but not all keys are valid for all operating system types. For example, the key <code>PRODUCT</code> is valid for all supported operating system types. The key <code>MSRC_SEVERITY</code>, however, is valid only for Windows operating systems, and the key <code>SECTION</code> is valid only for Ubuntu operating systems.</p> <p>Refer to the following sections for information about which keys may be used with each major operating system, and which values are valid for each key.</p> <p> <b>Windows Operating Systems</b> </p> <p>The supported keys for Windows operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>MSRC_SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Windows7</code> </p> </li> <li> <p> <code>Windows8</code> </p> </li> <li> <p> <code>Windows8.1</code> </p> </li> <li> <p> <code>Windows8Embedded</code> </p> </li> <li> <p> <code>Windows10</code> </p> </li> <li> <p> <code>Windows10LTSB</code> </p> </li> <li> <p> <code>WindowsServer2008</code> </p> </li> <li> <p> <code>WindowsServer2008R2</code> </p> </li> <li> <p> <code>WindowsServer2012</code> </p> </li> <li> <p> <code>WindowsServer2012R2</code> </p> </li> <li> <p> <code>WindowsServer2016</code> </p> </li> <li> <p> <code>WindowsServer2019</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>CriticalUpdates</code> </p> </li> <li> <p> <code>DefinitionUpdates</code> </p> </li> <li> <p> <code>Drivers</code> </p> </li> <li> <p> <code>FeaturePacks</code> </p> </li> <li> <p> <code>SecurityUpdates</code> </p> </li> <li> <p> <code>ServicePacks</code> </p> </li> <li> <p> <code>Tools</code> </p> </li> <li> <p> <code>UpdateRollups</code> </p> </li> <li> <p> <code>Updates</code> </p> </li> <li> <p> <code>Upgrades</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>MSRC_SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Moderate</code> </p> </li> <li> <p> <code>Low</code> </p> </li> <li> <p> <code>Unspecified</code> </p> </li> </ul> <p> <b>Ubuntu Operating Systems</b> </p> <p>The supported keys for Ubuntu operating systems are <code>PRODUCT</code>, <code>PRIORITY</code>, and <code>SECTION</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Ubuntu14.04</code> </p> </li> <li> <p> <code>Ubuntu16.04</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>PRIORITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Required</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Standard</code> </p> </li> <li> <p> <code>Optional</code> </p> </li> <li> <p> <code>Extra</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SECTION</code> </p> <p>Only the length of the key value is validated. Minimum length is 1. Maximum length is 64.</p> <p> <b>Amazon Linux Operating Systems</b> </p> <p>The supported keys for Amazon Linux operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>AmazonLinux2012.03</code> </p> </li> <li> <p> <code>AmazonLinux2012.09</code> </p> </li> <li> <p> <code>AmazonLinux2013.03</code> </p> </li> <li> <p> <code>AmazonLinux2013.09</code> </p> </li> <li> <p> <code>AmazonLinux2014.03</code> </p> </li> <li> <p> <code>AmazonLinux2014.09</code> </p> </li> <li> <p> <code>AmazonLinux2015.03</code> </p> </li> <li> <p> <code>AmazonLinux2015.09</code> </p> </li> <li> <p> <code>AmazonLinux2016.03</code> </p> </li> <li> <p> <code>AmazonLinux2016.09</code> </p> </li> <li> <p> <code>AmazonLinux2017.03</code> </p> </li> <li> <p> <code>AmazonLinux2017.09</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>Amazon Linux 2 Operating Systems</b> </p> <p>The supported keys for Amazon Linux 2 operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>AmazonLinux2</code> </p> </li> <li> <p> <code>AmazonLinux2.0</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>RedHat Enterprise Linux (RHEL) Operating Systems</b> </p> <p>The supported keys for RedHat Enterprise Linux operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>RedhatEnterpriseLinux6.5</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.6</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.7</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.8</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.9</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.0</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.1</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.2</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.3</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.4</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.5</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.6</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>SUSE Linux Enterprise Server (SLES) Operating Systems</b> </p> <p>The supported keys for SLES operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Suse12.0</code> </p> </li> <li> <p> <code>Suse12.1</code> </p> </li> <li> <p> <code>Suse12.2</code> </p> </li> <li> <p> <code>Suse12.3</code> </p> </li> <li> <p> <code>Suse12.4</code> </p> </li> <li> <p> <code>Suse12.5</code> </p> </li> <li> <p> <code>Suse12.6</code> </p> </li> <li> <p> <code>Suse12.7</code> </p> </li> <li> <p> <code>Suse12.8</code> </p> </li> <li> <p> <code>Suse12.9</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Optional</code> </p> </li> <li> <p> <code>Feature</code> </p> </li> <li> <p> <code>Document</code> </p> </li> <li> <p> <code>Yast</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Moderate</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>CentOS Operating Systems</b> </p> <p>The supported keys for CentOS operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>CentOS6.5</code> </p> </li> <li> <p> <code>CentOS6.6</code> </p> </li> <li> <p> <code>CentOS6.7</code> </p> </li> <li> <p> <code>CentOS6.8</code> </p> </li> <li> <p> <code>CentOS6.9</code> </p> </li> <li> <p> <code>CentOS7.0</code> </p> </li> <li> <p> <code>CentOS7.1</code> </p> </li> <li> <p> <code>CentOS7.2</code> </p> </li> <li> <p> <code>CentOS7.3</code> </p> </li> <li> <p> <code>CentOS7.4</code> </p> </li> <li> <p> <code>CentOS7.5</code> </p> </li> <li> <p> <code>CentOS7.6</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul>",
                                                        "properties": {
                                                            "Key": {
                                                                "description": "<p>The key for the filter.</p> <p>See <a>PatchFilter</a> for lists of valid keys for each operating system type.</p>",
                                                                "enum": [
                                                                    "PRODUCT",
                                                                    "CLASSIFICATION",
                                                                    "MSRC_SEVERITY",
                                                                    "PATCH_ID",
                                                                    "SECTION",
                                                                    "PRIORITY",
                                                                    "SEVERITY"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "Values": {
                                                                "description": "<p>The value for the filter key.</p> <p>See <a>PatchFilter</a> for lists of valid values for each key based on operating system type.</p>",
                                                                "items": {
                                                                    "maxLength": 64,
                                                                    "minLength": 1,
                                                                    "type": "string"
                                                                },
                                                                "maxItems": 20,
                                                                "minItems": 1,
                                                                "type": "array"
                                                            }
                                                        },
                                                        "required": [
                                                            "Key",
                                                            "Values"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "maxItems": 4,
                                                    "minItems": 0,
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "PatchFilters"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "PatchFilterGroup",
                                        "ApproveAfterDays"
                                    ],
                                    "type": "object"
                                },
                                "maxItems": 10,
                                "minItems": 0,
                                "type": "array"
                            }
                        },
                        "required": [
                            "PatchRules"
                        ],
                        "type": "object"
                    },
                    "ApprovedPatches": {
                        "description": "A list of explicitly approved patches for the baseline.",
                        "items": {
                            "maxLength": 100,
                            "minLength": 1,
                            "type": "string"
                        },
                        "maxItems": 50,
                        "minItems": 0,
                        "type": "array"
                    },
                    "ApprovedPatchesComplianceLevel": {
                        "description": "Returns the specified compliance severity level for approved patches in the patch baseline.",
                        "enum": [
                            "CRITICAL",
                            "HIGH",
                            "MEDIUM",
                            "LOW",
                            "INFORMATIONAL",
                            "UNSPECIFIED"
                        ],
                        "type": "string"
                    },
                    "ApprovedPatchesEnableNonSecurity": {
                        "description": "Indicates whether the list of approved patches includes non-security updates that should be applied to the instances. The default value is 'false'. Applies to Linux instances only.",
                        "type": "boolean"
                    },
                    "BaselineId": {
                        "description": "The ID of the retrieved patch baseline.",
                        "maxLength": 128,
                        "minLength": 20,
                        "pattern": "^[a-zA-Z0-9_\\-:/]{20,128}$",
                        "type": "string"
                    },
                    "CreatedDate": {
                        "description": "The date the patch baseline was created.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "Description": {
                        "description": "A description of the patch baseline.",
                        "maxLength": 1024,
                        "minLength": 1,
                        "type": "string"
                    },
                    "GlobalFilters": {
                        "description": "A set of global filters used to exclude patches from the baseline.",
                        "properties": {
                            "PatchFilters": {
                                "description": "The set of patch filters that make up the group.",
                                "items": {
                                    "description": "<p>Defines a patch filter.</p> <p>A patch filter consists of key/value pairs, but not all keys are valid for all operating system types. For example, the key <code>PRODUCT</code> is valid for all supported operating system types. The key <code>MSRC_SEVERITY</code>, however, is valid only for Windows operating systems, and the key <code>SECTION</code> is valid only for Ubuntu operating systems.</p> <p>Refer to the following sections for information about which keys may be used with each major operating system, and which values are valid for each key.</p> <p> <b>Windows Operating Systems</b> </p> <p>The supported keys for Windows operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>MSRC_SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Windows7</code> </p> </li> <li> <p> <code>Windows8</code> </p> </li> <li> <p> <code>Windows8.1</code> </p> </li> <li> <p> <code>Windows8Embedded</code> </p> </li> <li> <p> <code>Windows10</code> </p> </li> <li> <p> <code>Windows10LTSB</code> </p> </li> <li> <p> <code>WindowsServer2008</code> </p> </li> <li> <p> <code>WindowsServer2008R2</code> </p> </li> <li> <p> <code>WindowsServer2012</code> </p> </li> <li> <p> <code>WindowsServer2012R2</code> </p> </li> <li> <p> <code>WindowsServer2016</code> </p> </li> <li> <p> <code>WindowsServer2019</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>CriticalUpdates</code> </p> </li> <li> <p> <code>DefinitionUpdates</code> </p> </li> <li> <p> <code>Drivers</code> </p> </li> <li> <p> <code>FeaturePacks</code> </p> </li> <li> <p> <code>SecurityUpdates</code> </p> </li> <li> <p> <code>ServicePacks</code> </p> </li> <li> <p> <code>Tools</code> </p> </li> <li> <p> <code>UpdateRollups</code> </p> </li> <li> <p> <code>Updates</code> </p> </li> <li> <p> <code>Upgrades</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>MSRC_SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Moderate</code> </p> </li> <li> <p> <code>Low</code> </p> </li> <li> <p> <code>Unspecified</code> </p> </li> </ul> <p> <b>Ubuntu Operating Systems</b> </p> <p>The supported keys for Ubuntu operating systems are <code>PRODUCT</code>, <code>PRIORITY</code>, and <code>SECTION</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Ubuntu14.04</code> </p> </li> <li> <p> <code>Ubuntu16.04</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>PRIORITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Required</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Standard</code> </p> </li> <li> <p> <code>Optional</code> </p> </li> <li> <p> <code>Extra</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SECTION</code> </p> <p>Only the length of the key value is validated. Minimum length is 1. Maximum length is 64.</p> <p> <b>Amazon Linux Operating Systems</b> </p> <p>The supported keys for Amazon Linux operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>AmazonLinux2012.03</code> </p> </li> <li> <p> <code>AmazonLinux2012.09</code> </p> </li> <li> <p> <code>AmazonLinux2013.03</code> </p> </li> <li> <p> <code>AmazonLinux2013.09</code> </p> </li> <li> <p> <code>AmazonLinux2014.03</code> </p> </li> <li> <p> <code>AmazonLinux2014.09</code> </p> </li> <li> <p> <code>AmazonLinux2015.03</code> </p> </li> <li> <p> <code>AmazonLinux2015.09</code> </p> </li> <li> <p> <code>AmazonLinux2016.03</code> </p> </li> <li> <p> <code>AmazonLinux2016.09</code> </p> </li> <li> <p> <code>AmazonLinux2017.03</code> </p> </li> <li> <p> <code>AmazonLinux2017.09</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>Amazon Linux 2 Operating Systems</b> </p> <p>The supported keys for Amazon Linux 2 operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>AmazonLinux2</code> </p> </li> <li> <p> <code>AmazonLinux2.0</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>RedHat Enterprise Linux (RHEL) Operating Systems</b> </p> <p>The supported keys for RedHat Enterprise Linux operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>RedhatEnterpriseLinux6.5</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.6</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.7</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.8</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.9</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.0</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.1</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.2</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.3</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.4</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.5</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.6</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>SUSE Linux Enterprise Server (SLES) Operating Systems</b> </p> <p>The supported keys for SLES operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Suse12.0</code> </p> </li> <li> <p> <code>Suse12.1</code> </p> </li> <li> <p> <code>Suse12.2</code> </p> </li> <li> <p> <code>Suse12.3</code> </p> </li> <li> <p> <code>Suse12.4</code> </p> </li> <li> <p> <code>Suse12.5</code> </p> </li> <li> <p> <code>Suse12.6</code> </p> </li> <li> <p> <code>Suse12.7</code> </p> </li> <li> <p> <code>Suse12.8</code> </p> </li> <li> <p> <code>Suse12.9</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Optional</code> </p> </li> <li> <p> <code>Feature</code> </p> </li> <li> <p> <code>Document</code> </p> </li> <li> <p> <code>Yast</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Moderate</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>CentOS Operating Systems</b> </p> <p>The supported keys for CentOS operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>CentOS6.5</code> </p> </li> <li> <p> <code>CentOS6.6</code> </p> </li> <li> <p> <code>CentOS6.7</code> </p> </li> <li> <p> <code>CentOS6.8</code> </p> </li> <li> <p> <code>CentOS6.9</code> </p> </li> <li> <p> <code>CentOS7.0</code> </p> </li> <li> <p> <code>CentOS7.1</code> </p> </li> <li> <p> <code>CentOS7.2</code> </p> </li> <li> <p> <code>CentOS7.3</code> </p> </li> <li> <p> <code>CentOS7.4</code> </p> </li> <li> <p> <code>CentOS7.5</code> </p> </li> <li> <p> <code>CentOS7.6</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul>",
                                    "properties": {
                                        "Key": {
                                            "description": "<p>The key for the filter.</p> <p>See <a>PatchFilter</a> for lists of valid keys for each operating system type.</p>",
                                            "enum": [
                                                "PRODUCT",
                                                "CLASSIFICATION",
                                                "MSRC_SEVERITY",
                                                "PATCH_ID",
                                                "SECTION",
                                                "PRIORITY",
                                                "SEVERITY"
                                            ],
                                            "type": "string"
                                        },
                                        "Values": {
                                            "description": "<p>The value for the filter key.</p> <p>See <a>PatchFilter</a> for lists of valid values for each key based on operating system type.</p>",
                                            "items": {
                                                "maxLength": 64,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "maxItems": 20,
                                            "minItems": 1,
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "Key",
                                        "Values"
                                    ],
                                    "type": "object"
                                },
                                "maxItems": 4,
                                "minItems": 0,
                                "type": "array"
                            }
                        },
                        "required": [
                            "PatchFilters"
                        ],
                        "type": "object"
                    },
                    "ModifiedDate": {
                        "description": "The date the patch baseline was last modified.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The name of the patch baseline.",
                        "maxLength": 128,
                        "minLength": 3,
                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                        "type": "string"
                    },
                    "OperatingSystem": {
                        "description": "Returns the operating system specified for the patch baseline.",
                        "enum": [
                            "WINDOWS",
                            "AMAZON_LINUX",
                            "AMAZON_LINUX_2",
                            "UBUNTU",
                            "REDHAT_ENTERPRISE_LINUX",
                            "SUSE",
                            "CENTOS"
                        ],
                        "type": "string"
                    },
                    "PatchGroups": {
                        "description": "Patch groups included in the patch baseline.",
                        "items": {
                            "maxLength": 256,
                            "minLength": 1,
                            "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "RejectedPatches": {
                        "description": "A list of explicitly rejected patches for the baseline.",
                        "items": {
                            "maxLength": 100,
                            "minLength": 1,
                            "type": "string"
                        },
                        "maxItems": 50,
                        "minItems": 0,
                        "type": "array"
                    },
                    "RejectedPatchesAction": {
                        "description": "The action specified to take on patches included in the RejectedPatches list. A patch can be allowed only if it is a dependency of another package, or blocked entirely along with packages that include it as a dependency.",
                        "enum": [
                            "ALLOW_AS_DEPENDENCY",
                            "BLOCK"
                        ],
                        "type": "string"
                    },
                    "Sources": {
                        "description": "Information about the patches to use to update the instances, including target operating systems and source repositories. Applies to Linux instances only.",
                        "items": {
                            "description": "Information about the patches to use to update the instances, including target operating systems and source repository. Applies to Linux instances only.",
                            "properties": {
                                "Configuration": {
                                    "description": "<p>The value of the yum repo configuration. For example:</p> <p> <code>[main]</code> </p> <p> <code>cachedir=/var/cache/yum/$basesearch$releasever</code> </p> <p> <code>keepcache=0</code> </p> <p> <code>debuglevel=2</code> </p>",
                                    "format": "password",
                                    "maxLength": 512,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "The name specified to identify the patch source.",
                                    "pattern": "^[a-zA-Z0-9_\\-.]{3,50}$",
                                    "type": "string"
                                },
                                "Products": {
                                    "description": "The specific operating system versions a patch repository applies to, such as \"Ubuntu16.04\", \"AmazonLinux2016.09\", \"RedhatEnterpriseLinux7.2\" or \"Suse12.7\". For lists of supported product values, see <a>PatchFilter</a>.",
                                    "items": {
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "maxItems": 20,
                                    "minItems": 1,
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Name",
                                "Products",
                                "Configuration"
                            ],
                            "type": "object"
                        },
                        "maxItems": 20,
                        "minItems": 0,
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "GetServiceSettingRequest": {
                "description": "The request body of the GetServiceSetting API action.",
                "properties": {
                    "SettingId": {
                        "description": "The ID of the service setting to get.",
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "SettingId"
                ],
                "type": "object"
            },
            "GetServiceSettingResult": {
                "description": "The query result body of the GetServiceSetting API action.",
                "properties": {
                    "ServiceSetting": {
                        "description": "The query result of the current service setting.",
                        "properties": {
                            "ARN": {
                                "description": "The ARN of the service setting.",
                                "type": "string"
                            },
                            "LastModifiedDate": {
                                "description": "The last time the service setting was modified.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "LastModifiedUser": {
                                "description": "The ARN of the last modified user. This field is populated only if the setting value was overwritten.",
                                "type": "string"
                            },
                            "SettingId": {
                                "description": "The ID of the service setting.",
                                "maxLength": 1000,
                                "minLength": 1,
                                "type": "string"
                            },
                            "SettingValue": {
                                "description": "The value of the service setting.",
                                "maxLength": 4096,
                                "minLength": 1,
                                "type": "string"
                            },
                            "Status": {
                                "description": "<p>The status of the service setting. The value can be Default, Customized or PendingUpdate.</p> <ul> <li> <p>Default: The current setting uses a default value provisioned by the AWS service team.</p> </li> <li> <p>Customized: The current setting use a custom value specified by the customer.</p> </li> <li> <p>PendingUpdate: The current setting uses a default or custom value, but a setting change request is pending approval.</p> </li> </ul>",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "HierarchyLevelLimitExceededException": {},
            "HierarchyTypeMismatchException": {},
            "IPAddress": {
                "maxLength": 46,
                "minLength": 1,
                "type": "string"
            },
            "IamRole": {
                "maxLength": 64,
                "type": "string"
            },
            "IdempotencyToken": {
                "maxLength": 36,
                "minLength": 36,
                "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
                "type": "string"
            },
            "IdempotentParameterMismatch": {},
            "InstallOverrideList": {
                "maxLength": 256,
                "minLength": 1,
                "pattern": "^https://.+$|^s3://([^/]+)/(.*?([^/]+))$",
                "type": "string"
            },
            "InstanceAggregatedAssociationOverview": {
                "description": "Status information about the aggregated associations.",
                "properties": {
                    "DetailedStatus": {
                        "description": "Detailed status information about the aggregated associations.",
                        "type": "string"
                    },
                    "InstanceAssociationStatusAggregatedCount": {
                        "description": "The number of associations for the instance(s).",
                        "items": {
                            "properties": {
                                "key": {
                                    "type": "string"
                                },
                                "value": {
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "InstanceAssociation": {
                "description": "One or more association documents on the instance. ",
                "properties": {
                    "AssociationId": {
                        "description": "The association ID.",
                        "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                        "type": "string"
                    },
                    "AssociationVersion": {
                        "description": "Version information for the association on the instance.",
                        "pattern": "([$]LATEST)|([1-9][0-9]*)",
                        "type": "string"
                    },
                    "Content": {
                        "description": "The content of the association document for the instance(s).",
                        "minLength": 1,
                        "type": "string"
                    },
                    "InstanceId": {
                        "description": "The instance ID.",
                        "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "InstanceAssociationExecutionSummary": {
                "maxLength": 512,
                "minLength": 1,
                "type": "string"
            },
            "InstanceAssociationList": {
                "items": {
                    "description": "One or more association documents on the instance. ",
                    "properties": {
                        "AssociationId": {
                            "description": "The association ID.",
                            "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                            "type": "string"
                        },
                        "AssociationVersion": {
                            "description": "Version information for the association on the instance.",
                            "pattern": "([$]LATEST)|([1-9][0-9]*)",
                            "type": "string"
                        },
                        "Content": {
                            "description": "The content of the association document for the instance(s).",
                            "minLength": 1,
                            "type": "string"
                        },
                        "InstanceId": {
                            "description": "The instance ID.",
                            "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "InstanceAssociationOutputLocation": {
                "description": "An Amazon S3 bucket where you want to store the results of this request.",
                "properties": {
                    "S3Location": {
                        "description": "An Amazon S3 bucket where you want to store the results of this request.",
                        "properties": {
                            "OutputS3BucketName": {
                                "description": "The name of the Amazon S3 bucket.",
                                "maxLength": 63,
                                "minLength": 3,
                                "type": "string"
                            },
                            "OutputS3KeyPrefix": {
                                "description": "The Amazon S3 bucket subfolder.",
                                "maxLength": 500,
                                "type": "string"
                            },
                            "OutputS3Region": {
                                "description": "(Deprecated) You can no longer specify this parameter. The system ignores it. Instead, Systems Manager automatically determines the Amazon S3 bucket region.",
                                "maxLength": 20,
                                "minLength": 3,
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "InstanceAssociationOutputUrl": {
                "description": "The URL of Amazon S3 bucket where you want to store the results of this request.",
                "properties": {
                    "S3OutputUrl": {
                        "description": "The URL of Amazon S3 bucket where you want to store the results of this request.",
                        "properties": {
                            "OutputUrl": {
                                "description": "A URL for an Amazon S3 bucket where you want to store the results of this request.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "InstanceAssociationStatusAggregatedCount": {
                "items": {
                    "properties": {
                        "key": {
                            "type": "string"
                        },
                        "value": {
                            "type": "integer"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "InstanceAssociationStatusInfo": {
                "description": "Status information about the instance association.",
                "properties": {
                    "AssociationId": {
                        "description": "The association ID.",
                        "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                        "type": "string"
                    },
                    "AssociationName": {
                        "description": "The name of the association applied to the instance.",
                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                        "type": "string"
                    },
                    "AssociationVersion": {
                        "description": "The version of the association applied to the instance.",
                        "pattern": "([$]LATEST)|([1-9][0-9]*)",
                        "type": "string"
                    },
                    "DetailedStatus": {
                        "description": "Detailed status information about the instance association.",
                        "type": "string"
                    },
                    "DocumentVersion": {
                        "description": "The association document verions.",
                        "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                        "type": "string"
                    },
                    "ErrorCode": {
                        "description": "An error code returned by the request to create the association.",
                        "maxLength": 10,
                        "type": "string"
                    },
                    "ExecutionDate": {
                        "description": "The date the instance association executed. ",
                        "format": "date-time",
                        "type": "string"
                    },
                    "ExecutionSummary": {
                        "description": "Summary information about association execution.",
                        "maxLength": 512,
                        "minLength": 1,
                        "type": "string"
                    },
                    "InstanceId": {
                        "description": "The instance ID where the association was created.",
                        "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The name of the association.",
                        "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                        "type": "string"
                    },
                    "OutputUrl": {
                        "description": "A URL for an Amazon S3 bucket where you want to store the results of this request.",
                        "properties": {
                            "S3OutputUrl": {
                                "description": "The URL of Amazon S3 bucket where you want to store the results of this request.",
                                "properties": {
                                    "OutputUrl": {
                                        "description": "A URL for an Amazon S3 bucket where you want to store the results of this request.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    },
                    "Status": {
                        "description": "Status information about the instance association.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "InstanceAssociationStatusInfos": {
                "items": {
                    "description": "Status information about the instance association.",
                    "properties": {
                        "AssociationId": {
                            "description": "The association ID.",
                            "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                            "type": "string"
                        },
                        "AssociationName": {
                            "description": "The name of the association applied to the instance.",
                            "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                            "type": "string"
                        },
                        "AssociationVersion": {
                            "description": "The version of the association applied to the instance.",
                            "pattern": "([$]LATEST)|([1-9][0-9]*)",
                            "type": "string"
                        },
                        "DetailedStatus": {
                            "description": "Detailed status information about the instance association.",
                            "type": "string"
                        },
                        "DocumentVersion": {
                            "description": "The association document verions.",
                            "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                            "type": "string"
                        },
                        "ErrorCode": {
                            "description": "An error code returned by the request to create the association.",
                            "maxLength": 10,
                            "type": "string"
                        },
                        "ExecutionDate": {
                            "description": "The date the instance association executed. ",
                            "format": "date-time",
                            "type": "string"
                        },
                        "ExecutionSummary": {
                            "description": "Summary information about association execution.",
                            "maxLength": 512,
                            "minLength": 1,
                            "type": "string"
                        },
                        "InstanceId": {
                            "description": "The instance ID where the association was created.",
                            "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                            "type": "string"
                        },
                        "Name": {
                            "description": "The name of the association.",
                            "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                            "type": "string"
                        },
                        "OutputUrl": {
                            "description": "A URL for an Amazon S3 bucket where you want to store the results of this request.",
                            "properties": {
                                "S3OutputUrl": {
                                    "description": "The URL of Amazon S3 bucket where you want to store the results of this request.",
                                    "properties": {
                                        "OutputUrl": {
                                            "description": "A URL for an Amazon S3 bucket where you want to store the results of this request.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "Status": {
                            "description": "Status information about the instance association.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "InstanceCount": {
                "type": "integer"
            },
            "InstanceId": {
                "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                "type": "string"
            },
            "InstanceIdList": {
                "items": {
                    "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                    "type": "string"
                },
                "maxItems": 50,
                "minItems": 0,
                "type": "array"
            },
            "InstanceInformation": {
                "description": "Describes a filter for a specific list of instances. ",
                "properties": {
                    "ActivationId": {
                        "description": "The activation ID created by Systems Manager when the server or VM was registered.",
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "type": "string"
                    },
                    "AgentVersion": {
                        "description": "The version of SSM Agent running on your Linux instance. ",
                        "pattern": "^[0-9]{1,6}(\\.[0-9]{1,6}){2,3}$",
                        "type": "string"
                    },
                    "AssociationOverview": {
                        "description": "Information about the association.",
                        "properties": {
                            "DetailedStatus": {
                                "description": "Detailed status information about the aggregated associations.",
                                "type": "string"
                            },
                            "InstanceAssociationStatusAggregatedCount": {
                                "description": "The number of associations for the instance(s).",
                                "items": {
                                    "properties": {
                                        "key": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    },
                    "AssociationStatus": {
                        "description": "The status of the association.",
                        "type": "string"
                    },
                    "ComputerName": {
                        "description": "The fully qualified host name of the managed instance.",
                        "maxLength": 255,
                        "minLength": 1,
                        "type": "string"
                    },
                    "IPAddress": {
                        "description": "The IP address of the managed instance.",
                        "maxLength": 46,
                        "minLength": 1,
                        "type": "string"
                    },
                    "IamRole": {
                        "description": "The Amazon Identity and Access Management (IAM) role assigned to the on-premises Systems Manager managed instances. This call does not return the IAM role for Amazon EC2 instances. ",
                        "maxLength": 64,
                        "type": "string"
                    },
                    "InstanceId": {
                        "description": "The instance ID. ",
                        "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                        "type": "string"
                    },
                    "IsLatestVersion": {
                        "description": "Indicates whether latest version of SSM Agent is running on your instance. Some older versions of Windows Server use the EC2Config service to process SSM requests. For this reason, this field does not indicate whether or not the latest version is installed on Windows managed instances.",
                        "type": "boolean"
                    },
                    "LastAssociationExecutionDate": {
                        "description": "The date the association was last executed.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "LastPingDateTime": {
                        "description": "The date and time when agent last pinged Systems Manager service. ",
                        "format": "date-time",
                        "type": "string"
                    },
                    "LastSuccessfulAssociationExecutionDate": {
                        "description": "The last date the association was successfully run.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The name of the managed instance.",
                        "type": "string"
                    },
                    "PingStatus": {
                        "description": "Connection status of SSM Agent. ",
                        "enum": [
                            "Online",
                            "ConnectionLost",
                            "Inactive"
                        ],
                        "type": "string"
                    },
                    "PlatformName": {
                        "description": "The name of the operating system platform running on your instance. ",
                        "type": "string"
                    },
                    "PlatformType": {
                        "description": "The operating system platform type. ",
                        "enum": [
                            "Windows",
                            "Linux"
                        ],
                        "type": "string"
                    },
                    "PlatformVersion": {
                        "description": "The version of the OS platform running on your instance. ",
                        "type": "string"
                    },
                    "RegistrationDate": {
                        "description": "The date the server or VM was registered with AWS as a managed instance.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "ResourceType": {
                        "description": "The type of instance. Instances are either EC2 instances or managed instances. ",
                        "enum": [
                            "ManagedInstance",
                            "Document",
                            "EC2Instance"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "InstanceInformationFilter": {
                "description": "<p>Describes a filter for a specific list of instances. You can filter instances information by using tags. You specify tags by using a key-value mapping.</p> <p>Use this action instead of the <a>DescribeInstanceInformationRequest$InstanceInformationFilterList</a> method. The <code>InstanceInformationFilterList</code> method is a legacy method and does not support tags. </p>",
                "properties": {
                    "key": {
                        "description": "The name of the filter. ",
                        "enum": [
                            "InstanceIds",
                            "AgentVersion",
                            "PingStatus",
                            "PlatformTypes",
                            "ActivationIds",
                            "IamRole",
                            "ResourceType",
                            "AssociationStatus"
                        ],
                        "type": "string"
                    },
                    "valueSet": {
                        "description": "The filter values.",
                        "items": {
                            "minLength": 1,
                            "type": "string"
                        },
                        "maxItems": 100,
                        "minItems": 1,
                        "type": "array"
                    }
                },
                "required": [
                    "key",
                    "valueSet"
                ],
                "type": "object"
            },
            "InstanceInformationFilterKey": {
                "enum": [
                    "InstanceIds",
                    "AgentVersion",
                    "PingStatus",
                    "PlatformTypes",
                    "ActivationIds",
                    "IamRole",
                    "ResourceType",
                    "AssociationStatus"
                ],
                "type": "string"
            },
            "InstanceInformationFilterList": {
                "items": {
                    "description": "<p>Describes a filter for a specific list of instances. You can filter instances information by using tags. You specify tags by using a key-value mapping.</p> <p>Use this action instead of the <a>DescribeInstanceInformationRequest$InstanceInformationFilterList</a> method. The <code>InstanceInformationFilterList</code> method is a legacy method and does not support tags. </p>",
                    "properties": {
                        "key": {
                            "description": "The name of the filter. ",
                            "enum": [
                                "InstanceIds",
                                "AgentVersion",
                                "PingStatus",
                                "PlatformTypes",
                                "ActivationIds",
                                "IamRole",
                                "ResourceType",
                                "AssociationStatus"
                            ],
                            "type": "string"
                        },
                        "valueSet": {
                            "description": "The filter values.",
                            "items": {
                                "minLength": 1,
                                "type": "string"
                            },
                            "maxItems": 100,
                            "minItems": 1,
                            "type": "array"
                        }
                    },
                    "required": [
                        "key",
                        "valueSet"
                    ],
                    "type": "object"
                },
                "minItems": 0,
                "type": "array"
            },
            "InstanceInformationFilterValue": {
                "minLength": 1,
                "type": "string"
            },
            "InstanceInformationFilterValueSet": {
                "items": {
                    "minLength": 1,
                    "type": "string"
                },
                "maxItems": 100,
                "minItems": 1,
                "type": "array"
            },
            "InstanceInformationList": {
                "items": {
                    "description": "Describes a filter for a specific list of instances. ",
                    "properties": {
                        "ActivationId": {
                            "description": "The activation ID created by Systems Manager when the server or VM was registered.",
                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                            "type": "string"
                        },
                        "AgentVersion": {
                            "description": "The version of SSM Agent running on your Linux instance. ",
                            "pattern": "^[0-9]{1,6}(\\.[0-9]{1,6}){2,3}$",
                            "type": "string"
                        },
                        "AssociationOverview": {
                            "description": "Information about the association.",
                            "properties": {
                                "DetailedStatus": {
                                    "description": "Detailed status information about the aggregated associations.",
                                    "type": "string"
                                },
                                "InstanceAssociationStatusAggregatedCount": {
                                    "description": "The number of associations for the instance(s).",
                                    "items": {
                                        "properties": {
                                            "key": {
                                                "type": "string"
                                            },
                                            "value": {
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "AssociationStatus": {
                            "description": "The status of the association.",
                            "type": "string"
                        },
                        "ComputerName": {
                            "description": "The fully qualified host name of the managed instance.",
                            "maxLength": 255,
                            "minLength": 1,
                            "type": "string"
                        },
                        "IPAddress": {
                            "description": "The IP address of the managed instance.",
                            "maxLength": 46,
                            "minLength": 1,
                            "type": "string"
                        },
                        "IamRole": {
                            "description": "The Amazon Identity and Access Management (IAM) role assigned to the on-premises Systems Manager managed instances. This call does not return the IAM role for Amazon EC2 instances. ",
                            "maxLength": 64,
                            "type": "string"
                        },
                        "InstanceId": {
                            "description": "The instance ID. ",
                            "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                            "type": "string"
                        },
                        "IsLatestVersion": {
                            "description": "Indicates whether latest version of SSM Agent is running on your instance. Some older versions of Windows Server use the EC2Config service to process SSM requests. For this reason, this field does not indicate whether or not the latest version is installed on Windows managed instances.",
                            "type": "boolean"
                        },
                        "LastAssociationExecutionDate": {
                            "description": "The date the association was last executed.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "LastPingDateTime": {
                            "description": "The date and time when agent last pinged Systems Manager service. ",
                            "format": "date-time",
                            "type": "string"
                        },
                        "LastSuccessfulAssociationExecutionDate": {
                            "description": "The last date the association was successfully run.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "Name": {
                            "description": "The name of the managed instance.",
                            "type": "string"
                        },
                        "PingStatus": {
                            "description": "Connection status of SSM Agent. ",
                            "enum": [
                                "Online",
                                "ConnectionLost",
                                "Inactive"
                            ],
                            "type": "string"
                        },
                        "PlatformName": {
                            "description": "The name of the operating system platform running on your instance. ",
                            "type": "string"
                        },
                        "PlatformType": {
                            "description": "The operating system platform type. ",
                            "enum": [
                                "Windows",
                                "Linux"
                            ],
                            "type": "string"
                        },
                        "PlatformVersion": {
                            "description": "The version of the OS platform running on your instance. ",
                            "type": "string"
                        },
                        "RegistrationDate": {
                            "description": "The date the server or VM was registered with AWS as a managed instance.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "ResourceType": {
                            "description": "The type of instance. Instances are either EC2 instances or managed instances. ",
                            "enum": [
                                "ManagedInstance",
                                "Document",
                                "EC2Instance"
                            ],
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "InstanceInformationStringFilter": {
                "description": "The filters to describe or get information about your managed instances.",
                "properties": {
                    "Key": {
                        "description": "<p>The filter key name to describe your instances. For example:</p> <p>\"InstanceIds\"|\"AgentVersion\"|\"PingStatus\"|\"PlatformTypes\"|\"ActivationIds\"|\"IamRole\"|\"ResourceType\"|\"AssociationStatus\"|\"Tag Key\"</p>",
                        "minLength": 1,
                        "type": "string"
                    },
                    "Values": {
                        "description": "The filter values.",
                        "items": {
                            "minLength": 1,
                            "type": "string"
                        },
                        "maxItems": 100,
                        "minItems": 1,
                        "type": "array"
                    }
                },
                "required": [
                    "Key",
                    "Values"
                ],
                "type": "object"
            },
            "InstanceInformationStringFilterKey": {
                "minLength": 1,
                "type": "string"
            },
            "InstanceInformationStringFilterList": {
                "items": {
                    "description": "The filters to describe or get information about your managed instances.",
                    "properties": {
                        "Key": {
                            "description": "<p>The filter key name to describe your instances. For example:</p> <p>\"InstanceIds\"|\"AgentVersion\"|\"PingStatus\"|\"PlatformTypes\"|\"ActivationIds\"|\"IamRole\"|\"ResourceType\"|\"AssociationStatus\"|\"Tag Key\"</p>",
                            "minLength": 1,
                            "type": "string"
                        },
                        "Values": {
                            "description": "The filter values.",
                            "items": {
                                "minLength": 1,
                                "type": "string"
                            },
                            "maxItems": 100,
                            "minItems": 1,
                            "type": "array"
                        }
                    },
                    "required": [
                        "Key",
                        "Values"
                    ],
                    "type": "object"
                },
                "minItems": 0,
                "type": "array"
            },
            "InstancePatchState": {
                "description": "Defines the high-level patch compliance state for a managed instance, providing information about the number of installed, missing, not applicable, and failed patches along with metadata about the operation when this information was gathered for the instance.",
                "properties": {
                    "BaselineId": {
                        "description": "The ID of the patch baseline used to patch the instance.",
                        "maxLength": 128,
                        "minLength": 20,
                        "pattern": "^[a-zA-Z0-9_\\-:/]{20,128}$",
                        "type": "string"
                    },
                    "FailedCount": {
                        "description": "The number of patches from the patch baseline that were attempted to be installed during the last patching operation, but failed to install.",
                        "type": "integer"
                    },
                    "InstallOverrideList": {
                        "description": "<p>An https URL or an Amazon S3 path-style URL to a list of patches to be installed. This patch installation list, which you maintain in an Amazon S3 bucket in YAML format and specify in the SSM document <code>AWS-RunPatchBaseline</code>, overrides the patches specified by the default patch baseline.</p> <p>For more information about the <code>InstallOverrideList</code> parameter, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/patch-manager-about-aws-runpatchbaseline.html\">About the SSM Document AWS-RunPatchBaseline</a> in the <i>AWS Systems Manager User Guide</i>.</p>",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "^https://.+$|^s3://([^/]+)/(.*?([^/]+))$",
                        "type": "string"
                    },
                    "InstalledCount": {
                        "description": "The number of patches from the patch baseline that are installed on the instance.",
                        "type": "integer"
                    },
                    "InstalledOtherCount": {
                        "description": "The number of patches not specified in the patch baseline that are installed on the instance.",
                        "type": "integer"
                    },
                    "InstalledRejectedCount": {
                        "description": "<p>The number of instances with patches installed that are specified in a RejectedPatches list. Patches with a status of <i>InstalledRejected</i> were typically installed before they were added to a RejectedPatches list.</p> <note> <p>If ALLOW_AS_DEPENDENCY is the specified option for RejectedPatchesAction, the value of InstalledRejectedCount will always be 0 (zero).</p> </note>",
                        "type": "integer"
                    },
                    "InstanceId": {
                        "description": "The ID of the managed instance the high-level patch compliance information was collected for.",
                        "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                        "type": "string"
                    },
                    "MissingCount": {
                        "description": "The number of patches from the patch baseline that are applicable for the instance but aren't currently installed.",
                        "type": "integer"
                    },
                    "NotApplicableCount": {
                        "description": "The number of patches from the patch baseline that aren't applicable for the instance and hence aren't installed on the instance.",
                        "type": "integer"
                    },
                    "Operation": {
                        "description": "The type of patching operation that was performed: SCAN (assess patch compliance state) or INSTALL (install missing patches).",
                        "enum": [
                            "Scan",
                            "Install"
                        ],
                        "type": "string"
                    },
                    "OperationEndTime": {
                        "description": "The time the most recent patching operation completed on the instance.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "OperationStartTime": {
                        "description": "The time the most recent patching operation was started on the instance.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "OwnerInformation": {
                        "description": "Placeholder information. This field will always be empty in the current release of the service.",
                        "format": "password",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "PatchGroup": {
                        "description": "The name of the patch group the managed instance belongs to.",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                        "type": "string"
                    },
                    "SnapshotId": {
                        "description": "The ID of the patch baseline snapshot used during the patching operation when this compliance data was collected.",
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                        "type": "string"
                    }
                },
                "required": [
                    "InstanceId",
                    "PatchGroup",
                    "BaselineId",
                    "OperationStartTime",
                    "OperationEndTime",
                    "Operation"
                ],
                "type": "object"
            },
            "InstancePatchStateFilter": {
                "description": "Defines a filter used in DescribeInstancePatchStatesForPatchGroup used to scope down the information returned by the API.",
                "properties": {
                    "Key": {
                        "description": "The key for the filter. Supported values are FailedCount, InstalledCount, InstalledOtherCount, MissingCount and NotApplicableCount.",
                        "maxLength": 200,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Type": {
                        "description": "The type of comparison that should be performed for the value: Equal, NotEqual, LessThan or GreaterThan.",
                        "enum": [
                            "Equal",
                            "NotEqual",
                            "LessThan",
                            "GreaterThan"
                        ],
                        "type": "string"
                    },
                    "Values": {
                        "description": "The value for the filter, must be an integer greater than or equal to 0.",
                        "items": {
                            "type": "string"
                        },
                        "maxItems": 1,
                        "minItems": 1,
                        "type": "array"
                    }
                },
                "required": [
                    "Key",
                    "Values",
                    "Type"
                ],
                "type": "object"
            },
            "InstancePatchStateFilterKey": {
                "maxLength": 200,
                "minLength": 1,
                "type": "string"
            },
            "InstancePatchStateFilterList": {
                "items": {
                    "description": "Defines a filter used in DescribeInstancePatchStatesForPatchGroup used to scope down the information returned by the API.",
                    "properties": {
                        "Key": {
                            "description": "The key for the filter. Supported values are FailedCount, InstalledCount, InstalledOtherCount, MissingCount and NotApplicableCount.",
                            "maxLength": 200,
                            "minLength": 1,
                            "type": "string"
                        },
                        "Type": {
                            "description": "The type of comparison that should be performed for the value: Equal, NotEqual, LessThan or GreaterThan.",
                            "enum": [
                                "Equal",
                                "NotEqual",
                                "LessThan",
                                "GreaterThan"
                            ],
                            "type": "string"
                        },
                        "Values": {
                            "description": "The value for the filter, must be an integer greater than or equal to 0.",
                            "items": {
                                "type": "string"
                            },
                            "maxItems": 1,
                            "minItems": 1,
                            "type": "array"
                        }
                    },
                    "required": [
                        "Key",
                        "Values",
                        "Type"
                    ],
                    "type": "object"
                },
                "maxItems": 4,
                "minItems": 0,
                "type": "array"
            },
            "InstancePatchStateFilterValue": {
                "type": "string"
            },
            "InstancePatchStateFilterValues": {
                "items": {
                    "type": "string"
                },
                "maxItems": 1,
                "minItems": 1,
                "type": "array"
            },
            "InstancePatchStateList": {
                "items": {
                    "description": "Defines the high-level patch compliance state for a managed instance, providing information about the number of installed, missing, not applicable, and failed patches along with metadata about the operation when this information was gathered for the instance.",
                    "properties": {
                        "BaselineId": {
                            "description": "The ID of the patch baseline used to patch the instance.",
                            "maxLength": 128,
                            "minLength": 20,
                            "pattern": "^[a-zA-Z0-9_\\-:/]{20,128}$",
                            "type": "string"
                        },
                        "FailedCount": {
                            "description": "The number of patches from the patch baseline that were attempted to be installed during the last patching operation, but failed to install.",
                            "type": "integer"
                        },
                        "InstallOverrideList": {
                            "description": "<p>An https URL or an Amazon S3 path-style URL to a list of patches to be installed. This patch installation list, which you maintain in an Amazon S3 bucket in YAML format and specify in the SSM document <code>AWS-RunPatchBaseline</code>, overrides the patches specified by the default patch baseline.</p> <p>For more information about the <code>InstallOverrideList</code> parameter, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/patch-manager-about-aws-runpatchbaseline.html\">About the SSM Document AWS-RunPatchBaseline</a> in the <i>AWS Systems Manager User Guide</i>.</p>",
                            "maxLength": 256,
                            "minLength": 1,
                            "pattern": "^https://.+$|^s3://([^/]+)/(.*?([^/]+))$",
                            "type": "string"
                        },
                        "InstalledCount": {
                            "description": "The number of patches from the patch baseline that are installed on the instance.",
                            "type": "integer"
                        },
                        "InstalledOtherCount": {
                            "description": "The number of patches not specified in the patch baseline that are installed on the instance.",
                            "type": "integer"
                        },
                        "InstalledRejectedCount": {
                            "description": "<p>The number of instances with patches installed that are specified in a RejectedPatches list. Patches with a status of <i>InstalledRejected</i> were typically installed before they were added to a RejectedPatches list.</p> <note> <p>If ALLOW_AS_DEPENDENCY is the specified option for RejectedPatchesAction, the value of InstalledRejectedCount will always be 0 (zero).</p> </note>",
                            "type": "integer"
                        },
                        "InstanceId": {
                            "description": "The ID of the managed instance the high-level patch compliance information was collected for.",
                            "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                            "type": "string"
                        },
                        "MissingCount": {
                            "description": "The number of patches from the patch baseline that are applicable for the instance but aren't currently installed.",
                            "type": "integer"
                        },
                        "NotApplicableCount": {
                            "description": "The number of patches from the patch baseline that aren't applicable for the instance and hence aren't installed on the instance.",
                            "type": "integer"
                        },
                        "Operation": {
                            "description": "The type of patching operation that was performed: SCAN (assess patch compliance state) or INSTALL (install missing patches).",
                            "enum": [
                                "Scan",
                                "Install"
                            ],
                            "type": "string"
                        },
                        "OperationEndTime": {
                            "description": "The time the most recent patching operation completed on the instance.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "OperationStartTime": {
                            "description": "The time the most recent patching operation was started on the instance.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "OwnerInformation": {
                            "description": "Placeholder information. This field will always be empty in the current release of the service.",
                            "format": "password",
                            "maxLength": 128,
                            "minLength": 1,
                            "type": "string"
                        },
                        "PatchGroup": {
                            "description": "The name of the patch group the managed instance belongs to.",
                            "maxLength": 256,
                            "minLength": 1,
                            "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                            "type": "string"
                        },
                        "SnapshotId": {
                            "description": "The ID of the patch baseline snapshot used during the patching operation when this compliance data was collected.",
                            "maxLength": 36,
                            "minLength": 36,
                            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                            "type": "string"
                        }
                    },
                    "required": [
                        "InstanceId",
                        "PatchGroup",
                        "BaselineId",
                        "OperationStartTime",
                        "OperationEndTime",
                        "Operation"
                    ],
                    "type": "object"
                },
                "type": "array"
            },
            "InstancePatchStateOperatorType": {
                "enum": [
                    "Equal",
                    "NotEqual",
                    "LessThan",
                    "GreaterThan"
                ],
                "type": "string"
            },
            "InstancePatchStatesList": {
                "items": {
                    "description": "Defines the high-level patch compliance state for a managed instance, providing information about the number of installed, missing, not applicable, and failed patches along with metadata about the operation when this information was gathered for the instance.",
                    "properties": {
                        "BaselineId": {
                            "description": "The ID of the patch baseline used to patch the instance.",
                            "maxLength": 128,
                            "minLength": 20,
                            "pattern": "^[a-zA-Z0-9_\\-:/]{20,128}$",
                            "type": "string"
                        },
                        "FailedCount": {
                            "description": "The number of patches from the patch baseline that were attempted to be installed during the last patching operation, but failed to install.",
                            "type": "integer"
                        },
                        "InstallOverrideList": {
                            "description": "<p>An https URL or an Amazon S3 path-style URL to a list of patches to be installed. This patch installation list, which you maintain in an Amazon S3 bucket in YAML format and specify in the SSM document <code>AWS-RunPatchBaseline</code>, overrides the patches specified by the default patch baseline.</p> <p>For more information about the <code>InstallOverrideList</code> parameter, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/patch-manager-about-aws-runpatchbaseline.html\">About the SSM Document AWS-RunPatchBaseline</a> in the <i>AWS Systems Manager User Guide</i>.</p>",
                            "maxLength": 256,
                            "minLength": 1,
                            "pattern": "^https://.+$|^s3://([^/]+)/(.*?([^/]+))$",
                            "type": "string"
                        },
                        "InstalledCount": {
                            "description": "The number of patches from the patch baseline that are installed on the instance.",
                            "type": "integer"
                        },
                        "InstalledOtherCount": {
                            "description": "The number of patches not specified in the patch baseline that are installed on the instance.",
                            "type": "integer"
                        },
                        "InstalledRejectedCount": {
                            "description": "<p>The number of instances with patches installed that are specified in a RejectedPatches list. Patches with a status of <i>InstalledRejected</i> were typically installed before they were added to a RejectedPatches list.</p> <note> <p>If ALLOW_AS_DEPENDENCY is the specified option for RejectedPatchesAction, the value of InstalledRejectedCount will always be 0 (zero).</p> </note>",
                            "type": "integer"
                        },
                        "InstanceId": {
                            "description": "The ID of the managed instance the high-level patch compliance information was collected for.",
                            "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                            "type": "string"
                        },
                        "MissingCount": {
                            "description": "The number of patches from the patch baseline that are applicable for the instance but aren't currently installed.",
                            "type": "integer"
                        },
                        "NotApplicableCount": {
                            "description": "The number of patches from the patch baseline that aren't applicable for the instance and hence aren't installed on the instance.",
                            "type": "integer"
                        },
                        "Operation": {
                            "description": "The type of patching operation that was performed: SCAN (assess patch compliance state) or INSTALL (install missing patches).",
                            "enum": [
                                "Scan",
                                "Install"
                            ],
                            "type": "string"
                        },
                        "OperationEndTime": {
                            "description": "The time the most recent patching operation completed on the instance.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "OperationStartTime": {
                            "description": "The time the most recent patching operation was started on the instance.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "OwnerInformation": {
                            "description": "Placeholder information. This field will always be empty in the current release of the service.",
                            "format": "password",
                            "maxLength": 128,
                            "minLength": 1,
                            "type": "string"
                        },
                        "PatchGroup": {
                            "description": "The name of the patch group the managed instance belongs to.",
                            "maxLength": 256,
                            "minLength": 1,
                            "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                            "type": "string"
                        },
                        "SnapshotId": {
                            "description": "The ID of the patch baseline snapshot used during the patching operation when this compliance data was collected.",
                            "maxLength": 36,
                            "minLength": 36,
                            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                            "type": "string"
                        }
                    },
                    "required": [
                        "InstanceId",
                        "PatchGroup",
                        "BaselineId",
                        "OperationStartTime",
                        "OperationEndTime",
                        "Operation"
                    ],
                    "type": "object"
                },
                "maxItems": 5,
                "minItems": 1,
                "type": "array"
            },
            "InstanceTagName": {
                "maxLength": 255,
                "type": "string"
            },
            "InstancesCount": {
                "type": "integer"
            },
            "Integer": {
                "type": "integer"
            },
            "InternalServerError": {},
            "InvalidActivation": {},
            "InvalidActivationId": {},
            "InvalidAggregatorException": {},
            "InvalidAllowedPatternException": {},
            "InvalidAssociation": {},
            "InvalidAssociationVersion": {},
            "InvalidAutomationExecutionParametersException": {},
            "InvalidAutomationSignalException": {},
            "InvalidAutomationStatusUpdateException": {},
            "InvalidCommandId": {},
            "InvalidDeleteInventoryParametersException": {},
            "InvalidDeletionIdException": {},
            "InvalidDocument": {},
            "InvalidDocumentContent": {},
            "InvalidDocumentOperation": {},
            "InvalidDocumentSchemaVersion": {},
            "InvalidDocumentVersion": {},
            "InvalidFilter": {},
            "InvalidFilterKey": {},
            "InvalidFilterOption": {},
            "InvalidFilterValue": {},
            "InvalidInstanceId": {},
            "InvalidInstanceInformationFilterValue": {},
            "InvalidInventoryGroupException": {},
            "InvalidInventoryItemContextException": {},
            "InvalidInventoryRequestException": {},
            "InvalidItemContentException": {},
            "InvalidKeyId": {},
            "InvalidNextToken": {},
            "InvalidNotificationConfig": {},
            "InvalidOptionException": {},
            "InvalidOutputFolder": {},
            "InvalidOutputLocation": {},
            "InvalidParameters": {},
            "InvalidPermissionType": {},
            "InvalidPluginName": {},
            "InvalidResourceId": {},
            "InvalidResourceType": {},
            "InvalidResultAttributeException": {},
            "InvalidRole": {},
            "InvalidSchedule": {},
            "InvalidTarget": {},
            "InvalidTypeNameException": {},
            "InvalidUpdate": {},
            "InventoryAggregator": {
                "description": "Specifies the inventory type and attribute for the aggregation execution.",
                "properties": {
                    "Aggregators": {
                        "description": "Nested aggregators to further refine aggregation for an inventory type."
                    },
                    "Expression": {
                        "description": "The inventory type and attribute name for aggregation.",
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Groups": {
                        "description": "A user-defined set of one or more filters on which to aggregate inventory data. Groups return a count of resources that match and don't match the specified criteria.",
                        "items": {
                            "description": "A user-defined set of one or more filters on which to aggregate inventory data. Groups return a count of resources that match and don't match the specified criteria.",
                            "properties": {
                                "Filters": {
                                    "description": "Filters define the criteria for the group. The <code>matchingCount</code> field displays the number of resources that match the criteria. The <code>notMatchingCount</code> field displays the number of resources that don't match the criteria. ",
                                    "items": {
                                        "description": "One or more filters. Use a filter to return a more specific list of results.",
                                        "properties": {
                                            "Key": {
                                                "description": "The name of the filter key.",
                                                "maxLength": 200,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "Type": {
                                                "description": "The type of filter. Valid values include the following: \"Equal\"|\"NotEqual\"|\"BeginWith\"|\"LessThan\"|\"GreaterThan\"",
                                                "enum": [
                                                    "Equal",
                                                    "NotEqual",
                                                    "BeginWith",
                                                    "LessThan",
                                                    "GreaterThan",
                                                    "Exists"
                                                ],
                                                "type": "string"
                                            },
                                            "Values": {
                                                "description": "Inventory filter values. Example: inventory filter where instance IDs are specified as values Key=AWS:InstanceInformation.InstanceId,Values= i-a12b3c4d5e6g, i-1a2b3c4d5e6,Type=Equal ",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "maxItems": 40,
                                                "minItems": 1,
                                                "type": "array"
                                            }
                                        },
                                        "required": [
                                            "Key",
                                            "Values"
                                        ],
                                        "type": "object"
                                    },
                                    "maxItems": 5,
                                    "minItems": 1,
                                    "type": "array"
                                },
                                "Name": {
                                    "description": "The name of the group.",
                                    "maxLength": 200,
                                    "minLength": 1,
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Name",
                                "Filters"
                            ],
                            "type": "object"
                        },
                        "maxItems": 10,
                        "minItems": 1,
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "InventoryAggregatorExpression": {
                "maxLength": 1000,
                "minLength": 1,
                "type": "string"
            },
            "InventoryAggregatorList": {
                "items": {},
                "maxItems": 10,
                "minItems": 1,
                "type": "array"
            },
            "InventoryAttributeDataType": {
                "enum": [
                    "string",
                    "number"
                ],
                "type": "string"
            },
            "InventoryDeletionId": {
                "type": "string"
            },
            "InventoryDeletionLastStatusMessage": {
                "type": "string"
            },
            "InventoryDeletionLastStatusUpdateTime": {
                "format": "date-time",
                "type": "string"
            },
            "InventoryDeletionStartTime": {
                "format": "date-time",
                "type": "string"
            },
            "InventoryDeletionStatus": {
                "enum": [
                    "InProgress",
                    "Complete"
                ],
                "type": "string"
            },
            "InventoryDeletionStatusItem": {
                "description": "Status information returned by the <code>DeleteInventory</code> action.",
                "properties": {
                    "DeletionId": {
                        "description": "The deletion ID returned by the <code>DeleteInventory</code> action.",
                        "type": "string"
                    },
                    "DeletionStartTime": {
                        "description": "The UTC timestamp when the delete operation started.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "DeletionSummary": {
                        "description": "Information about the delete operation. For more information about this summary, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-inventory-delete.html#sysman-inventory-delete-summary\">Understanding the Delete Inventory Summary</a> in the <i>AWS Systems Manager User Guide</i>.",
                        "properties": {
                            "RemainingCount": {
                                "description": "Remaining number of items to delete.",
                                "type": "integer"
                            },
                            "SummaryItems": {
                                "description": "A list of counts and versions for deleted items.",
                                "items": {
                                    "description": "Either a count, remaining count, or a version number in a delete inventory summary.",
                                    "properties": {
                                        "Count": {
                                            "description": "A count of the number of deleted items.",
                                            "type": "integer"
                                        },
                                        "RemainingCount": {
                                            "description": "The remaining number of items to delete.",
                                            "type": "integer"
                                        },
                                        "Version": {
                                            "description": "The inventory type version.",
                                            "pattern": "^([0-9]{1,6})(\\.[0-9]{1,6})$",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "TotalCount": {
                                "description": "The total number of items to delete. This count does not change during the delete operation.",
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    },
                    "LastStatus": {
                        "description": "The status of the operation. Possible values are InProgress and Complete.",
                        "enum": [
                            "InProgress",
                            "Complete"
                        ],
                        "type": "string"
                    },
                    "LastStatusMessage": {
                        "description": "Information about the status.",
                        "type": "string"
                    },
                    "LastStatusUpdateTime": {
                        "description": "The UTC timestamp of when the last status report.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "TypeName": {
                        "description": "The name of the inventory data type.",
                        "maxLength": 100,
                        "minLength": 1,
                        "pattern": "^(AWS|Custom):.*$",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "InventoryDeletionSummary": {
                "description": "Information about the delete operation.",
                "properties": {
                    "RemainingCount": {
                        "description": "Remaining number of items to delete.",
                        "type": "integer"
                    },
                    "SummaryItems": {
                        "description": "A list of counts and versions for deleted items.",
                        "items": {
                            "description": "Either a count, remaining count, or a version number in a delete inventory summary.",
                            "properties": {
                                "Count": {
                                    "description": "A count of the number of deleted items.",
                                    "type": "integer"
                                },
                                "RemainingCount": {
                                    "description": "The remaining number of items to delete.",
                                    "type": "integer"
                                },
                                "Version": {
                                    "description": "The inventory type version.",
                                    "pattern": "^([0-9]{1,6})(\\.[0-9]{1,6})$",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "TotalCount": {
                        "description": "The total number of items to delete. This count does not change during the delete operation.",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "InventoryDeletionSummaryItem": {
                "description": "Either a count, remaining count, or a version number in a delete inventory summary.",
                "properties": {
                    "Count": {
                        "description": "A count of the number of deleted items.",
                        "type": "integer"
                    },
                    "RemainingCount": {
                        "description": "The remaining number of items to delete.",
                        "type": "integer"
                    },
                    "Version": {
                        "description": "The inventory type version.",
                        "pattern": "^([0-9]{1,6})(\\.[0-9]{1,6})$",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "InventoryDeletionSummaryItems": {
                "items": {
                    "description": "Either a count, remaining count, or a version number in a delete inventory summary.",
                    "properties": {
                        "Count": {
                            "description": "A count of the number of deleted items.",
                            "type": "integer"
                        },
                        "RemainingCount": {
                            "description": "The remaining number of items to delete.",
                            "type": "integer"
                        },
                        "Version": {
                            "description": "The inventory type version.",
                            "pattern": "^([0-9]{1,6})(\\.[0-9]{1,6})$",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "InventoryDeletionsList": {
                "items": {
                    "description": "Status information returned by the <code>DeleteInventory</code> action.",
                    "properties": {
                        "DeletionId": {
                            "description": "The deletion ID returned by the <code>DeleteInventory</code> action.",
                            "type": "string"
                        },
                        "DeletionStartTime": {
                            "description": "The UTC timestamp when the delete operation started.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "DeletionSummary": {
                            "description": "Information about the delete operation. For more information about this summary, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-inventory-delete.html#sysman-inventory-delete-summary\">Understanding the Delete Inventory Summary</a> in the <i>AWS Systems Manager User Guide</i>.",
                            "properties": {
                                "RemainingCount": {
                                    "description": "Remaining number of items to delete.",
                                    "type": "integer"
                                },
                                "SummaryItems": {
                                    "description": "A list of counts and versions for deleted items.",
                                    "items": {
                                        "description": "Either a count, remaining count, or a version number in a delete inventory summary.",
                                        "properties": {
                                            "Count": {
                                                "description": "A count of the number of deleted items.",
                                                "type": "integer"
                                            },
                                            "RemainingCount": {
                                                "description": "The remaining number of items to delete.",
                                                "type": "integer"
                                            },
                                            "Version": {
                                                "description": "The inventory type version.",
                                                "pattern": "^([0-9]{1,6})(\\.[0-9]{1,6})$",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "TotalCount": {
                                    "description": "The total number of items to delete. This count does not change during the delete operation.",
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        },
                        "LastStatus": {
                            "description": "The status of the operation. Possible values are InProgress and Complete.",
                            "enum": [
                                "InProgress",
                                "Complete"
                            ],
                            "type": "string"
                        },
                        "LastStatusMessage": {
                            "description": "Information about the status.",
                            "type": "string"
                        },
                        "LastStatusUpdateTime": {
                            "description": "The UTC timestamp of when the last status report.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "TypeName": {
                            "description": "The name of the inventory data type.",
                            "maxLength": 100,
                            "minLength": 1,
                            "pattern": "^(AWS|Custom):.*$",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "InventoryFilter": {
                "description": "One or more filters. Use a filter to return a more specific list of results.",
                "properties": {
                    "Key": {
                        "description": "The name of the filter key.",
                        "maxLength": 200,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Type": {
                        "description": "The type of filter. Valid values include the following: \"Equal\"|\"NotEqual\"|\"BeginWith\"|\"LessThan\"|\"GreaterThan\"",
                        "enum": [
                            "Equal",
                            "NotEqual",
                            "BeginWith",
                            "LessThan",
                            "GreaterThan",
                            "Exists"
                        ],
                        "type": "string"
                    },
                    "Values": {
                        "description": "Inventory filter values. Example: inventory filter where instance IDs are specified as values Key=AWS:InstanceInformation.InstanceId,Values= i-a12b3c4d5e6g, i-1a2b3c4d5e6,Type=Equal ",
                        "items": {
                            "type": "string"
                        },
                        "maxItems": 40,
                        "minItems": 1,
                        "type": "array"
                    }
                },
                "required": [
                    "Key",
                    "Values"
                ],
                "type": "object"
            },
            "InventoryFilterKey": {
                "maxLength": 200,
                "minLength": 1,
                "type": "string"
            },
            "InventoryFilterList": {
                "items": {
                    "description": "One or more filters. Use a filter to return a more specific list of results.",
                    "properties": {
                        "Key": {
                            "description": "The name of the filter key.",
                            "maxLength": 200,
                            "minLength": 1,
                            "type": "string"
                        },
                        "Type": {
                            "description": "The type of filter. Valid values include the following: \"Equal\"|\"NotEqual\"|\"BeginWith\"|\"LessThan\"|\"GreaterThan\"",
                            "enum": [
                                "Equal",
                                "NotEqual",
                                "BeginWith",
                                "LessThan",
                                "GreaterThan",
                                "Exists"
                            ],
                            "type": "string"
                        },
                        "Values": {
                            "description": "Inventory filter values. Example: inventory filter where instance IDs are specified as values Key=AWS:InstanceInformation.InstanceId,Values= i-a12b3c4d5e6g, i-1a2b3c4d5e6,Type=Equal ",
                            "items": {
                                "type": "string"
                            },
                            "maxItems": 40,
                            "minItems": 1,
                            "type": "array"
                        }
                    },
                    "required": [
                        "Key",
                        "Values"
                    ],
                    "type": "object"
                },
                "maxItems": 5,
                "minItems": 1,
                "type": "array"
            },
            "InventoryFilterValue": {
                "type": "string"
            },
            "InventoryFilterValueList": {
                "items": {
                    "type": "string"
                },
                "maxItems": 40,
                "minItems": 1,
                "type": "array"
            },
            "InventoryGroup": {
                "description": "A user-defined set of one or more filters on which to aggregate inventory data. Groups return a count of resources that match and don't match the specified criteria.",
                "properties": {
                    "Filters": {
                        "description": "Filters define the criteria for the group. The <code>matchingCount</code> field displays the number of resources that match the criteria. The <code>notMatchingCount</code> field displays the number of resources that don't match the criteria. ",
                        "items": {
                            "description": "One or more filters. Use a filter to return a more specific list of results.",
                            "properties": {
                                "Key": {
                                    "description": "The name of the filter key.",
                                    "maxLength": 200,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Type": {
                                    "description": "The type of filter. Valid values include the following: \"Equal\"|\"NotEqual\"|\"BeginWith\"|\"LessThan\"|\"GreaterThan\"",
                                    "enum": [
                                        "Equal",
                                        "NotEqual",
                                        "BeginWith",
                                        "LessThan",
                                        "GreaterThan",
                                        "Exists"
                                    ],
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "Inventory filter values. Example: inventory filter where instance IDs are specified as values Key=AWS:InstanceInformation.InstanceId,Values= i-a12b3c4d5e6g, i-1a2b3c4d5e6,Type=Equal ",
                                    "items": {
                                        "type": "string"
                                    },
                                    "maxItems": 40,
                                    "minItems": 1,
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Key",
                                "Values"
                            ],
                            "type": "object"
                        },
                        "maxItems": 5,
                        "minItems": 1,
                        "type": "array"
                    },
                    "Name": {
                        "description": "The name of the group.",
                        "maxLength": 200,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "Name",
                    "Filters"
                ],
                "type": "object"
            },
            "InventoryGroupList": {
                "items": {
                    "description": "A user-defined set of one or more filters on which to aggregate inventory data. Groups return a count of resources that match and don't match the specified criteria.",
                    "properties": {
                        "Filters": {
                            "description": "Filters define the criteria for the group. The <code>matchingCount</code> field displays the number of resources that match the criteria. The <code>notMatchingCount</code> field displays the number of resources that don't match the criteria. ",
                            "items": {
                                "description": "One or more filters. Use a filter to return a more specific list of results.",
                                "properties": {
                                    "Key": {
                                        "description": "The name of the filter key.",
                                        "maxLength": 200,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "Type": {
                                        "description": "The type of filter. Valid values include the following: \"Equal\"|\"NotEqual\"|\"BeginWith\"|\"LessThan\"|\"GreaterThan\"",
                                        "enum": [
                                            "Equal",
                                            "NotEqual",
                                            "BeginWith",
                                            "LessThan",
                                            "GreaterThan",
                                            "Exists"
                                        ],
                                        "type": "string"
                                    },
                                    "Values": {
                                        "description": "Inventory filter values. Example: inventory filter where instance IDs are specified as values Key=AWS:InstanceInformation.InstanceId,Values= i-a12b3c4d5e6g, i-1a2b3c4d5e6,Type=Equal ",
                                        "items": {
                                            "type": "string"
                                        },
                                        "maxItems": 40,
                                        "minItems": 1,
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "Key",
                                    "Values"
                                ],
                                "type": "object"
                            },
                            "maxItems": 5,
                            "minItems": 1,
                            "type": "array"
                        },
                        "Name": {
                            "description": "The name of the group.",
                            "maxLength": 200,
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    "required": [
                        "Name",
                        "Filters"
                    ],
                    "type": "object"
                },
                "maxItems": 10,
                "minItems": 1,
                "type": "array"
            },
            "InventoryGroupName": {
                "maxLength": 200,
                "minLength": 1,
                "type": "string"
            },
            "InventoryItem": {
                "description": "Information collected from managed instances based on your inventory policy document",
                "properties": {
                    "CaptureTime": {
                        "description": "The time the inventory information was collected.",
                        "pattern": "^(20)[0-9][0-9]-(0[1-9]|1[012])-([12][0-9]|3[01]|0[1-9])(T)(2[0-3]|[0-1][0-9])(:[0-5][0-9])(:[0-5][0-9])(Z)$",
                        "type": "string"
                    },
                    "Content": {
                        "description": "The inventory data of the inventory type.",
                        "items": {
                            "items": {
                                "properties": {
                                    "key": {
                                        "maxLength": 64,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "value": {
                                        "maxLength": 4096,
                                        "minLength": 0,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "maxItems": 50,
                            "minItems": 0,
                            "type": "array"
                        },
                        "maxItems": 10000,
                        "minItems": 0,
                        "type": "array"
                    },
                    "ContentHash": {
                        "description": "MD5 hash of the inventory item type contents. The content hash is used to determine whether to update inventory information. The PutInventory API does not update the inventory item type contents if the MD5 hash has not changed since last update. ",
                        "maxLength": 256,
                        "type": "string"
                    },
                    "Context": {
                        "description": "A map of associated properties for a specified inventory type. For example, with this attribute, you can specify the <code>ExecutionId</code>, <code>ExecutionType</code>, <code>ComplianceType</code> properties of the <code>AWS:ComplianceItem</code> type.",
                        "items": {
                            "properties": {
                                "key": {
                                    "maxLength": 64,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "value": {
                                    "maxLength": 4096,
                                    "minLength": 0,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 50,
                        "minItems": 0,
                        "type": "array"
                    },
                    "SchemaVersion": {
                        "description": "The schema version for the inventory item.",
                        "pattern": "^([0-9]{1,6})(\\.[0-9]{1,6})$",
                        "type": "string"
                    },
                    "TypeName": {
                        "description": "The name of the inventory type. Default inventory item type names start with AWS. Custom inventory type names will start with Custom. Default inventory item types include the following: AWS:AWSComponent, AWS:Application, AWS:InstanceInformation, AWS:Network, and AWS:WindowsUpdate.",
                        "maxLength": 100,
                        "minLength": 1,
                        "pattern": "^(AWS|Custom):.*$",
                        "type": "string"
                    }
                },
                "required": [
                    "TypeName",
                    "SchemaVersion",
                    "CaptureTime"
                ],
                "type": "object"
            },
            "InventoryItemAttribute": {
                "description": "Attributes are the entries within the inventory item content. It contains name and value.",
                "properties": {
                    "DataType": {
                        "description": "The data type of the inventory item attribute. ",
                        "enum": [
                            "string",
                            "number"
                        ],
                        "type": "string"
                    },
                    "Name": {
                        "description": "Name of the inventory item attribute.",
                        "type": "string"
                    }
                },
                "required": [
                    "Name",
                    "DataType"
                ],
                "type": "object"
            },
            "InventoryItemAttributeList": {
                "items": {
                    "description": "Attributes are the entries within the inventory item content. It contains name and value.",
                    "properties": {
                        "DataType": {
                            "description": "The data type of the inventory item attribute. ",
                            "enum": [
                                "string",
                                "number"
                            ],
                            "type": "string"
                        },
                        "Name": {
                            "description": "Name of the inventory item attribute.",
                            "type": "string"
                        }
                    },
                    "required": [
                        "Name",
                        "DataType"
                    ],
                    "type": "object"
                },
                "maxItems": 50,
                "minItems": 1,
                "type": "array"
            },
            "InventoryItemAttributeName": {
                "type": "string"
            },
            "InventoryItemCaptureTime": {
                "pattern": "^(20)[0-9][0-9]-(0[1-9]|1[012])-([12][0-9]|3[01]|0[1-9])(T)(2[0-3]|[0-1][0-9])(:[0-5][0-9])(:[0-5][0-9])(Z)$",
                "type": "string"
            },
            "InventoryItemContentContext": {
                "items": {
                    "properties": {
                        "key": {
                            "maxLength": 64,
                            "minLength": 1,
                            "type": "string"
                        },
                        "value": {
                            "maxLength": 4096,
                            "minLength": 0,
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "maxItems": 50,
                "minItems": 0,
                "type": "array"
            },
            "InventoryItemContentHash": {
                "maxLength": 256,
                "type": "string"
            },
            "InventoryItemEntry": {
                "items": {
                    "properties": {
                        "key": {
                            "maxLength": 64,
                            "minLength": 1,
                            "type": "string"
                        },
                        "value": {
                            "maxLength": 4096,
                            "minLength": 0,
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "maxItems": 50,
                "minItems": 0,
                "type": "array"
            },
            "InventoryItemEntryList": {
                "items": {
                    "items": {
                        "properties": {
                            "key": {
                                "maxLength": 64,
                                "minLength": 1,
                                "type": "string"
                            },
                            "value": {
                                "maxLength": 4096,
                                "minLength": 0,
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "maxItems": 50,
                    "minItems": 0,
                    "type": "array"
                },
                "maxItems": 10000,
                "minItems": 0,
                "type": "array"
            },
            "InventoryItemList": {
                "items": {
                    "description": "Information collected from managed instances based on your inventory policy document",
                    "properties": {
                        "CaptureTime": {
                            "description": "The time the inventory information was collected.",
                            "pattern": "^(20)[0-9][0-9]-(0[1-9]|1[012])-([12][0-9]|3[01]|0[1-9])(T)(2[0-3]|[0-1][0-9])(:[0-5][0-9])(:[0-5][0-9])(Z)$",
                            "type": "string"
                        },
                        "Content": {
                            "description": "The inventory data of the inventory type.",
                            "items": {
                                "items": {
                                    "properties": {
                                        "key": {
                                            "maxLength": 64,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "value": {
                                            "maxLength": 4096,
                                            "minLength": 0,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "maxItems": 50,
                                "minItems": 0,
                                "type": "array"
                            },
                            "maxItems": 10000,
                            "minItems": 0,
                            "type": "array"
                        },
                        "ContentHash": {
                            "description": "MD5 hash of the inventory item type contents. The content hash is used to determine whether to update inventory information. The PutInventory API does not update the inventory item type contents if the MD5 hash has not changed since last update. ",
                            "maxLength": 256,
                            "type": "string"
                        },
                        "Context": {
                            "description": "A map of associated properties for a specified inventory type. For example, with this attribute, you can specify the <code>ExecutionId</code>, <code>ExecutionType</code>, <code>ComplianceType</code> properties of the <code>AWS:ComplianceItem</code> type.",
                            "items": {
                                "properties": {
                                    "key": {
                                        "maxLength": 64,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "value": {
                                        "maxLength": 4096,
                                        "minLength": 0,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "maxItems": 50,
                            "minItems": 0,
                            "type": "array"
                        },
                        "SchemaVersion": {
                            "description": "The schema version for the inventory item.",
                            "pattern": "^([0-9]{1,6})(\\.[0-9]{1,6})$",
                            "type": "string"
                        },
                        "TypeName": {
                            "description": "The name of the inventory type. Default inventory item type names start with AWS. Custom inventory type names will start with Custom. Default inventory item types include the following: AWS:AWSComponent, AWS:Application, AWS:InstanceInformation, AWS:Network, and AWS:WindowsUpdate.",
                            "maxLength": 100,
                            "minLength": 1,
                            "pattern": "^(AWS|Custom):.*$",
                            "type": "string"
                        }
                    },
                    "required": [
                        "TypeName",
                        "SchemaVersion",
                        "CaptureTime"
                    ],
                    "type": "object"
                },
                "maxItems": 30,
                "minItems": 1,
                "type": "array"
            },
            "InventoryItemSchema": {
                "description": "The inventory item schema definition. Users can use this to compose inventory query filters.",
                "properties": {
                    "Attributes": {
                        "description": "The schema attributes for inventory. This contains data type and attribute name.",
                        "items": {
                            "description": "Attributes are the entries within the inventory item content. It contains name and value.",
                            "properties": {
                                "DataType": {
                                    "description": "The data type of the inventory item attribute. ",
                                    "enum": [
                                        "string",
                                        "number"
                                    ],
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "Name of the inventory item attribute.",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Name",
                                "DataType"
                            ],
                            "type": "object"
                        },
                        "maxItems": 50,
                        "minItems": 1,
                        "type": "array"
                    },
                    "DisplayName": {
                        "description": "The alias name of the inventory type. The alias name is used for display purposes.",
                        "type": "string"
                    },
                    "TypeName": {
                        "description": "The name of the inventory type. Default inventory item type names start with AWS. Custom inventory type names will start with Custom. Default inventory item types include the following: AWS:AWSComponent, AWS:Application, AWS:InstanceInformation, AWS:Network, and AWS:WindowsUpdate.",
                        "maxLength": 100,
                        "minLength": 1,
                        "pattern": "^(AWS|Custom):.*$",
                        "type": "string"
                    },
                    "Version": {
                        "description": "The schema version for the inventory item.",
                        "pattern": "^([0-9]{1,6})(\\.[0-9]{1,6})$",
                        "type": "string"
                    }
                },
                "required": [
                    "TypeName",
                    "Attributes"
                ],
                "type": "object"
            },
            "InventoryItemSchemaResultList": {
                "items": {
                    "description": "The inventory item schema definition. Users can use this to compose inventory query filters.",
                    "properties": {
                        "Attributes": {
                            "description": "The schema attributes for inventory. This contains data type and attribute name.",
                            "items": {
                                "description": "Attributes are the entries within the inventory item content. It contains name and value.",
                                "properties": {
                                    "DataType": {
                                        "description": "The data type of the inventory item attribute. ",
                                        "enum": [
                                            "string",
                                            "number"
                                        ],
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "Name of the inventory item attribute.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Name",
                                    "DataType"
                                ],
                                "type": "object"
                            },
                            "maxItems": 50,
                            "minItems": 1,
                            "type": "array"
                        },
                        "DisplayName": {
                            "description": "The alias name of the inventory type. The alias name is used for display purposes.",
                            "type": "string"
                        },
                        "TypeName": {
                            "description": "The name of the inventory type. Default inventory item type names start with AWS. Custom inventory type names will start with Custom. Default inventory item types include the following: AWS:AWSComponent, AWS:Application, AWS:InstanceInformation, AWS:Network, and AWS:WindowsUpdate.",
                            "maxLength": 100,
                            "minLength": 1,
                            "pattern": "^(AWS|Custom):.*$",
                            "type": "string"
                        },
                        "Version": {
                            "description": "The schema version for the inventory item.",
                            "pattern": "^([0-9]{1,6})(\\.[0-9]{1,6})$",
                            "type": "string"
                        }
                    },
                    "required": [
                        "TypeName",
                        "Attributes"
                    ],
                    "type": "object"
                },
                "type": "array"
            },
            "InventoryItemSchemaVersion": {
                "pattern": "^([0-9]{1,6})(\\.[0-9]{1,6})$",
                "type": "string"
            },
            "InventoryItemTypeName": {
                "maxLength": 100,
                "minLength": 1,
                "pattern": "^(AWS|Custom):.*$",
                "type": "string"
            },
            "InventoryItemTypeNameFilter": {
                "maxLength": 100,
                "minLength": 0,
                "type": "string"
            },
            "InventoryQueryOperatorType": {
                "enum": [
                    "Equal",
                    "NotEqual",
                    "BeginWith",
                    "LessThan",
                    "GreaterThan",
                    "Exists"
                ],
                "type": "string"
            },
            "InventoryResultEntity": {
                "description": "Inventory query results.",
                "properties": {
                    "Data": {
                        "description": "The data section in the inventory result entity JSON.",
                        "items": {
                            "properties": {
                                "key": {
                                    "type": "string"
                                },
                                "value": {
                                    "description": "The inventory result item.",
                                    "properties": {
                                        "CaptureTime": {
                                            "description": "The time inventory item data was captured.",
                                            "pattern": "^(20)[0-9][0-9]-(0[1-9]|1[012])-([12][0-9]|3[01]|0[1-9])(T)(2[0-3]|[0-1][0-9])(:[0-5][0-9])(:[0-5][0-9])(Z)$",
                                            "type": "string"
                                        },
                                        "Content": {
                                            "description": "Contains all the inventory data of the item type. Results include attribute names and values. ",
                                            "items": {
                                                "items": {
                                                    "properties": {
                                                        "key": {
                                                            "maxLength": 64,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "value": {
                                                            "maxLength": 4096,
                                                            "minLength": 0,
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "maxItems": 50,
                                                "minItems": 0,
                                                "type": "array"
                                            },
                                            "maxItems": 10000,
                                            "minItems": 0,
                                            "type": "array"
                                        },
                                        "ContentHash": {
                                            "description": "MD5 hash of the inventory item type contents. The content hash is used to determine whether to update inventory information. The PutInventory API does not update the inventory item type contents if the MD5 hash has not changed since last update. ",
                                            "maxLength": 256,
                                            "type": "string"
                                        },
                                        "SchemaVersion": {
                                            "description": "The schema version for the inventory result item/",
                                            "pattern": "^([0-9]{1,6})(\\.[0-9]{1,6})$",
                                            "type": "string"
                                        },
                                        "TypeName": {
                                            "description": "The name of the inventory result item type.",
                                            "maxLength": 100,
                                            "minLength": 1,
                                            "pattern": "^(AWS|Custom):.*$",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "TypeName",
                                        "SchemaVersion",
                                        "Content"
                                    ],
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Id": {
                        "description": "ID of the inventory result entity. For example, for managed instance inventory the result will be the managed instance ID. For EC2 instance inventory, the result will be the instance ID. ",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "InventoryResultEntityId": {
                "type": "string"
            },
            "InventoryResultEntityList": {
                "items": {
                    "description": "Inventory query results.",
                    "properties": {
                        "Data": {
                            "description": "The data section in the inventory result entity JSON.",
                            "items": {
                                "properties": {
                                    "key": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "description": "The inventory result item.",
                                        "properties": {
                                            "CaptureTime": {
                                                "description": "The time inventory item data was captured.",
                                                "pattern": "^(20)[0-9][0-9]-(0[1-9]|1[012])-([12][0-9]|3[01]|0[1-9])(T)(2[0-3]|[0-1][0-9])(:[0-5][0-9])(:[0-5][0-9])(Z)$",
                                                "type": "string"
                                            },
                                            "Content": {
                                                "description": "Contains all the inventory data of the item type. Results include attribute names and values. ",
                                                "items": {
                                                    "items": {
                                                        "properties": {
                                                            "key": {
                                                                "maxLength": 64,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            },
                                                            "value": {
                                                                "maxLength": 4096,
                                                                "minLength": 0,
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "maxItems": 50,
                                                    "minItems": 0,
                                                    "type": "array"
                                                },
                                                "maxItems": 10000,
                                                "minItems": 0,
                                                "type": "array"
                                            },
                                            "ContentHash": {
                                                "description": "MD5 hash of the inventory item type contents. The content hash is used to determine whether to update inventory information. The PutInventory API does not update the inventory item type contents if the MD5 hash has not changed since last update. ",
                                                "maxLength": 256,
                                                "type": "string"
                                            },
                                            "SchemaVersion": {
                                                "description": "The schema version for the inventory result item/",
                                                "pattern": "^([0-9]{1,6})(\\.[0-9]{1,6})$",
                                                "type": "string"
                                            },
                                            "TypeName": {
                                                "description": "The name of the inventory result item type.",
                                                "maxLength": 100,
                                                "minLength": 1,
                                                "pattern": "^(AWS|Custom):.*$",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "TypeName",
                                            "SchemaVersion",
                                            "Content"
                                        ],
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "Id": {
                            "description": "ID of the inventory result entity. For example, for managed instance inventory the result will be the managed instance ID. For EC2 instance inventory, the result will be the instance ID. ",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "InventoryResultItem": {
                "description": "The inventory result item.",
                "properties": {
                    "CaptureTime": {
                        "description": "The time inventory item data was captured.",
                        "pattern": "^(20)[0-9][0-9]-(0[1-9]|1[012])-([12][0-9]|3[01]|0[1-9])(T)(2[0-3]|[0-1][0-9])(:[0-5][0-9])(:[0-5][0-9])(Z)$",
                        "type": "string"
                    },
                    "Content": {
                        "description": "Contains all the inventory data of the item type. Results include attribute names and values. ",
                        "items": {
                            "items": {
                                "properties": {
                                    "key": {
                                        "maxLength": 64,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "value": {
                                        "maxLength": 4096,
                                        "minLength": 0,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "maxItems": 50,
                            "minItems": 0,
                            "type": "array"
                        },
                        "maxItems": 10000,
                        "minItems": 0,
                        "type": "array"
                    },
                    "ContentHash": {
                        "description": "MD5 hash of the inventory item type contents. The content hash is used to determine whether to update inventory information. The PutInventory API does not update the inventory item type contents if the MD5 hash has not changed since last update. ",
                        "maxLength": 256,
                        "type": "string"
                    },
                    "SchemaVersion": {
                        "description": "The schema version for the inventory result item/",
                        "pattern": "^([0-9]{1,6})(\\.[0-9]{1,6})$",
                        "type": "string"
                    },
                    "TypeName": {
                        "description": "The name of the inventory result item type.",
                        "maxLength": 100,
                        "minLength": 1,
                        "pattern": "^(AWS|Custom):.*$",
                        "type": "string"
                    }
                },
                "required": [
                    "TypeName",
                    "SchemaVersion",
                    "Content"
                ],
                "type": "object"
            },
            "InventoryResultItemKey": {
                "type": "string"
            },
            "InventoryResultItemMap": {
                "items": {
                    "properties": {
                        "key": {
                            "type": "string"
                        },
                        "value": {
                            "description": "The inventory result item.",
                            "properties": {
                                "CaptureTime": {
                                    "description": "The time inventory item data was captured.",
                                    "pattern": "^(20)[0-9][0-9]-(0[1-9]|1[012])-([12][0-9]|3[01]|0[1-9])(T)(2[0-3]|[0-1][0-9])(:[0-5][0-9])(:[0-5][0-9])(Z)$",
                                    "type": "string"
                                },
                                "Content": {
                                    "description": "Contains all the inventory data of the item type. Results include attribute names and values. ",
                                    "items": {
                                        "items": {
                                            "properties": {
                                                "key": {
                                                    "maxLength": 64,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "maxLength": 4096,
                                                    "minLength": 0,
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "maxItems": 50,
                                        "minItems": 0,
                                        "type": "array"
                                    },
                                    "maxItems": 10000,
                                    "minItems": 0,
                                    "type": "array"
                                },
                                "ContentHash": {
                                    "description": "MD5 hash of the inventory item type contents. The content hash is used to determine whether to update inventory information. The PutInventory API does not update the inventory item type contents if the MD5 hash has not changed since last update. ",
                                    "maxLength": 256,
                                    "type": "string"
                                },
                                "SchemaVersion": {
                                    "description": "The schema version for the inventory result item/",
                                    "pattern": "^([0-9]{1,6})(\\.[0-9]{1,6})$",
                                    "type": "string"
                                },
                                "TypeName": {
                                    "description": "The name of the inventory result item type.",
                                    "maxLength": 100,
                                    "minLength": 1,
                                    "pattern": "^(AWS|Custom):.*$",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "TypeName",
                                "SchemaVersion",
                                "Content"
                            ],
                            "type": "object"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "InventorySchemaDeleteOption": {
                "enum": [
                    "DisableSchema",
                    "DeleteSchema"
                ],
                "type": "string"
            },
            "InventoryTypeDisplayName": {
                "type": "string"
            },
            "InvocationDoesNotExist": {},
            "InvocationTraceOutput": {
                "maxLength": 2500,
                "type": "string"
            },
            "IsSubTypeSchema": {
                "type": "boolean"
            },
            "ItemContentMismatchException": {},
            "ItemSizeLimitExceededException": {},
            "KeyList": {
                "items": {
                    "maxLength": 128,
                    "minLength": 1,
                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                    "type": "string"
                },
                "type": "array"
            },
            "LabelParameterVersionRequest": {
                "properties": {
                    "Labels": {
                        "description": "One or more labels to attach to the specified parameter version.",
                        "items": {
                            "maxLength": 100,
                            "minLength": 1,
                            "type": "string"
                        },
                        "maxItems": 10,
                        "minItems": 1,
                        "type": "array"
                    },
                    "Name": {
                        "description": "The parameter name on which you want to attach one or more labels.",
                        "maxLength": 2048,
                        "minLength": 1,
                        "type": "string"
                    },
                    "ParameterVersion": {
                        "description": "The specific version of the parameter on which you want to attach one or more labels. If no version is specified, the system attaches the label to the latest version.)",
                        "type": "integer"
                    }
                },
                "required": [
                    "Name",
                    "Labels"
                ],
                "type": "object"
            },
            "LabelParameterVersionResult": {
                "properties": {
                    "InvalidLabels": {
                        "description": "The label does not meet the requirements. For information about parameter label requirements, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-paramstore-labels.html\">Labeling Parameters</a> in the <i>AWS Systems Manager User Guide</i>.",
                        "items": {
                            "maxLength": 100,
                            "minLength": 1,
                            "type": "string"
                        },
                        "maxItems": 10,
                        "minItems": 1,
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "LastResourceDataSyncMessage": {
                "type": "string"
            },
            "LastResourceDataSyncStatus": {
                "enum": [
                    "Successful",
                    "Failed",
                    "InProgress"
                ],
                "type": "string"
            },
            "LastResourceDataSyncTime": {
                "format": "date-time",
                "type": "string"
            },
            "LastSuccessfulResourceDataSyncTime": {
                "format": "date-time",
                "type": "string"
            },
            "ListAssociationVersionsRequest": {
                "properties": {
                    "AssociationId": {
                        "description": "The association ID for which you want to view all versions.",
                        "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                        "type": "string"
                    },
                    "MaxResults": {
                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                        "maximum": 50,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "A token to start the list. Use this token to get the next set of results. ",
                        "type": "string"
                    }
                },
                "required": [
                    "AssociationId"
                ],
                "type": "object"
            },
            "ListAssociationVersionsResult": {
                "properties": {
                    "AssociationVersions": {
                        "description": "Information about all versions of the association for the specified association ID.",
                        "items": {
                            "description": "Information about the association version.",
                            "properties": {
                                "AssociationId": {
                                    "description": "The ID created by the system when the association was created.",
                                    "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                                    "type": "string"
                                },
                                "AssociationName": {
                                    "description": "The name specified for the association version when the association version was created.",
                                    "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                    "type": "string"
                                },
                                "AssociationVersion": {
                                    "description": "The association version.",
                                    "pattern": "([$]LATEST)|([1-9][0-9]*)",
                                    "type": "string"
                                },
                                "ComplianceSeverity": {
                                    "description": "The severity level that is assigned to the association.",
                                    "enum": [
                                        "CRITICAL",
                                        "HIGH",
                                        "MEDIUM",
                                        "LOW",
                                        "UNSPECIFIED"
                                    ],
                                    "type": "string"
                                },
                                "CreatedDate": {
                                    "description": "The date the association version was created.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "DocumentVersion": {
                                    "description": "The version of a Systems Manager document used when the association version was created.",
                                    "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                    "type": "string"
                                },
                                "MaxConcurrency": {
                                    "description": "<p>The maximum number of targets allowed to run the association at the same time. You can specify a number, for example 10, or a percentage of the target set, for example 10%. The default value is 100%, which means all targets run the association at the same time.</p> <p>If a new instance starts and attempts to execute an association while Systems Manager is executing MaxConcurrency associations, the association is allowed to run. During the next association interval, the new instance will process its association within the limit specified for MaxConcurrency.</p>",
                                    "maxLength": 7,
                                    "minLength": 1,
                                    "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                                    "type": "string"
                                },
                                "MaxErrors": {
                                    "description": "<p>The number of errors that are allowed before the system stops sending requests to run the association on additional targets. You can specify either an absolute number of errors, for example 10, or a percentage of the target set, for example 10%. If you specify 3, for example, the system stops sending requests when the fourth error is received. If you specify 0, then the system stops sending requests after the first error is returned. If you run an association on 50 instances and set MaxError to 10%, then the system stops sending the request when the sixth error is received.</p> <p>Executions that are already running an association when MaxErrors is reached are allowed to complete, but some of these executions may fail as well. If you need to ensure that there won't be more than max-errors failed executions, set MaxConcurrency to 1 so that executions proceed one at a time.</p>",
                                    "maxLength": 7,
                                    "minLength": 1,
                                    "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "The name specified when the association was created.",
                                    "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                                    "type": "string"
                                },
                                "OutputLocation": {
                                    "description": "The location in Amazon S3 specified for the association when the association version was created.",
                                    "properties": {
                                        "S3Location": {
                                            "description": "An Amazon S3 bucket where you want to store the results of this request.",
                                            "properties": {
                                                "OutputS3BucketName": {
                                                    "description": "The name of the Amazon S3 bucket.",
                                                    "maxLength": 63,
                                                    "minLength": 3,
                                                    "type": "string"
                                                },
                                                "OutputS3KeyPrefix": {
                                                    "description": "The Amazon S3 bucket subfolder.",
                                                    "maxLength": 500,
                                                    "type": "string"
                                                },
                                                "OutputS3Region": {
                                                    "description": "(Deprecated) You can no longer specify this parameter. The system ignores it. Instead, Systems Manager automatically determines the Amazon S3 bucket region.",
                                                    "maxLength": 20,
                                                    "minLength": 3,
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "Parameters": {
                                    "description": "Parameters specified when the association version was created.",
                                    "items": {
                                        "properties": {
                                            "key": {
                                                "type": "string"
                                            },
                                            "value": {
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "ScheduleExpression": {
                                    "description": "The cron or rate schedule specified for the association when the association version was created.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Targets": {
                                    "description": "The targets specified for the association when the association version was created. ",
                                    "items": {
                                        "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                                        "properties": {
                                            "Key": {
                                                "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                "maxLength": 128,
                                                "minLength": 1,
                                                "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                                "type": "string"
                                            },
                                            "Values": {
                                                "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "maxItems": 50,
                                                "minItems": 0,
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "maxItems": 5,
                                    "minItems": 0,
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "minItems": 1,
                        "type": "array"
                    },
                    "NextToken": {
                        "description": "The token for the next set of items to return. Use this token to get the next set of results.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListAssociationsRequest": {
                "properties": {
                    "AssociationFilterList": {
                        "description": "One or more filters. Use a filter to return a more specific list of results.",
                        "items": {
                            "description": "Describes a filter.",
                            "properties": {
                                "key": {
                                    "description": "The name of the filter.",
                                    "enum": [
                                        "InstanceId",
                                        "Name",
                                        "AssociationId",
                                        "AssociationStatusName",
                                        "LastExecutedBefore",
                                        "LastExecutedAfter",
                                        "AssociationName"
                                    ],
                                    "type": "string"
                                },
                                "value": {
                                    "description": "The filter value.",
                                    "minLength": 1,
                                    "type": "string"
                                }
                            },
                            "required": [
                                "key",
                                "value"
                            ],
                            "type": "object"
                        },
                        "minItems": 1,
                        "type": "array"
                    },
                    "MaxResults": {
                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                        "maximum": 50,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "The token for the next set of items to return. (You received this token from a previous call.)",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListAssociationsResult": {
                "properties": {
                    "Associations": {
                        "description": "The associations.",
                        "items": {
                            "description": "Describes an association of a Systems Manager document and an instance.",
                            "properties": {
                                "AssociationId": {
                                    "description": "The ID created by the system when you create an association. An association is a binding between a document and a set of targets with a schedule.",
                                    "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                                    "type": "string"
                                },
                                "AssociationName": {
                                    "description": "The association name.",
                                    "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                    "type": "string"
                                },
                                "AssociationVersion": {
                                    "description": "The association version.",
                                    "pattern": "([$]LATEST)|([1-9][0-9]*)",
                                    "type": "string"
                                },
                                "DocumentVersion": {
                                    "description": "The version of the document used in the association.",
                                    "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                    "type": "string"
                                },
                                "InstanceId": {
                                    "description": "The ID of the instance.",
                                    "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                                    "type": "string"
                                },
                                "LastExecutionDate": {
                                    "description": "The date on which the association was last run.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "The name of the Systems Manager document.",
                                    "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                                    "type": "string"
                                },
                                "Overview": {
                                    "description": "Information about the association.",
                                    "properties": {
                                        "AssociationStatusAggregatedCount": {
                                            "description": "Returns the number of targets for the association status. For example, if you created an association with two instances, and one of them was successful, this would return the count of instances by status.",
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "DetailedStatus": {
                                            "description": "A detailed status of the association.",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The status of the association. Status can be: Pending, Success, or Failed.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "ScheduleExpression": {
                                    "description": "A cron expression that specifies a schedule when the association runs.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Targets": {
                                    "description": "The instances targeted by the request to create an association. ",
                                    "items": {
                                        "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                                        "properties": {
                                            "Key": {
                                                "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                "maxLength": 128,
                                                "minLength": 1,
                                                "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                                "type": "string"
                                            },
                                            "Values": {
                                                "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "maxItems": 50,
                                                "minItems": 0,
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "maxItems": 5,
                                    "minItems": 0,
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "NextToken": {
                        "description": "The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListCommandInvocationsRequest": {
                "properties": {
                    "CommandId": {
                        "description": "(Optional) The invocations for a specific command ID.",
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string"
                    },
                    "Details": {
                        "description": "(Optional) If set this returns the response of the command executions and any command output. By default this is set to False. ",
                        "type": "boolean"
                    },
                    "Filters": {
                        "description": "(Optional) One or more filters. Use a filter to return a more specific list of results.",
                        "items": {
                            "description": "Describes a command filter.",
                            "properties": {
                                "key": {
                                    "description": "The name of the filter.",
                                    "enum": [
                                        "InvokedAfter",
                                        "InvokedBefore",
                                        "Status",
                                        "ExecutionStage",
                                        "DocumentName"
                                    ],
                                    "type": "string"
                                },
                                "value": {
                                    "description": "<p>The filter value. Valid values for each filter key are as follows:</p> <ul> <li> <p> <b>InvokedAfter</b>: Specify a timestamp to limit your results. For example, specify <code>2018-07-07T00:00:00Z</code> to see a list of command executions occurring July 7, 2018, and later.</p> </li> <li> <p> <b>InvokedBefore</b>: Specify a timestamp to limit your results. For example, specify <code>2018-07-07T00:00:00Z</code> to see a list of command executions from before July 7, 2018.</p> </li> <li> <p> <b>Status</b>: Specify a valid command status to see a list of all command executions with that status. Status values you can specify include:</p> <ul> <li> <p> <code>Pending</code> </p> </li> <li> <p> <code>InProgress</code> </p> </li> <li> <p> <code>Success</code> </p> </li> <li> <p> <code>Cancelled</code> </p> </li> <li> <p> <code>Failed</code> </p> </li> <li> <p> <code>TimedOut</code> </p> </li> <li> <p> <code>Cancelling</code> </p> </li> </ul> </li> <li> <p> <b>DocumentName</b>: Specify name of the SSM document for which you want to see command execution results. For example, specify <code>AWS-RunPatchBaseline</code> to see command executions that used this SSM document to perform security patching operations on instances. </p> </li> <li> <p> <b>ExecutionStage</b>: Specify one of the following values:</p> <ul> <li> <p> <code>Executing</code>: Returns a list of command executions that are currently still running.</p> </li> <li> <p> <code>Complete</code>: Returns a list of command executions that have already completed. </p> </li> </ul> </li> </ul>",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "type": "string"
                                }
                            },
                            "required": [
                                "key",
                                "value"
                            ],
                            "type": "object"
                        },
                        "maxItems": 5,
                        "minItems": 1,
                        "type": "array"
                    },
                    "InstanceId": {
                        "description": "(Optional) The command execution details for a specific instance ID.",
                        "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                        "type": "string"
                    },
                    "MaxResults": {
                        "description": "(Optional) The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                        "maximum": 50,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "(Optional) The token for the next set of items to return. (You received this token from a previous call.)",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListCommandInvocationsResult": {
                "properties": {
                    "CommandInvocations": {
                        "description": "(Optional) A list of all invocations. ",
                        "items": {
                            "description": "An invocation is copy of a command sent to a specific instance. A command can apply to one or more instances. A command invocation applies to one instance. For example, if a user executes SendCommand against three instances, then a command invocation is created for each requested instance ID. A command invocation returns status and detail information about a command you executed. ",
                            "properties": {
                                "CloudWatchOutputConfig": {
                                    "description": "CloudWatch Logs information where you want Systems Manager to send the command output.",
                                    "properties": {
                                        "CloudWatchLogGroupName": {
                                            "description": "The name of the CloudWatch log group where you want to send command output. If you don't specify a group name, Systems Manager automatically creates a log group for you. The log group uses the following naming format: aws/ssm/<i>SystemsManagerDocumentName</i>.",
                                            "maxLength": 512,
                                            "minLength": 1,
                                            "pattern": "[\\.\\-_/#A-Za-z0-9]+",
                                            "type": "string"
                                        },
                                        "CloudWatchOutputEnabled": {
                                            "description": "Enables Systems Manager to send command output to CloudWatch Logs.",
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                },
                                "CommandId": {
                                    "description": "The command against which this invocation was requested.",
                                    "maxLength": 36,
                                    "minLength": 36,
                                    "type": "string"
                                },
                                "CommandPlugins": {
                                    "items": {
                                        "description": "Describes plugin details.",
                                        "properties": {
                                            "Name": {
                                                "description": "The name of the plugin. Must be one of the following: aws:updateAgent, aws:domainjoin, aws:applications, aws:runPowerShellScript, aws:psmodule, aws:cloudWatch, aws:runShellScript, or aws:updateSSMAgent. ",
                                                "minLength": 4,
                                                "type": "string"
                                            },
                                            "Output": {
                                                "description": "Output of the plugin execution.",
                                                "maxLength": 2500,
                                                "type": "string"
                                            },
                                            "OutputS3BucketName": {
                                                "description": "<p>The S3 bucket where the responses to the command executions should be stored. This was requested when issuing the command. For example, in the following response:</p> <p> test_folder/ab19cb99-a030-46dd-9dfc-8eSAMPLEPre-Fix/i-1234567876543/awsrunShellScript </p> <p>test_folder is the name of the Amazon S3 bucket;</p> <p> ab19cb99-a030-46dd-9dfc-8eSAMPLEPre-Fix is the name of the S3 prefix;</p> <p>i-1234567876543 is the instance ID;</p> <p>awsrunShellScript is the name of the plugin.</p>",
                                                "maxLength": 63,
                                                "minLength": 3,
                                                "type": "string"
                                            },
                                            "OutputS3KeyPrefix": {
                                                "description": "<p>The S3 directory path inside the bucket where the responses to the command executions should be stored. This was requested when issuing the command. For example, in the following response:</p> <p> test_folder/ab19cb99-a030-46dd-9dfc-8eSAMPLEPre-Fix/i-1234567876543/awsrunShellScript </p> <p>test_folder is the name of the Amazon S3 bucket;</p> <p> ab19cb99-a030-46dd-9dfc-8eSAMPLEPre-Fix is the name of the S3 prefix;</p> <p>i-1234567876543 is the instance ID;</p> <p>awsrunShellScript is the name of the plugin.</p>",
                                                "maxLength": 500,
                                                "type": "string"
                                            },
                                            "OutputS3Region": {
                                                "description": "(Deprecated) You can no longer specify this parameter. The system ignores it. Instead, Systems Manager automatically determines the Amazon S3 bucket region.",
                                                "maxLength": 20,
                                                "minLength": 3,
                                                "type": "string"
                                            },
                                            "ResponseCode": {
                                                "description": "A numeric response code generated after executing the plugin. ",
                                                "type": "integer"
                                            },
                                            "ResponseFinishDateTime": {
                                                "description": "The time the plugin stopped executing. Could stop prematurely if, for example, a cancel command was sent. ",
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "ResponseStartDateTime": {
                                                "description": "The time the plugin started executing. ",
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "StandardErrorUrl": {
                                                "description": "The URL for the complete text written by the plugin to stderr. If execution is not yet complete, then this string is empty.",
                                                "type": "string"
                                            },
                                            "StandardOutputUrl": {
                                                "description": "The URL for the complete text written by the plugin to stdout in Amazon S3. If the Amazon S3 bucket for the command was not specified, then this string is empty.",
                                                "type": "string"
                                            },
                                            "Status": {
                                                "description": "The status of this plugin. You can execute a document with multiple plugins.",
                                                "enum": [
                                                    "Pending",
                                                    "InProgress",
                                                    "Success",
                                                    "TimedOut",
                                                    "Cancelled",
                                                    "Failed"
                                                ],
                                                "type": "string"
                                            },
                                            "StatusDetails": {
                                                "description": "<p>A detailed status of the plugin execution. StatusDetails includes more information than Status because it includes states resulting from error and concurrency control parameters. StatusDetails can show different results than Status. For more information about these statuses, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/monitor-commands.html\">Understanding Command Statuses</a> in the <i>AWS Systems Manager User Guide</i>. StatusDetails can be one of the following values:</p> <ul> <li> <p>Pending: The command has not been sent to the instance.</p> </li> <li> <p>In Progress: The command has been sent to the instance but has not reached a terminal state.</p> </li> <li> <p>Success: The execution of the command or plugin was successfully completed. This is a terminal state.</p> </li> <li> <p>Delivery Timed Out: The command was not delivered to the instance before the delivery timeout expired. Delivery timeouts do not count against the parent command's MaxErrors limit, but they do contribute to whether the parent command status is Success or Incomplete. This is a terminal state.</p> </li> <li> <p>Execution Timed Out: Command execution started on the instance, but the execution was not complete before the execution timeout expired. Execution timeouts count against the MaxErrors limit of the parent command. This is a terminal state.</p> </li> <li> <p>Failed: The command was not successful on the instance. For a plugin, this indicates that the result code was not zero. For a command invocation, this indicates that the result code for one or more plugins was not zero. Invocation failures count against the MaxErrors limit of the parent command. This is a terminal state.</p> </li> <li> <p>Canceled: The command was terminated before it was completed. This is a terminal state.</p> </li> <li> <p>Undeliverable: The command can't be delivered to the instance. The instance might not exist, or it might not be responding. Undeliverable invocations don't count against the parent command's MaxErrors limit, and they don't contribute to whether the parent command status is Success or Incomplete. This is a terminal state.</p> </li> <li> <p>Terminated: The parent command exceeded its MaxErrors limit and subsequent command invocations were canceled by the system. This is a terminal state.</p> </li> </ul>",
                                                "maxLength": 100,
                                                "minLength": 0,
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "Comment": {
                                    "description": "User-specified information about the command, such as a brief description of what the command should do.",
                                    "maxLength": 100,
                                    "type": "string"
                                },
                                "DocumentName": {
                                    "description": "The document name that was requested for execution.",
                                    "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                    "type": "string"
                                },
                                "DocumentVersion": {
                                    "description": "The SSM document version.",
                                    "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                    "type": "string"
                                },
                                "InstanceId": {
                                    "description": "The instance ID in which this invocation was requested.",
                                    "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                                    "type": "string"
                                },
                                "InstanceName": {
                                    "description": "The name of the invocation target. For Amazon EC2 instances this is the value for the aws:Name tag. For on-premises instances, this is the name of the instance.",
                                    "maxLength": 255,
                                    "type": "string"
                                },
                                "NotificationConfig": {
                                    "description": "Configurations for sending notifications about command status changes on a per instance basis.",
                                    "properties": {
                                        "NotificationArn": {
                                            "description": "An Amazon Resource Name (ARN) for a Simple Notification Service (SNS) topic. Run Command pushes notifications about command status changes to this topic.",
                                            "type": "string"
                                        },
                                        "NotificationEvents": {
                                            "description": "The different events for which you can receive notifications. These events include the following: All (events), InProgress, Success, TimedOut, Cancelled, Failed. To learn more about these events, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/rc-sns-notifications.html\">Configuring Amazon SNS Notifications for Run Command</a> in the <i>AWS Systems Manager User Guide</i>.",
                                            "items": {
                                                "enum": [
                                                    "All",
                                                    "InProgress",
                                                    "Success",
                                                    "TimedOut",
                                                    "Cancelled",
                                                    "Failed"
                                                ],
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "NotificationType": {
                                            "description": "Command: Receive notification when the status of a command changes. Invocation: For commands sent to multiple instances, receive notification on a per-instance basis when the status of a command changes. ",
                                            "enum": [
                                                "Command",
                                                "Invocation"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "RequestedDateTime": {
                                    "description": "The time and date the request was sent to this instance.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "ServiceRole": {
                                    "description": "The IAM service role that Run Command uses to act on your behalf when sending notifications about command status changes on a per instance basis.",
                                    "type": "string"
                                },
                                "StandardErrorUrl": {
                                    "description": "The URL to the plugin's StdErr file in Amazon S3, if the Amazon S3 bucket was defined for the parent command. For an invocation, StandardErrorUrl is populated if there is just one plugin defined for the command, and the Amazon S3 bucket was defined for the command.",
                                    "type": "string"
                                },
                                "StandardOutputUrl": {
                                    "description": "The URL to the plugin's StdOut file in Amazon S3, if the Amazon S3 bucket was defined for the parent command. For an invocation, StandardOutputUrl is populated if there is just one plugin defined for the command, and the Amazon S3 bucket was defined for the command.",
                                    "type": "string"
                                },
                                "Status": {
                                    "description": "Whether or not the invocation succeeded, failed, or is pending.",
                                    "enum": [
                                        "Pending",
                                        "InProgress",
                                        "Delayed",
                                        "Success",
                                        "Cancelled",
                                        "TimedOut",
                                        "Failed",
                                        "Cancelling"
                                    ],
                                    "type": "string"
                                },
                                "StatusDetails": {
                                    "description": "<p>A detailed status of the command execution for each invocation (each instance targeted by the command). StatusDetails includes more information than Status because it includes states resulting from error and concurrency control parameters. StatusDetails can show different results than Status. For more information about these statuses, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/monitor-commands.html\">Understanding Command Statuses</a> in the <i>AWS Systems Manager User Guide</i>. StatusDetails can be one of the following values:</p> <ul> <li> <p>Pending: The command has not been sent to the instance.</p> </li> <li> <p>In Progress: The command has been sent to the instance but has not reached a terminal state.</p> </li> <li> <p>Success: The execution of the command or plugin was successfully completed. This is a terminal state.</p> </li> <li> <p>Delivery Timed Out: The command was not delivered to the instance before the delivery timeout expired. Delivery timeouts do not count against the parent command's MaxErrors limit, but they do contribute to whether the parent command status is Success or Incomplete. This is a terminal state.</p> </li> <li> <p>Execution Timed Out: Command execution started on the instance, but the execution was not complete before the execution timeout expired. Execution timeouts count against the MaxErrors limit of the parent command. This is a terminal state.</p> </li> <li> <p>Failed: The command was not successful on the instance. For a plugin, this indicates that the result code was not zero. For a command invocation, this indicates that the result code for one or more plugins was not zero. Invocation failures count against the MaxErrors limit of the parent command. This is a terminal state.</p> </li> <li> <p>Canceled: The command was terminated before it was completed. This is a terminal state.</p> </li> <li> <p>Undeliverable: The command can't be delivered to the instance. The instance might not exist or might not be responding. Undeliverable invocations don't count against the parent command's MaxErrors limit and don't contribute to whether the parent command status is Success or Incomplete. This is a terminal state.</p> </li> <li> <p>Terminated: The parent command exceeded its MaxErrors limit and subsequent command invocations were canceled by the system. This is a terminal state.</p> </li> </ul>",
                                    "maxLength": 100,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "TraceOutput": {
                                    "description": " Gets the trace output sent by the agent. ",
                                    "maxLength": 2500,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "NextToken": {
                        "description": "(Optional) The token for the next set of items to return. (You received this token from a previous call.)",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListCommandsRequest": {
                "properties": {
                    "CommandId": {
                        "description": "(Optional) If provided, lists only the specified command.",
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string"
                    },
                    "Filters": {
                        "description": "(Optional) One or more filters. Use a filter to return a more specific list of results. ",
                        "items": {
                            "description": "Describes a command filter.",
                            "properties": {
                                "key": {
                                    "description": "The name of the filter.",
                                    "enum": [
                                        "InvokedAfter",
                                        "InvokedBefore",
                                        "Status",
                                        "ExecutionStage",
                                        "DocumentName"
                                    ],
                                    "type": "string"
                                },
                                "value": {
                                    "description": "<p>The filter value. Valid values for each filter key are as follows:</p> <ul> <li> <p> <b>InvokedAfter</b>: Specify a timestamp to limit your results. For example, specify <code>2018-07-07T00:00:00Z</code> to see a list of command executions occurring July 7, 2018, and later.</p> </li> <li> <p> <b>InvokedBefore</b>: Specify a timestamp to limit your results. For example, specify <code>2018-07-07T00:00:00Z</code> to see a list of command executions from before July 7, 2018.</p> </li> <li> <p> <b>Status</b>: Specify a valid command status to see a list of all command executions with that status. Status values you can specify include:</p> <ul> <li> <p> <code>Pending</code> </p> </li> <li> <p> <code>InProgress</code> </p> </li> <li> <p> <code>Success</code> </p> </li> <li> <p> <code>Cancelled</code> </p> </li> <li> <p> <code>Failed</code> </p> </li> <li> <p> <code>TimedOut</code> </p> </li> <li> <p> <code>Cancelling</code> </p> </li> </ul> </li> <li> <p> <b>DocumentName</b>: Specify name of the SSM document for which you want to see command execution results. For example, specify <code>AWS-RunPatchBaseline</code> to see command executions that used this SSM document to perform security patching operations on instances. </p> </li> <li> <p> <b>ExecutionStage</b>: Specify one of the following values:</p> <ul> <li> <p> <code>Executing</code>: Returns a list of command executions that are currently still running.</p> </li> <li> <p> <code>Complete</code>: Returns a list of command executions that have already completed. </p> </li> </ul> </li> </ul>",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "type": "string"
                                }
                            },
                            "required": [
                                "key",
                                "value"
                            ],
                            "type": "object"
                        },
                        "maxItems": 5,
                        "minItems": 1,
                        "type": "array"
                    },
                    "InstanceId": {
                        "description": "(Optional) Lists commands issued against this instance ID.",
                        "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                        "type": "string"
                    },
                    "MaxResults": {
                        "description": "(Optional) The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                        "maximum": 50,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "(Optional) The token for the next set of items to return. (You received this token from a previous call.)",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListCommandsResult": {
                "properties": {
                    "Commands": {
                        "description": "(Optional) The list of commands requested by the user. ",
                        "items": {
                            "description": "Describes a command request.",
                            "properties": {
                                "CloudWatchOutputConfig": {
                                    "description": "CloudWatch Logs information where you want Systems Manager to send the command output.",
                                    "properties": {
                                        "CloudWatchLogGroupName": {
                                            "description": "The name of the CloudWatch log group where you want to send command output. If you don't specify a group name, Systems Manager automatically creates a log group for you. The log group uses the following naming format: aws/ssm/<i>SystemsManagerDocumentName</i>.",
                                            "maxLength": 512,
                                            "minLength": 1,
                                            "pattern": "[\\.\\-_/#A-Za-z0-9]+",
                                            "type": "string"
                                        },
                                        "CloudWatchOutputEnabled": {
                                            "description": "Enables Systems Manager to send command output to CloudWatch Logs.",
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                },
                                "CommandId": {
                                    "description": "A unique identifier for this command.",
                                    "maxLength": 36,
                                    "minLength": 36,
                                    "type": "string"
                                },
                                "Comment": {
                                    "description": "User-specified information about the command, such as a brief description of what the command should do.",
                                    "maxLength": 100,
                                    "type": "string"
                                },
                                "CompletedCount": {
                                    "description": "The number of targets for which the command invocation reached a terminal state. Terminal states include the following: Success, Failed, Execution Timed Out, Delivery Timed Out, Canceled, Terminated, or Undeliverable.",
                                    "type": "integer"
                                },
                                "DeliveryTimedOutCount": {
                                    "description": "The number of targets for which the status is Delivery Timed Out.",
                                    "type": "integer"
                                },
                                "DocumentName": {
                                    "description": "The name of the document requested for execution.",
                                    "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                    "type": "string"
                                },
                                "DocumentVersion": {
                                    "description": "The SSM document version.",
                                    "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                    "type": "string"
                                },
                                "ErrorCount": {
                                    "description": "The number of targets for which the status is Failed or Execution Timed Out.",
                                    "type": "integer"
                                },
                                "ExpiresAfter": {
                                    "description": "If this time is reached and the command has not already started executing, it will not run. Calculated based on the ExpiresAfter user input provided as part of the SendCommand API.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "InstanceIds": {
                                    "description": "The instance IDs against which this command was requested.",
                                    "items": {
                                        "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                                        "type": "string"
                                    },
                                    "maxItems": 50,
                                    "minItems": 0,
                                    "type": "array"
                                },
                                "MaxConcurrency": {
                                    "description": "The maximum number of instances that are allowed to execute the command at the same time. You can specify a number of instances, such as 10, or a percentage of instances, such as 10%. The default value is 50. For more information about how to use MaxConcurrency, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/run-command.html\">Executing Commands Using Systems Manager Run Command</a> in the <i>AWS Systems Manager User Guide</i>.",
                                    "maxLength": 7,
                                    "minLength": 1,
                                    "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                                    "type": "string"
                                },
                                "MaxErrors": {
                                    "description": "The maximum number of errors allowed before the system stops sending the command to additional targets. You can specify a number of errors, such as 10, or a percentage or errors, such as 10%. The default value is 0. For more information about how to use MaxErrors, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/run-command.html\">Executing Commands Using Systems Manager Run Command</a> in the <i>AWS Systems Manager User Guide</i>.",
                                    "maxLength": 7,
                                    "minLength": 1,
                                    "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                                    "type": "string"
                                },
                                "NotificationConfig": {
                                    "description": "Configurations for sending notifications about command status changes. ",
                                    "properties": {
                                        "NotificationArn": {
                                            "description": "An Amazon Resource Name (ARN) for a Simple Notification Service (SNS) topic. Run Command pushes notifications about command status changes to this topic.",
                                            "type": "string"
                                        },
                                        "NotificationEvents": {
                                            "description": "The different events for which you can receive notifications. These events include the following: All (events), InProgress, Success, TimedOut, Cancelled, Failed. To learn more about these events, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/rc-sns-notifications.html\">Configuring Amazon SNS Notifications for Run Command</a> in the <i>AWS Systems Manager User Guide</i>.",
                                            "items": {
                                                "enum": [
                                                    "All",
                                                    "InProgress",
                                                    "Success",
                                                    "TimedOut",
                                                    "Cancelled",
                                                    "Failed"
                                                ],
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "NotificationType": {
                                            "description": "Command: Receive notification when the status of a command changes. Invocation: For commands sent to multiple instances, receive notification on a per-instance basis when the status of a command changes. ",
                                            "enum": [
                                                "Command",
                                                "Invocation"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "OutputS3BucketName": {
                                    "description": "The S3 bucket where the responses to the command executions should be stored. This was requested when issuing the command.",
                                    "maxLength": 63,
                                    "minLength": 3,
                                    "type": "string"
                                },
                                "OutputS3KeyPrefix": {
                                    "description": "The S3 directory path inside the bucket where the responses to the command executions should be stored. This was requested when issuing the command.",
                                    "maxLength": 500,
                                    "type": "string"
                                },
                                "OutputS3Region": {
                                    "description": "(Deprecated) You can no longer specify this parameter. The system ignores it. Instead, Systems Manager automatically determines the Amazon S3 bucket region.",
                                    "maxLength": 20,
                                    "minLength": 3,
                                    "type": "string"
                                },
                                "Parameters": {
                                    "description": "The parameter values to be inserted in the document when executing the command.",
                                    "items": {
                                        "properties": {
                                            "key": {
                                                "type": "string"
                                            },
                                            "value": {
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "RequestedDateTime": {
                                    "description": "The date and time the command was requested.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "ServiceRole": {
                                    "description": "The IAM service role that Run Command uses to act on your behalf when sending notifications about command status changes. ",
                                    "type": "string"
                                },
                                "Status": {
                                    "description": "The status of the command.",
                                    "enum": [
                                        "Pending",
                                        "InProgress",
                                        "Success",
                                        "Cancelled",
                                        "Failed",
                                        "TimedOut",
                                        "Cancelling"
                                    ],
                                    "type": "string"
                                },
                                "StatusDetails": {
                                    "description": "<p>A detailed status of the command execution. StatusDetails includes more information than Status because it includes states resulting from error and concurrency control parameters. StatusDetails can show different results than Status. For more information about these statuses, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/monitor-commands.html\">Understanding Command Statuses</a> in the <i>AWS Systems Manager User Guide</i>. StatusDetails can be one of the following values:</p> <ul> <li> <p>Pending: The command has not been sent to any instances.</p> </li> <li> <p>In Progress: The command has been sent to at least one instance but has not reached a final state on all instances.</p> </li> <li> <p>Success: The command successfully executed on all invocations. This is a terminal state.</p> </li> <li> <p>Delivery Timed Out: The value of MaxErrors or more command invocations shows a status of Delivery Timed Out. This is a terminal state.</p> </li> <li> <p>Execution Timed Out: The value of MaxErrors or more command invocations shows a status of Execution Timed Out. This is a terminal state.</p> </li> <li> <p>Failed: The value of MaxErrors or more command invocations shows a status of Failed. This is a terminal state.</p> </li> <li> <p>Incomplete: The command was attempted on all instances and one or more invocations does not have a value of Success but not enough invocations failed for the status to be Failed. This is a terminal state.</p> </li> <li> <p>Canceled: The command was terminated before it was completed. This is a terminal state.</p> </li> <li> <p>Rate Exceeded: The number of instances targeted by the command exceeded the account limit for pending invocations. The system has canceled the command before executing it on any instance. This is a terminal state.</p> </li> </ul>",
                                    "maxLength": 100,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "TargetCount": {
                                    "description": "The number of targets for the command.",
                                    "type": "integer"
                                },
                                "Targets": {
                                    "description": "An array of search criteria that targets instances using a Key,Value combination that you specify. Targets is required if you don't provide one or more instance IDs in the call.",
                                    "items": {
                                        "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                                        "properties": {
                                            "Key": {
                                                "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                "maxLength": 128,
                                                "minLength": 1,
                                                "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                                "type": "string"
                                            },
                                            "Values": {
                                                "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "maxItems": 50,
                                                "minItems": 0,
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "maxItems": 5,
                                    "minItems": 0,
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "NextToken": {
                        "description": "(Optional) The token for the next set of items to return. (You received this token from a previous call.)",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListComplianceItemsRequest": {
                "properties": {
                    "Filters": {
                        "description": "One or more compliance filters. Use a filter to return a more specific list of results.",
                        "items": {
                            "description": "One or more filters. Use a filter to return a more specific list of results.",
                            "properties": {
                                "Key": {
                                    "description": "The name of the filter.",
                                    "maxLength": 200,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Type": {
                                    "description": "The type of comparison that should be performed for the value: Equal, NotEqual, BeginWith, LessThan, or GreaterThan.",
                                    "enum": [
                                        "EQUAL",
                                        "NOT_EQUAL",
                                        "BEGIN_WITH",
                                        "LESS_THAN",
                                        "GREATER_THAN"
                                    ],
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "The value for which to search.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "maxItems": 20,
                                    "minItems": 1,
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "MaxResults": {
                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                        "maximum": 50,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "A token to start the list. Use this token to get the next set of results. ",
                        "type": "string"
                    },
                    "ResourceIds": {
                        "description": "The ID for the resources from which to get compliance information. Currently, you can only specify one resource ID.",
                        "items": {
                            "maxLength": 100,
                            "minLength": 1,
                            "type": "string"
                        },
                        "minItems": 1,
                        "type": "array"
                    },
                    "ResourceTypes": {
                        "description": "The type of resource from which to get compliance information. Currently, the only supported resource type is <code>ManagedInstance</code>.",
                        "items": {
                            "maxLength": 50,
                            "minLength": 1,
                            "type": "string"
                        },
                        "minItems": 1,
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "ListComplianceItemsResult": {
                "properties": {
                    "ComplianceItems": {
                        "description": "A list of compliance information for the specified resource ID. ",
                        "items": {
                            "description": "Information about the compliance as defined by the resource type. For example, for a patch resource type, <code>Items</code> includes information about the PatchSeverity, Classification, etc.",
                            "properties": {
                                "ComplianceType": {
                                    "description": "The compliance type. For example, Association (for a State Manager association), Patch, or Custom:<code>string</code> are all valid compliance types.",
                                    "maxLength": 100,
                                    "minLength": 1,
                                    "pattern": "[A-Za-z0-9_\\-]\\w+|Custom:[a-zA-Z0-9_\\-]\\w+",
                                    "type": "string"
                                },
                                "Details": {
                                    "description": "A \"Key\": \"Value\" tag combination for the compliance item.",
                                    "items": {
                                        "properties": {
                                            "key": {
                                                "maxLength": 64,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "value": {
                                                "maxLength": 4096,
                                                "minLength": 0,
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "ExecutionSummary": {
                                    "description": "A summary for the compliance item. The summary includes an execution ID, the execution type (for example, command), and the execution time.",
                                    "properties": {
                                        "ExecutionId": {
                                            "description": "An ID created by the system when <code>PutComplianceItems</code> was called. For example, <code>CommandID</code> is a valid execution ID. You can use this ID in subsequent calls.",
                                            "maxLength": 100,
                                            "type": "string"
                                        },
                                        "ExecutionTime": {
                                            "description": "The time the execution ran as a datetime object that is saved in the following format: yyyy-MM-dd'T'HH:mm:ss'Z'.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "ExecutionType": {
                                            "description": "The type of execution. For example, <code>Command</code> is a valid execution type.",
                                            "maxLength": 50,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "ExecutionTime"
                                    ],
                                    "type": "object"
                                },
                                "Id": {
                                    "description": "An ID for the compliance item. For example, if the compliance item is a Windows patch, the ID could be the number of the KB article; for example: KB4010320.",
                                    "maxLength": 100,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "ResourceId": {
                                    "description": "An ID for the resource. For a managed instance, this is the instance ID.",
                                    "maxLength": 100,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "ResourceType": {
                                    "description": "The type of resource. <code>ManagedInstance</code> is currently the only supported resource type.",
                                    "maxLength": 50,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Severity": {
                                    "description": "The severity of the compliance status. Severity can be one of the following: Critical, High, Medium, Low, Informational, Unspecified.",
                                    "enum": [
                                        "CRITICAL",
                                        "HIGH",
                                        "MEDIUM",
                                        "LOW",
                                        "INFORMATIONAL",
                                        "UNSPECIFIED"
                                    ],
                                    "type": "string"
                                },
                                "Status": {
                                    "description": "The status of the compliance item. An item is either COMPLIANT or NON_COMPLIANT.",
                                    "enum": [
                                        "COMPLIANT",
                                        "NON_COMPLIANT"
                                    ],
                                    "type": "string"
                                },
                                "Title": {
                                    "description": "A title for the compliance item. For example, if the compliance item is a Windows patch, the title could be the title of the KB article for the patch; for example: Security Update for Active Directory Federation Services.",
                                    "maxLength": 500,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "NextToken": {
                        "description": "The token for the next set of items to return. Use this token to get the next set of results.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListComplianceSummariesRequest": {
                "properties": {
                    "Filters": {
                        "description": "One or more compliance or inventory filters. Use a filter to return a more specific list of results.",
                        "items": {
                            "description": "One or more filters. Use a filter to return a more specific list of results.",
                            "properties": {
                                "Key": {
                                    "description": "The name of the filter.",
                                    "maxLength": 200,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Type": {
                                    "description": "The type of comparison that should be performed for the value: Equal, NotEqual, BeginWith, LessThan, or GreaterThan.",
                                    "enum": [
                                        "EQUAL",
                                        "NOT_EQUAL",
                                        "BEGIN_WITH",
                                        "LESS_THAN",
                                        "GREATER_THAN"
                                    ],
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "The value for which to search.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "maxItems": 20,
                                    "minItems": 1,
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "MaxResults": {
                        "description": "The maximum number of items to return for this call. Currently, you can specify null or 50. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                        "maximum": 50,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "A token to start the list. Use this token to get the next set of results. ",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListComplianceSummariesResult": {
                "properties": {
                    "ComplianceSummaryItems": {
                        "description": "A list of compliant and non-compliant summary counts based on compliance types. For example, this call returns State Manager associations, patches, or custom compliance types according to the filter criteria that you specified.",
                        "items": {
                            "description": "A summary of compliance information by compliance type.",
                            "properties": {
                                "ComplianceType": {
                                    "description": "The type of compliance item. For example, the compliance type can be Association, Patch, or Custom:string.",
                                    "maxLength": 100,
                                    "minLength": 1,
                                    "pattern": "[A-Za-z0-9_\\-]\\w+|Custom:[a-zA-Z0-9_\\-]\\w+",
                                    "type": "string"
                                },
                                "CompliantSummary": {
                                    "description": "A list of COMPLIANT items for the specified compliance type.",
                                    "properties": {
                                        "CompliantCount": {
                                            "description": "The total number of resources that are compliant.",
                                            "type": "integer"
                                        },
                                        "SeveritySummary": {
                                            "description": "A summary of the compliance severity by compliance type.",
                                            "properties": {
                                                "CriticalCount": {
                                                    "description": "The total number of resources or compliance items that have a severity level of critical. Critical severity is determined by the organization that published the compliance items.",
                                                    "type": "integer"
                                                },
                                                "HighCount": {
                                                    "description": "The total number of resources or compliance items that have a severity level of high. High severity is determined by the organization that published the compliance items.",
                                                    "type": "integer"
                                                },
                                                "InformationalCount": {
                                                    "description": "The total number of resources or compliance items that have a severity level of informational. Informational severity is determined by the organization that published the compliance items.",
                                                    "type": "integer"
                                                },
                                                "LowCount": {
                                                    "description": "The total number of resources or compliance items that have a severity level of low. Low severity is determined by the organization that published the compliance items.",
                                                    "type": "integer"
                                                },
                                                "MediumCount": {
                                                    "description": "The total number of resources or compliance items that have a severity level of medium. Medium severity is determined by the organization that published the compliance items.",
                                                    "type": "integer"
                                                },
                                                "UnspecifiedCount": {
                                                    "description": "The total number of resources or compliance items that have a severity level of unspecified. Unspecified severity is determined by the organization that published the compliance items.",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "NonCompliantSummary": {
                                    "description": "A list of NON_COMPLIANT items for the specified compliance type.",
                                    "properties": {
                                        "NonCompliantCount": {
                                            "description": "The total number of compliance items that are not compliant.",
                                            "type": "integer"
                                        },
                                        "SeveritySummary": {
                                            "description": "A summary of the non-compliance severity by compliance type",
                                            "properties": {
                                                "CriticalCount": {
                                                    "description": "The total number of resources or compliance items that have a severity level of critical. Critical severity is determined by the organization that published the compliance items.",
                                                    "type": "integer"
                                                },
                                                "HighCount": {
                                                    "description": "The total number of resources or compliance items that have a severity level of high. High severity is determined by the organization that published the compliance items.",
                                                    "type": "integer"
                                                },
                                                "InformationalCount": {
                                                    "description": "The total number of resources or compliance items that have a severity level of informational. Informational severity is determined by the organization that published the compliance items.",
                                                    "type": "integer"
                                                },
                                                "LowCount": {
                                                    "description": "The total number of resources or compliance items that have a severity level of low. Low severity is determined by the organization that published the compliance items.",
                                                    "type": "integer"
                                                },
                                                "MediumCount": {
                                                    "description": "The total number of resources or compliance items that have a severity level of medium. Medium severity is determined by the organization that published the compliance items.",
                                                    "type": "integer"
                                                },
                                                "UnspecifiedCount": {
                                                    "description": "The total number of resources or compliance items that have a severity level of unspecified. Unspecified severity is determined by the organization that published the compliance items.",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "NextToken": {
                        "description": "The token for the next set of items to return. Use this token to get the next set of results.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListDocumentVersionsRequest": {
                "properties": {
                    "MaxResults": {
                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                        "maximum": 50,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "Name": {
                        "description": "The name of the document about which you want version information.",
                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                        "type": "string"
                    },
                    "NextToken": {
                        "description": "The token for the next set of items to return. (You received this token from a previous call.)",
                        "type": "string"
                    }
                },
                "required": [
                    "Name"
                ],
                "type": "object"
            },
            "ListDocumentVersionsResult": {
                "properties": {
                    "DocumentVersions": {
                        "description": "The document versions.",
                        "items": {
                            "description": "Version information about the document.",
                            "properties": {
                                "CreatedDate": {
                                    "description": "The date the document was created.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "DocumentFormat": {
                                    "description": "The document format, either JSON or YAML.",
                                    "enum": [
                                        "YAML",
                                        "JSON"
                                    ],
                                    "type": "string"
                                },
                                "DocumentVersion": {
                                    "description": "The document version.",
                                    "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                    "type": "string"
                                },
                                "IsDefaultVersion": {
                                    "description": "An identifier for the default version of the document.",
                                    "type": "boolean"
                                },
                                "Name": {
                                    "description": "The document name.",
                                    "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                    "type": "string"
                                },
                                "Status": {
                                    "description": "The status of the Systems Manager document, such as <code>Creating</code>, <code>Active</code>, <code>Failed</code>, and <code>Deleting</code>.",
                                    "enum": [
                                        "Creating",
                                        "Active",
                                        "Updating",
                                        "Deleting",
                                        "Failed"
                                    ],
                                    "type": "string"
                                },
                                "StatusInformation": {
                                    "description": "A message returned by AWS Systems Manager that explains the <code>Status</code> value. For example, a <code>Failed</code> status might be explained by the <code>StatusInformation</code> message, \"The specified S3 bucket does not exist. Verify that the URL of the S3 bucket is correct.\"",
                                    "type": "string"
                                },
                                "VersionName": {
                                    "description": "The version of the artifact associated with the document. For example, \"Release 12, Update 6\". This value is unique across all versions of a document, and cannot be changed.",
                                    "pattern": "^[a-zA-Z0-9_\\-.]{1,128}$",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "minItems": 1,
                        "type": "array"
                    },
                    "NextToken": {
                        "description": "The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListDocumentsRequest": {
                "properties": {
                    "DocumentFilterList": {
                        "description": "One or more filters. Use a filter to return a more specific list of results.",
                        "items": {
                            "description": "Describes a filter.",
                            "properties": {
                                "key": {
                                    "description": "The name of the filter.",
                                    "enum": [
                                        "Name",
                                        "Owner",
                                        "PlatformTypes",
                                        "DocumentType"
                                    ],
                                    "type": "string"
                                },
                                "value": {
                                    "description": "The value of the filter.",
                                    "minLength": 1,
                                    "type": "string"
                                }
                            },
                            "required": [
                                "key",
                                "value"
                            ],
                            "type": "object"
                        },
                        "minItems": 1,
                        "type": "array"
                    },
                    "Filters": {
                        "description": "One or more filters. Use a filter to return a more specific list of results.",
                        "items": {
                            "description": "<p>One or more filters. Use a filter to return a more specific list of documents.</p> <p>For keys, you can specify one or more tags that have been applied to a document. </p> <p>Other valid values include Owner, Name, PlatformTypes, and DocumentType.</p> <p>Note that only one Owner can be specified in a request. For example: <code>Key=Owner,Values=Self</code>.</p> <p>If you use Name as a key, you can use a name prefix to return a list of documents. For example, in the AWS CLI, to return a list of all documents that begin with <code>Te</code>, run the following command:</p> <p> <code>aws ssm list-documents --filters Key=Name,Values=Te</code> </p> <p>If you specify more than two keys, only documents that are identified by all the tags are returned in the results. If you specify more than two values for a key, documents that are identified by any of the values are returned in the results.</p> <p>To specify a custom key and value pair, use the format <code>Key=tag:[tagName],Values=[valueName]</code>.</p> <p>For example, if you created a Key called region and are using the AWS CLI to call the <code>list-documents</code> command: </p> <p> <code>aws ssm list-documents --filters Key=tag:region,Values=east,west Key=Owner,Values=Self</code> </p>",
                            "properties": {
                                "Key": {
                                    "description": "The name of the filter key.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "The value for the filter key.",
                                    "items": {
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 6,
                        "minItems": 0,
                        "type": "array"
                    },
                    "MaxResults": {
                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                        "maximum": 50,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "The token for the next set of items to return. (You received this token from a previous call.)",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListDocumentsResult": {
                "properties": {
                    "DocumentIdentifiers": {
                        "description": "The names of the Systems Manager documents.",
                        "items": {
                            "description": "Describes the name of a Systems Manager document.",
                            "properties": {
                                "DocumentFormat": {
                                    "description": "The document format, either JSON or YAML.",
                                    "enum": [
                                        "YAML",
                                        "JSON"
                                    ],
                                    "type": "string"
                                },
                                "DocumentType": {
                                    "description": "The document type.",
                                    "enum": [
                                        "Command",
                                        "Policy",
                                        "Automation",
                                        "Session",
                                        "Package"
                                    ],
                                    "type": "string"
                                },
                                "DocumentVersion": {
                                    "description": "The document version.",
                                    "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "The name of the Systems Manager document.",
                                    "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                                    "type": "string"
                                },
                                "Owner": {
                                    "description": "The AWS user account that created the document.",
                                    "type": "string"
                                },
                                "PlatformTypes": {
                                    "description": "The operating system platform. ",
                                    "items": {
                                        "enum": [
                                            "Windows",
                                            "Linux"
                                        ],
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "SchemaVersion": {
                                    "description": "The schema version.",
                                    "pattern": "([0-9]+)\\.([0-9]+)",
                                    "type": "string"
                                },
                                "Tags": {
                                    "description": "The tags, or metadata, that have been applied to the document.",
                                    "items": {
                                        "description": "Metadata that you assign to your AWS resources. Tags enable you to categorize your resources in different ways, for example, by purpose, owner, or environment. In Systems Manager, you can apply tags to documents, managed instances, Maintenance Windows, Parameter Store parameters, and patch baselines.",
                                        "properties": {
                                            "Key": {
                                                "description": "The name of the tag.",
                                                "maxLength": 128,
                                                "minLength": 1,
                                                "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                "type": "string"
                                            },
                                            "Value": {
                                                "description": "The value of the tag.",
                                                "maxLength": 256,
                                                "minLength": 1,
                                                "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "Key",
                                            "Value"
                                        ],
                                        "type": "object"
                                    },
                                    "maxItems": 1000,
                                    "type": "array"
                                },
                                "TargetType": {
                                    "description": "The target type which defines the kinds of resources the document can run on. For example, /AWS::EC2::Instance. For a list of valid resource types, see <a href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html\">AWS Resource Types Reference</a> in the <i>AWS CloudFormation User Guide</i>. ",
                                    "maxLength": 200,
                                    "pattern": "^\\/[\\w\\.\\-\\:\\/]*$",
                                    "type": "string"
                                },
                                "VersionName": {
                                    "description": "An optional field specifying the version of the artifact associated with the document. For example, \"Release 12, Update 6\". This value is unique across all versions of a document, and cannot be changed.",
                                    "pattern": "^[a-zA-Z0-9_\\-.]{1,128}$",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "NextToken": {
                        "description": "The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListInventoryEntriesRequest": {
                "properties": {
                    "Filters": {
                        "description": "One or more filters. Use a filter to return a more specific list of results.",
                        "items": {
                            "description": "One or more filters. Use a filter to return a more specific list of results.",
                            "properties": {
                                "Key": {
                                    "description": "The name of the filter key.",
                                    "maxLength": 200,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Type": {
                                    "description": "The type of filter. Valid values include the following: \"Equal\"|\"NotEqual\"|\"BeginWith\"|\"LessThan\"|\"GreaterThan\"",
                                    "enum": [
                                        "Equal",
                                        "NotEqual",
                                        "BeginWith",
                                        "LessThan",
                                        "GreaterThan",
                                        "Exists"
                                    ],
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "Inventory filter values. Example: inventory filter where instance IDs are specified as values Key=AWS:InstanceInformation.InstanceId,Values= i-a12b3c4d5e6g, i-1a2b3c4d5e6,Type=Equal ",
                                    "items": {
                                        "type": "string"
                                    },
                                    "maxItems": 40,
                                    "minItems": 1,
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Key",
                                "Values"
                            ],
                            "type": "object"
                        },
                        "maxItems": 5,
                        "minItems": 1,
                        "type": "array"
                    },
                    "InstanceId": {
                        "description": "The instance ID for which you want inventory information.",
                        "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                        "type": "string"
                    },
                    "MaxResults": {
                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                        "maximum": 50,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "The token for the next set of items to return. (You received this token from a previous call.)",
                        "type": "string"
                    },
                    "TypeName": {
                        "description": "The type of inventory item for which you want information.",
                        "maxLength": 100,
                        "minLength": 1,
                        "pattern": "^(AWS|Custom):.*$",
                        "type": "string"
                    }
                },
                "required": [
                    "InstanceId",
                    "TypeName"
                ],
                "type": "object"
            },
            "ListInventoryEntriesResult": {
                "properties": {
                    "CaptureTime": {
                        "description": "The time that inventory information was collected for the instance(s).",
                        "pattern": "^(20)[0-9][0-9]-(0[1-9]|1[012])-([12][0-9]|3[01]|0[1-9])(T)(2[0-3]|[0-1][0-9])(:[0-5][0-9])(:[0-5][0-9])(Z)$",
                        "type": "string"
                    },
                    "Entries": {
                        "description": "A list of inventory items on the instance(s).",
                        "items": {
                            "items": {
                                "properties": {
                                    "key": {
                                        "maxLength": 64,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "value": {
                                        "maxLength": 4096,
                                        "minLength": 0,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "maxItems": 50,
                            "minItems": 0,
                            "type": "array"
                        },
                        "maxItems": 10000,
                        "minItems": 0,
                        "type": "array"
                    },
                    "InstanceId": {
                        "description": "The instance ID targeted by the request to query inventory information.",
                        "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                        "type": "string"
                    },
                    "NextToken": {
                        "description": "The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.",
                        "type": "string"
                    },
                    "SchemaVersion": {
                        "description": "The inventory schema version used by the instance(s).",
                        "pattern": "^([0-9]{1,6})(\\.[0-9]{1,6})$",
                        "type": "string"
                    },
                    "TypeName": {
                        "description": "The type of inventory item returned by the request.",
                        "maxLength": 100,
                        "minLength": 1,
                        "pattern": "^(AWS|Custom):.*$",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListResourceComplianceSummariesRequest": {
                "properties": {
                    "Filters": {
                        "description": "One or more filters. Use a filter to return a more specific list of results.",
                        "items": {
                            "description": "One or more filters. Use a filter to return a more specific list of results.",
                            "properties": {
                                "Key": {
                                    "description": "The name of the filter.",
                                    "maxLength": 200,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Type": {
                                    "description": "The type of comparison that should be performed for the value: Equal, NotEqual, BeginWith, LessThan, or GreaterThan.",
                                    "enum": [
                                        "EQUAL",
                                        "NOT_EQUAL",
                                        "BEGIN_WITH",
                                        "LESS_THAN",
                                        "GREATER_THAN"
                                    ],
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "The value for which to search.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "maxItems": 20,
                                    "minItems": 1,
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "MaxResults": {
                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                        "maximum": 50,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "A token to start the list. Use this token to get the next set of results. ",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListResourceComplianceSummariesResult": {
                "properties": {
                    "NextToken": {
                        "description": "The token for the next set of items to return. Use this token to get the next set of results.",
                        "type": "string"
                    },
                    "ResourceComplianceSummaryItems": {
                        "description": "A summary count for specified or targeted managed instances. Summary count includes information about compliant and non-compliant State Manager associations, patch status, or custom items according to the filter criteria that you specify. ",
                        "items": {
                            "description": "Compliance summary information for a specific resource. ",
                            "properties": {
                                "ComplianceType": {
                                    "description": "The compliance type.",
                                    "maxLength": 100,
                                    "minLength": 1,
                                    "pattern": "[A-Za-z0-9_\\-]\\w+|Custom:[a-zA-Z0-9_\\-]\\w+",
                                    "type": "string"
                                },
                                "CompliantSummary": {
                                    "description": "A list of items that are compliant for the resource.",
                                    "properties": {
                                        "CompliantCount": {
                                            "description": "The total number of resources that are compliant.",
                                            "type": "integer"
                                        },
                                        "SeveritySummary": {
                                            "description": "A summary of the compliance severity by compliance type.",
                                            "properties": {
                                                "CriticalCount": {
                                                    "description": "The total number of resources or compliance items that have a severity level of critical. Critical severity is determined by the organization that published the compliance items.",
                                                    "type": "integer"
                                                },
                                                "HighCount": {
                                                    "description": "The total number of resources or compliance items that have a severity level of high. High severity is determined by the organization that published the compliance items.",
                                                    "type": "integer"
                                                },
                                                "InformationalCount": {
                                                    "description": "The total number of resources or compliance items that have a severity level of informational. Informational severity is determined by the organization that published the compliance items.",
                                                    "type": "integer"
                                                },
                                                "LowCount": {
                                                    "description": "The total number of resources or compliance items that have a severity level of low. Low severity is determined by the organization that published the compliance items.",
                                                    "type": "integer"
                                                },
                                                "MediumCount": {
                                                    "description": "The total number of resources or compliance items that have a severity level of medium. Medium severity is determined by the organization that published the compliance items.",
                                                    "type": "integer"
                                                },
                                                "UnspecifiedCount": {
                                                    "description": "The total number of resources or compliance items that have a severity level of unspecified. Unspecified severity is determined by the organization that published the compliance items.",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "ExecutionSummary": {
                                    "description": "Information about the execution.",
                                    "properties": {
                                        "ExecutionId": {
                                            "description": "An ID created by the system when <code>PutComplianceItems</code> was called. For example, <code>CommandID</code> is a valid execution ID. You can use this ID in subsequent calls.",
                                            "maxLength": 100,
                                            "type": "string"
                                        },
                                        "ExecutionTime": {
                                            "description": "The time the execution ran as a datetime object that is saved in the following format: yyyy-MM-dd'T'HH:mm:ss'Z'.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "ExecutionType": {
                                            "description": "The type of execution. For example, <code>Command</code> is a valid execution type.",
                                            "maxLength": 50,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "ExecutionTime"
                                    ],
                                    "type": "object"
                                },
                                "NonCompliantSummary": {
                                    "description": "A list of items that aren't compliant for the resource.",
                                    "properties": {
                                        "NonCompliantCount": {
                                            "description": "The total number of compliance items that are not compliant.",
                                            "type": "integer"
                                        },
                                        "SeveritySummary": {
                                            "description": "A summary of the non-compliance severity by compliance type",
                                            "properties": {
                                                "CriticalCount": {
                                                    "description": "The total number of resources or compliance items that have a severity level of critical. Critical severity is determined by the organization that published the compliance items.",
                                                    "type": "integer"
                                                },
                                                "HighCount": {
                                                    "description": "The total number of resources or compliance items that have a severity level of high. High severity is determined by the organization that published the compliance items.",
                                                    "type": "integer"
                                                },
                                                "InformationalCount": {
                                                    "description": "The total number of resources or compliance items that have a severity level of informational. Informational severity is determined by the organization that published the compliance items.",
                                                    "type": "integer"
                                                },
                                                "LowCount": {
                                                    "description": "The total number of resources or compliance items that have a severity level of low. Low severity is determined by the organization that published the compliance items.",
                                                    "type": "integer"
                                                },
                                                "MediumCount": {
                                                    "description": "The total number of resources or compliance items that have a severity level of medium. Medium severity is determined by the organization that published the compliance items.",
                                                    "type": "integer"
                                                },
                                                "UnspecifiedCount": {
                                                    "description": "The total number of resources or compliance items that have a severity level of unspecified. Unspecified severity is determined by the organization that published the compliance items.",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "OverallSeverity": {
                                    "description": "The highest severity item found for the resource. The resource is compliant for this item.",
                                    "enum": [
                                        "CRITICAL",
                                        "HIGH",
                                        "MEDIUM",
                                        "LOW",
                                        "INFORMATIONAL",
                                        "UNSPECIFIED"
                                    ],
                                    "type": "string"
                                },
                                "ResourceId": {
                                    "description": "The resource ID.",
                                    "maxLength": 100,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "ResourceType": {
                                    "description": "The resource type.",
                                    "maxLength": 50,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Status": {
                                    "description": "The compliance status for the resource.",
                                    "enum": [
                                        "COMPLIANT",
                                        "NON_COMPLIANT"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "ListResourceDataSyncRequest": {
                "properties": {
                    "MaxResults": {
                        "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
                        "maximum": 50,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "A token to start the list. Use this token to get the next set of results. ",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListResourceDataSyncResult": {
                "properties": {
                    "NextToken": {
                        "description": "The token for the next set of items to return. Use this token to get the next set of results.",
                        "type": "string"
                    },
                    "ResourceDataSyncItems": {
                        "description": "A list of your current Resource Data Sync configurations and their statuses.",
                        "items": {
                            "description": "Information about a Resource Data Sync configuration, including its current status and last successful sync.",
                            "properties": {
                                "LastStatus": {
                                    "description": "The status reported by the last sync.",
                                    "enum": [
                                        "Successful",
                                        "Failed",
                                        "InProgress"
                                    ],
                                    "type": "string"
                                },
                                "LastSuccessfulSyncTime": {
                                    "description": "The last time the sync operations returned a status of <code>SUCCESSFUL</code> (UTC).",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "LastSyncStatusMessage": {
                                    "description": "The status message details reported by the last sync.",
                                    "type": "string"
                                },
                                "LastSyncTime": {
                                    "description": "The last time the configuration attempted to sync (UTC).",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "S3Destination": {
                                    "description": "Configuration information for the target Amazon S3 bucket.",
                                    "properties": {
                                        "AWSKMSKeyARN": {
                                            "description": "The ARN of an encryption key for a destination in Amazon S3. Must belong to the same region as the destination Amazon S3 bucket.",
                                            "maxLength": 512,
                                            "minLength": 1,
                                            "pattern": "arn:.*",
                                            "type": "string"
                                        },
                                        "BucketName": {
                                            "description": "The name of the Amazon S3 bucket where the aggregated data is stored.",
                                            "maxLength": 2048,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "Prefix": {
                                            "description": "An Amazon S3 prefix for the bucket.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "Region": {
                                            "description": "The AWS Region with the Amazon S3 bucket targeted by the Resource Data Sync.",
                                            "maxLength": 64,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "SyncFormat": {
                                            "description": "A supported sync format. The following format is currently supported: JsonSerDe",
                                            "enum": [
                                                "JsonSerDe"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "BucketName",
                                        "SyncFormat",
                                        "Region"
                                    ],
                                    "type": "object"
                                },
                                "SyncCreatedTime": {
                                    "description": "The date and time the configuration was created (UTC).",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "SyncName": {
                                    "description": "The name of the Resource Data Sync.",
                                    "maxLength": 64,
                                    "minLength": 1,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "ListTagsForResourceRequest": {
                "properties": {
                    "ResourceId": {
                        "description": "The resource ID for which you want to see a list of tags.",
                        "type": "string"
                    },
                    "ResourceType": {
                        "description": "Returns a list of tags for a specific resource type.",
                        "enum": [
                            "Document",
                            "ManagedInstance",
                            "MaintenanceWindow",
                            "Parameter",
                            "PatchBaseline"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "ResourceType",
                    "ResourceId"
                ],
                "type": "object"
            },
            "ListTagsForResourceResult": {
                "properties": {
                    "TagList": {
                        "description": "A list of tags.",
                        "items": {
                            "description": "Metadata that you assign to your AWS resources. Tags enable you to categorize your resources in different ways, for example, by purpose, owner, or environment. In Systems Manager, you can apply tags to documents, managed instances, Maintenance Windows, Parameter Store parameters, and patch baselines.",
                            "properties": {
                                "Key": {
                                    "description": "The name of the tag.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "The value of the tag.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Key",
                                "Value"
                            ],
                            "type": "object"
                        },
                        "maxItems": 1000,
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "LoggingInfo": {
                "description": "<p>Information about an Amazon S3 bucket to write instance-level logs to.</p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an S3 bucket to contain logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> </note>",
                "properties": {
                    "S3BucketName": {
                        "description": "The name of an Amazon S3 bucket where execution logs are stored .",
                        "maxLength": 63,
                        "minLength": 3,
                        "type": "string"
                    },
                    "S3KeyPrefix": {
                        "description": "(Optional) The Amazon S3 bucket subfolder. ",
                        "maxLength": 500,
                        "type": "string"
                    },
                    "S3Region": {
                        "description": "The region where the Amazon S3 bucket is located.",
                        "maxLength": 20,
                        "minLength": 3,
                        "type": "string"
                    }
                },
                "required": [
                    "S3BucketName",
                    "S3Region"
                ],
                "type": "object"
            },
            "Long": {
                "type": "integer"
            },
            "MaintenanceWindowAllowUnassociatedTargets": {
                "type": "boolean"
            },
            "MaintenanceWindowAutomationParameters": {
                "description": "The parameters for an AUTOMATION task type.",
                "properties": {
                    "DocumentVersion": {
                        "description": "The version of an Automation document to use during task execution.",
                        "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                        "type": "string"
                    },
                    "Parameters": {
                        "description": "<p>The parameters for the AUTOMATION task.</p> <p>For information about specifying and updating task parameters, see <a>RegisterTaskWithMaintenanceWindow</a> and <a>UpdateMaintenanceWindowTask</a>.</p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an S3 bucket to contain logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p> <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p>For AUTOMATION task types, Systems Manager ignores any values specified for these parameters.</p> </note>",
                        "items": {
                            "properties": {
                                "key": {
                                    "maxLength": 30,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "value": {
                                    "items": {
                                        "maxLength": 512,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "maxItems": 10,
                                    "minItems": 0,
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 200,
                        "minItems": 1,
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "MaintenanceWindowCutoff": {
                "maximum": 23,
                "minimum": 0,
                "type": "integer"
            },
            "MaintenanceWindowDescription": {
                "format": "password",
                "maxLength": 128,
                "minLength": 1,
                "type": "string"
            },
            "MaintenanceWindowDurationHours": {
                "maximum": 24,
                "minimum": 1,
                "type": "integer"
            },
            "MaintenanceWindowEnabled": {
                "type": "boolean"
            },
            "MaintenanceWindowExecution": {
                "description": "Describes the information about an execution of a Maintenance Window. ",
                "properties": {
                    "EndTime": {
                        "description": "The time the execution finished.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "StartTime": {
                        "description": "The time the execution started.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "Status": {
                        "description": "The status of the execution.",
                        "enum": [
                            "PENDING",
                            "IN_PROGRESS",
                            "SUCCESS",
                            "FAILED",
                            "TIMED_OUT",
                            "CANCELLING",
                            "CANCELLED",
                            "SKIPPED_OVERLAPPING"
                        ],
                        "type": "string"
                    },
                    "StatusDetails": {
                        "description": "The details explaining the Status. Only available for certain status values.",
                        "maxLength": 250,
                        "minLength": 0,
                        "type": "string"
                    },
                    "WindowExecutionId": {
                        "description": "The ID of the Maintenance Window execution.",
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                        "type": "string"
                    },
                    "WindowId": {
                        "description": "The ID of the Maintenance Window.",
                        "maxLength": 20,
                        "minLength": 20,
                        "pattern": "^mw-[0-9a-f]{17}$",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "MaintenanceWindowExecutionId": {
                "maxLength": 36,
                "minLength": 36,
                "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                "type": "string"
            },
            "MaintenanceWindowExecutionList": {
                "items": {
                    "description": "Describes the information about an execution of a Maintenance Window. ",
                    "properties": {
                        "EndTime": {
                            "description": "The time the execution finished.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "StartTime": {
                            "description": "The time the execution started.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "Status": {
                            "description": "The status of the execution.",
                            "enum": [
                                "PENDING",
                                "IN_PROGRESS",
                                "SUCCESS",
                                "FAILED",
                                "TIMED_OUT",
                                "CANCELLING",
                                "CANCELLED",
                                "SKIPPED_OVERLAPPING"
                            ],
                            "type": "string"
                        },
                        "StatusDetails": {
                            "description": "The details explaining the Status. Only available for certain status values.",
                            "maxLength": 250,
                            "minLength": 0,
                            "type": "string"
                        },
                        "WindowExecutionId": {
                            "description": "The ID of the Maintenance Window execution.",
                            "maxLength": 36,
                            "minLength": 36,
                            "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                            "type": "string"
                        },
                        "WindowId": {
                            "description": "The ID of the Maintenance Window.",
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^mw-[0-9a-f]{17}$",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "MaintenanceWindowExecutionStatus": {
                "enum": [
                    "PENDING",
                    "IN_PROGRESS",
                    "SUCCESS",
                    "FAILED",
                    "TIMED_OUT",
                    "CANCELLING",
                    "CANCELLED",
                    "SKIPPED_OVERLAPPING"
                ],
                "type": "string"
            },
            "MaintenanceWindowExecutionStatusDetails": {
                "maxLength": 250,
                "minLength": 0,
                "type": "string"
            },
            "MaintenanceWindowExecutionTaskExecutionId": {
                "type": "string"
            },
            "MaintenanceWindowExecutionTaskId": {
                "maxLength": 36,
                "minLength": 36,
                "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                "type": "string"
            },
            "MaintenanceWindowExecutionTaskIdList": {
                "items": {
                    "maxLength": 36,
                    "minLength": 36,
                    "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                    "type": "string"
                },
                "type": "array"
            },
            "MaintenanceWindowExecutionTaskIdentity": {
                "description": "Information about a task execution performed as part of a Maintenance Window execution.",
                "properties": {
                    "EndTime": {
                        "description": "The time the task execution finished.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "StartTime": {
                        "description": "The time the task execution started.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "Status": {
                        "description": "The status of the task execution.",
                        "enum": [
                            "PENDING",
                            "IN_PROGRESS",
                            "SUCCESS",
                            "FAILED",
                            "TIMED_OUT",
                            "CANCELLING",
                            "CANCELLED",
                            "SKIPPED_OVERLAPPING"
                        ],
                        "type": "string"
                    },
                    "StatusDetails": {
                        "description": "The details explaining the status of the task execution. Only available for certain status values.",
                        "maxLength": 250,
                        "minLength": 0,
                        "type": "string"
                    },
                    "TaskArn": {
                        "description": "The ARN of the executed task.",
                        "maxLength": 1600,
                        "minLength": 1,
                        "type": "string"
                    },
                    "TaskExecutionId": {
                        "description": "The ID of the specific task execution in the Maintenance Window execution.",
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                        "type": "string"
                    },
                    "TaskType": {
                        "description": "The type of executed task.",
                        "enum": [
                            "RUN_COMMAND",
                            "AUTOMATION",
                            "STEP_FUNCTIONS",
                            "LAMBDA"
                        ],
                        "type": "string"
                    },
                    "WindowExecutionId": {
                        "description": "The ID of the Maintenance Window execution that ran the task.",
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "MaintenanceWindowExecutionTaskIdentityList": {
                "items": {
                    "description": "Information about a task execution performed as part of a Maintenance Window execution.",
                    "properties": {
                        "EndTime": {
                            "description": "The time the task execution finished.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "StartTime": {
                            "description": "The time the task execution started.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "Status": {
                            "description": "The status of the task execution.",
                            "enum": [
                                "PENDING",
                                "IN_PROGRESS",
                                "SUCCESS",
                                "FAILED",
                                "TIMED_OUT",
                                "CANCELLING",
                                "CANCELLED",
                                "SKIPPED_OVERLAPPING"
                            ],
                            "type": "string"
                        },
                        "StatusDetails": {
                            "description": "The details explaining the status of the task execution. Only available for certain status values.",
                            "maxLength": 250,
                            "minLength": 0,
                            "type": "string"
                        },
                        "TaskArn": {
                            "description": "The ARN of the executed task.",
                            "maxLength": 1600,
                            "minLength": 1,
                            "type": "string"
                        },
                        "TaskExecutionId": {
                            "description": "The ID of the specific task execution in the Maintenance Window execution.",
                            "maxLength": 36,
                            "minLength": 36,
                            "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                            "type": "string"
                        },
                        "TaskType": {
                            "description": "The type of executed task.",
                            "enum": [
                                "RUN_COMMAND",
                                "AUTOMATION",
                                "STEP_FUNCTIONS",
                                "LAMBDA"
                            ],
                            "type": "string"
                        },
                        "WindowExecutionId": {
                            "description": "The ID of the Maintenance Window execution that ran the task.",
                            "maxLength": 36,
                            "minLength": 36,
                            "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "MaintenanceWindowExecutionTaskInvocationId": {
                "maxLength": 36,
                "minLength": 36,
                "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                "type": "string"
            },
            "MaintenanceWindowExecutionTaskInvocationIdentity": {
                "description": "Describes the information about a task invocation for a particular target as part of a task execution performed as part of a Maintenance Window execution.",
                "properties": {
                    "EndTime": {
                        "description": "The time the invocation finished.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "ExecutionId": {
                        "description": "The ID of the action performed in the service that actually handled the task invocation. If the task type is RUN_COMMAND, this value is the command ID.",
                        "type": "string"
                    },
                    "InvocationId": {
                        "description": "The ID of the task invocation.",
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                        "type": "string"
                    },
                    "OwnerInformation": {
                        "description": "User-provided value that was specified when the target was registered with the Maintenance Window. This was also included in any CloudWatch events raised during the task invocation.",
                        "format": "password",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Parameters": {
                        "description": "The parameters that were provided for the invocation when it was executed.",
                        "format": "password",
                        "type": "string"
                    },
                    "StartTime": {
                        "description": "The time the invocation started.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "Status": {
                        "description": "The status of the task invocation.",
                        "enum": [
                            "PENDING",
                            "IN_PROGRESS",
                            "SUCCESS",
                            "FAILED",
                            "TIMED_OUT",
                            "CANCELLING",
                            "CANCELLED",
                            "SKIPPED_OVERLAPPING"
                        ],
                        "type": "string"
                    },
                    "StatusDetails": {
                        "description": "The details explaining the status of the task invocation. Only available for certain Status values. ",
                        "maxLength": 250,
                        "minLength": 0,
                        "type": "string"
                    },
                    "TaskExecutionId": {
                        "description": "The ID of the specific task execution in the Maintenance Window execution.",
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                        "type": "string"
                    },
                    "TaskType": {
                        "description": "The task type.",
                        "enum": [
                            "RUN_COMMAND",
                            "AUTOMATION",
                            "STEP_FUNCTIONS",
                            "LAMBDA"
                        ],
                        "type": "string"
                    },
                    "WindowExecutionId": {
                        "description": "The ID of the Maintenance Window execution that ran the task.",
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                        "type": "string"
                    },
                    "WindowTargetId": {
                        "description": "The ID of the target definition in this Maintenance Window the invocation was performed for.",
                        "maxLength": 36,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "MaintenanceWindowExecutionTaskInvocationIdentityList": {
                "items": {
                    "description": "Describes the information about a task invocation for a particular target as part of a task execution performed as part of a Maintenance Window execution.",
                    "properties": {
                        "EndTime": {
                            "description": "The time the invocation finished.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "ExecutionId": {
                            "description": "The ID of the action performed in the service that actually handled the task invocation. If the task type is RUN_COMMAND, this value is the command ID.",
                            "type": "string"
                        },
                        "InvocationId": {
                            "description": "The ID of the task invocation.",
                            "maxLength": 36,
                            "minLength": 36,
                            "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                            "type": "string"
                        },
                        "OwnerInformation": {
                            "description": "User-provided value that was specified when the target was registered with the Maintenance Window. This was also included in any CloudWatch events raised during the task invocation.",
                            "format": "password",
                            "maxLength": 128,
                            "minLength": 1,
                            "type": "string"
                        },
                        "Parameters": {
                            "description": "The parameters that were provided for the invocation when it was executed.",
                            "format": "password",
                            "type": "string"
                        },
                        "StartTime": {
                            "description": "The time the invocation started.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "Status": {
                            "description": "The status of the task invocation.",
                            "enum": [
                                "PENDING",
                                "IN_PROGRESS",
                                "SUCCESS",
                                "FAILED",
                                "TIMED_OUT",
                                "CANCELLING",
                                "CANCELLED",
                                "SKIPPED_OVERLAPPING"
                            ],
                            "type": "string"
                        },
                        "StatusDetails": {
                            "description": "The details explaining the status of the task invocation. Only available for certain Status values. ",
                            "maxLength": 250,
                            "minLength": 0,
                            "type": "string"
                        },
                        "TaskExecutionId": {
                            "description": "The ID of the specific task execution in the Maintenance Window execution.",
                            "maxLength": 36,
                            "minLength": 36,
                            "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                            "type": "string"
                        },
                        "TaskType": {
                            "description": "The task type.",
                            "enum": [
                                "RUN_COMMAND",
                                "AUTOMATION",
                                "STEP_FUNCTIONS",
                                "LAMBDA"
                            ],
                            "type": "string"
                        },
                        "WindowExecutionId": {
                            "description": "The ID of the Maintenance Window execution that ran the task.",
                            "maxLength": 36,
                            "minLength": 36,
                            "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                            "type": "string"
                        },
                        "WindowTargetId": {
                            "description": "The ID of the target definition in this Maintenance Window the invocation was performed for.",
                            "maxLength": 36,
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "MaintenanceWindowExecutionTaskInvocationParameters": {
                "format": "password",
                "type": "string"
            },
            "MaintenanceWindowFilter": {
                "description": "Filter used in the request. Supported filter keys are Name and Enabled.",
                "properties": {
                    "Key": {
                        "description": "The name of the filter.",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Values": {
                        "description": "The filter values.",
                        "items": {
                            "maxLength": 256,
                            "minLength": 1,
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "MaintenanceWindowFilterKey": {
                "maxLength": 128,
                "minLength": 1,
                "type": "string"
            },
            "MaintenanceWindowFilterList": {
                "items": {
                    "description": "Filter used in the request. Supported filter keys are Name and Enabled.",
                    "properties": {
                        "Key": {
                            "description": "The name of the filter.",
                            "maxLength": 128,
                            "minLength": 1,
                            "type": "string"
                        },
                        "Values": {
                            "description": "The filter values.",
                            "items": {
                                "maxLength": 256,
                                "minLength": 1,
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "maxItems": 5,
                "minItems": 0,
                "type": "array"
            },
            "MaintenanceWindowFilterValue": {
                "maxLength": 256,
                "minLength": 1,
                "type": "string"
            },
            "MaintenanceWindowFilterValues": {
                "items": {
                    "maxLength": 256,
                    "minLength": 1,
                    "type": "string"
                },
                "type": "array"
            },
            "MaintenanceWindowId": {
                "maxLength": 20,
                "minLength": 20,
                "pattern": "^mw-[0-9a-f]{17}$",
                "type": "string"
            },
            "MaintenanceWindowIdentity": {
                "description": "Information about the Maintenance Window.",
                "properties": {
                    "Cutoff": {
                        "description": "The number of hours before the end of the Maintenance Window that Systems Manager stops scheduling new tasks for execution.",
                        "maximum": 23,
                        "minimum": 0,
                        "type": "integer"
                    },
                    "Description": {
                        "description": "A description of the Maintenance Window.",
                        "format": "password",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Duration": {
                        "description": "The duration of the Maintenance Window in hours.",
                        "maximum": 24,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "Enabled": {
                        "description": "Whether the Maintenance Window is enabled.",
                        "type": "boolean"
                    },
                    "EndDate": {
                        "description": "The date and time, in ISO-8601 Extended format, for when the Maintenance Window is scheduled to become inactive.",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The name of the Maintenance Window.",
                        "maxLength": 128,
                        "minLength": 3,
                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                        "type": "string"
                    },
                    "NextExecutionTime": {
                        "description": "The next time the Maintenance Window will actually run, taking into account any specified times for the Maintenance Window to become active or inactive.",
                        "type": "string"
                    },
                    "Schedule": {
                        "description": "The schedule of the Maintenance Window in the form of a cron or rate expression.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "ScheduleTimezone": {
                        "description": "The time zone that the scheduled Maintenance Window executions are based on, in Internet Assigned Numbers Authority (IANA) format.",
                        "type": "string"
                    },
                    "StartDate": {
                        "description": "The date and time, in ISO-8601 Extended format, for when the Maintenance Window is scheduled to become active.",
                        "type": "string"
                    },
                    "WindowId": {
                        "description": "The ID of the Maintenance Window.",
                        "maxLength": 20,
                        "minLength": 20,
                        "pattern": "^mw-[0-9a-f]{17}$",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "MaintenanceWindowIdentityForTarget": {
                "description": "The Maintenance Window to which the specified target belongs.",
                "properties": {
                    "Name": {
                        "description": "The name of the Maintenance Window.",
                        "maxLength": 128,
                        "minLength": 3,
                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                        "type": "string"
                    },
                    "WindowId": {
                        "description": "The ID of the Maintenance Window.",
                        "maxLength": 20,
                        "minLength": 20,
                        "pattern": "^mw-[0-9a-f]{17}$",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "MaintenanceWindowIdentityList": {
                "items": {
                    "description": "Information about the Maintenance Window.",
                    "properties": {
                        "Cutoff": {
                            "description": "The number of hours before the end of the Maintenance Window that Systems Manager stops scheduling new tasks for execution.",
                            "maximum": 23,
                            "minimum": 0,
                            "type": "integer"
                        },
                        "Description": {
                            "description": "A description of the Maintenance Window.",
                            "format": "password",
                            "maxLength": 128,
                            "minLength": 1,
                            "type": "string"
                        },
                        "Duration": {
                            "description": "The duration of the Maintenance Window in hours.",
                            "maximum": 24,
                            "minimum": 1,
                            "type": "integer"
                        },
                        "Enabled": {
                            "description": "Whether the Maintenance Window is enabled.",
                            "type": "boolean"
                        },
                        "EndDate": {
                            "description": "The date and time, in ISO-8601 Extended format, for when the Maintenance Window is scheduled to become inactive.",
                            "type": "string"
                        },
                        "Name": {
                            "description": "The name of the Maintenance Window.",
                            "maxLength": 128,
                            "minLength": 3,
                            "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                            "type": "string"
                        },
                        "NextExecutionTime": {
                            "description": "The next time the Maintenance Window will actually run, taking into account any specified times for the Maintenance Window to become active or inactive.",
                            "type": "string"
                        },
                        "Schedule": {
                            "description": "The schedule of the Maintenance Window in the form of a cron or rate expression.",
                            "maxLength": 256,
                            "minLength": 1,
                            "type": "string"
                        },
                        "ScheduleTimezone": {
                            "description": "The time zone that the scheduled Maintenance Window executions are based on, in Internet Assigned Numbers Authority (IANA) format.",
                            "type": "string"
                        },
                        "StartDate": {
                            "description": "The date and time, in ISO-8601 Extended format, for when the Maintenance Window is scheduled to become active.",
                            "type": "string"
                        },
                        "WindowId": {
                            "description": "The ID of the Maintenance Window.",
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^mw-[0-9a-f]{17}$",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "MaintenanceWindowLambdaClientContext": {
                "maxLength": 8000,
                "minLength": 1,
                "type": "string"
            },
            "MaintenanceWindowLambdaParameters": {
                "description": "<p>The parameters for a LAMBDA task type.</p> <p>For information about specifying and updating task parameters, see <a>RegisterTaskWithMaintenanceWindow</a> and <a>UpdateMaintenanceWindowTask</a>.</p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an S3 bucket to contain logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p> <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p>For Lambda tasks, Systems Manager ignores any values specified for TaskParameters and LoggingInfo.</p> </note>",
                "properties": {
                    "ClientContext": {
                        "description": "Pass client-specific information to the Lambda function that you are invoking. You can then process the client information in your Lambda function as you choose through the context variable.",
                        "maxLength": 8000,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Payload": {
                        "description": "JSON to provide to your Lambda function as input.",
                        "format": "password",
                        "maxLength": 4096,
                        "type": "string"
                    },
                    "Qualifier": {
                        "description": "(Optional) Specify a Lambda function version or alias name. If you specify a function version, the action uses the qualified function ARN to invoke a specific Lambda function. If you specify an alias name, the action uses the alias ARN to invoke the Lambda function version to which the alias points.",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "MaintenanceWindowLambdaPayload": {
                "format": "password",
                "maxLength": 4096,
                "type": "string"
            },
            "MaintenanceWindowLambdaQualifier": {
                "maxLength": 128,
                "minLength": 1,
                "type": "string"
            },
            "MaintenanceWindowMaxResults": {
                "maximum": 100,
                "minimum": 10,
                "type": "integer"
            },
            "MaintenanceWindowName": {
                "maxLength": 128,
                "minLength": 3,
                "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                "type": "string"
            },
            "MaintenanceWindowResourceType": {
                "enum": [
                    "INSTANCE"
                ],
                "type": "string"
            },
            "MaintenanceWindowRunCommandParameters": {
                "description": "<p>The parameters for a RUN_COMMAND task type.</p> <p>For information about specifying and updating task parameters, see <a>RegisterTaskWithMaintenanceWindow</a> and <a>UpdateMaintenanceWindowTask</a>.</p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an S3 bucket to contain logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p> <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p>For Run Command tasks, Systems Manager uses specified values for <code>TaskParameters</code> and <code>LoggingInfo</code> only if no values are specified for <code>TaskInvocationParameters</code>. </p> </note>",
                "properties": {
                    "Comment": {
                        "description": "Information about the command(s) to execute.",
                        "maxLength": 100,
                        "type": "string"
                    },
                    "DocumentHash": {
                        "description": "The SHA-256 or SHA-1 hash created by the system when the document was created. SHA-1 hashes have been deprecated.",
                        "maxLength": 256,
                        "type": "string"
                    },
                    "DocumentHashType": {
                        "description": "SHA-256 or SHA-1. SHA-1 hashes have been deprecated.",
                        "enum": [
                            "Sha256",
                            "Sha1"
                        ],
                        "type": "string"
                    },
                    "NotificationConfig": {
                        "description": "Configurations for sending notifications about command status changes on a per-instance basis.",
                        "properties": {
                            "NotificationArn": {
                                "description": "An Amazon Resource Name (ARN) for a Simple Notification Service (SNS) topic. Run Command pushes notifications about command status changes to this topic.",
                                "type": "string"
                            },
                            "NotificationEvents": {
                                "description": "The different events for which you can receive notifications. These events include the following: All (events), InProgress, Success, TimedOut, Cancelled, Failed. To learn more about these events, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/rc-sns-notifications.html\">Configuring Amazon SNS Notifications for Run Command</a> in the <i>AWS Systems Manager User Guide</i>.",
                                "items": {
                                    "enum": [
                                        "All",
                                        "InProgress",
                                        "Success",
                                        "TimedOut",
                                        "Cancelled",
                                        "Failed"
                                    ],
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "NotificationType": {
                                "description": "Command: Receive notification when the status of a command changes. Invocation: For commands sent to multiple instances, receive notification on a per-instance basis when the status of a command changes. ",
                                "enum": [
                                    "Command",
                                    "Invocation"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "OutputS3BucketName": {
                        "description": "The name of the Amazon S3 bucket.",
                        "maxLength": 63,
                        "minLength": 3,
                        "type": "string"
                    },
                    "OutputS3KeyPrefix": {
                        "description": "The Amazon S3 bucket subfolder.",
                        "maxLength": 500,
                        "type": "string"
                    },
                    "Parameters": {
                        "description": "The parameters for the RUN_COMMAND task execution.",
                        "items": {
                            "properties": {
                                "key": {
                                    "type": "string"
                                },
                                "value": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "ServiceRoleArn": {
                        "description": "The IAM service role to assume during task execution.",
                        "type": "string"
                    },
                    "TimeoutSeconds": {
                        "description": "If this time is reached and the command has not already started executing, it doesn't run.",
                        "maximum": 2592000,
                        "minimum": 30,
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "MaintenanceWindowSchedule": {
                "maxLength": 256,
                "minLength": 1,
                "type": "string"
            },
            "MaintenanceWindowSearchMaxResults": {
                "minimum": 1,
                "type": "integer"
            },
            "MaintenanceWindowStepFunctionsInput": {
                "format": "password",
                "maxLength": 4096,
                "type": "string"
            },
            "MaintenanceWindowStepFunctionsName": {
                "maxLength": 80,
                "minLength": 1,
                "type": "string"
            },
            "MaintenanceWindowStepFunctionsParameters": {
                "description": "<p>The parameters for a STEP_FUNCTION task.</p> <p>For information about specifying and updating task parameters, see <a>RegisterTaskWithMaintenanceWindow</a> and <a>UpdateMaintenanceWindowTask</a>.</p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an S3 bucket to contain logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p> <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p>For Step Functions tasks, Systems Manager ignores any values specified for <code>TaskParameters</code> and <code>LoggingInfo</code>.</p> </note>",
                "properties": {
                    "Input": {
                        "description": "The inputs for the STEP_FUNCTION task.",
                        "format": "password",
                        "maxLength": 4096,
                        "type": "string"
                    },
                    "Name": {
                        "description": "The name of the STEP_FUNCTION task.",
                        "maxLength": 80,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "MaintenanceWindowStringDateTime": {
                "type": "string"
            },
            "MaintenanceWindowTarget": {
                "description": "The target registered with the Maintenance Window.",
                "properties": {
                    "Description": {
                        "description": "A description of the target.",
                        "format": "password",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Name": {
                        "description": "The target name.",
                        "maxLength": 128,
                        "minLength": 3,
                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                        "type": "string"
                    },
                    "OwnerInformation": {
                        "description": "User-provided value that will be included in any CloudWatch events raised while running tasks for these targets in this Maintenance Window.",
                        "format": "password",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "ResourceType": {
                        "description": "The type of target.",
                        "enum": [
                            "INSTANCE"
                        ],
                        "type": "string"
                    },
                    "Targets": {
                        "description": "The targets (either instances or tags). Instances are specified using Key=instanceids,Values=&lt;instanceid1&gt;,&lt;instanceid2&gt;. Tags are specified using Key=&lt;tag name&gt;,Values=&lt;tag value&gt;.",
                        "items": {
                            "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                            "properties": {
                                "Key": {
                                    "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "maxItems": 50,
                                    "minItems": 0,
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 5,
                        "minItems": 0,
                        "type": "array"
                    },
                    "WindowId": {
                        "description": "The Maintenance Window ID where the target is registered.",
                        "maxLength": 20,
                        "minLength": 20,
                        "pattern": "^mw-[0-9a-f]{17}$",
                        "type": "string"
                    },
                    "WindowTargetId": {
                        "description": "The ID of the target.",
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "MaintenanceWindowTargetId": {
                "maxLength": 36,
                "minLength": 36,
                "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                "type": "string"
            },
            "MaintenanceWindowTargetList": {
                "items": {
                    "description": "The target registered with the Maintenance Window.",
                    "properties": {
                        "Description": {
                            "description": "A description of the target.",
                            "format": "password",
                            "maxLength": 128,
                            "minLength": 1,
                            "type": "string"
                        },
                        "Name": {
                            "description": "The target name.",
                            "maxLength": 128,
                            "minLength": 3,
                            "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                            "type": "string"
                        },
                        "OwnerInformation": {
                            "description": "User-provided value that will be included in any CloudWatch events raised while running tasks for these targets in this Maintenance Window.",
                            "format": "password",
                            "maxLength": 128,
                            "minLength": 1,
                            "type": "string"
                        },
                        "ResourceType": {
                            "description": "The type of target.",
                            "enum": [
                                "INSTANCE"
                            ],
                            "type": "string"
                        },
                        "Targets": {
                            "description": "The targets (either instances or tags). Instances are specified using Key=instanceids,Values=&lt;instanceid1&gt;,&lt;instanceid2&gt;. Tags are specified using Key=&lt;tag name&gt;,Values=&lt;tag value&gt;.",
                            "items": {
                                "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                                "properties": {
                                    "Key": {
                                        "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                        "type": "string"
                                    },
                                    "Values": {
                                        "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "maxItems": 50,
                                        "minItems": 0,
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            },
                            "maxItems": 5,
                            "minItems": 0,
                            "type": "array"
                        },
                        "WindowId": {
                            "description": "The Maintenance Window ID where the target is registered.",
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^mw-[0-9a-f]{17}$",
                            "type": "string"
                        },
                        "WindowTargetId": {
                            "description": "The ID of the target.",
                            "maxLength": 36,
                            "minLength": 36,
                            "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "MaintenanceWindowTask": {
                "description": "Information about a task defined for a Maintenance Window.",
                "properties": {
                    "Description": {
                        "description": "A description of the task.",
                        "format": "password",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "LoggingInfo": {
                        "description": "<p>Information about an Amazon S3 bucket to write task-level logs to.</p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an S3 bucket to contain logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> </note>",
                        "properties": {
                            "S3BucketName": {
                                "description": "The name of an Amazon S3 bucket where execution logs are stored .",
                                "maxLength": 63,
                                "minLength": 3,
                                "type": "string"
                            },
                            "S3KeyPrefix": {
                                "description": "(Optional) The Amazon S3 bucket subfolder. ",
                                "maxLength": 500,
                                "type": "string"
                            },
                            "S3Region": {
                                "description": "The region where the Amazon S3 bucket is located.",
                                "maxLength": 20,
                                "minLength": 3,
                                "type": "string"
                            }
                        },
                        "required": [
                            "S3BucketName",
                            "S3Region"
                        ],
                        "type": "object"
                    },
                    "MaxConcurrency": {
                        "description": "The maximum number of targets this task can be run for in parallel.",
                        "maxLength": 7,
                        "minLength": 1,
                        "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                        "type": "string"
                    },
                    "MaxErrors": {
                        "description": "The maximum number of errors allowed before this task stops being scheduled.",
                        "maxLength": 7,
                        "minLength": 1,
                        "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The task name.",
                        "maxLength": 128,
                        "minLength": 3,
                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                        "type": "string"
                    },
                    "Priority": {
                        "description": "The priority of the task in the Maintenance Window. The lower the number, the higher the priority. Tasks that have the same priority are scheduled in parallel.",
                        "minimum": 0,
                        "type": "integer"
                    },
                    "ServiceRoleArn": {
                        "description": "The role that should be assumed when executing the task",
                        "type": "string"
                    },
                    "Targets": {
                        "description": "The targets (either instances or tags). Instances are specified using Key=instanceids,Values=&lt;instanceid1&gt;,&lt;instanceid2&gt;. Tags are specified using Key=&lt;tag name&gt;,Values=&lt;tag value&gt;.",
                        "items": {
                            "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                            "properties": {
                                "Key": {
                                    "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "maxItems": 50,
                                    "minItems": 0,
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 5,
                        "minItems": 0,
                        "type": "array"
                    },
                    "TaskArn": {
                        "description": "The resource that the task uses during execution. For RUN_COMMAND and AUTOMATION task types, <code>TaskArn</code> is the Systems Manager document name or ARN. For LAMBDA tasks, it's the function name or ARN. For STEP_FUNCTION tasks, it's the state machine ARN.",
                        "maxLength": 1600,
                        "minLength": 1,
                        "type": "string"
                    },
                    "TaskParameters": {
                        "description": "<p>The parameters that should be passed to the task when it is executed.</p> <note> <p> <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> </note>",
                        "items": {
                            "properties": {
                                "key": {
                                    "maxLength": 255,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "value": {
                                    "description": "Defines the values for a task parameter.",
                                    "properties": {
                                        "Values": {
                                            "description": "This field contains an array of 0 or more strings, each 1 to 255 characters in length.",
                                            "items": {
                                                "format": "password",
                                                "maxLength": 255,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Type": {
                        "description": "The type of task. The type can be one of the following: RUN_COMMAND, AUTOMATION, LAMBDA, or STEP_FUNCTION.",
                        "enum": [
                            "RUN_COMMAND",
                            "AUTOMATION",
                            "STEP_FUNCTIONS",
                            "LAMBDA"
                        ],
                        "type": "string"
                    },
                    "WindowId": {
                        "description": "The Maintenance Window ID where the task is registered.",
                        "maxLength": 20,
                        "minLength": 20,
                        "pattern": "^mw-[0-9a-f]{17}$",
                        "type": "string"
                    },
                    "WindowTaskId": {
                        "description": "The task ID.",
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "MaintenanceWindowTaskArn": {
                "maxLength": 1600,
                "minLength": 1,
                "type": "string"
            },
            "MaintenanceWindowTaskId": {
                "maxLength": 36,
                "minLength": 36,
                "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                "type": "string"
            },
            "MaintenanceWindowTaskInvocationParameters": {
                "description": "The parameters for task execution.",
                "properties": {
                    "Automation": {
                        "description": "The parameters for an AUTOMATION task type.",
                        "properties": {
                            "DocumentVersion": {
                                "description": "The version of an Automation document to use during task execution.",
                                "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                "type": "string"
                            },
                            "Parameters": {
                                "description": "<p>The parameters for the AUTOMATION task.</p> <p>For information about specifying and updating task parameters, see <a>RegisterTaskWithMaintenanceWindow</a> and <a>UpdateMaintenanceWindowTask</a>.</p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an S3 bucket to contain logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p> <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p>For AUTOMATION task types, Systems Manager ignores any values specified for these parameters.</p> </note>",
                                "items": {
                                    "properties": {
                                        "key": {
                                            "maxLength": 30,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "value": {
                                            "items": {
                                                "maxLength": 512,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "maxItems": 10,
                                            "minItems": 0,
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                },
                                "maxItems": 200,
                                "minItems": 1,
                                "type": "array"
                            }
                        },
                        "type": "object"
                    },
                    "Lambda": {
                        "description": "The parameters for a LAMBDA task type.",
                        "properties": {
                            "ClientContext": {
                                "description": "Pass client-specific information to the Lambda function that you are invoking. You can then process the client information in your Lambda function as you choose through the context variable.",
                                "maxLength": 8000,
                                "minLength": 1,
                                "type": "string"
                            },
                            "Payload": {
                                "description": "JSON to provide to your Lambda function as input.",
                                "format": "password",
                                "maxLength": 4096,
                                "type": "string"
                            },
                            "Qualifier": {
                                "description": "(Optional) Specify a Lambda function version or alias name. If you specify a function version, the action uses the qualified function ARN to invoke a specific Lambda function. If you specify an alias name, the action uses the alias ARN to invoke the Lambda function version to which the alias points.",
                                "maxLength": 128,
                                "minLength": 1,
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "RunCommand": {
                        "description": "The parameters for a RUN_COMMAND task type.",
                        "properties": {
                            "Comment": {
                                "description": "Information about the command(s) to execute.",
                                "maxLength": 100,
                                "type": "string"
                            },
                            "DocumentHash": {
                                "description": "The SHA-256 or SHA-1 hash created by the system when the document was created. SHA-1 hashes have been deprecated.",
                                "maxLength": 256,
                                "type": "string"
                            },
                            "DocumentHashType": {
                                "description": "SHA-256 or SHA-1. SHA-1 hashes have been deprecated.",
                                "enum": [
                                    "Sha256",
                                    "Sha1"
                                ],
                                "type": "string"
                            },
                            "NotificationConfig": {
                                "description": "Configurations for sending notifications about command status changes on a per-instance basis.",
                                "properties": {
                                    "NotificationArn": {
                                        "description": "An Amazon Resource Name (ARN) for a Simple Notification Service (SNS) topic. Run Command pushes notifications about command status changes to this topic.",
                                        "type": "string"
                                    },
                                    "NotificationEvents": {
                                        "description": "The different events for which you can receive notifications. These events include the following: All (events), InProgress, Success, TimedOut, Cancelled, Failed. To learn more about these events, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/rc-sns-notifications.html\">Configuring Amazon SNS Notifications for Run Command</a> in the <i>AWS Systems Manager User Guide</i>.",
                                        "items": {
                                            "enum": [
                                                "All",
                                                "InProgress",
                                                "Success",
                                                "TimedOut",
                                                "Cancelled",
                                                "Failed"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "NotificationType": {
                                        "description": "Command: Receive notification when the status of a command changes. Invocation: For commands sent to multiple instances, receive notification on a per-instance basis when the status of a command changes. ",
                                        "enum": [
                                            "Command",
                                            "Invocation"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "OutputS3BucketName": {
                                "description": "The name of the Amazon S3 bucket.",
                                "maxLength": 63,
                                "minLength": 3,
                                "type": "string"
                            },
                            "OutputS3KeyPrefix": {
                                "description": "The Amazon S3 bucket subfolder.",
                                "maxLength": 500,
                                "type": "string"
                            },
                            "Parameters": {
                                "description": "The parameters for the RUN_COMMAND task execution.",
                                "items": {
                                    "properties": {
                                        "key": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "ServiceRoleArn": {
                                "description": "The IAM service role to assume during task execution.",
                                "type": "string"
                            },
                            "TimeoutSeconds": {
                                "description": "If this time is reached and the command has not already started executing, it doesn't run.",
                                "maximum": 2592000,
                                "minimum": 30,
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    },
                    "StepFunctions": {
                        "description": "The parameters for a STEP_FUNCTION task type.",
                        "properties": {
                            "Input": {
                                "description": "The inputs for the STEP_FUNCTION task.",
                                "format": "password",
                                "maxLength": 4096,
                                "type": "string"
                            },
                            "Name": {
                                "description": "The name of the STEP_FUNCTION task.",
                                "maxLength": 80,
                                "minLength": 1,
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "MaintenanceWindowTaskList": {
                "items": {
                    "description": "Information about a task defined for a Maintenance Window.",
                    "properties": {
                        "Description": {
                            "description": "A description of the task.",
                            "format": "password",
                            "maxLength": 128,
                            "minLength": 1,
                            "type": "string"
                        },
                        "LoggingInfo": {
                            "description": "<p>Information about an Amazon S3 bucket to write task-level logs to.</p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an S3 bucket to contain logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> </note>",
                            "properties": {
                                "S3BucketName": {
                                    "description": "The name of an Amazon S3 bucket where execution logs are stored .",
                                    "maxLength": 63,
                                    "minLength": 3,
                                    "type": "string"
                                },
                                "S3KeyPrefix": {
                                    "description": "(Optional) The Amazon S3 bucket subfolder. ",
                                    "maxLength": 500,
                                    "type": "string"
                                },
                                "S3Region": {
                                    "description": "The region where the Amazon S3 bucket is located.",
                                    "maxLength": 20,
                                    "minLength": 3,
                                    "type": "string"
                                }
                            },
                            "required": [
                                "S3BucketName",
                                "S3Region"
                            ],
                            "type": "object"
                        },
                        "MaxConcurrency": {
                            "description": "The maximum number of targets this task can be run for in parallel.",
                            "maxLength": 7,
                            "minLength": 1,
                            "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                            "type": "string"
                        },
                        "MaxErrors": {
                            "description": "The maximum number of errors allowed before this task stops being scheduled.",
                            "maxLength": 7,
                            "minLength": 1,
                            "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                            "type": "string"
                        },
                        "Name": {
                            "description": "The task name.",
                            "maxLength": 128,
                            "minLength": 3,
                            "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                            "type": "string"
                        },
                        "Priority": {
                            "description": "The priority of the task in the Maintenance Window. The lower the number, the higher the priority. Tasks that have the same priority are scheduled in parallel.",
                            "minimum": 0,
                            "type": "integer"
                        },
                        "ServiceRoleArn": {
                            "description": "The role that should be assumed when executing the task",
                            "type": "string"
                        },
                        "Targets": {
                            "description": "The targets (either instances or tags). Instances are specified using Key=instanceids,Values=&lt;instanceid1&gt;,&lt;instanceid2&gt;. Tags are specified using Key=&lt;tag name&gt;,Values=&lt;tag value&gt;.",
                            "items": {
                                "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                                "properties": {
                                    "Key": {
                                        "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                        "type": "string"
                                    },
                                    "Values": {
                                        "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "maxItems": 50,
                                        "minItems": 0,
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            },
                            "maxItems": 5,
                            "minItems": 0,
                            "type": "array"
                        },
                        "TaskArn": {
                            "description": "The resource that the task uses during execution. For RUN_COMMAND and AUTOMATION task types, <code>TaskArn</code> is the Systems Manager document name or ARN. For LAMBDA tasks, it's the function name or ARN. For STEP_FUNCTION tasks, it's the state machine ARN.",
                            "maxLength": 1600,
                            "minLength": 1,
                            "type": "string"
                        },
                        "TaskParameters": {
                            "description": "<p>The parameters that should be passed to the task when it is executed.</p> <note> <p> <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> </note>",
                            "items": {
                                "properties": {
                                    "key": {
                                        "maxLength": 255,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "value": {
                                        "description": "Defines the values for a task parameter.",
                                        "properties": {
                                            "Values": {
                                                "description": "This field contains an array of 0 or more strings, each 1 to 255 characters in length.",
                                                "items": {
                                                    "format": "password",
                                                    "maxLength": 255,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "Type": {
                            "description": "The type of task. The type can be one of the following: RUN_COMMAND, AUTOMATION, LAMBDA, or STEP_FUNCTION.",
                            "enum": [
                                "RUN_COMMAND",
                                "AUTOMATION",
                                "STEP_FUNCTIONS",
                                "LAMBDA"
                            ],
                            "type": "string"
                        },
                        "WindowId": {
                            "description": "The Maintenance Window ID where the task is registered.",
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^mw-[0-9a-f]{17}$",
                            "type": "string"
                        },
                        "WindowTaskId": {
                            "description": "The task ID.",
                            "maxLength": 36,
                            "minLength": 36,
                            "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "MaintenanceWindowTaskParameterName": {
                "maxLength": 255,
                "minLength": 1,
                "type": "string"
            },
            "MaintenanceWindowTaskParameterValue": {
                "format": "password",
                "maxLength": 255,
                "minLength": 1,
                "type": "string"
            },
            "MaintenanceWindowTaskParameterValueExpression": {
                "description": "Defines the values for a task parameter.",
                "properties": {
                    "Values": {
                        "description": "This field contains an array of 0 or more strings, each 1 to 255 characters in length.",
                        "items": {
                            "format": "password",
                            "maxLength": 255,
                            "minLength": 1,
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "MaintenanceWindowTaskParameterValueList": {
                "items": {
                    "format": "password",
                    "maxLength": 255,
                    "minLength": 1,
                    "type": "string"
                },
                "type": "array"
            },
            "MaintenanceWindowTaskParameters": {
                "items": {
                    "properties": {
                        "key": {
                            "maxLength": 255,
                            "minLength": 1,
                            "type": "string"
                        },
                        "value": {
                            "description": "Defines the values for a task parameter.",
                            "properties": {
                                "Values": {
                                    "description": "This field contains an array of 0 or more strings, each 1 to 255 characters in length.",
                                    "items": {
                                        "format": "password",
                                        "maxLength": 255,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "MaintenanceWindowTaskParametersList": {
                "items": {
                    "items": {
                        "properties": {
                            "key": {
                                "maxLength": 255,
                                "minLength": 1,
                                "type": "string"
                            },
                            "value": {
                                "description": "Defines the values for a task parameter.",
                                "properties": {
                                    "Values": {
                                        "description": "This field contains an array of 0 or more strings, each 1 to 255 characters in length.",
                                        "items": {
                                            "format": "password",
                                            "maxLength": 255,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "type": "array"
            },
            "MaintenanceWindowTaskPriority": {
                "minimum": 0,
                "type": "integer"
            },
            "MaintenanceWindowTaskTargetId": {
                "maxLength": 36,
                "type": "string"
            },
            "MaintenanceWindowTaskType": {
                "enum": [
                    "RUN_COMMAND",
                    "AUTOMATION",
                    "STEP_FUNCTIONS",
                    "LAMBDA"
                ],
                "type": "string"
            },
            "MaintenanceWindowTimezone": {
                "type": "string"
            },
            "MaintenanceWindowsForTargetList": {
                "items": {
                    "description": "The Maintenance Window to which the specified target belongs.",
                    "properties": {
                        "Name": {
                            "description": "The name of the Maintenance Window.",
                            "maxLength": 128,
                            "minLength": 3,
                            "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                            "type": "string"
                        },
                        "WindowId": {
                            "description": "The ID of the Maintenance Window.",
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^mw-[0-9a-f]{17}$",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "ManagedInstanceId": {
                "pattern": "^mi-[0-9a-f]{17}$",
                "type": "string"
            },
            "MaxConcurrency": {
                "maxLength": 7,
                "minLength": 1,
                "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                "type": "string"
            },
            "MaxDocumentSizeExceeded": {},
            "MaxErrors": {
                "maxLength": 7,
                "minLength": 1,
                "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                "type": "string"
            },
            "MaxResults": {
                "maximum": 50,
                "minimum": 1,
                "type": "integer"
            },
            "MaxResultsEC2Compatible": {
                "maximum": 50,
                "minimum": 5,
                "type": "integer"
            },
            "ModifyDocumentPermissionRequest": {
                "properties": {
                    "AccountIdsToAdd": {
                        "description": "The AWS user accounts that should have access to the document. The account IDs can either be a group of account IDs or <i>All</i>.",
                        "items": {
                            "pattern": "\\(\\?i\\)all\\|[0-9]\\{12\\}",
                            "type": "string"
                        },
                        "maxItems": 20,
                        "type": "array"
                    },
                    "AccountIdsToRemove": {
                        "description": "The AWS user accounts that should no longer have access to the document. The AWS user account can either be a group of account IDs or <i>All</i>. This action has a higher priority than <i>AccountIdsToAdd</i>. If you specify an account ID to add and the same ID to remove, the system removes access to the document.",
                        "items": {
                            "pattern": "\\(\\?i\\)all\\|[0-9]\\{12\\}",
                            "type": "string"
                        },
                        "maxItems": 20,
                        "type": "array"
                    },
                    "Name": {
                        "description": "The name of the document that you want to share.",
                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                        "type": "string"
                    },
                    "PermissionType": {
                        "description": "The permission type for the document. The permission type can be <i>Share</i>.",
                        "enum": [
                            "Share"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "Name",
                    "PermissionType"
                ],
                "type": "object"
            },
            "ModifyDocumentPermissionResponse": {
                "properties": {},
                "type": "object"
            },
            "NextToken": {
                "type": "string"
            },
            "NonCompliantSummary": {
                "description": "A summary of resources that are not compliant. The summary is organized according to resource type.",
                "properties": {
                    "NonCompliantCount": {
                        "description": "The total number of compliance items that are not compliant.",
                        "type": "integer"
                    },
                    "SeveritySummary": {
                        "description": "A summary of the non-compliance severity by compliance type",
                        "properties": {
                            "CriticalCount": {
                                "description": "The total number of resources or compliance items that have a severity level of critical. Critical severity is determined by the organization that published the compliance items.",
                                "type": "integer"
                            },
                            "HighCount": {
                                "description": "The total number of resources or compliance items that have a severity level of high. High severity is determined by the organization that published the compliance items.",
                                "type": "integer"
                            },
                            "InformationalCount": {
                                "description": "The total number of resources or compliance items that have a severity level of informational. Informational severity is determined by the organization that published the compliance items.",
                                "type": "integer"
                            },
                            "LowCount": {
                                "description": "The total number of resources or compliance items that have a severity level of low. Low severity is determined by the organization that published the compliance items.",
                                "type": "integer"
                            },
                            "MediumCount": {
                                "description": "The total number of resources or compliance items that have a severity level of medium. Medium severity is determined by the organization that published the compliance items.",
                                "type": "integer"
                            },
                            "UnspecifiedCount": {
                                "description": "The total number of resources or compliance items that have a severity level of unspecified. Unspecified severity is determined by the organization that published the compliance items.",
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "NormalStringMap": {
                "items": {
                    "properties": {
                        "key": {
                            "type": "string"
                        },
                        "value": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "NotificationArn": {
                "type": "string"
            },
            "NotificationConfig": {
                "description": "Configurations for sending notifications.",
                "properties": {
                    "NotificationArn": {
                        "description": "An Amazon Resource Name (ARN) for a Simple Notification Service (SNS) topic. Run Command pushes notifications about command status changes to this topic.",
                        "type": "string"
                    },
                    "NotificationEvents": {
                        "description": "The different events for which you can receive notifications. These events include the following: All (events), InProgress, Success, TimedOut, Cancelled, Failed. To learn more about these events, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/rc-sns-notifications.html\">Configuring Amazon SNS Notifications for Run Command</a> in the <i>AWS Systems Manager User Guide</i>.",
                        "items": {
                            "enum": [
                                "All",
                                "InProgress",
                                "Success",
                                "TimedOut",
                                "Cancelled",
                                "Failed"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "NotificationType": {
                        "description": "Command: Receive notification when the status of a command changes. Invocation: For commands sent to multiple instances, receive notification on a per-instance basis when the status of a command changes. ",
                        "enum": [
                            "Command",
                            "Invocation"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "NotificationEvent": {
                "enum": [
                    "All",
                    "InProgress",
                    "Success",
                    "TimedOut",
                    "Cancelled",
                    "Failed"
                ],
                "type": "string"
            },
            "NotificationEventList": {
                "items": {
                    "enum": [
                        "All",
                        "InProgress",
                        "Success",
                        "TimedOut",
                        "Cancelled",
                        "Failed"
                    ],
                    "type": "string"
                },
                "type": "array"
            },
            "NotificationType": {
                "enum": [
                    "Command",
                    "Invocation"
                ],
                "type": "string"
            },
            "OperatingSystem": {
                "enum": [
                    "WINDOWS",
                    "AMAZON_LINUX",
                    "AMAZON_LINUX_2",
                    "UBUNTU",
                    "REDHAT_ENTERPRISE_LINUX",
                    "SUSE",
                    "CENTOS"
                ],
                "type": "string"
            },
            "OutputSource": {
                "description": "Information about the source where the association execution details are stored.",
                "properties": {
                    "OutputSourceId": {
                        "description": "The ID of the output source, for example the URL of an Amazon S3 bucket.",
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string"
                    },
                    "OutputSourceType": {
                        "description": "The type of source where the association execution details are stored, for example, Amazon S3.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "OutputSourceId": {
                "maxLength": 36,
                "minLength": 36,
                "type": "string"
            },
            "OutputSourceType": {
                "type": "string"
            },
            "OwnerInformation": {
                "format": "password",
                "maxLength": 128,
                "minLength": 1,
                "type": "string"
            },
            "PSParameterName": {
                "maxLength": 2048,
                "minLength": 1,
                "type": "string"
            },
            "PSParameterSelector": {
                "maxLength": 128,
                "minLength": 0,
                "type": "string"
            },
            "PSParameterValue": {
                "maxLength": 4096,
                "minLength": 1,
                "type": "string"
            },
            "PSParameterVersion": {
                "type": "integer"
            },
            "Parameter": {
                "description": "An Amazon EC2 Systems Manager parameter in Parameter Store.",
                "properties": {
                    "ARN": {
                        "description": "The Amazon Resource Name (ARN) of the parameter.",
                        "type": "string"
                    },
                    "LastModifiedDate": {
                        "description": "Date the parameter was last changed or updated and the parameter version was created.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The name of the parameter.",
                        "maxLength": 2048,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Selector": {
                        "description": "<p>Either the version number or the label used to retrieve the parameter value. Specify selectors by using one of the following formats:</p> <p>parameter_name:version</p> <p>parameter_name:label</p>",
                        "maxLength": 128,
                        "minLength": 0,
                        "type": "string"
                    },
                    "SourceResult": {
                        "description": "Applies to parameters that reference information in other AWS services. SourceResult is the raw result or response from the source.",
                        "type": "string"
                    },
                    "Type": {
                        "description": "The type of parameter. Valid values include the following: String, String list, Secure string.",
                        "enum": [
                            "String",
                            "StringList",
                            "SecureString"
                        ],
                        "type": "string"
                    },
                    "Value": {
                        "description": "The parameter value.",
                        "maxLength": 4096,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Version": {
                        "description": "The parameter version.",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ParameterAlreadyExists": {},
            "ParameterDescription": {
                "maxLength": 1024,
                "minLength": 0,
                "type": "string"
            },
            "ParameterHistory": {
                "description": "Information about parameter usage.",
                "properties": {
                    "AllowedPattern": {
                        "description": "<p>Parameter names can include the following letters and symbols.</p> <p>a-zA-Z0-9_.-</p>",
                        "maxLength": 1024,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Description": {
                        "description": "Information about the parameter.",
                        "maxLength": 1024,
                        "minLength": 0,
                        "type": "string"
                    },
                    "KeyId": {
                        "description": "The ID of the query key used for this parameter.",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "^([a-zA-Z0-9:/_-]+)$",
                        "type": "string"
                    },
                    "Labels": {
                        "description": "Labels assigned to the parameter version.",
                        "items": {
                            "maxLength": 100,
                            "minLength": 1,
                            "type": "string"
                        },
                        "maxItems": 10,
                        "minItems": 1,
                        "type": "array"
                    },
                    "LastModifiedDate": {
                        "description": "Date the parameter was last changed or updated.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "LastModifiedUser": {
                        "description": "Amazon Resource Name (ARN) of the AWS user who last changed the parameter.",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The name of the parameter.",
                        "maxLength": 2048,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Type": {
                        "description": "The type of parameter used.",
                        "enum": [
                            "String",
                            "StringList",
                            "SecureString"
                        ],
                        "type": "string"
                    },
                    "Value": {
                        "description": "The parameter value.",
                        "maxLength": 4096,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Version": {
                        "description": "The parameter version.",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ParameterHistoryList": {
                "items": {
                    "description": "Information about parameter usage.",
                    "properties": {
                        "AllowedPattern": {
                            "description": "<p>Parameter names can include the following letters and symbols.</p> <p>a-zA-Z0-9_.-</p>",
                            "maxLength": 1024,
                            "minLength": 0,
                            "type": "string"
                        },
                        "Description": {
                            "description": "Information about the parameter.",
                            "maxLength": 1024,
                            "minLength": 0,
                            "type": "string"
                        },
                        "KeyId": {
                            "description": "The ID of the query key used for this parameter.",
                            "maxLength": 256,
                            "minLength": 1,
                            "pattern": "^([a-zA-Z0-9:/_-]+)$",
                            "type": "string"
                        },
                        "Labels": {
                            "description": "Labels assigned to the parameter version.",
                            "items": {
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                            },
                            "maxItems": 10,
                            "minItems": 1,
                            "type": "array"
                        },
                        "LastModifiedDate": {
                            "description": "Date the parameter was last changed or updated.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "LastModifiedUser": {
                            "description": "Amazon Resource Name (ARN) of the AWS user who last changed the parameter.",
                            "type": "string"
                        },
                        "Name": {
                            "description": "The name of the parameter.",
                            "maxLength": 2048,
                            "minLength": 1,
                            "type": "string"
                        },
                        "Type": {
                            "description": "The type of parameter used.",
                            "enum": [
                                "String",
                                "StringList",
                                "SecureString"
                            ],
                            "type": "string"
                        },
                        "Value": {
                            "description": "The parameter value.",
                            "maxLength": 4096,
                            "minLength": 1,
                            "type": "string"
                        },
                        "Version": {
                            "description": "The parameter version.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "ParameterKeyId": {
                "maxLength": 256,
                "minLength": 1,
                "pattern": "^([a-zA-Z0-9:/_-]+)$",
                "type": "string"
            },
            "ParameterLabel": {
                "maxLength": 100,
                "minLength": 1,
                "type": "string"
            },
            "ParameterLabelList": {
                "items": {
                    "maxLength": 100,
                    "minLength": 1,
                    "type": "string"
                },
                "maxItems": 10,
                "minItems": 1,
                "type": "array"
            },
            "ParameterLimitExceeded": {},
            "ParameterList": {
                "items": {
                    "description": "An Amazon EC2 Systems Manager parameter in Parameter Store.",
                    "properties": {
                        "ARN": {
                            "description": "The Amazon Resource Name (ARN) of the parameter.",
                            "type": "string"
                        },
                        "LastModifiedDate": {
                            "description": "Date the parameter was last changed or updated and the parameter version was created.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "Name": {
                            "description": "The name of the parameter.",
                            "maxLength": 2048,
                            "minLength": 1,
                            "type": "string"
                        },
                        "Selector": {
                            "description": "<p>Either the version number or the label used to retrieve the parameter value. Specify selectors by using one of the following formats:</p> <p>parameter_name:version</p> <p>parameter_name:label</p>",
                            "maxLength": 128,
                            "minLength": 0,
                            "type": "string"
                        },
                        "SourceResult": {
                            "description": "Applies to parameters that reference information in other AWS services. SourceResult is the raw result or response from the source.",
                            "type": "string"
                        },
                        "Type": {
                            "description": "The type of parameter. Valid values include the following: String, String list, Secure string.",
                            "enum": [
                                "String",
                                "StringList",
                                "SecureString"
                            ],
                            "type": "string"
                        },
                        "Value": {
                            "description": "The parameter value.",
                            "maxLength": 4096,
                            "minLength": 1,
                            "type": "string"
                        },
                        "Version": {
                            "description": "The parameter version.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "ParameterMaxVersionLimitExceeded": {},
            "ParameterMetadata": {
                "description": "Metada includes information like the ARN of the last user and the date/time the parameter was last used.",
                "properties": {
                    "AllowedPattern": {
                        "description": "<p>A parameter name can include only the following letters and symbols.</p> <p>a-zA-Z0-9_.-</p>",
                        "maxLength": 1024,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Description": {
                        "description": "Description of the parameter actions.",
                        "maxLength": 1024,
                        "minLength": 0,
                        "type": "string"
                    },
                    "KeyId": {
                        "description": "The ID of the query key used for this parameter.",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "^([a-zA-Z0-9:/_-]+)$",
                        "type": "string"
                    },
                    "LastModifiedDate": {
                        "description": "Date the parameter was last changed or updated.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "LastModifiedUser": {
                        "description": "Amazon Resource Name (ARN) of the AWS user who last changed the parameter.",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The parameter name.",
                        "maxLength": 2048,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Type": {
                        "description": "The type of parameter. Valid parameter types include the following: String, String list, Secure string.",
                        "enum": [
                            "String",
                            "StringList",
                            "SecureString"
                        ],
                        "type": "string"
                    },
                    "Version": {
                        "description": "The parameter version.",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ParameterMetadataList": {
                "items": {
                    "description": "Metada includes information like the ARN of the last user and the date/time the parameter was last used.",
                    "properties": {
                        "AllowedPattern": {
                            "description": "<p>A parameter name can include only the following letters and symbols.</p> <p>a-zA-Z0-9_.-</p>",
                            "maxLength": 1024,
                            "minLength": 0,
                            "type": "string"
                        },
                        "Description": {
                            "description": "Description of the parameter actions.",
                            "maxLength": 1024,
                            "minLength": 0,
                            "type": "string"
                        },
                        "KeyId": {
                            "description": "The ID of the query key used for this parameter.",
                            "maxLength": 256,
                            "minLength": 1,
                            "pattern": "^([a-zA-Z0-9:/_-]+)$",
                            "type": "string"
                        },
                        "LastModifiedDate": {
                            "description": "Date the parameter was last changed or updated.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "LastModifiedUser": {
                            "description": "Amazon Resource Name (ARN) of the AWS user who last changed the parameter.",
                            "type": "string"
                        },
                        "Name": {
                            "description": "The parameter name.",
                            "maxLength": 2048,
                            "minLength": 1,
                            "type": "string"
                        },
                        "Type": {
                            "description": "The type of parameter. Valid parameter types include the following: String, String list, Secure string.",
                            "enum": [
                                "String",
                                "StringList",
                                "SecureString"
                            ],
                            "type": "string"
                        },
                        "Version": {
                            "description": "The parameter version.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "ParameterName": {
                "type": "string"
            },
            "ParameterNameList": {
                "items": {
                    "maxLength": 2048,
                    "minLength": 1,
                    "type": "string"
                },
                "maxItems": 10,
                "minItems": 1,
                "type": "array"
            },
            "ParameterNotFound": {},
            "ParameterPatternMismatchException": {},
            "ParameterStringFilter": {
                "description": "<p>One or more filters. Use a filter to return a more specific list of results.</p> <note> <p>The <code>Name</code> field can't be used with the <a>GetParametersByPath</a> API action.</p> </note>",
                "properties": {
                    "Key": {
                        "description": "The name of the filter.",
                        "maxLength": 132,
                        "minLength": 1,
                        "pattern": "tag:.+|Name|Type|KeyId|Path|Label",
                        "type": "string"
                    },
                    "Option": {
                        "description": "Valid options are Equals and BeginsWith. For Path filter, valid options are Recursive and OneLevel.",
                        "maxLength": 10,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Values": {
                        "description": "The value you want to search for.",
                        "items": {
                            "maxLength": 1024,
                            "minLength": 1,
                            "type": "string"
                        },
                        "maxItems": 50,
                        "minItems": 1,
                        "type": "array"
                    }
                },
                "required": [
                    "Key"
                ],
                "type": "object"
            },
            "ParameterStringFilterKey": {
                "maxLength": 132,
                "minLength": 1,
                "pattern": "tag:.+|Name|Type|KeyId|Path|Label",
                "type": "string"
            },
            "ParameterStringFilterList": {
                "items": {
                    "description": "<p>One or more filters. Use a filter to return a more specific list of results.</p> <note> <p>The <code>Name</code> field can't be used with the <a>GetParametersByPath</a> API action.</p> </note>",
                    "properties": {
                        "Key": {
                            "description": "The name of the filter.",
                            "maxLength": 132,
                            "minLength": 1,
                            "pattern": "tag:.+|Name|Type|KeyId|Path|Label",
                            "type": "string"
                        },
                        "Option": {
                            "description": "Valid options are Equals and BeginsWith. For Path filter, valid options are Recursive and OneLevel.",
                            "maxLength": 10,
                            "minLength": 1,
                            "type": "string"
                        },
                        "Values": {
                            "description": "The value you want to search for.",
                            "items": {
                                "maxLength": 1024,
                                "minLength": 1,
                                "type": "string"
                            },
                            "maxItems": 50,
                            "minItems": 1,
                            "type": "array"
                        }
                    },
                    "required": [
                        "Key"
                    ],
                    "type": "object"
                },
                "type": "array"
            },
            "ParameterStringFilterValue": {
                "maxLength": 1024,
                "minLength": 1,
                "type": "string"
            },
            "ParameterStringFilterValueList": {
                "items": {
                    "maxLength": 1024,
                    "minLength": 1,
                    "type": "string"
                },
                "maxItems": 50,
                "minItems": 1,
                "type": "array"
            },
            "ParameterStringQueryOption": {
                "maxLength": 10,
                "minLength": 1,
                "type": "string"
            },
            "ParameterType": {
                "enum": [
                    "String",
                    "StringList",
                    "SecureString"
                ],
                "type": "string"
            },
            "ParameterValue": {
                "type": "string"
            },
            "ParameterValueList": {
                "items": {
                    "type": "string"
                },
                "type": "array"
            },
            "ParameterVersionLabelLimitExceeded": {},
            "ParameterVersionNotFound": {},
            "Parameters": {
                "items": {
                    "properties": {
                        "key": {
                            "type": "string"
                        },
                        "value": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "ParametersFilter": {
                "description": "This data type is deprecated. Instead, use <a>ParameterStringFilter</a>.",
                "properties": {
                    "Key": {
                        "description": "The name of the filter.",
                        "enum": [
                            "Name",
                            "Type",
                            "KeyId"
                        ],
                        "type": "string"
                    },
                    "Values": {
                        "description": "The filter values.",
                        "items": {
                            "maxLength": 1024,
                            "minLength": 1,
                            "type": "string"
                        },
                        "maxItems": 50,
                        "minItems": 1,
                        "type": "array"
                    }
                },
                "required": [
                    "Key",
                    "Values"
                ],
                "type": "object"
            },
            "ParametersFilterKey": {
                "enum": [
                    "Name",
                    "Type",
                    "KeyId"
                ],
                "type": "string"
            },
            "ParametersFilterList": {
                "items": {
                    "description": "This data type is deprecated. Instead, use <a>ParameterStringFilter</a>.",
                    "properties": {
                        "Key": {
                            "description": "The name of the filter.",
                            "enum": [
                                "Name",
                                "Type",
                                "KeyId"
                            ],
                            "type": "string"
                        },
                        "Values": {
                            "description": "The filter values.",
                            "items": {
                                "maxLength": 1024,
                                "minLength": 1,
                                "type": "string"
                            },
                            "maxItems": 50,
                            "minItems": 1,
                            "type": "array"
                        }
                    },
                    "required": [
                        "Key",
                        "Values"
                    ],
                    "type": "object"
                },
                "type": "array"
            },
            "ParametersFilterValue": {
                "maxLength": 1024,
                "minLength": 1,
                "type": "string"
            },
            "ParametersFilterValueList": {
                "items": {
                    "maxLength": 1024,
                    "minLength": 1,
                    "type": "string"
                },
                "maxItems": 50,
                "minItems": 1,
                "type": "array"
            },
            "Patch": {
                "description": "Represents metadata about a patch.",
                "properties": {
                    "Classification": {
                        "description": "The classification of the patch (for example, SecurityUpdates, Updates, CriticalUpdates).",
                        "type": "string"
                    },
                    "ContentUrl": {
                        "description": "The URL where more information can be obtained about the patch.",
                        "type": "string"
                    },
                    "Description": {
                        "description": "The description of the patch.",
                        "type": "string"
                    },
                    "Id": {
                        "description": "The ID of the patch (this is different than the Microsoft Knowledge Base ID).",
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string"
                    },
                    "KbNumber": {
                        "description": "The Microsoft Knowledge Base ID of the patch.",
                        "type": "string"
                    },
                    "Language": {
                        "description": "The language of the patch if it's language-specific.",
                        "type": "string"
                    },
                    "MsrcNumber": {
                        "description": "The ID of the MSRC bulletin the patch is related to.",
                        "type": "string"
                    },
                    "MsrcSeverity": {
                        "description": "The severity of the patch (for example Critical, Important, Moderate).",
                        "type": "string"
                    },
                    "Product": {
                        "description": "The specific product the patch is applicable for (for example, WindowsServer2016).",
                        "type": "string"
                    },
                    "ProductFamily": {
                        "description": "The product family the patch is applicable for (for example, Windows).",
                        "type": "string"
                    },
                    "ReleaseDate": {
                        "description": "The date the patch was released.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "Title": {
                        "description": "The title of the patch.",
                        "type": "string"
                    },
                    "Vendor": {
                        "description": "The name of the vendor providing the patch.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PatchAction": {
                "enum": [
                    "ALLOW_AS_DEPENDENCY",
                    "BLOCK"
                ],
                "type": "string"
            },
            "PatchBaselineIdentity": {
                "description": "Defines the basic information about a patch baseline.",
                "properties": {
                    "BaselineDescription": {
                        "description": "The description of the patch baseline.",
                        "maxLength": 1024,
                        "minLength": 1,
                        "type": "string"
                    },
                    "BaselineId": {
                        "description": "The ID of the patch baseline.",
                        "maxLength": 128,
                        "minLength": 20,
                        "pattern": "^[a-zA-Z0-9_\\-:/]{20,128}$",
                        "type": "string"
                    },
                    "BaselineName": {
                        "description": "The name of the patch baseline.",
                        "maxLength": 128,
                        "minLength": 3,
                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                        "type": "string"
                    },
                    "DefaultBaseline": {
                        "description": "Whether this is the default baseline. Note that Systems Manager supports creating multiple default patch baselines. For example, you can create a default patch baseline for each operating system.",
                        "type": "boolean"
                    },
                    "OperatingSystem": {
                        "description": "Defines the operating system the patch baseline applies to. The Default value is WINDOWS. ",
                        "enum": [
                            "WINDOWS",
                            "AMAZON_LINUX",
                            "AMAZON_LINUX_2",
                            "UBUNTU",
                            "REDHAT_ENTERPRISE_LINUX",
                            "SUSE",
                            "CENTOS"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PatchBaselineIdentityList": {
                "items": {
                    "description": "Defines the basic information about a patch baseline.",
                    "properties": {
                        "BaselineDescription": {
                            "description": "The description of the patch baseline.",
                            "maxLength": 1024,
                            "minLength": 1,
                            "type": "string"
                        },
                        "BaselineId": {
                            "description": "The ID of the patch baseline.",
                            "maxLength": 128,
                            "minLength": 20,
                            "pattern": "^[a-zA-Z0-9_\\-:/]{20,128}$",
                            "type": "string"
                        },
                        "BaselineName": {
                            "description": "The name of the patch baseline.",
                            "maxLength": 128,
                            "minLength": 3,
                            "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                            "type": "string"
                        },
                        "DefaultBaseline": {
                            "description": "Whether this is the default baseline. Note that Systems Manager supports creating multiple default patch baselines. For example, you can create a default patch baseline for each operating system.",
                            "type": "boolean"
                        },
                        "OperatingSystem": {
                            "description": "Defines the operating system the patch baseline applies to. The Default value is WINDOWS. ",
                            "enum": [
                                "WINDOWS",
                                "AMAZON_LINUX",
                                "AMAZON_LINUX_2",
                                "UBUNTU",
                                "REDHAT_ENTERPRISE_LINUX",
                                "SUSE",
                                "CENTOS"
                            ],
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "PatchBaselineMaxResults": {
                "maximum": 100,
                "minimum": 1,
                "type": "integer"
            },
            "PatchClassification": {
                "type": "string"
            },
            "PatchComplianceData": {
                "description": "Information about the state of a patch on a particular instance as it relates to the patch baseline used to patch the instance.",
                "properties": {
                    "Classification": {
                        "description": "The classification of the patch (for example, SecurityUpdates, Updates, CriticalUpdates).",
                        "type": "string"
                    },
                    "InstalledTime": {
                        "description": "The date/time the patch was installed on the instance. Note that not all operating systems provide this level of information.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "KBId": {
                        "description": "The operating system-specific ID of the patch.",
                        "type": "string"
                    },
                    "Severity": {
                        "description": "The severity of the patch (for example, Critical, Important, Moderate).",
                        "type": "string"
                    },
                    "State": {
                        "description": "<p>The state of the patch on the instance, such as INSTALLED or FAILED.</p> <p>For descriptions of each patch state, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-compliance-about.html#sysman-compliance-monitor-patch\">About Patch Compliance</a> in the <i>AWS Systems Manager User Guide</i>.</p>",
                        "enum": [
                            "INSTALLED",
                            "INSTALLED_OTHER",
                            "INSTALLED_REJECTED",
                            "MISSING",
                            "NOT_APPLICABLE",
                            "FAILED"
                        ],
                        "type": "string"
                    },
                    "Title": {
                        "description": "The title of the patch.",
                        "type": "string"
                    }
                },
                "required": [
                    "Title",
                    "KBId",
                    "Classification",
                    "Severity",
                    "State",
                    "InstalledTime"
                ],
                "type": "object"
            },
            "PatchComplianceDataList": {
                "items": {
                    "description": "Information about the state of a patch on a particular instance as it relates to the patch baseline used to patch the instance.",
                    "properties": {
                        "Classification": {
                            "description": "The classification of the patch (for example, SecurityUpdates, Updates, CriticalUpdates).",
                            "type": "string"
                        },
                        "InstalledTime": {
                            "description": "The date/time the patch was installed on the instance. Note that not all operating systems provide this level of information.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "KBId": {
                            "description": "The operating system-specific ID of the patch.",
                            "type": "string"
                        },
                        "Severity": {
                            "description": "The severity of the patch (for example, Critical, Important, Moderate).",
                            "type": "string"
                        },
                        "State": {
                            "description": "<p>The state of the patch on the instance, such as INSTALLED or FAILED.</p> <p>For descriptions of each patch state, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-compliance-about.html#sysman-compliance-monitor-patch\">About Patch Compliance</a> in the <i>AWS Systems Manager User Guide</i>.</p>",
                            "enum": [
                                "INSTALLED",
                                "INSTALLED_OTHER",
                                "INSTALLED_REJECTED",
                                "MISSING",
                                "NOT_APPLICABLE",
                                "FAILED"
                            ],
                            "type": "string"
                        },
                        "Title": {
                            "description": "The title of the patch.",
                            "type": "string"
                        }
                    },
                    "required": [
                        "Title",
                        "KBId",
                        "Classification",
                        "Severity",
                        "State",
                        "InstalledTime"
                    ],
                    "type": "object"
                },
                "type": "array"
            },
            "PatchComplianceDataState": {
                "enum": [
                    "INSTALLED",
                    "INSTALLED_OTHER",
                    "INSTALLED_REJECTED",
                    "MISSING",
                    "NOT_APPLICABLE",
                    "FAILED"
                ],
                "type": "string"
            },
            "PatchComplianceLevel": {
                "enum": [
                    "CRITICAL",
                    "HIGH",
                    "MEDIUM",
                    "LOW",
                    "INFORMATIONAL",
                    "UNSPECIFIED"
                ],
                "type": "string"
            },
            "PatchComplianceMaxResults": {
                "maximum": 100,
                "minimum": 10,
                "type": "integer"
            },
            "PatchContentUrl": {
                "type": "string"
            },
            "PatchDeploymentStatus": {
                "enum": [
                    "APPROVED",
                    "PENDING_APPROVAL",
                    "EXPLICIT_APPROVED",
                    "EXPLICIT_REJECTED"
                ],
                "type": "string"
            },
            "PatchDescription": {
                "type": "string"
            },
            "PatchFailedCount": {
                "type": "integer"
            },
            "PatchFilter": {
                "description": "<p>Defines a patch filter.</p> <p>A patch filter consists of key/value pairs, but not all keys are valid for all operating system types. For example, the key <code>PRODUCT</code> is valid for all supported operating system types. The key <code>MSRC_SEVERITY</code>, however, is valid only for Windows operating systems, and the key <code>SECTION</code> is valid only for Ubuntu operating systems.</p> <p>Refer to the following sections for information about which keys may be used with each major operating system, and which values are valid for each key.</p> <p> <b>Windows Operating Systems</b> </p> <p>The supported keys for Windows operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>MSRC_SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Windows7</code> </p> </li> <li> <p> <code>Windows8</code> </p> </li> <li> <p> <code>Windows8.1</code> </p> </li> <li> <p> <code>Windows8Embedded</code> </p> </li> <li> <p> <code>Windows10</code> </p> </li> <li> <p> <code>Windows10LTSB</code> </p> </li> <li> <p> <code>WindowsServer2008</code> </p> </li> <li> <p> <code>WindowsServer2008R2</code> </p> </li> <li> <p> <code>WindowsServer2012</code> </p> </li> <li> <p> <code>WindowsServer2012R2</code> </p> </li> <li> <p> <code>WindowsServer2016</code> </p> </li> <li> <p> <code>WindowsServer2019</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>CriticalUpdates</code> </p> </li> <li> <p> <code>DefinitionUpdates</code> </p> </li> <li> <p> <code>Drivers</code> </p> </li> <li> <p> <code>FeaturePacks</code> </p> </li> <li> <p> <code>SecurityUpdates</code> </p> </li> <li> <p> <code>ServicePacks</code> </p> </li> <li> <p> <code>Tools</code> </p> </li> <li> <p> <code>UpdateRollups</code> </p> </li> <li> <p> <code>Updates</code> </p> </li> <li> <p> <code>Upgrades</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>MSRC_SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Moderate</code> </p> </li> <li> <p> <code>Low</code> </p> </li> <li> <p> <code>Unspecified</code> </p> </li> </ul> <p> <b>Ubuntu Operating Systems</b> </p> <p>The supported keys for Ubuntu operating systems are <code>PRODUCT</code>, <code>PRIORITY</code>, and <code>SECTION</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Ubuntu14.04</code> </p> </li> <li> <p> <code>Ubuntu16.04</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>PRIORITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Required</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Standard</code> </p> </li> <li> <p> <code>Optional</code> </p> </li> <li> <p> <code>Extra</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SECTION</code> </p> <p>Only the length of the key value is validated. Minimum length is 1. Maximum length is 64.</p> <p> <b>Amazon Linux Operating Systems</b> </p> <p>The supported keys for Amazon Linux operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>AmazonLinux2012.03</code> </p> </li> <li> <p> <code>AmazonLinux2012.09</code> </p> </li> <li> <p> <code>AmazonLinux2013.03</code> </p> </li> <li> <p> <code>AmazonLinux2013.09</code> </p> </li> <li> <p> <code>AmazonLinux2014.03</code> </p> </li> <li> <p> <code>AmazonLinux2014.09</code> </p> </li> <li> <p> <code>AmazonLinux2015.03</code> </p> </li> <li> <p> <code>AmazonLinux2015.09</code> </p> </li> <li> <p> <code>AmazonLinux2016.03</code> </p> </li> <li> <p> <code>AmazonLinux2016.09</code> </p> </li> <li> <p> <code>AmazonLinux2017.03</code> </p> </li> <li> <p> <code>AmazonLinux2017.09</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>Amazon Linux 2 Operating Systems</b> </p> <p>The supported keys for Amazon Linux 2 operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>AmazonLinux2</code> </p> </li> <li> <p> <code>AmazonLinux2.0</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>RedHat Enterprise Linux (RHEL) Operating Systems</b> </p> <p>The supported keys for RedHat Enterprise Linux operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>RedhatEnterpriseLinux6.5</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.6</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.7</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.8</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.9</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.0</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.1</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.2</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.3</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.4</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.5</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.6</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>SUSE Linux Enterprise Server (SLES) Operating Systems</b> </p> <p>The supported keys for SLES operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Suse12.0</code> </p> </li> <li> <p> <code>Suse12.1</code> </p> </li> <li> <p> <code>Suse12.2</code> </p> </li> <li> <p> <code>Suse12.3</code> </p> </li> <li> <p> <code>Suse12.4</code> </p> </li> <li> <p> <code>Suse12.5</code> </p> </li> <li> <p> <code>Suse12.6</code> </p> </li> <li> <p> <code>Suse12.7</code> </p> </li> <li> <p> <code>Suse12.8</code> </p> </li> <li> <p> <code>Suse12.9</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Optional</code> </p> </li> <li> <p> <code>Feature</code> </p> </li> <li> <p> <code>Document</code> </p> </li> <li> <p> <code>Yast</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Moderate</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>CentOS Operating Systems</b> </p> <p>The supported keys for CentOS operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>CentOS6.5</code> </p> </li> <li> <p> <code>CentOS6.6</code> </p> </li> <li> <p> <code>CentOS6.7</code> </p> </li> <li> <p> <code>CentOS6.8</code> </p> </li> <li> <p> <code>CentOS6.9</code> </p> </li> <li> <p> <code>CentOS7.0</code> </p> </li> <li> <p> <code>CentOS7.1</code> </p> </li> <li> <p> <code>CentOS7.2</code> </p> </li> <li> <p> <code>CentOS7.3</code> </p> </li> <li> <p> <code>CentOS7.4</code> </p> </li> <li> <p> <code>CentOS7.5</code> </p> </li> <li> <p> <code>CentOS7.6</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul>",
                "properties": {
                    "Key": {
                        "description": "<p>The key for the filter.</p> <p>See <a>PatchFilter</a> for lists of valid keys for each operating system type.</p>",
                        "enum": [
                            "PRODUCT",
                            "CLASSIFICATION",
                            "MSRC_SEVERITY",
                            "PATCH_ID",
                            "SECTION",
                            "PRIORITY",
                            "SEVERITY"
                        ],
                        "type": "string"
                    },
                    "Values": {
                        "description": "<p>The value for the filter key.</p> <p>See <a>PatchFilter</a> for lists of valid values for each key based on operating system type.</p>",
                        "items": {
                            "maxLength": 64,
                            "minLength": 1,
                            "type": "string"
                        },
                        "maxItems": 20,
                        "minItems": 1,
                        "type": "array"
                    }
                },
                "required": [
                    "Key",
                    "Values"
                ],
                "type": "object"
            },
            "PatchFilterGroup": {
                "description": "A set of patch filters, typically used for approval rules.",
                "properties": {
                    "PatchFilters": {
                        "description": "The set of patch filters that make up the group.",
                        "items": {
                            "description": "<p>Defines a patch filter.</p> <p>A patch filter consists of key/value pairs, but not all keys are valid for all operating system types. For example, the key <code>PRODUCT</code> is valid for all supported operating system types. The key <code>MSRC_SEVERITY</code>, however, is valid only for Windows operating systems, and the key <code>SECTION</code> is valid only for Ubuntu operating systems.</p> <p>Refer to the following sections for information about which keys may be used with each major operating system, and which values are valid for each key.</p> <p> <b>Windows Operating Systems</b> </p> <p>The supported keys for Windows operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>MSRC_SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Windows7</code> </p> </li> <li> <p> <code>Windows8</code> </p> </li> <li> <p> <code>Windows8.1</code> </p> </li> <li> <p> <code>Windows8Embedded</code> </p> </li> <li> <p> <code>Windows10</code> </p> </li> <li> <p> <code>Windows10LTSB</code> </p> </li> <li> <p> <code>WindowsServer2008</code> </p> </li> <li> <p> <code>WindowsServer2008R2</code> </p> </li> <li> <p> <code>WindowsServer2012</code> </p> </li> <li> <p> <code>WindowsServer2012R2</code> </p> </li> <li> <p> <code>WindowsServer2016</code> </p> </li> <li> <p> <code>WindowsServer2019</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>CriticalUpdates</code> </p> </li> <li> <p> <code>DefinitionUpdates</code> </p> </li> <li> <p> <code>Drivers</code> </p> </li> <li> <p> <code>FeaturePacks</code> </p> </li> <li> <p> <code>SecurityUpdates</code> </p> </li> <li> <p> <code>ServicePacks</code> </p> </li> <li> <p> <code>Tools</code> </p> </li> <li> <p> <code>UpdateRollups</code> </p> </li> <li> <p> <code>Updates</code> </p> </li> <li> <p> <code>Upgrades</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>MSRC_SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Moderate</code> </p> </li> <li> <p> <code>Low</code> </p> </li> <li> <p> <code>Unspecified</code> </p> </li> </ul> <p> <b>Ubuntu Operating Systems</b> </p> <p>The supported keys for Ubuntu operating systems are <code>PRODUCT</code>, <code>PRIORITY</code>, and <code>SECTION</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Ubuntu14.04</code> </p> </li> <li> <p> <code>Ubuntu16.04</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>PRIORITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Required</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Standard</code> </p> </li> <li> <p> <code>Optional</code> </p> </li> <li> <p> <code>Extra</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SECTION</code> </p> <p>Only the length of the key value is validated. Minimum length is 1. Maximum length is 64.</p> <p> <b>Amazon Linux Operating Systems</b> </p> <p>The supported keys for Amazon Linux operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>AmazonLinux2012.03</code> </p> </li> <li> <p> <code>AmazonLinux2012.09</code> </p> </li> <li> <p> <code>AmazonLinux2013.03</code> </p> </li> <li> <p> <code>AmazonLinux2013.09</code> </p> </li> <li> <p> <code>AmazonLinux2014.03</code> </p> </li> <li> <p> <code>AmazonLinux2014.09</code> </p> </li> <li> <p> <code>AmazonLinux2015.03</code> </p> </li> <li> <p> <code>AmazonLinux2015.09</code> </p> </li> <li> <p> <code>AmazonLinux2016.03</code> </p> </li> <li> <p> <code>AmazonLinux2016.09</code> </p> </li> <li> <p> <code>AmazonLinux2017.03</code> </p> </li> <li> <p> <code>AmazonLinux2017.09</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>Amazon Linux 2 Operating Systems</b> </p> <p>The supported keys for Amazon Linux 2 operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>AmazonLinux2</code> </p> </li> <li> <p> <code>AmazonLinux2.0</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>RedHat Enterprise Linux (RHEL) Operating Systems</b> </p> <p>The supported keys for RedHat Enterprise Linux operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>RedhatEnterpriseLinux6.5</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.6</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.7</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.8</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.9</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.0</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.1</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.2</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.3</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.4</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.5</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.6</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>SUSE Linux Enterprise Server (SLES) Operating Systems</b> </p> <p>The supported keys for SLES operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Suse12.0</code> </p> </li> <li> <p> <code>Suse12.1</code> </p> </li> <li> <p> <code>Suse12.2</code> </p> </li> <li> <p> <code>Suse12.3</code> </p> </li> <li> <p> <code>Suse12.4</code> </p> </li> <li> <p> <code>Suse12.5</code> </p> </li> <li> <p> <code>Suse12.6</code> </p> </li> <li> <p> <code>Suse12.7</code> </p> </li> <li> <p> <code>Suse12.8</code> </p> </li> <li> <p> <code>Suse12.9</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Optional</code> </p> </li> <li> <p> <code>Feature</code> </p> </li> <li> <p> <code>Document</code> </p> </li> <li> <p> <code>Yast</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Moderate</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>CentOS Operating Systems</b> </p> <p>The supported keys for CentOS operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>CentOS6.5</code> </p> </li> <li> <p> <code>CentOS6.6</code> </p> </li> <li> <p> <code>CentOS6.7</code> </p> </li> <li> <p> <code>CentOS6.8</code> </p> </li> <li> <p> <code>CentOS6.9</code> </p> </li> <li> <p> <code>CentOS7.0</code> </p> </li> <li> <p> <code>CentOS7.1</code> </p> </li> <li> <p> <code>CentOS7.2</code> </p> </li> <li> <p> <code>CentOS7.3</code> </p> </li> <li> <p> <code>CentOS7.4</code> </p> </li> <li> <p> <code>CentOS7.5</code> </p> </li> <li> <p> <code>CentOS7.6</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul>",
                            "properties": {
                                "Key": {
                                    "description": "<p>The key for the filter.</p> <p>See <a>PatchFilter</a> for lists of valid keys for each operating system type.</p>",
                                    "enum": [
                                        "PRODUCT",
                                        "CLASSIFICATION",
                                        "MSRC_SEVERITY",
                                        "PATCH_ID",
                                        "SECTION",
                                        "PRIORITY",
                                        "SEVERITY"
                                    ],
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "<p>The value for the filter key.</p> <p>See <a>PatchFilter</a> for lists of valid values for each key based on operating system type.</p>",
                                    "items": {
                                        "maxLength": 64,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "maxItems": 20,
                                    "minItems": 1,
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Key",
                                "Values"
                            ],
                            "type": "object"
                        },
                        "maxItems": 4,
                        "minItems": 0,
                        "type": "array"
                    }
                },
                "required": [
                    "PatchFilters"
                ],
                "type": "object"
            },
            "PatchFilterKey": {
                "enum": [
                    "PRODUCT",
                    "CLASSIFICATION",
                    "MSRC_SEVERITY",
                    "PATCH_ID",
                    "SECTION",
                    "PRIORITY",
                    "SEVERITY"
                ],
                "type": "string"
            },
            "PatchFilterList": {
                "items": {
                    "description": "<p>Defines a patch filter.</p> <p>A patch filter consists of key/value pairs, but not all keys are valid for all operating system types. For example, the key <code>PRODUCT</code> is valid for all supported operating system types. The key <code>MSRC_SEVERITY</code>, however, is valid only for Windows operating systems, and the key <code>SECTION</code> is valid only for Ubuntu operating systems.</p> <p>Refer to the following sections for information about which keys may be used with each major operating system, and which values are valid for each key.</p> <p> <b>Windows Operating Systems</b> </p> <p>The supported keys for Windows operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>MSRC_SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Windows7</code> </p> </li> <li> <p> <code>Windows8</code> </p> </li> <li> <p> <code>Windows8.1</code> </p> </li> <li> <p> <code>Windows8Embedded</code> </p> </li> <li> <p> <code>Windows10</code> </p> </li> <li> <p> <code>Windows10LTSB</code> </p> </li> <li> <p> <code>WindowsServer2008</code> </p> </li> <li> <p> <code>WindowsServer2008R2</code> </p> </li> <li> <p> <code>WindowsServer2012</code> </p> </li> <li> <p> <code>WindowsServer2012R2</code> </p> </li> <li> <p> <code>WindowsServer2016</code> </p> </li> <li> <p> <code>WindowsServer2019</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>CriticalUpdates</code> </p> </li> <li> <p> <code>DefinitionUpdates</code> </p> </li> <li> <p> <code>Drivers</code> </p> </li> <li> <p> <code>FeaturePacks</code> </p> </li> <li> <p> <code>SecurityUpdates</code> </p> </li> <li> <p> <code>ServicePacks</code> </p> </li> <li> <p> <code>Tools</code> </p> </li> <li> <p> <code>UpdateRollups</code> </p> </li> <li> <p> <code>Updates</code> </p> </li> <li> <p> <code>Upgrades</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>MSRC_SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Moderate</code> </p> </li> <li> <p> <code>Low</code> </p> </li> <li> <p> <code>Unspecified</code> </p> </li> </ul> <p> <b>Ubuntu Operating Systems</b> </p> <p>The supported keys for Ubuntu operating systems are <code>PRODUCT</code>, <code>PRIORITY</code>, and <code>SECTION</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Ubuntu14.04</code> </p> </li> <li> <p> <code>Ubuntu16.04</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>PRIORITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Required</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Standard</code> </p> </li> <li> <p> <code>Optional</code> </p> </li> <li> <p> <code>Extra</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SECTION</code> </p> <p>Only the length of the key value is validated. Minimum length is 1. Maximum length is 64.</p> <p> <b>Amazon Linux Operating Systems</b> </p> <p>The supported keys for Amazon Linux operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>AmazonLinux2012.03</code> </p> </li> <li> <p> <code>AmazonLinux2012.09</code> </p> </li> <li> <p> <code>AmazonLinux2013.03</code> </p> </li> <li> <p> <code>AmazonLinux2013.09</code> </p> </li> <li> <p> <code>AmazonLinux2014.03</code> </p> </li> <li> <p> <code>AmazonLinux2014.09</code> </p> </li> <li> <p> <code>AmazonLinux2015.03</code> </p> </li> <li> <p> <code>AmazonLinux2015.09</code> </p> </li> <li> <p> <code>AmazonLinux2016.03</code> </p> </li> <li> <p> <code>AmazonLinux2016.09</code> </p> </li> <li> <p> <code>AmazonLinux2017.03</code> </p> </li> <li> <p> <code>AmazonLinux2017.09</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>Amazon Linux 2 Operating Systems</b> </p> <p>The supported keys for Amazon Linux 2 operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>AmazonLinux2</code> </p> </li> <li> <p> <code>AmazonLinux2.0</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>RedHat Enterprise Linux (RHEL) Operating Systems</b> </p> <p>The supported keys for RedHat Enterprise Linux operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>RedhatEnterpriseLinux6.5</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.6</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.7</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.8</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.9</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.0</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.1</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.2</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.3</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.4</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.5</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.6</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>SUSE Linux Enterprise Server (SLES) Operating Systems</b> </p> <p>The supported keys for SLES operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Suse12.0</code> </p> </li> <li> <p> <code>Suse12.1</code> </p> </li> <li> <p> <code>Suse12.2</code> </p> </li> <li> <p> <code>Suse12.3</code> </p> </li> <li> <p> <code>Suse12.4</code> </p> </li> <li> <p> <code>Suse12.5</code> </p> </li> <li> <p> <code>Suse12.6</code> </p> </li> <li> <p> <code>Suse12.7</code> </p> </li> <li> <p> <code>Suse12.8</code> </p> </li> <li> <p> <code>Suse12.9</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Optional</code> </p> </li> <li> <p> <code>Feature</code> </p> </li> <li> <p> <code>Document</code> </p> </li> <li> <p> <code>Yast</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Moderate</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>CentOS Operating Systems</b> </p> <p>The supported keys for CentOS operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>CentOS6.5</code> </p> </li> <li> <p> <code>CentOS6.6</code> </p> </li> <li> <p> <code>CentOS6.7</code> </p> </li> <li> <p> <code>CentOS6.8</code> </p> </li> <li> <p> <code>CentOS6.9</code> </p> </li> <li> <p> <code>CentOS7.0</code> </p> </li> <li> <p> <code>CentOS7.1</code> </p> </li> <li> <p> <code>CentOS7.2</code> </p> </li> <li> <p> <code>CentOS7.3</code> </p> </li> <li> <p> <code>CentOS7.4</code> </p> </li> <li> <p> <code>CentOS7.5</code> </p> </li> <li> <p> <code>CentOS7.6</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul>",
                    "properties": {
                        "Key": {
                            "description": "<p>The key for the filter.</p> <p>See <a>PatchFilter</a> for lists of valid keys for each operating system type.</p>",
                            "enum": [
                                "PRODUCT",
                                "CLASSIFICATION",
                                "MSRC_SEVERITY",
                                "PATCH_ID",
                                "SECTION",
                                "PRIORITY",
                                "SEVERITY"
                            ],
                            "type": "string"
                        },
                        "Values": {
                            "description": "<p>The value for the filter key.</p> <p>See <a>PatchFilter</a> for lists of valid values for each key based on operating system type.</p>",
                            "items": {
                                "maxLength": 64,
                                "minLength": 1,
                                "type": "string"
                            },
                            "maxItems": 20,
                            "minItems": 1,
                            "type": "array"
                        }
                    },
                    "required": [
                        "Key",
                        "Values"
                    ],
                    "type": "object"
                },
                "maxItems": 4,
                "minItems": 0,
                "type": "array"
            },
            "PatchFilterValue": {
                "maxLength": 64,
                "minLength": 1,
                "type": "string"
            },
            "PatchFilterValueList": {
                "items": {
                    "maxLength": 64,
                    "minLength": 1,
                    "type": "string"
                },
                "maxItems": 20,
                "minItems": 1,
                "type": "array"
            },
            "PatchGroup": {
                "maxLength": 256,
                "minLength": 1,
                "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                "type": "string"
            },
            "PatchGroupList": {
                "items": {
                    "maxLength": 256,
                    "minLength": 1,
                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                    "type": "string"
                },
                "type": "array"
            },
            "PatchGroupPatchBaselineMapping": {
                "description": "The mapping between a patch group and the patch baseline the patch group is registered with.",
                "properties": {
                    "BaselineIdentity": {
                        "description": "The patch baseline the patch group is registered with.",
                        "properties": {
                            "BaselineDescription": {
                                "description": "The description of the patch baseline.",
                                "maxLength": 1024,
                                "minLength": 1,
                                "type": "string"
                            },
                            "BaselineId": {
                                "description": "The ID of the patch baseline.",
                                "maxLength": 128,
                                "minLength": 20,
                                "pattern": "^[a-zA-Z0-9_\\-:/]{20,128}$",
                                "type": "string"
                            },
                            "BaselineName": {
                                "description": "The name of the patch baseline.",
                                "maxLength": 128,
                                "minLength": 3,
                                "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                "type": "string"
                            },
                            "DefaultBaseline": {
                                "description": "Whether this is the default baseline. Note that Systems Manager supports creating multiple default patch baselines. For example, you can create a default patch baseline for each operating system.",
                                "type": "boolean"
                            },
                            "OperatingSystem": {
                                "description": "Defines the operating system the patch baseline applies to. The Default value is WINDOWS. ",
                                "enum": [
                                    "WINDOWS",
                                    "AMAZON_LINUX",
                                    "AMAZON_LINUX_2",
                                    "UBUNTU",
                                    "REDHAT_ENTERPRISE_LINUX",
                                    "SUSE",
                                    "CENTOS"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "PatchGroup": {
                        "description": "The name of the patch group registered with the patch baseline.",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PatchGroupPatchBaselineMappingList": {
                "items": {
                    "description": "The mapping between a patch group and the patch baseline the patch group is registered with.",
                    "properties": {
                        "BaselineIdentity": {
                            "description": "The patch baseline the patch group is registered with.",
                            "properties": {
                                "BaselineDescription": {
                                    "description": "The description of the patch baseline.",
                                    "maxLength": 1024,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "BaselineId": {
                                    "description": "The ID of the patch baseline.",
                                    "maxLength": 128,
                                    "minLength": 20,
                                    "pattern": "^[a-zA-Z0-9_\\-:/]{20,128}$",
                                    "type": "string"
                                },
                                "BaselineName": {
                                    "description": "The name of the patch baseline.",
                                    "maxLength": 128,
                                    "minLength": 3,
                                    "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                    "type": "string"
                                },
                                "DefaultBaseline": {
                                    "description": "Whether this is the default baseline. Note that Systems Manager supports creating multiple default patch baselines. For example, you can create a default patch baseline for each operating system.",
                                    "type": "boolean"
                                },
                                "OperatingSystem": {
                                    "description": "Defines the operating system the patch baseline applies to. The Default value is WINDOWS. ",
                                    "enum": [
                                        "WINDOWS",
                                        "AMAZON_LINUX",
                                        "AMAZON_LINUX_2",
                                        "UBUNTU",
                                        "REDHAT_ENTERPRISE_LINUX",
                                        "SUSE",
                                        "CENTOS"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "PatchGroup": {
                            "description": "The name of the patch group registered with the patch baseline.",
                            "maxLength": 256,
                            "minLength": 1,
                            "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "PatchId": {
                "maxLength": 100,
                "minLength": 1,
                "type": "string"
            },
            "PatchIdList": {
                "items": {
                    "maxLength": 100,
                    "minLength": 1,
                    "type": "string"
                },
                "maxItems": 50,
                "minItems": 0,
                "type": "array"
            },
            "PatchInstalledCount": {
                "type": "integer"
            },
            "PatchInstalledOtherCount": {
                "type": "integer"
            },
            "PatchInstalledRejectedCount": {
                "type": "integer"
            },
            "PatchKbNumber": {
                "type": "string"
            },
            "PatchLanguage": {
                "type": "string"
            },
            "PatchList": {
                "items": {
                    "description": "Represents metadata about a patch.",
                    "properties": {
                        "Classification": {
                            "description": "The classification of the patch (for example, SecurityUpdates, Updates, CriticalUpdates).",
                            "type": "string"
                        },
                        "ContentUrl": {
                            "description": "The URL where more information can be obtained about the patch.",
                            "type": "string"
                        },
                        "Description": {
                            "description": "The description of the patch.",
                            "type": "string"
                        },
                        "Id": {
                            "description": "The ID of the patch (this is different than the Microsoft Knowledge Base ID).",
                            "maxLength": 100,
                            "minLength": 1,
                            "type": "string"
                        },
                        "KbNumber": {
                            "description": "The Microsoft Knowledge Base ID of the patch.",
                            "type": "string"
                        },
                        "Language": {
                            "description": "The language of the patch if it's language-specific.",
                            "type": "string"
                        },
                        "MsrcNumber": {
                            "description": "The ID of the MSRC bulletin the patch is related to.",
                            "type": "string"
                        },
                        "MsrcSeverity": {
                            "description": "The severity of the patch (for example Critical, Important, Moderate).",
                            "type": "string"
                        },
                        "Product": {
                            "description": "The specific product the patch is applicable for (for example, WindowsServer2016).",
                            "type": "string"
                        },
                        "ProductFamily": {
                            "description": "The product family the patch is applicable for (for example, Windows).",
                            "type": "string"
                        },
                        "ReleaseDate": {
                            "description": "The date the patch was released.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "Title": {
                            "description": "The title of the patch.",
                            "type": "string"
                        },
                        "Vendor": {
                            "description": "The name of the vendor providing the patch.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "PatchMissingCount": {
                "type": "integer"
            },
            "PatchMsrcNumber": {
                "type": "string"
            },
            "PatchMsrcSeverity": {
                "type": "string"
            },
            "PatchNotApplicableCount": {
                "type": "integer"
            },
            "PatchOperationType": {
                "enum": [
                    "Scan",
                    "Install"
                ],
                "type": "string"
            },
            "PatchOrchestratorFilter": {
                "description": "Defines a filter used in Patch Manager APIs.",
                "properties": {
                    "Key": {
                        "description": "The key for the filter.",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Values": {
                        "description": "The value for the filter.",
                        "items": {
                            "maxLength": 256,
                            "minLength": 1,
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "PatchOrchestratorFilterKey": {
                "maxLength": 128,
                "minLength": 1,
                "type": "string"
            },
            "PatchOrchestratorFilterList": {
                "items": {
                    "description": "Defines a filter used in Patch Manager APIs.",
                    "properties": {
                        "Key": {
                            "description": "The key for the filter.",
                            "maxLength": 128,
                            "minLength": 1,
                            "type": "string"
                        },
                        "Values": {
                            "description": "The value for the filter.",
                            "items": {
                                "maxLength": 256,
                                "minLength": 1,
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "maxItems": 5,
                "minItems": 0,
                "type": "array"
            },
            "PatchOrchestratorFilterValue": {
                "maxLength": 256,
                "minLength": 1,
                "type": "string"
            },
            "PatchOrchestratorFilterValues": {
                "items": {
                    "maxLength": 256,
                    "minLength": 1,
                    "type": "string"
                },
                "type": "array"
            },
            "PatchProduct": {
                "type": "string"
            },
            "PatchProductFamily": {
                "type": "string"
            },
            "PatchRule": {
                "description": "Defines an approval rule for a patch baseline.",
                "properties": {
                    "ApproveAfterDays": {
                        "description": "The number of days after the release date of each patch matched by the rule that the patch is marked as approved in the patch baseline. For example, a value of <code>7</code> means that patches are approved seven days after they are released. ",
                        "maximum": 100,
                        "minimum": 0,
                        "type": "integer"
                    },
                    "ComplianceLevel": {
                        "description": "A compliance severity level for all approved patches in a patch baseline. Valid compliance severity levels include the following: Unspecified, Critical, High, Medium, Low, and Informational.",
                        "enum": [
                            "CRITICAL",
                            "HIGH",
                            "MEDIUM",
                            "LOW",
                            "INFORMATIONAL",
                            "UNSPECIFIED"
                        ],
                        "type": "string"
                    },
                    "EnableNonSecurity": {
                        "description": "For instances identified by the approval rule filters, enables a patch baseline to apply non-security updates available in the specified repository. The default value is 'false'. Applies to Linux instances only.",
                        "type": "boolean"
                    },
                    "PatchFilterGroup": {
                        "description": "The patch filter group that defines the criteria for the rule.",
                        "properties": {
                            "PatchFilters": {
                                "description": "The set of patch filters that make up the group.",
                                "items": {
                                    "description": "<p>Defines a patch filter.</p> <p>A patch filter consists of key/value pairs, but not all keys are valid for all operating system types. For example, the key <code>PRODUCT</code> is valid for all supported operating system types. The key <code>MSRC_SEVERITY</code>, however, is valid only for Windows operating systems, and the key <code>SECTION</code> is valid only for Ubuntu operating systems.</p> <p>Refer to the following sections for information about which keys may be used with each major operating system, and which values are valid for each key.</p> <p> <b>Windows Operating Systems</b> </p> <p>The supported keys for Windows operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>MSRC_SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Windows7</code> </p> </li> <li> <p> <code>Windows8</code> </p> </li> <li> <p> <code>Windows8.1</code> </p> </li> <li> <p> <code>Windows8Embedded</code> </p> </li> <li> <p> <code>Windows10</code> </p> </li> <li> <p> <code>Windows10LTSB</code> </p> </li> <li> <p> <code>WindowsServer2008</code> </p> </li> <li> <p> <code>WindowsServer2008R2</code> </p> </li> <li> <p> <code>WindowsServer2012</code> </p> </li> <li> <p> <code>WindowsServer2012R2</code> </p> </li> <li> <p> <code>WindowsServer2016</code> </p> </li> <li> <p> <code>WindowsServer2019</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>CriticalUpdates</code> </p> </li> <li> <p> <code>DefinitionUpdates</code> </p> </li> <li> <p> <code>Drivers</code> </p> </li> <li> <p> <code>FeaturePacks</code> </p> </li> <li> <p> <code>SecurityUpdates</code> </p> </li> <li> <p> <code>ServicePacks</code> </p> </li> <li> <p> <code>Tools</code> </p> </li> <li> <p> <code>UpdateRollups</code> </p> </li> <li> <p> <code>Updates</code> </p> </li> <li> <p> <code>Upgrades</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>MSRC_SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Moderate</code> </p> </li> <li> <p> <code>Low</code> </p> </li> <li> <p> <code>Unspecified</code> </p> </li> </ul> <p> <b>Ubuntu Operating Systems</b> </p> <p>The supported keys for Ubuntu operating systems are <code>PRODUCT</code>, <code>PRIORITY</code>, and <code>SECTION</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Ubuntu14.04</code> </p> </li> <li> <p> <code>Ubuntu16.04</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>PRIORITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Required</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Standard</code> </p> </li> <li> <p> <code>Optional</code> </p> </li> <li> <p> <code>Extra</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SECTION</code> </p> <p>Only the length of the key value is validated. Minimum length is 1. Maximum length is 64.</p> <p> <b>Amazon Linux Operating Systems</b> </p> <p>The supported keys for Amazon Linux operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>AmazonLinux2012.03</code> </p> </li> <li> <p> <code>AmazonLinux2012.09</code> </p> </li> <li> <p> <code>AmazonLinux2013.03</code> </p> </li> <li> <p> <code>AmazonLinux2013.09</code> </p> </li> <li> <p> <code>AmazonLinux2014.03</code> </p> </li> <li> <p> <code>AmazonLinux2014.09</code> </p> </li> <li> <p> <code>AmazonLinux2015.03</code> </p> </li> <li> <p> <code>AmazonLinux2015.09</code> </p> </li> <li> <p> <code>AmazonLinux2016.03</code> </p> </li> <li> <p> <code>AmazonLinux2016.09</code> </p> </li> <li> <p> <code>AmazonLinux2017.03</code> </p> </li> <li> <p> <code>AmazonLinux2017.09</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>Amazon Linux 2 Operating Systems</b> </p> <p>The supported keys for Amazon Linux 2 operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>AmazonLinux2</code> </p> </li> <li> <p> <code>AmazonLinux2.0</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>RedHat Enterprise Linux (RHEL) Operating Systems</b> </p> <p>The supported keys for RedHat Enterprise Linux operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>RedhatEnterpriseLinux6.5</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.6</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.7</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.8</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.9</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.0</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.1</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.2</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.3</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.4</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.5</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.6</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>SUSE Linux Enterprise Server (SLES) Operating Systems</b> </p> <p>The supported keys for SLES operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Suse12.0</code> </p> </li> <li> <p> <code>Suse12.1</code> </p> </li> <li> <p> <code>Suse12.2</code> </p> </li> <li> <p> <code>Suse12.3</code> </p> </li> <li> <p> <code>Suse12.4</code> </p> </li> <li> <p> <code>Suse12.5</code> </p> </li> <li> <p> <code>Suse12.6</code> </p> </li> <li> <p> <code>Suse12.7</code> </p> </li> <li> <p> <code>Suse12.8</code> </p> </li> <li> <p> <code>Suse12.9</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Optional</code> </p> </li> <li> <p> <code>Feature</code> </p> </li> <li> <p> <code>Document</code> </p> </li> <li> <p> <code>Yast</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Moderate</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>CentOS Operating Systems</b> </p> <p>The supported keys for CentOS operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>CentOS6.5</code> </p> </li> <li> <p> <code>CentOS6.6</code> </p> </li> <li> <p> <code>CentOS6.7</code> </p> </li> <li> <p> <code>CentOS6.8</code> </p> </li> <li> <p> <code>CentOS6.9</code> </p> </li> <li> <p> <code>CentOS7.0</code> </p> </li> <li> <p> <code>CentOS7.1</code> </p> </li> <li> <p> <code>CentOS7.2</code> </p> </li> <li> <p> <code>CentOS7.3</code> </p> </li> <li> <p> <code>CentOS7.4</code> </p> </li> <li> <p> <code>CentOS7.5</code> </p> </li> <li> <p> <code>CentOS7.6</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul>",
                                    "properties": {
                                        "Key": {
                                            "description": "<p>The key for the filter.</p> <p>See <a>PatchFilter</a> for lists of valid keys for each operating system type.</p>",
                                            "enum": [
                                                "PRODUCT",
                                                "CLASSIFICATION",
                                                "MSRC_SEVERITY",
                                                "PATCH_ID",
                                                "SECTION",
                                                "PRIORITY",
                                                "SEVERITY"
                                            ],
                                            "type": "string"
                                        },
                                        "Values": {
                                            "description": "<p>The value for the filter key.</p> <p>See <a>PatchFilter</a> for lists of valid values for each key based on operating system type.</p>",
                                            "items": {
                                                "maxLength": 64,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "maxItems": 20,
                                            "minItems": 1,
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "Key",
                                        "Values"
                                    ],
                                    "type": "object"
                                },
                                "maxItems": 4,
                                "minItems": 0,
                                "type": "array"
                            }
                        },
                        "required": [
                            "PatchFilters"
                        ],
                        "type": "object"
                    }
                },
                "required": [
                    "PatchFilterGroup",
                    "ApproveAfterDays"
                ],
                "type": "object"
            },
            "PatchRuleGroup": {
                "description": "A set of rules defining the approval rules for a patch baseline.",
                "properties": {
                    "PatchRules": {
                        "description": "The rules that make up the rule group.",
                        "items": {
                            "description": "Defines an approval rule for a patch baseline.",
                            "properties": {
                                "ApproveAfterDays": {
                                    "description": "The number of days after the release date of each patch matched by the rule that the patch is marked as approved in the patch baseline. For example, a value of <code>7</code> means that patches are approved seven days after they are released. ",
                                    "maximum": 100,
                                    "minimum": 0,
                                    "type": "integer"
                                },
                                "ComplianceLevel": {
                                    "description": "A compliance severity level for all approved patches in a patch baseline. Valid compliance severity levels include the following: Unspecified, Critical, High, Medium, Low, and Informational.",
                                    "enum": [
                                        "CRITICAL",
                                        "HIGH",
                                        "MEDIUM",
                                        "LOW",
                                        "INFORMATIONAL",
                                        "UNSPECIFIED"
                                    ],
                                    "type": "string"
                                },
                                "EnableNonSecurity": {
                                    "description": "For instances identified by the approval rule filters, enables a patch baseline to apply non-security updates available in the specified repository. The default value is 'false'. Applies to Linux instances only.",
                                    "type": "boolean"
                                },
                                "PatchFilterGroup": {
                                    "description": "The patch filter group that defines the criteria for the rule.",
                                    "properties": {
                                        "PatchFilters": {
                                            "description": "The set of patch filters that make up the group.",
                                            "items": {
                                                "description": "<p>Defines a patch filter.</p> <p>A patch filter consists of key/value pairs, but not all keys are valid for all operating system types. For example, the key <code>PRODUCT</code> is valid for all supported operating system types. The key <code>MSRC_SEVERITY</code>, however, is valid only for Windows operating systems, and the key <code>SECTION</code> is valid only for Ubuntu operating systems.</p> <p>Refer to the following sections for information about which keys may be used with each major operating system, and which values are valid for each key.</p> <p> <b>Windows Operating Systems</b> </p> <p>The supported keys for Windows operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>MSRC_SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Windows7</code> </p> </li> <li> <p> <code>Windows8</code> </p> </li> <li> <p> <code>Windows8.1</code> </p> </li> <li> <p> <code>Windows8Embedded</code> </p> </li> <li> <p> <code>Windows10</code> </p> </li> <li> <p> <code>Windows10LTSB</code> </p> </li> <li> <p> <code>WindowsServer2008</code> </p> </li> <li> <p> <code>WindowsServer2008R2</code> </p> </li> <li> <p> <code>WindowsServer2012</code> </p> </li> <li> <p> <code>WindowsServer2012R2</code> </p> </li> <li> <p> <code>WindowsServer2016</code> </p> </li> <li> <p> <code>WindowsServer2019</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>CriticalUpdates</code> </p> </li> <li> <p> <code>DefinitionUpdates</code> </p> </li> <li> <p> <code>Drivers</code> </p> </li> <li> <p> <code>FeaturePacks</code> </p> </li> <li> <p> <code>SecurityUpdates</code> </p> </li> <li> <p> <code>ServicePacks</code> </p> </li> <li> <p> <code>Tools</code> </p> </li> <li> <p> <code>UpdateRollups</code> </p> </li> <li> <p> <code>Updates</code> </p> </li> <li> <p> <code>Upgrades</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>MSRC_SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Moderate</code> </p> </li> <li> <p> <code>Low</code> </p> </li> <li> <p> <code>Unspecified</code> </p> </li> </ul> <p> <b>Ubuntu Operating Systems</b> </p> <p>The supported keys for Ubuntu operating systems are <code>PRODUCT</code>, <code>PRIORITY</code>, and <code>SECTION</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Ubuntu14.04</code> </p> </li> <li> <p> <code>Ubuntu16.04</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>PRIORITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Required</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Standard</code> </p> </li> <li> <p> <code>Optional</code> </p> </li> <li> <p> <code>Extra</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SECTION</code> </p> <p>Only the length of the key value is validated. Minimum length is 1. Maximum length is 64.</p> <p> <b>Amazon Linux Operating Systems</b> </p> <p>The supported keys for Amazon Linux operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>AmazonLinux2012.03</code> </p> </li> <li> <p> <code>AmazonLinux2012.09</code> </p> </li> <li> <p> <code>AmazonLinux2013.03</code> </p> </li> <li> <p> <code>AmazonLinux2013.09</code> </p> </li> <li> <p> <code>AmazonLinux2014.03</code> </p> </li> <li> <p> <code>AmazonLinux2014.09</code> </p> </li> <li> <p> <code>AmazonLinux2015.03</code> </p> </li> <li> <p> <code>AmazonLinux2015.09</code> </p> </li> <li> <p> <code>AmazonLinux2016.03</code> </p> </li> <li> <p> <code>AmazonLinux2016.09</code> </p> </li> <li> <p> <code>AmazonLinux2017.03</code> </p> </li> <li> <p> <code>AmazonLinux2017.09</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>Amazon Linux 2 Operating Systems</b> </p> <p>The supported keys for Amazon Linux 2 operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>AmazonLinux2</code> </p> </li> <li> <p> <code>AmazonLinux2.0</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>RedHat Enterprise Linux (RHEL) Operating Systems</b> </p> <p>The supported keys for RedHat Enterprise Linux operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>RedhatEnterpriseLinux6.5</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.6</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.7</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.8</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.9</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.0</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.1</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.2</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.3</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.4</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.5</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.6</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>SUSE Linux Enterprise Server (SLES) Operating Systems</b> </p> <p>The supported keys for SLES operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Suse12.0</code> </p> </li> <li> <p> <code>Suse12.1</code> </p> </li> <li> <p> <code>Suse12.2</code> </p> </li> <li> <p> <code>Suse12.3</code> </p> </li> <li> <p> <code>Suse12.4</code> </p> </li> <li> <p> <code>Suse12.5</code> </p> </li> <li> <p> <code>Suse12.6</code> </p> </li> <li> <p> <code>Suse12.7</code> </p> </li> <li> <p> <code>Suse12.8</code> </p> </li> <li> <p> <code>Suse12.9</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Optional</code> </p> </li> <li> <p> <code>Feature</code> </p> </li> <li> <p> <code>Document</code> </p> </li> <li> <p> <code>Yast</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Moderate</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>CentOS Operating Systems</b> </p> <p>The supported keys for CentOS operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>CentOS6.5</code> </p> </li> <li> <p> <code>CentOS6.6</code> </p> </li> <li> <p> <code>CentOS6.7</code> </p> </li> <li> <p> <code>CentOS6.8</code> </p> </li> <li> <p> <code>CentOS6.9</code> </p> </li> <li> <p> <code>CentOS7.0</code> </p> </li> <li> <p> <code>CentOS7.1</code> </p> </li> <li> <p> <code>CentOS7.2</code> </p> </li> <li> <p> <code>CentOS7.3</code> </p> </li> <li> <p> <code>CentOS7.4</code> </p> </li> <li> <p> <code>CentOS7.5</code> </p> </li> <li> <p> <code>CentOS7.6</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul>",
                                                "properties": {
                                                    "Key": {
                                                        "description": "<p>The key for the filter.</p> <p>See <a>PatchFilter</a> for lists of valid keys for each operating system type.</p>",
                                                        "enum": [
                                                            "PRODUCT",
                                                            "CLASSIFICATION",
                                                            "MSRC_SEVERITY",
                                                            "PATCH_ID",
                                                            "SECTION",
                                                            "PRIORITY",
                                                            "SEVERITY"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Values": {
                                                        "description": "<p>The value for the filter key.</p> <p>See <a>PatchFilter</a> for lists of valid values for each key based on operating system type.</p>",
                                                        "items": {
                                                            "maxLength": 64,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "maxItems": 20,
                                                        "minItems": 1,
                                                        "type": "array"
                                                    }
                                                },
                                                "required": [
                                                    "Key",
                                                    "Values"
                                                ],
                                                "type": "object"
                                            },
                                            "maxItems": 4,
                                            "minItems": 0,
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "PatchFilters"
                                    ],
                                    "type": "object"
                                }
                            },
                            "required": [
                                "PatchFilterGroup",
                                "ApproveAfterDays"
                            ],
                            "type": "object"
                        },
                        "maxItems": 10,
                        "minItems": 0,
                        "type": "array"
                    }
                },
                "required": [
                    "PatchRules"
                ],
                "type": "object"
            },
            "PatchRuleList": {
                "items": {
                    "description": "Defines an approval rule for a patch baseline.",
                    "properties": {
                        "ApproveAfterDays": {
                            "description": "The number of days after the release date of each patch matched by the rule that the patch is marked as approved in the patch baseline. For example, a value of <code>7</code> means that patches are approved seven days after they are released. ",
                            "maximum": 100,
                            "minimum": 0,
                            "type": "integer"
                        },
                        "ComplianceLevel": {
                            "description": "A compliance severity level for all approved patches in a patch baseline. Valid compliance severity levels include the following: Unspecified, Critical, High, Medium, Low, and Informational.",
                            "enum": [
                                "CRITICAL",
                                "HIGH",
                                "MEDIUM",
                                "LOW",
                                "INFORMATIONAL",
                                "UNSPECIFIED"
                            ],
                            "type": "string"
                        },
                        "EnableNonSecurity": {
                            "description": "For instances identified by the approval rule filters, enables a patch baseline to apply non-security updates available in the specified repository. The default value is 'false'. Applies to Linux instances only.",
                            "type": "boolean"
                        },
                        "PatchFilterGroup": {
                            "description": "The patch filter group that defines the criteria for the rule.",
                            "properties": {
                                "PatchFilters": {
                                    "description": "The set of patch filters that make up the group.",
                                    "items": {
                                        "description": "<p>Defines a patch filter.</p> <p>A patch filter consists of key/value pairs, but not all keys are valid for all operating system types. For example, the key <code>PRODUCT</code> is valid for all supported operating system types. The key <code>MSRC_SEVERITY</code>, however, is valid only for Windows operating systems, and the key <code>SECTION</code> is valid only for Ubuntu operating systems.</p> <p>Refer to the following sections for information about which keys may be used with each major operating system, and which values are valid for each key.</p> <p> <b>Windows Operating Systems</b> </p> <p>The supported keys for Windows operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>MSRC_SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Windows7</code> </p> </li> <li> <p> <code>Windows8</code> </p> </li> <li> <p> <code>Windows8.1</code> </p> </li> <li> <p> <code>Windows8Embedded</code> </p> </li> <li> <p> <code>Windows10</code> </p> </li> <li> <p> <code>Windows10LTSB</code> </p> </li> <li> <p> <code>WindowsServer2008</code> </p> </li> <li> <p> <code>WindowsServer2008R2</code> </p> </li> <li> <p> <code>WindowsServer2012</code> </p> </li> <li> <p> <code>WindowsServer2012R2</code> </p> </li> <li> <p> <code>WindowsServer2016</code> </p> </li> <li> <p> <code>WindowsServer2019</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>CriticalUpdates</code> </p> </li> <li> <p> <code>DefinitionUpdates</code> </p> </li> <li> <p> <code>Drivers</code> </p> </li> <li> <p> <code>FeaturePacks</code> </p> </li> <li> <p> <code>SecurityUpdates</code> </p> </li> <li> <p> <code>ServicePacks</code> </p> </li> <li> <p> <code>Tools</code> </p> </li> <li> <p> <code>UpdateRollups</code> </p> </li> <li> <p> <code>Updates</code> </p> </li> <li> <p> <code>Upgrades</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>MSRC_SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Moderate</code> </p> </li> <li> <p> <code>Low</code> </p> </li> <li> <p> <code>Unspecified</code> </p> </li> </ul> <p> <b>Ubuntu Operating Systems</b> </p> <p>The supported keys for Ubuntu operating systems are <code>PRODUCT</code>, <code>PRIORITY</code>, and <code>SECTION</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Ubuntu14.04</code> </p> </li> <li> <p> <code>Ubuntu16.04</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>PRIORITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Required</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Standard</code> </p> </li> <li> <p> <code>Optional</code> </p> </li> <li> <p> <code>Extra</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SECTION</code> </p> <p>Only the length of the key value is validated. Minimum length is 1. Maximum length is 64.</p> <p> <b>Amazon Linux Operating Systems</b> </p> <p>The supported keys for Amazon Linux operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>AmazonLinux2012.03</code> </p> </li> <li> <p> <code>AmazonLinux2012.09</code> </p> </li> <li> <p> <code>AmazonLinux2013.03</code> </p> </li> <li> <p> <code>AmazonLinux2013.09</code> </p> </li> <li> <p> <code>AmazonLinux2014.03</code> </p> </li> <li> <p> <code>AmazonLinux2014.09</code> </p> </li> <li> <p> <code>AmazonLinux2015.03</code> </p> </li> <li> <p> <code>AmazonLinux2015.09</code> </p> </li> <li> <p> <code>AmazonLinux2016.03</code> </p> </li> <li> <p> <code>AmazonLinux2016.09</code> </p> </li> <li> <p> <code>AmazonLinux2017.03</code> </p> </li> <li> <p> <code>AmazonLinux2017.09</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>Amazon Linux 2 Operating Systems</b> </p> <p>The supported keys for Amazon Linux 2 operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>AmazonLinux2</code> </p> </li> <li> <p> <code>AmazonLinux2.0</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>RedHat Enterprise Linux (RHEL) Operating Systems</b> </p> <p>The supported keys for RedHat Enterprise Linux operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>RedhatEnterpriseLinux6.5</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.6</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.7</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.8</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.9</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.0</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.1</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.2</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.3</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.4</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.5</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.6</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>SUSE Linux Enterprise Server (SLES) Operating Systems</b> </p> <p>The supported keys for SLES operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Suse12.0</code> </p> </li> <li> <p> <code>Suse12.1</code> </p> </li> <li> <p> <code>Suse12.2</code> </p> </li> <li> <p> <code>Suse12.3</code> </p> </li> <li> <p> <code>Suse12.4</code> </p> </li> <li> <p> <code>Suse12.5</code> </p> </li> <li> <p> <code>Suse12.6</code> </p> </li> <li> <p> <code>Suse12.7</code> </p> </li> <li> <p> <code>Suse12.8</code> </p> </li> <li> <p> <code>Suse12.9</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Optional</code> </p> </li> <li> <p> <code>Feature</code> </p> </li> <li> <p> <code>Document</code> </p> </li> <li> <p> <code>Yast</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Moderate</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>CentOS Operating Systems</b> </p> <p>The supported keys for CentOS operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>CentOS6.5</code> </p> </li> <li> <p> <code>CentOS6.6</code> </p> </li> <li> <p> <code>CentOS6.7</code> </p> </li> <li> <p> <code>CentOS6.8</code> </p> </li> <li> <p> <code>CentOS6.9</code> </p> </li> <li> <p> <code>CentOS7.0</code> </p> </li> <li> <p> <code>CentOS7.1</code> </p> </li> <li> <p> <code>CentOS7.2</code> </p> </li> <li> <p> <code>CentOS7.3</code> </p> </li> <li> <p> <code>CentOS7.4</code> </p> </li> <li> <p> <code>CentOS7.5</code> </p> </li> <li> <p> <code>CentOS7.6</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul>",
                                        "properties": {
                                            "Key": {
                                                "description": "<p>The key for the filter.</p> <p>See <a>PatchFilter</a> for lists of valid keys for each operating system type.</p>",
                                                "enum": [
                                                    "PRODUCT",
                                                    "CLASSIFICATION",
                                                    "MSRC_SEVERITY",
                                                    "PATCH_ID",
                                                    "SECTION",
                                                    "PRIORITY",
                                                    "SEVERITY"
                                                ],
                                                "type": "string"
                                            },
                                            "Values": {
                                                "description": "<p>The value for the filter key.</p> <p>See <a>PatchFilter</a> for lists of valid values for each key based on operating system type.</p>",
                                                "items": {
                                                    "maxLength": 64,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "maxItems": 20,
                                                "minItems": 1,
                                                "type": "array"
                                            }
                                        },
                                        "required": [
                                            "Key",
                                            "Values"
                                        ],
                                        "type": "object"
                                    },
                                    "maxItems": 4,
                                    "minItems": 0,
                                    "type": "array"
                                }
                            },
                            "required": [
                                "PatchFilters"
                            ],
                            "type": "object"
                        }
                    },
                    "required": [
                        "PatchFilterGroup",
                        "ApproveAfterDays"
                    ],
                    "type": "object"
                },
                "maxItems": 10,
                "minItems": 0,
                "type": "array"
            },
            "PatchSeverity": {
                "type": "string"
            },
            "PatchSource": {
                "description": "Information about the patches to use to update the instances, including target operating systems and source repository. Applies to Linux instances only.",
                "properties": {
                    "Configuration": {
                        "description": "<p>The value of the yum repo configuration. For example:</p> <p> <code>[main]</code> </p> <p> <code>cachedir=/var/cache/yum/$basesearch$releasever</code> </p> <p> <code>keepcache=0</code> </p> <p> <code>debuglevel=2</code> </p>",
                        "format": "password",
                        "maxLength": 512,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Name": {
                        "description": "The name specified to identify the patch source.",
                        "pattern": "^[a-zA-Z0-9_\\-.]{3,50}$",
                        "type": "string"
                    },
                    "Products": {
                        "description": "The specific operating system versions a patch repository applies to, such as \"Ubuntu16.04\", \"AmazonLinux2016.09\", \"RedhatEnterpriseLinux7.2\" or \"Suse12.7\". For lists of supported product values, see <a>PatchFilter</a>.",
                        "items": {
                            "maxLength": 128,
                            "minLength": 1,
                            "type": "string"
                        },
                        "maxItems": 20,
                        "minItems": 1,
                        "type": "array"
                    }
                },
                "required": [
                    "Name",
                    "Products",
                    "Configuration"
                ],
                "type": "object"
            },
            "PatchSourceConfiguration": {
                "format": "password",
                "maxLength": 512,
                "minLength": 1,
                "type": "string"
            },
            "PatchSourceList": {
                "items": {
                    "description": "Information about the patches to use to update the instances, including target operating systems and source repository. Applies to Linux instances only.",
                    "properties": {
                        "Configuration": {
                            "description": "<p>The value of the yum repo configuration. For example:</p> <p> <code>[main]</code> </p> <p> <code>cachedir=/var/cache/yum/$basesearch$releasever</code> </p> <p> <code>keepcache=0</code> </p> <p> <code>debuglevel=2</code> </p>",
                            "format": "password",
                            "maxLength": 512,
                            "minLength": 1,
                            "type": "string"
                        },
                        "Name": {
                            "description": "The name specified to identify the patch source.",
                            "pattern": "^[a-zA-Z0-9_\\-.]{3,50}$",
                            "type": "string"
                        },
                        "Products": {
                            "description": "The specific operating system versions a patch repository applies to, such as \"Ubuntu16.04\", \"AmazonLinux2016.09\", \"RedhatEnterpriseLinux7.2\" or \"Suse12.7\". For lists of supported product values, see <a>PatchFilter</a>.",
                            "items": {
                                "maxLength": 128,
                                "minLength": 1,
                                "type": "string"
                            },
                            "maxItems": 20,
                            "minItems": 1,
                            "type": "array"
                        }
                    },
                    "required": [
                        "Name",
                        "Products",
                        "Configuration"
                    ],
                    "type": "object"
                },
                "maxItems": 20,
                "minItems": 0,
                "type": "array"
            },
            "PatchSourceName": {
                "pattern": "^[a-zA-Z0-9_\\-.]{3,50}$",
                "type": "string"
            },
            "PatchSourceProduct": {
                "maxLength": 128,
                "minLength": 1,
                "type": "string"
            },
            "PatchSourceProductList": {
                "items": {
                    "maxLength": 128,
                    "minLength": 1,
                    "type": "string"
                },
                "maxItems": 20,
                "minItems": 1,
                "type": "array"
            },
            "PatchStatus": {
                "description": "Information about the approval status of a patch.",
                "properties": {
                    "ApprovalDate": {
                        "description": "The date the patch was approved (or will be approved if the status is PENDING_APPROVAL).",
                        "format": "date-time",
                        "type": "string"
                    },
                    "ComplianceLevel": {
                        "description": "The compliance severity level for a patch.",
                        "enum": [
                            "CRITICAL",
                            "HIGH",
                            "MEDIUM",
                            "LOW",
                            "INFORMATIONAL",
                            "UNSPECIFIED"
                        ],
                        "type": "string"
                    },
                    "DeploymentStatus": {
                        "description": "The approval status of a patch (APPROVED, PENDING_APPROVAL, EXPLICIT_APPROVED, EXPLICIT_REJECTED).",
                        "enum": [
                            "APPROVED",
                            "PENDING_APPROVAL",
                            "EXPLICIT_APPROVED",
                            "EXPLICIT_REJECTED"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PatchTitle": {
                "type": "string"
            },
            "PatchVendor": {
                "type": "string"
            },
            "PingStatus": {
                "enum": [
                    "Online",
                    "ConnectionLost",
                    "Inactive"
                ],
                "type": "string"
            },
            "PlatformType": {
                "enum": [
                    "Windows",
                    "Linux"
                ],
                "type": "string"
            },
            "PlatformTypeList": {
                "items": {
                    "enum": [
                        "Windows",
                        "Linux"
                    ],
                    "type": "string"
                },
                "type": "array"
            },
            "Product": {
                "type": "string"
            },
            "ProgressCounters": {
                "description": "An aggregate of step execution statuses displayed in the AWS Console for a multi-Region and multi-account Automation execution.",
                "properties": {
                    "CancelledSteps": {
                        "description": "The total number of steps that the system cancelled in all specified AWS Regions and accounts for the current Automation execution.",
                        "type": "integer"
                    },
                    "FailedSteps": {
                        "description": "The total number of steps that failed to execute in all specified AWS Regions and accounts for the current Automation execution.",
                        "type": "integer"
                    },
                    "SuccessSteps": {
                        "description": "The total number of steps that successfully completed in all specified AWS Regions and accounts for the current Automation execution.",
                        "type": "integer"
                    },
                    "TimedOutSteps": {
                        "description": "The total number of steps that timed out in all specified AWS Regions and accounts for the current Automation execution.",
                        "type": "integer"
                    },
                    "TotalSteps": {
                        "description": "The total number of steps executed in all specified AWS Regions and accounts for the current Automation execution.",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "PutComplianceItemsRequest": {
                "properties": {
                    "ComplianceType": {
                        "description": "Specify the compliance type. For example, specify Association (for a State Manager association), Patch, or Custom:<code>string</code>.",
                        "maxLength": 100,
                        "minLength": 1,
                        "pattern": "[A-Za-z0-9_\\-]\\w+|Custom:[a-zA-Z0-9_\\-]\\w+",
                        "type": "string"
                    },
                    "ExecutionSummary": {
                        "description": "A summary of the call execution that includes an execution ID, the type of execution (for example, <code>Command</code>), and the date/time of the execution using a datetime object that is saved in the following format: yyyy-MM-dd'T'HH:mm:ss'Z'.",
                        "properties": {
                            "ExecutionId": {
                                "description": "An ID created by the system when <code>PutComplianceItems</code> was called. For example, <code>CommandID</code> is a valid execution ID. You can use this ID in subsequent calls.",
                                "maxLength": 100,
                                "type": "string"
                            },
                            "ExecutionTime": {
                                "description": "The time the execution ran as a datetime object that is saved in the following format: yyyy-MM-dd'T'HH:mm:ss'Z'.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "ExecutionType": {
                                "description": "The type of execution. For example, <code>Command</code> is a valid execution type.",
                                "maxLength": 50,
                                "type": "string"
                            }
                        },
                        "required": [
                            "ExecutionTime"
                        ],
                        "type": "object"
                    },
                    "ItemContentHash": {
                        "description": "MD5 or SHA-256 content hash. The content hash is used to determine if existing information should be overwritten or ignored. If the content hashes match, the request to put compliance information is ignored.",
                        "maxLength": 256,
                        "type": "string"
                    },
                    "Items": {
                        "description": "Information about the compliance as defined by the resource type. For example, for a patch compliance type, <code>Items</code> includes information about the PatchSeverity, Classification, etc.",
                        "items": {
                            "description": "Information about a compliance item.",
                            "properties": {
                                "Details": {
                                    "description": "A \"Key\": \"Value\" tag combination for the compliance item.",
                                    "items": {
                                        "properties": {
                                            "key": {
                                                "maxLength": 64,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "value": {
                                                "maxLength": 4096,
                                                "minLength": 0,
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "Id": {
                                    "description": "The compliance item ID. For example, if the compliance item is a Windows patch, the ID could be the number of the KB article.",
                                    "maxLength": 100,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Severity": {
                                    "description": "The severity of the compliance status. Severity can be one of the following: Critical, High, Medium, Low, Informational, Unspecified.",
                                    "enum": [
                                        "CRITICAL",
                                        "HIGH",
                                        "MEDIUM",
                                        "LOW",
                                        "INFORMATIONAL",
                                        "UNSPECIFIED"
                                    ],
                                    "type": "string"
                                },
                                "Status": {
                                    "description": "The status of the compliance item. An item is either COMPLIANT or NON_COMPLIANT.",
                                    "enum": [
                                        "COMPLIANT",
                                        "NON_COMPLIANT"
                                    ],
                                    "type": "string"
                                },
                                "Title": {
                                    "description": "The title of the compliance item. For example, if the compliance item is a Windows patch, the title could be the title of the KB article for the patch; for example: Security Update for Active Directory Federation Services. ",
                                    "maxLength": 500,
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Severity",
                                "Status"
                            ],
                            "type": "object"
                        },
                        "maxItems": 10000,
                        "minItems": 0,
                        "type": "array"
                    },
                    "ResourceId": {
                        "description": "Specify an ID for this resource. For a managed instance, this is the instance ID.",
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string"
                    },
                    "ResourceType": {
                        "description": "Specify the type of resource. <code>ManagedInstance</code> is currently the only supported resource type.",
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "ResourceId",
                    "ResourceType",
                    "ComplianceType",
                    "ExecutionSummary",
                    "Items"
                ],
                "type": "object"
            },
            "PutComplianceItemsResult": {
                "properties": {},
                "type": "object"
            },
            "PutInventoryMessage": {
                "type": "string"
            },
            "PutInventoryRequest": {
                "properties": {
                    "InstanceId": {
                        "description": "One or more instance IDs where you want to add or update inventory items.",
                        "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                        "type": "string"
                    },
                    "Items": {
                        "description": "The inventory items that you want to add or update on instances.",
                        "items": {
                            "description": "Information collected from managed instances based on your inventory policy document",
                            "properties": {
                                "CaptureTime": {
                                    "description": "The time the inventory information was collected.",
                                    "pattern": "^(20)[0-9][0-9]-(0[1-9]|1[012])-([12][0-9]|3[01]|0[1-9])(T)(2[0-3]|[0-1][0-9])(:[0-5][0-9])(:[0-5][0-9])(Z)$",
                                    "type": "string"
                                },
                                "Content": {
                                    "description": "The inventory data of the inventory type.",
                                    "items": {
                                        "items": {
                                            "properties": {
                                                "key": {
                                                    "maxLength": 64,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "maxLength": 4096,
                                                    "minLength": 0,
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "maxItems": 50,
                                        "minItems": 0,
                                        "type": "array"
                                    },
                                    "maxItems": 10000,
                                    "minItems": 0,
                                    "type": "array"
                                },
                                "ContentHash": {
                                    "description": "MD5 hash of the inventory item type contents. The content hash is used to determine whether to update inventory information. The PutInventory API does not update the inventory item type contents if the MD5 hash has not changed since last update. ",
                                    "maxLength": 256,
                                    "type": "string"
                                },
                                "Context": {
                                    "description": "A map of associated properties for a specified inventory type. For example, with this attribute, you can specify the <code>ExecutionId</code>, <code>ExecutionType</code>, <code>ComplianceType</code> properties of the <code>AWS:ComplianceItem</code> type.",
                                    "items": {
                                        "properties": {
                                            "key": {
                                                "maxLength": 64,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "value": {
                                                "maxLength": 4096,
                                                "minLength": 0,
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "maxItems": 50,
                                    "minItems": 0,
                                    "type": "array"
                                },
                                "SchemaVersion": {
                                    "description": "The schema version for the inventory item.",
                                    "pattern": "^([0-9]{1,6})(\\.[0-9]{1,6})$",
                                    "type": "string"
                                },
                                "TypeName": {
                                    "description": "The name of the inventory type. Default inventory item type names start with AWS. Custom inventory type names will start with Custom. Default inventory item types include the following: AWS:AWSComponent, AWS:Application, AWS:InstanceInformation, AWS:Network, and AWS:WindowsUpdate.",
                                    "maxLength": 100,
                                    "minLength": 1,
                                    "pattern": "^(AWS|Custom):.*$",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "TypeName",
                                "SchemaVersion",
                                "CaptureTime"
                            ],
                            "type": "object"
                        },
                        "maxItems": 30,
                        "minItems": 1,
                        "type": "array"
                    }
                },
                "required": [
                    "InstanceId",
                    "Items"
                ],
                "type": "object"
            },
            "PutInventoryResult": {
                "properties": {
                    "Message": {
                        "description": "Information about the request.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PutParameterRequest": {
                "properties": {
                    "AllowedPattern": {
                        "description": "A regular expression used to validate the parameter value. For example, for String types with values restricted to numbers, you can specify the following: AllowedPattern=^\\d+$ ",
                        "maxLength": 1024,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Description": {
                        "description": "<p>Information about the parameter that you want to add to the system. Optional but recommended.</p> <important> <p>Do not enter personally identifiable information in this field.</p> </important>",
                        "maxLength": 1024,
                        "minLength": 0,
                        "type": "string"
                    },
                    "KeyId": {
                        "description": "<p>The KMS Key ID that you want to use to encrypt a parameter. Either the default AWS Key Management Service (AWS KMS) key automatically assigned to your AWS account or a custom key. Required for parameters that use the <code>SecureString</code> data type.</p> <p>If you don't specify a key ID, the system uses the default key associated with your AWS account.</p> <ul> <li> <p>To use your default AWS KMS key, choose the <code>SecureString</code> data type, and do <i>not</i> specify the <code>Key ID</code> when you create the parameter. The system automatically populates <code>Key ID</code> with your default KMS key.</p> </li> <li> <p>To use a custom KMS key, choose the <code>SecureString</code> data type with the <code>Key ID</code> parameter.</p> </li> </ul>",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "^([a-zA-Z0-9:/_-]+)$",
                        "type": "string"
                    },
                    "Name": {
                        "description": "<p>The fully qualified name of the parameter that you want to add to the system. The fully qualified name includes the complete hierarchy of the parameter path and name. For example: <code>/Dev/DBServer/MySQL/db-string13</code> </p> <p>Naming Constraints:</p> <ul> <li> <p>Parameter names are case sensitive.</p> </li> <li> <p>A parameter name must be unique within an AWS Region</p> </li> <li> <p>A parameter name can't be prefixed with \"aws\" or \"ssm\" (case-insensitive).</p> </li> <li> <p>Parameter names can include only the following symbols and letters: <code>a-zA-Z0-9_.-/</code> </p> </li> <li> <p>A parameter name can't include spaces.</p> </li> <li> <p>Parameter hierarchies are limited to a maximum depth of fifteen levels.</p> </li> </ul> <p>For additional information about valid values for parameter names, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-parameter-name-constraints.html\">Requirements and Constraints for Parameter Names</a> in the <i>AWS Systems Manager User Guide</i>.</p> <note> <p>The maximum length constraint listed below includes capacity for additional system attributes that are not part of the name. The maximum length for the fully qualified parameter name is 1011 characters. </p> </note>",
                        "maxLength": 2048,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Overwrite": {
                        "description": "Overwrite an existing parameter. If not specified, will default to \"false\".",
                        "type": "boolean"
                    },
                    "Tags": {
                        "description": "<p>Optional metadata that you assign to a resource. Tags enable you to categorize a resource in different ways, such as by purpose, owner, or environment. For example, you might want to tag a Systems Manager parameter to identify the type of resource to which it applies, the environment, or the type of configuration data referenced by the parameter. In this case, you could specify the following key name/value pairs:</p> <ul> <li> <p> <code>Key=Resource,Value=S3bucket</code> </p> </li> <li> <p> <code>Key=OS,Value=Windows</code> </p> </li> <li> <p> <code>Key=ParameterType,Value=LicenseKey</code> </p> </li> </ul> <note> <p>To add tags to an existing Systems Manager parameter, use the <a>AddTagsToResource</a> action.</p> </note>",
                        "items": {
                            "description": "Metadata that you assign to your AWS resources. Tags enable you to categorize your resources in different ways, for example, by purpose, owner, or environment. In Systems Manager, you can apply tags to documents, managed instances, Maintenance Windows, Parameter Store parameters, and patch baselines.",
                            "properties": {
                                "Key": {
                                    "description": "The name of the tag.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "The value of the tag.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Key",
                                "Value"
                            ],
                            "type": "object"
                        },
                        "maxItems": 1000,
                        "type": "array"
                    },
                    "Type": {
                        "description": "<p>The type of parameter that you want to add to the system.</p> <p>Items in a <code>StringList</code> must be separated by a comma (,). You can't use other punctuation or special character to escape items in the list. If you have a parameter value that requires a comma, then use the <code>String</code> data type.</p> <note> <p> <code>SecureString</code> is not currently supported for AWS CloudFormation templates or in the China Regions.</p> </note>",
                        "enum": [
                            "String",
                            "StringList",
                            "SecureString"
                        ],
                        "type": "string"
                    },
                    "Value": {
                        "description": "The parameter value that you want to add to the system.",
                        "maxLength": 4096,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "Name",
                    "Value",
                    "Type"
                ],
                "type": "object"
            },
            "PutParameterResult": {
                "properties": {
                    "Version": {
                        "description": "The new version number of a parameter. If you edit a parameter value, Parameter Store automatically creates a new version and assigns this new version a unique ID. You can reference a parameter version ID in API actions or in Systems Manager documents (SSM documents). By default, if you don't specify a specific version, the system returns the latest parameter value when a parameter is called.",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Region": {
                "type": "string"
            },
            "Regions": {
                "items": {
                    "type": "string"
                },
                "maxItems": 50,
                "minItems": 1,
                "type": "array"
            },
            "RegisterDefaultPatchBaselineRequest": {
                "properties": {
                    "BaselineId": {
                        "description": "The ID of the patch baseline that should be the default patch baseline.",
                        "maxLength": 128,
                        "minLength": 20,
                        "pattern": "^[a-zA-Z0-9_\\-:/]{20,128}$",
                        "type": "string"
                    }
                },
                "required": [
                    "BaselineId"
                ],
                "type": "object"
            },
            "RegisterDefaultPatchBaselineResult": {
                "properties": {
                    "BaselineId": {
                        "description": "The ID of the default patch baseline.",
                        "maxLength": 128,
                        "minLength": 20,
                        "pattern": "^[a-zA-Z0-9_\\-:/]{20,128}$",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "RegisterPatchBaselineForPatchGroupRequest": {
                "properties": {
                    "BaselineId": {
                        "description": "The ID of the patch baseline to register the patch group with.",
                        "maxLength": 128,
                        "minLength": 20,
                        "pattern": "^[a-zA-Z0-9_\\-:/]{20,128}$",
                        "type": "string"
                    },
                    "PatchGroup": {
                        "description": "The name of the patch group that should be registered with the patch baseline.",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                        "type": "string"
                    }
                },
                "required": [
                    "BaselineId",
                    "PatchGroup"
                ],
                "type": "object"
            },
            "RegisterPatchBaselineForPatchGroupResult": {
                "properties": {
                    "BaselineId": {
                        "description": "The ID of the patch baseline the patch group was registered with.",
                        "maxLength": 128,
                        "minLength": 20,
                        "pattern": "^[a-zA-Z0-9_\\-:/]{20,128}$",
                        "type": "string"
                    },
                    "PatchGroup": {
                        "description": "The name of the patch group registered with the patch baseline.",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "RegisterTargetWithMaintenanceWindowRequest": {
                "properties": {
                    "ClientToken": {
                        "description": "User-provided idempotency token.",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Description": {
                        "description": "An optional description for the target.",
                        "format": "password",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Name": {
                        "description": "An optional name for the target.",
                        "maxLength": 128,
                        "minLength": 3,
                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                        "type": "string"
                    },
                    "OwnerInformation": {
                        "description": "User-provided value that will be included in any CloudWatch events raised while running tasks for these targets in this Maintenance Window.",
                        "format": "password",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "ResourceType": {
                        "description": "The type of target being registered with the Maintenance Window.",
                        "enum": [
                            "INSTANCE"
                        ],
                        "type": "string"
                    },
                    "Targets": {
                        "description": "<p>The targets (either instances or tags). </p> <p>Specify instances using the following format:</p> <p> <code>Key=InstanceIds,Values=&lt;instance-id-1&gt;,&lt;instance-id-2&gt;</code> </p> <p>Specify tags using either of the following formats:</p> <p> <code>Key=tag:&lt;tag-key&gt;,Values=&lt;tag-value-1&gt;,&lt;tag-value-2&gt;</code> </p> <p> <code>Key=tag-key,Values=&lt;tag-key-1&gt;,&lt;tag-key-2&gt;</code> </p>",
                        "items": {
                            "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                            "properties": {
                                "Key": {
                                    "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "maxItems": 50,
                                    "minItems": 0,
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 5,
                        "minItems": 0,
                        "type": "array"
                    },
                    "WindowId": {
                        "description": "The ID of the Maintenance Window the target should be registered with.",
                        "maxLength": 20,
                        "minLength": 20,
                        "pattern": "^mw-[0-9a-f]{17}$",
                        "type": "string"
                    }
                },
                "required": [
                    "WindowId",
                    "ResourceType",
                    "Targets"
                ],
                "type": "object"
            },
            "RegisterTargetWithMaintenanceWindowResult": {
                "properties": {
                    "WindowTargetId": {
                        "description": "The ID of the target definition in this Maintenance Window.",
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "RegisterTaskWithMaintenanceWindowRequest": {
                "properties": {
                    "ClientToken": {
                        "description": "User-provided idempotency token.",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Description": {
                        "description": "An optional description for the task.",
                        "format": "password",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "LoggingInfo": {
                        "description": "<p>A structure containing information about an Amazon S3 bucket to write instance-level logs to. </p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an S3 bucket to contain logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> </note>",
                        "properties": {
                            "S3BucketName": {
                                "description": "The name of an Amazon S3 bucket where execution logs are stored .",
                                "maxLength": 63,
                                "minLength": 3,
                                "type": "string"
                            },
                            "S3KeyPrefix": {
                                "description": "(Optional) The Amazon S3 bucket subfolder. ",
                                "maxLength": 500,
                                "type": "string"
                            },
                            "S3Region": {
                                "description": "The region where the Amazon S3 bucket is located.",
                                "maxLength": 20,
                                "minLength": 3,
                                "type": "string"
                            }
                        },
                        "required": [
                            "S3BucketName",
                            "S3Region"
                        ],
                        "type": "object"
                    },
                    "MaxConcurrency": {
                        "description": "The maximum number of targets this task can be run for in parallel.",
                        "maxLength": 7,
                        "minLength": 1,
                        "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                        "type": "string"
                    },
                    "MaxErrors": {
                        "description": "The maximum number of errors allowed before this task stops being scheduled.",
                        "maxLength": 7,
                        "minLength": 1,
                        "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                        "type": "string"
                    },
                    "Name": {
                        "description": "An optional name for the task.",
                        "maxLength": 128,
                        "minLength": 3,
                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                        "type": "string"
                    },
                    "Priority": {
                        "description": "The priority of the task in the Maintenance Window, the lower the number the higher the priority. Tasks in a Maintenance Window are scheduled in priority order with tasks that have the same priority scheduled in parallel.",
                        "minimum": 0,
                        "type": "integer"
                    },
                    "ServiceRoleArn": {
                        "description": "<p>The role to assume when running the Maintenance Window task.</p> <p>If you do not specify a service role ARN, Systems Manager will use your account's service-linked role for Systems Manager by default. If no service-linked role for Systems Manager exists in your account, it will be created when you run <code>RegisterTaskWithMaintenanceWindow</code> without specifying a service role ARN.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/using-service-linked-roles.html#slr-permissions\">Service-Linked Role Permissions for Systems Manager</a> and <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-maintenance-permissions.html#maintenance-window-tasks-service-role\">Should I Use a Service-Linked Role or a Custom Service Role to Run Maintenance Window Tasks? </a> in the <i>AWS Systems Manager User Guide</i>.</p>",
                        "type": "string"
                    },
                    "Targets": {
                        "description": "<p>The targets (either instances or Maintenance Window targets).</p> <p>Specify instances using the following format: </p> <p> <code>Key=InstanceIds,Values=&lt;instance-id-1&gt;,&lt;instance-id-2&gt;</code> </p> <p>Specify Maintenance Window targets using the following format:</p> <p> <code>Key=&lt;WindowTargetIds&gt;,Values=&lt;window-target-id-1&gt;,&lt;window-target-id-2&gt;</code> </p>",
                        "items": {
                            "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                            "properties": {
                                "Key": {
                                    "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "maxItems": 50,
                                    "minItems": 0,
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 5,
                        "minItems": 0,
                        "type": "array"
                    },
                    "TaskArn": {
                        "description": "The ARN of the task to execute ",
                        "maxLength": 1600,
                        "minLength": 1,
                        "type": "string"
                    },
                    "TaskInvocationParameters": {
                        "description": "The parameters that the task should use during execution. Populate only the fields that match the task type. All other fields should be empty. ",
                        "properties": {
                            "Automation": {
                                "description": "The parameters for an AUTOMATION task type.",
                                "properties": {
                                    "DocumentVersion": {
                                        "description": "The version of an Automation document to use during task execution.",
                                        "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                        "type": "string"
                                    },
                                    "Parameters": {
                                        "description": "<p>The parameters for the AUTOMATION task.</p> <p>For information about specifying and updating task parameters, see <a>RegisterTaskWithMaintenanceWindow</a> and <a>UpdateMaintenanceWindowTask</a>.</p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an S3 bucket to contain logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p> <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p>For AUTOMATION task types, Systems Manager ignores any values specified for these parameters.</p> </note>",
                                        "items": {
                                            "properties": {
                                                "key": {
                                                    "maxLength": 30,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "items": {
                                                        "maxLength": 512,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "maxItems": 10,
                                                    "minItems": 0,
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "maxItems": 200,
                                        "minItems": 1,
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            },
                            "Lambda": {
                                "description": "The parameters for a LAMBDA task type.",
                                "properties": {
                                    "ClientContext": {
                                        "description": "Pass client-specific information to the Lambda function that you are invoking. You can then process the client information in your Lambda function as you choose through the context variable.",
                                        "maxLength": 8000,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "Payload": {
                                        "description": "JSON to provide to your Lambda function as input.",
                                        "format": "password",
                                        "maxLength": 4096,
                                        "type": "string"
                                    },
                                    "Qualifier": {
                                        "description": "(Optional) Specify a Lambda function version or alias name. If you specify a function version, the action uses the qualified function ARN to invoke a specific Lambda function. If you specify an alias name, the action uses the alias ARN to invoke the Lambda function version to which the alias points.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "RunCommand": {
                                "description": "The parameters for a RUN_COMMAND task type.",
                                "properties": {
                                    "Comment": {
                                        "description": "Information about the command(s) to execute.",
                                        "maxLength": 100,
                                        "type": "string"
                                    },
                                    "DocumentHash": {
                                        "description": "The SHA-256 or SHA-1 hash created by the system when the document was created. SHA-1 hashes have been deprecated.",
                                        "maxLength": 256,
                                        "type": "string"
                                    },
                                    "DocumentHashType": {
                                        "description": "SHA-256 or SHA-1. SHA-1 hashes have been deprecated.",
                                        "enum": [
                                            "Sha256",
                                            "Sha1"
                                        ],
                                        "type": "string"
                                    },
                                    "NotificationConfig": {
                                        "description": "Configurations for sending notifications about command status changes on a per-instance basis.",
                                        "properties": {
                                            "NotificationArn": {
                                                "description": "An Amazon Resource Name (ARN) for a Simple Notification Service (SNS) topic. Run Command pushes notifications about command status changes to this topic.",
                                                "type": "string"
                                            },
                                            "NotificationEvents": {
                                                "description": "The different events for which you can receive notifications. These events include the following: All (events), InProgress, Success, TimedOut, Cancelled, Failed. To learn more about these events, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/rc-sns-notifications.html\">Configuring Amazon SNS Notifications for Run Command</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                "items": {
                                                    "enum": [
                                                        "All",
                                                        "InProgress",
                                                        "Success",
                                                        "TimedOut",
                                                        "Cancelled",
                                                        "Failed"
                                                    ],
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "NotificationType": {
                                                "description": "Command: Receive notification when the status of a command changes. Invocation: For commands sent to multiple instances, receive notification on a per-instance basis when the status of a command changes. ",
                                                "enum": [
                                                    "Command",
                                                    "Invocation"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "OutputS3BucketName": {
                                        "description": "The name of the Amazon S3 bucket.",
                                        "maxLength": 63,
                                        "minLength": 3,
                                        "type": "string"
                                    },
                                    "OutputS3KeyPrefix": {
                                        "description": "The Amazon S3 bucket subfolder.",
                                        "maxLength": 500,
                                        "type": "string"
                                    },
                                    "Parameters": {
                                        "description": "The parameters for the RUN_COMMAND task execution.",
                                        "items": {
                                            "properties": {
                                                "key": {
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "ServiceRoleArn": {
                                        "description": "The IAM service role to assume during task execution.",
                                        "type": "string"
                                    },
                                    "TimeoutSeconds": {
                                        "description": "If this time is reached and the command has not already started executing, it doesn't run.",
                                        "maximum": 2592000,
                                        "minimum": 30,
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            },
                            "StepFunctions": {
                                "description": "The parameters for a STEP_FUNCTION task type.",
                                "properties": {
                                    "Input": {
                                        "description": "The inputs for the STEP_FUNCTION task.",
                                        "format": "password",
                                        "maxLength": 4096,
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "The name of the STEP_FUNCTION task.",
                                        "maxLength": 80,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    },
                    "TaskParameters": {
                        "description": "<p>The parameters that should be passed to the task when it is executed.</p> <note> <p> <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> </note>",
                        "items": {
                            "properties": {
                                "key": {
                                    "maxLength": 255,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "value": {
                                    "description": "Defines the values for a task parameter.",
                                    "properties": {
                                        "Values": {
                                            "description": "This field contains an array of 0 or more strings, each 1 to 255 characters in length.",
                                            "items": {
                                                "format": "password",
                                                "maxLength": 255,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "TaskType": {
                        "description": "The type of task being registered.",
                        "enum": [
                            "RUN_COMMAND",
                            "AUTOMATION",
                            "STEP_FUNCTIONS",
                            "LAMBDA"
                        ],
                        "type": "string"
                    },
                    "WindowId": {
                        "description": "The ID of the Maintenance Window the task should be added to.",
                        "maxLength": 20,
                        "minLength": 20,
                        "pattern": "^mw-[0-9a-f]{17}$",
                        "type": "string"
                    }
                },
                "required": [
                    "WindowId",
                    "Targets",
                    "TaskArn",
                    "TaskType",
                    "MaxConcurrency",
                    "MaxErrors"
                ],
                "type": "object"
            },
            "RegisterTaskWithMaintenanceWindowResult": {
                "properties": {
                    "WindowTaskId": {
                        "description": "The ID of the task in the Maintenance Window.",
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "RegistrationLimit": {
                "maximum": 1000,
                "minimum": 1,
                "type": "integer"
            },
            "RegistrationsCount": {
                "maximum": 1000,
                "minimum": 1,
                "type": "integer"
            },
            "RemainingCount": {
                "type": "integer"
            },
            "RemoveTagsFromResourceRequest": {
                "properties": {
                    "ResourceId": {
                        "description": "<p>The resource ID for which you want to remove tags. Use the ID of the resource. Here are some examples:</p> <p>ManagedInstance: mi-012345abcde</p> <p>MaintenanceWindow: mw-012345abcde</p> <p>PatchBaseline: pb-012345abcde</p> <p>For the Document and Parameter values, use the name of the resource.</p> <note> <p>The ManagedInstance type for this API action is only for on-premises managed instances. You must specify the the name of the managed instance in the following format: mi-ID_number. For example, mi-1a2b3c4d5e6f.</p> </note>",
                        "type": "string"
                    },
                    "ResourceType": {
                        "description": "<p>The type of resource of which you want to remove a tag.</p> <note> <p>The ManagedInstance type for this API action is only for on-premises managed instances. You must specify the the name of the managed instance in the following format: mi-ID_number. For example, mi-1a2b3c4d5e6f.</p> </note>",
                        "enum": [
                            "Document",
                            "ManagedInstance",
                            "MaintenanceWindow",
                            "Parameter",
                            "PatchBaseline"
                        ],
                        "type": "string"
                    },
                    "TagKeys": {
                        "description": "Tag keys that you want to remove from the specified resource.",
                        "items": {
                            "maxLength": 128,
                            "minLength": 1,
                            "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "ResourceType",
                    "ResourceId",
                    "TagKeys"
                ],
                "type": "object"
            },
            "RemoveTagsFromResourceResult": {
                "properties": {},
                "type": "object"
            },
            "ResetServiceSettingRequest": {
                "description": "The request body of the ResetServiceSetting API action.",
                "properties": {
                    "SettingId": {
                        "description": "The ID of the service setting to reset.",
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "SettingId"
                ],
                "type": "object"
            },
            "ResetServiceSettingResult": {
                "description": "The result body of the ResetServiceSetting API action.",
                "properties": {
                    "ServiceSetting": {
                        "description": "The current, effective service setting after calling the ResetServiceSetting API action.",
                        "properties": {
                            "ARN": {
                                "description": "The ARN of the service setting.",
                                "type": "string"
                            },
                            "LastModifiedDate": {
                                "description": "The last time the service setting was modified.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "LastModifiedUser": {
                                "description": "The ARN of the last modified user. This field is populated only if the setting value was overwritten.",
                                "type": "string"
                            },
                            "SettingId": {
                                "description": "The ID of the service setting.",
                                "maxLength": 1000,
                                "minLength": 1,
                                "type": "string"
                            },
                            "SettingValue": {
                                "description": "The value of the service setting.",
                                "maxLength": 4096,
                                "minLength": 1,
                                "type": "string"
                            },
                            "Status": {
                                "description": "<p>The status of the service setting. The value can be Default, Customized or PendingUpdate.</p> <ul> <li> <p>Default: The current setting uses a default value provisioned by the AWS service team.</p> </li> <li> <p>Customized: The current setting use a custom value specified by the customer.</p> </li> <li> <p>PendingUpdate: The current setting uses a default or custom value, but a setting change request is pending approval.</p> </li> </ul>",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ResolvedTargets": {
                "description": "Information about targets that resolved during the Automation execution.",
                "properties": {
                    "ParameterValues": {
                        "description": "A list of parameter values sent to targets that resolved during the Automation execution.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "Truncated": {
                        "description": "A boolean value indicating whether the resolved target list is truncated.",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "ResourceComplianceSummaryItem": {
                "description": "Compliance summary information for a specific resource. ",
                "properties": {
                    "ComplianceType": {
                        "description": "The compliance type.",
                        "maxLength": 100,
                        "minLength": 1,
                        "pattern": "[A-Za-z0-9_\\-]\\w+|Custom:[a-zA-Z0-9_\\-]\\w+",
                        "type": "string"
                    },
                    "CompliantSummary": {
                        "description": "A list of items that are compliant for the resource.",
                        "properties": {
                            "CompliantCount": {
                                "description": "The total number of resources that are compliant.",
                                "type": "integer"
                            },
                            "SeveritySummary": {
                                "description": "A summary of the compliance severity by compliance type.",
                                "properties": {
                                    "CriticalCount": {
                                        "description": "The total number of resources or compliance items that have a severity level of critical. Critical severity is determined by the organization that published the compliance items.",
                                        "type": "integer"
                                    },
                                    "HighCount": {
                                        "description": "The total number of resources or compliance items that have a severity level of high. High severity is determined by the organization that published the compliance items.",
                                        "type": "integer"
                                    },
                                    "InformationalCount": {
                                        "description": "The total number of resources or compliance items that have a severity level of informational. Informational severity is determined by the organization that published the compliance items.",
                                        "type": "integer"
                                    },
                                    "LowCount": {
                                        "description": "The total number of resources or compliance items that have a severity level of low. Low severity is determined by the organization that published the compliance items.",
                                        "type": "integer"
                                    },
                                    "MediumCount": {
                                        "description": "The total number of resources or compliance items that have a severity level of medium. Medium severity is determined by the organization that published the compliance items.",
                                        "type": "integer"
                                    },
                                    "UnspecifiedCount": {
                                        "description": "The total number of resources or compliance items that have a severity level of unspecified. Unspecified severity is determined by the organization that published the compliance items.",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    },
                    "ExecutionSummary": {
                        "description": "Information about the execution.",
                        "properties": {
                            "ExecutionId": {
                                "description": "An ID created by the system when <code>PutComplianceItems</code> was called. For example, <code>CommandID</code> is a valid execution ID. You can use this ID in subsequent calls.",
                                "maxLength": 100,
                                "type": "string"
                            },
                            "ExecutionTime": {
                                "description": "The time the execution ran as a datetime object that is saved in the following format: yyyy-MM-dd'T'HH:mm:ss'Z'.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "ExecutionType": {
                                "description": "The type of execution. For example, <code>Command</code> is a valid execution type.",
                                "maxLength": 50,
                                "type": "string"
                            }
                        },
                        "required": [
                            "ExecutionTime"
                        ],
                        "type": "object"
                    },
                    "NonCompliantSummary": {
                        "description": "A list of items that aren't compliant for the resource.",
                        "properties": {
                            "NonCompliantCount": {
                                "description": "The total number of compliance items that are not compliant.",
                                "type": "integer"
                            },
                            "SeveritySummary": {
                                "description": "A summary of the non-compliance severity by compliance type",
                                "properties": {
                                    "CriticalCount": {
                                        "description": "The total number of resources or compliance items that have a severity level of critical. Critical severity is determined by the organization that published the compliance items.",
                                        "type": "integer"
                                    },
                                    "HighCount": {
                                        "description": "The total number of resources or compliance items that have a severity level of high. High severity is determined by the organization that published the compliance items.",
                                        "type": "integer"
                                    },
                                    "InformationalCount": {
                                        "description": "The total number of resources or compliance items that have a severity level of informational. Informational severity is determined by the organization that published the compliance items.",
                                        "type": "integer"
                                    },
                                    "LowCount": {
                                        "description": "The total number of resources or compliance items that have a severity level of low. Low severity is determined by the organization that published the compliance items.",
                                        "type": "integer"
                                    },
                                    "MediumCount": {
                                        "description": "The total number of resources or compliance items that have a severity level of medium. Medium severity is determined by the organization that published the compliance items.",
                                        "type": "integer"
                                    },
                                    "UnspecifiedCount": {
                                        "description": "The total number of resources or compliance items that have a severity level of unspecified. Unspecified severity is determined by the organization that published the compliance items.",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    },
                    "OverallSeverity": {
                        "description": "The highest severity item found for the resource. The resource is compliant for this item.",
                        "enum": [
                            "CRITICAL",
                            "HIGH",
                            "MEDIUM",
                            "LOW",
                            "INFORMATIONAL",
                            "UNSPECIFIED"
                        ],
                        "type": "string"
                    },
                    "ResourceId": {
                        "description": "The resource ID.",
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string"
                    },
                    "ResourceType": {
                        "description": "The resource type.",
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Status": {
                        "description": "The compliance status for the resource.",
                        "enum": [
                            "COMPLIANT",
                            "NON_COMPLIANT"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ResourceComplianceSummaryItemList": {
                "items": {
                    "description": "Compliance summary information for a specific resource. ",
                    "properties": {
                        "ComplianceType": {
                            "description": "The compliance type.",
                            "maxLength": 100,
                            "minLength": 1,
                            "pattern": "[A-Za-z0-9_\\-]\\w+|Custom:[a-zA-Z0-9_\\-]\\w+",
                            "type": "string"
                        },
                        "CompliantSummary": {
                            "description": "A list of items that are compliant for the resource.",
                            "properties": {
                                "CompliantCount": {
                                    "description": "The total number of resources that are compliant.",
                                    "type": "integer"
                                },
                                "SeveritySummary": {
                                    "description": "A summary of the compliance severity by compliance type.",
                                    "properties": {
                                        "CriticalCount": {
                                            "description": "The total number of resources or compliance items that have a severity level of critical. Critical severity is determined by the organization that published the compliance items.",
                                            "type": "integer"
                                        },
                                        "HighCount": {
                                            "description": "The total number of resources or compliance items that have a severity level of high. High severity is determined by the organization that published the compliance items.",
                                            "type": "integer"
                                        },
                                        "InformationalCount": {
                                            "description": "The total number of resources or compliance items that have a severity level of informational. Informational severity is determined by the organization that published the compliance items.",
                                            "type": "integer"
                                        },
                                        "LowCount": {
                                            "description": "The total number of resources or compliance items that have a severity level of low. Low severity is determined by the organization that published the compliance items.",
                                            "type": "integer"
                                        },
                                        "MediumCount": {
                                            "description": "The total number of resources or compliance items that have a severity level of medium. Medium severity is determined by the organization that published the compliance items.",
                                            "type": "integer"
                                        },
                                        "UnspecifiedCount": {
                                            "description": "The total number of resources or compliance items that have a severity level of unspecified. Unspecified severity is determined by the organization that published the compliance items.",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "ExecutionSummary": {
                            "description": "Information about the execution.",
                            "properties": {
                                "ExecutionId": {
                                    "description": "An ID created by the system when <code>PutComplianceItems</code> was called. For example, <code>CommandID</code> is a valid execution ID. You can use this ID in subsequent calls.",
                                    "maxLength": 100,
                                    "type": "string"
                                },
                                "ExecutionTime": {
                                    "description": "The time the execution ran as a datetime object that is saved in the following format: yyyy-MM-dd'T'HH:mm:ss'Z'.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "ExecutionType": {
                                    "description": "The type of execution. For example, <code>Command</code> is a valid execution type.",
                                    "maxLength": 50,
                                    "type": "string"
                                }
                            },
                            "required": [
                                "ExecutionTime"
                            ],
                            "type": "object"
                        },
                        "NonCompliantSummary": {
                            "description": "A list of items that aren't compliant for the resource.",
                            "properties": {
                                "NonCompliantCount": {
                                    "description": "The total number of compliance items that are not compliant.",
                                    "type": "integer"
                                },
                                "SeveritySummary": {
                                    "description": "A summary of the non-compliance severity by compliance type",
                                    "properties": {
                                        "CriticalCount": {
                                            "description": "The total number of resources or compliance items that have a severity level of critical. Critical severity is determined by the organization that published the compliance items.",
                                            "type": "integer"
                                        },
                                        "HighCount": {
                                            "description": "The total number of resources or compliance items that have a severity level of high. High severity is determined by the organization that published the compliance items.",
                                            "type": "integer"
                                        },
                                        "InformationalCount": {
                                            "description": "The total number of resources or compliance items that have a severity level of informational. Informational severity is determined by the organization that published the compliance items.",
                                            "type": "integer"
                                        },
                                        "LowCount": {
                                            "description": "The total number of resources or compliance items that have a severity level of low. Low severity is determined by the organization that published the compliance items.",
                                            "type": "integer"
                                        },
                                        "MediumCount": {
                                            "description": "The total number of resources or compliance items that have a severity level of medium. Medium severity is determined by the organization that published the compliance items.",
                                            "type": "integer"
                                        },
                                        "UnspecifiedCount": {
                                            "description": "The total number of resources or compliance items that have a severity level of unspecified. Unspecified severity is determined by the organization that published the compliance items.",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "OverallSeverity": {
                            "description": "The highest severity item found for the resource. The resource is compliant for this item.",
                            "enum": [
                                "CRITICAL",
                                "HIGH",
                                "MEDIUM",
                                "LOW",
                                "INFORMATIONAL",
                                "UNSPECIFIED"
                            ],
                            "type": "string"
                        },
                        "ResourceId": {
                            "description": "The resource ID.",
                            "maxLength": 100,
                            "minLength": 1,
                            "type": "string"
                        },
                        "ResourceType": {
                            "description": "The resource type.",
                            "maxLength": 50,
                            "minLength": 1,
                            "type": "string"
                        },
                        "Status": {
                            "description": "The compliance status for the resource.",
                            "enum": [
                                "COMPLIANT",
                                "NON_COMPLIANT"
                            ],
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "ResourceCount": {
                "type": "integer"
            },
            "ResourceCountByStatus": {
                "type": "string"
            },
            "ResourceDataSyncAWSKMSKeyARN": {
                "maxLength": 512,
                "minLength": 1,
                "pattern": "arn:.*",
                "type": "string"
            },
            "ResourceDataSyncAlreadyExistsException": {},
            "ResourceDataSyncCountExceededException": {},
            "ResourceDataSyncCreatedTime": {
                "format": "date-time",
                "type": "string"
            },
            "ResourceDataSyncInvalidConfigurationException": {},
            "ResourceDataSyncItem": {
                "description": "Information about a Resource Data Sync configuration, including its current status and last successful sync.",
                "properties": {
                    "LastStatus": {
                        "description": "The status reported by the last sync.",
                        "enum": [
                            "Successful",
                            "Failed",
                            "InProgress"
                        ],
                        "type": "string"
                    },
                    "LastSuccessfulSyncTime": {
                        "description": "The last time the sync operations returned a status of <code>SUCCESSFUL</code> (UTC).",
                        "format": "date-time",
                        "type": "string"
                    },
                    "LastSyncStatusMessage": {
                        "description": "The status message details reported by the last sync.",
                        "type": "string"
                    },
                    "LastSyncTime": {
                        "description": "The last time the configuration attempted to sync (UTC).",
                        "format": "date-time",
                        "type": "string"
                    },
                    "S3Destination": {
                        "description": "Configuration information for the target Amazon S3 bucket.",
                        "properties": {
                            "AWSKMSKeyARN": {
                                "description": "The ARN of an encryption key for a destination in Amazon S3. Must belong to the same region as the destination Amazon S3 bucket.",
                                "maxLength": 512,
                                "minLength": 1,
                                "pattern": "arn:.*",
                                "type": "string"
                            },
                            "BucketName": {
                                "description": "The name of the Amazon S3 bucket where the aggregated data is stored.",
                                "maxLength": 2048,
                                "minLength": 1,
                                "type": "string"
                            },
                            "Prefix": {
                                "description": "An Amazon S3 prefix for the bucket.",
                                "maxLength": 256,
                                "minLength": 1,
                                "type": "string"
                            },
                            "Region": {
                                "description": "The AWS Region with the Amazon S3 bucket targeted by the Resource Data Sync.",
                                "maxLength": 64,
                                "minLength": 1,
                                "type": "string"
                            },
                            "SyncFormat": {
                                "description": "A supported sync format. The following format is currently supported: JsonSerDe",
                                "enum": [
                                    "JsonSerDe"
                                ],
                                "type": "string"
                            }
                        },
                        "required": [
                            "BucketName",
                            "SyncFormat",
                            "Region"
                        ],
                        "type": "object"
                    },
                    "SyncCreatedTime": {
                        "description": "The date and time the configuration was created (UTC).",
                        "format": "date-time",
                        "type": "string"
                    },
                    "SyncName": {
                        "description": "The name of the Resource Data Sync.",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ResourceDataSyncItemList": {
                "items": {
                    "description": "Information about a Resource Data Sync configuration, including its current status and last successful sync.",
                    "properties": {
                        "LastStatus": {
                            "description": "The status reported by the last sync.",
                            "enum": [
                                "Successful",
                                "Failed",
                                "InProgress"
                            ],
                            "type": "string"
                        },
                        "LastSuccessfulSyncTime": {
                            "description": "The last time the sync operations returned a status of <code>SUCCESSFUL</code> (UTC).",
                            "format": "date-time",
                            "type": "string"
                        },
                        "LastSyncStatusMessage": {
                            "description": "The status message details reported by the last sync.",
                            "type": "string"
                        },
                        "LastSyncTime": {
                            "description": "The last time the configuration attempted to sync (UTC).",
                            "format": "date-time",
                            "type": "string"
                        },
                        "S3Destination": {
                            "description": "Configuration information for the target Amazon S3 bucket.",
                            "properties": {
                                "AWSKMSKeyARN": {
                                    "description": "The ARN of an encryption key for a destination in Amazon S3. Must belong to the same region as the destination Amazon S3 bucket.",
                                    "maxLength": 512,
                                    "minLength": 1,
                                    "pattern": "arn:.*",
                                    "type": "string"
                                },
                                "BucketName": {
                                    "description": "The name of the Amazon S3 bucket where the aggregated data is stored.",
                                    "maxLength": 2048,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Prefix": {
                                    "description": "An Amazon S3 prefix for the bucket.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Region": {
                                    "description": "The AWS Region with the Amazon S3 bucket targeted by the Resource Data Sync.",
                                    "maxLength": 64,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "SyncFormat": {
                                    "description": "A supported sync format. The following format is currently supported: JsonSerDe",
                                    "enum": [
                                        "JsonSerDe"
                                    ],
                                    "type": "string"
                                }
                            },
                            "required": [
                                "BucketName",
                                "SyncFormat",
                                "Region"
                            ],
                            "type": "object"
                        },
                        "SyncCreatedTime": {
                            "description": "The date and time the configuration was created (UTC).",
                            "format": "date-time",
                            "type": "string"
                        },
                        "SyncName": {
                            "description": "The name of the Resource Data Sync.",
                            "maxLength": 64,
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "ResourceDataSyncName": {
                "maxLength": 64,
                "minLength": 1,
                "type": "string"
            },
            "ResourceDataSyncNotFoundException": {},
            "ResourceDataSyncS3BucketName": {
                "maxLength": 2048,
                "minLength": 1,
                "type": "string"
            },
            "ResourceDataSyncS3Destination": {
                "description": "Information about the target Amazon S3 bucket for the Resource Data Sync.",
                "properties": {
                    "AWSKMSKeyARN": {
                        "description": "The ARN of an encryption key for a destination in Amazon S3. Must belong to the same region as the destination Amazon S3 bucket.",
                        "maxLength": 512,
                        "minLength": 1,
                        "pattern": "arn:.*",
                        "type": "string"
                    },
                    "BucketName": {
                        "description": "The name of the Amazon S3 bucket where the aggregated data is stored.",
                        "maxLength": 2048,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Prefix": {
                        "description": "An Amazon S3 prefix for the bucket.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Region": {
                        "description": "The AWS Region with the Amazon S3 bucket targeted by the Resource Data Sync.",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "SyncFormat": {
                        "description": "A supported sync format. The following format is currently supported: JsonSerDe",
                        "enum": [
                            "JsonSerDe"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "BucketName",
                    "SyncFormat",
                    "Region"
                ],
                "type": "object"
            },
            "ResourceDataSyncS3Format": {
                "enum": [
                    "JsonSerDe"
                ],
                "type": "string"
            },
            "ResourceDataSyncS3Prefix": {
                "maxLength": 256,
                "minLength": 1,
                "type": "string"
            },
            "ResourceDataSyncS3Region": {
                "maxLength": 64,
                "minLength": 1,
                "type": "string"
            },
            "ResourceId": {
                "type": "string"
            },
            "ResourceInUseException": {},
            "ResourceLimitExceededException": {},
            "ResourceType": {
                "enum": [
                    "ManagedInstance",
                    "Document",
                    "EC2Instance"
                ],
                "type": "string"
            },
            "ResourceTypeForTagging": {
                "enum": [
                    "Document",
                    "ManagedInstance",
                    "MaintenanceWindow",
                    "Parameter",
                    "PatchBaseline"
                ],
                "type": "string"
            },
            "ResponseCode": {
                "type": "integer"
            },
            "ResultAttribute": {
                "description": "The inventory item result attribute.",
                "properties": {
                    "TypeName": {
                        "description": "Name of the inventory item type. Valid value: AWS:InstanceInformation. Default Value: AWS:InstanceInformation.",
                        "maxLength": 100,
                        "minLength": 1,
                        "pattern": "^(AWS|Custom):.*$",
                        "type": "string"
                    }
                },
                "required": [
                    "TypeName"
                ],
                "type": "object"
            },
            "ResultAttributeList": {
                "items": {
                    "description": "The inventory item result attribute.",
                    "properties": {
                        "TypeName": {
                            "description": "Name of the inventory item type. Valid value: AWS:InstanceInformation. Default Value: AWS:InstanceInformation.",
                            "maxLength": 100,
                            "minLength": 1,
                            "pattern": "^(AWS|Custom):.*$",
                            "type": "string"
                        }
                    },
                    "required": [
                        "TypeName"
                    ],
                    "type": "object"
                },
                "maxItems": 1,
                "minItems": 1,
                "type": "array"
            },
            "ResumeSessionRequest": {
                "properties": {
                    "SessionId": {
                        "description": "The ID of the disconnected session to resume.",
                        "maxLength": 96,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "SessionId"
                ],
                "type": "object"
            },
            "ResumeSessionResponse": {
                "properties": {
                    "SessionId": {
                        "description": "The ID of the session.",
                        "maxLength": 96,
                        "minLength": 1,
                        "type": "string"
                    },
                    "StreamUrl": {
                        "description": "<p>A URL back to SSM Agent on the instance that the Session Manager client uses to send commands and receive output from the instance. Format: <code>wss://ssm-messages.<b>region</b>.amazonaws.com/v1/data-channel/<b>session-id</b>?stream=(input|output)</code>.</p> <p> <b>region</b> represents the Region identifier for an AWS Region supported by AWS Systems Manager, such as <code>us-east-2</code> for the US East (Ohio) Region. For a list of supported <b>region</b> values, see the <b>Region</b> column in the <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html#ssm_region\">AWS Systems Manager table of regions and endpoints</a> in the <i>AWS General Reference</i>.</p> <p> <b>session-id</b> represents the ID of a Session Manager session, such as <code>1a2b3c4dEXAMPLE</code>.</p>",
                        "type": "string"
                    },
                    "TokenValue": {
                        "description": "An encrypted token value containing session and caller information. Used to authenticate the connection to the instance.",
                        "maxLength": 300,
                        "minLength": 0,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "S3BucketName": {
                "maxLength": 63,
                "minLength": 3,
                "type": "string"
            },
            "S3KeyPrefix": {
                "maxLength": 500,
                "type": "string"
            },
            "S3OutputLocation": {
                "description": "An Amazon S3 bucket where you want to store the results of this request.",
                "properties": {
                    "OutputS3BucketName": {
                        "description": "The name of the Amazon S3 bucket.",
                        "maxLength": 63,
                        "minLength": 3,
                        "type": "string"
                    },
                    "OutputS3KeyPrefix": {
                        "description": "The Amazon S3 bucket subfolder.",
                        "maxLength": 500,
                        "type": "string"
                    },
                    "OutputS3Region": {
                        "description": "(Deprecated) You can no longer specify this parameter. The system ignores it. Instead, Systems Manager automatically determines the Amazon S3 bucket region.",
                        "maxLength": 20,
                        "minLength": 3,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "S3OutputUrl": {
                "description": "A URL for the Amazon S3 bucket where you want to store the results of this request.",
                "properties": {
                    "OutputUrl": {
                        "description": "A URL for an Amazon S3 bucket where you want to store the results of this request.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "S3Region": {
                "maxLength": 20,
                "minLength": 3,
                "type": "string"
            },
            "ScheduleExpression": {
                "maxLength": 256,
                "minLength": 1,
                "type": "string"
            },
            "ScheduledWindowExecution": {
                "description": "Information about a scheduled execution for a Maintenance Window.",
                "properties": {
                    "ExecutionTime": {
                        "description": "The time, in ISO-8601 Extended format, that the Maintenance Window is scheduled to be run.",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The name of the Maintenance Window to be run.",
                        "maxLength": 128,
                        "minLength": 3,
                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                        "type": "string"
                    },
                    "WindowId": {
                        "description": "The ID of the Maintenance Window to be run.",
                        "maxLength": 20,
                        "minLength": 20,
                        "pattern": "^mw-[0-9a-f]{17}$",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ScheduledWindowExecutionList": {
                "items": {
                    "description": "Information about a scheduled execution for a Maintenance Window.",
                    "properties": {
                        "ExecutionTime": {
                            "description": "The time, in ISO-8601 Extended format, that the Maintenance Window is scheduled to be run.",
                            "type": "string"
                        },
                        "Name": {
                            "description": "The name of the Maintenance Window to be run.",
                            "maxLength": 128,
                            "minLength": 3,
                            "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                            "type": "string"
                        },
                        "WindowId": {
                            "description": "The ID of the Maintenance Window to be run.",
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^mw-[0-9a-f]{17}$",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "SendAutomationSignalRequest": {
                "properties": {
                    "AutomationExecutionId": {
                        "description": "The unique identifier for an existing Automation execution that you want to send the signal to.",
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string"
                    },
                    "Payload": {
                        "description": "The data sent with the signal. The data schema depends on the type of signal used in the request. ",
                        "items": {
                            "properties": {
                                "key": {
                                    "maxLength": 30,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "value": {
                                    "items": {
                                        "maxLength": 512,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "maxItems": 10,
                                    "minItems": 0,
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 200,
                        "minItems": 1,
                        "type": "array"
                    },
                    "SignalType": {
                        "description": "The type of signal. Valid signal types include the following: Approve and Reject ",
                        "enum": [
                            "Approve",
                            "Reject",
                            "StartStep",
                            "StopStep",
                            "Resume"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "AutomationExecutionId",
                    "SignalType"
                ],
                "type": "object"
            },
            "SendAutomationSignalResult": {
                "properties": {},
                "type": "object"
            },
            "SendCommandRequest": {
                "properties": {
                    "CloudWatchOutputConfig": {
                        "description": "Enables Systems Manager to send Run Command output to Amazon CloudWatch Logs. ",
                        "properties": {
                            "CloudWatchLogGroupName": {
                                "description": "The name of the CloudWatch log group where you want to send command output. If you don't specify a group name, Systems Manager automatically creates a log group for you. The log group uses the following naming format: aws/ssm/<i>SystemsManagerDocumentName</i>.",
                                "maxLength": 512,
                                "minLength": 1,
                                "pattern": "[\\.\\-_/#A-Za-z0-9]+",
                                "type": "string"
                            },
                            "CloudWatchOutputEnabled": {
                                "description": "Enables Systems Manager to send command output to CloudWatch Logs.",
                                "type": "boolean"
                            }
                        },
                        "type": "object"
                    },
                    "Comment": {
                        "description": "User-specified information about the command, such as a brief description of what the command should do.",
                        "maxLength": 100,
                        "type": "string"
                    },
                    "DocumentHash": {
                        "description": "<p>The Sha256 or Sha1 hash created by the system when the document was created. </p> <note> <p>Sha1 hashes have been deprecated.</p> </note>",
                        "maxLength": 256,
                        "type": "string"
                    },
                    "DocumentHashType": {
                        "description": "<p>Sha256 or Sha1.</p> <note> <p>Sha1 hashes have been deprecated.</p> </note>",
                        "enum": [
                            "Sha256",
                            "Sha1"
                        ],
                        "type": "string"
                    },
                    "DocumentName": {
                        "description": "Required. The name of the Systems Manager document to execute. This can be a public document or a custom document.",
                        "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                        "type": "string"
                    },
                    "DocumentVersion": {
                        "description": "<p>The SSM document version to use in the request. You can specify $DEFAULT, $LATEST, or a specific version number. If you execute commands by using the AWS CLI, then you must escape the first two options by using a backslash. If you specify a version number, then you don't need to use the backslash. For example:</p> <p>--document-version \"\\$DEFAULT\"</p> <p>--document-version \"\\$LATEST\"</p> <p>--document-version \"3\"</p>",
                        "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                        "type": "string"
                    },
                    "InstanceIds": {
                        "description": "The instance IDs where the command should execute. You can specify a maximum of 50 IDs. If you prefer not to list individual instance IDs, you can instead send commands to a fleet of instances using the Targets parameter, which accepts EC2 tags. For more information about how to use targets, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                        "items": {
                            "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                            "type": "string"
                        },
                        "maxItems": 50,
                        "minItems": 0,
                        "type": "array"
                    },
                    "MaxConcurrency": {
                        "description": "(Optional) The maximum number of instances that are allowed to execute the command at the same time. You can specify a number such as 10 or a percentage such as 10%. The default value is 50. For more information about how to use MaxConcurrency, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-velocity\">Using Concurrency Controls</a> in the <i>AWS Systems Manager User Guide</i>.",
                        "maxLength": 7,
                        "minLength": 1,
                        "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                        "type": "string"
                    },
                    "MaxErrors": {
                        "description": "The maximum number of errors allowed without the command failing. When the command fails one more time beyond the value of MaxErrors, the systems stops sending the command to additional targets. You can specify a number like 10 or a percentage like 10%. The default value is 0. For more information about how to use MaxErrors, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-maxerrors\">Using Error Controls</a> in the <i>AWS Systems Manager User Guide</i>.",
                        "maxLength": 7,
                        "minLength": 1,
                        "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                        "type": "string"
                    },
                    "NotificationConfig": {
                        "description": "Configurations for sending notifications.",
                        "properties": {
                            "NotificationArn": {
                                "description": "An Amazon Resource Name (ARN) for a Simple Notification Service (SNS) topic. Run Command pushes notifications about command status changes to this topic.",
                                "type": "string"
                            },
                            "NotificationEvents": {
                                "description": "The different events for which you can receive notifications. These events include the following: All (events), InProgress, Success, TimedOut, Cancelled, Failed. To learn more about these events, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/rc-sns-notifications.html\">Configuring Amazon SNS Notifications for Run Command</a> in the <i>AWS Systems Manager User Guide</i>.",
                                "items": {
                                    "enum": [
                                        "All",
                                        "InProgress",
                                        "Success",
                                        "TimedOut",
                                        "Cancelled",
                                        "Failed"
                                    ],
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "NotificationType": {
                                "description": "Command: Receive notification when the status of a command changes. Invocation: For commands sent to multiple instances, receive notification on a per-instance basis when the status of a command changes. ",
                                "enum": [
                                    "Command",
                                    "Invocation"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "OutputS3BucketName": {
                        "description": "The name of the S3 bucket where command execution responses should be stored.",
                        "maxLength": 63,
                        "minLength": 3,
                        "type": "string"
                    },
                    "OutputS3KeyPrefix": {
                        "description": "The directory structure within the S3 bucket where the responses should be stored.",
                        "maxLength": 500,
                        "type": "string"
                    },
                    "OutputS3Region": {
                        "description": "(Deprecated) You can no longer specify this parameter. The system ignores it. Instead, Systems Manager automatically determines the Amazon S3 bucket region.",
                        "maxLength": 20,
                        "minLength": 3,
                        "type": "string"
                    },
                    "Parameters": {
                        "description": "The required and optional parameters specified in the document being executed.",
                        "items": {
                            "properties": {
                                "key": {
                                    "type": "string"
                                },
                                "value": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "ServiceRoleArn": {
                        "description": "The IAM role that Systems Manager uses to send notifications. ",
                        "type": "string"
                    },
                    "Targets": {
                        "description": "(Optional) An array of search criteria that targets instances using a Key,Value combination that you specify. Targets is required if you don't provide one or more instance IDs in the call. For more information about how to use targets, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                        "items": {
                            "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                            "properties": {
                                "Key": {
                                    "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "maxItems": 50,
                                    "minItems": 0,
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 5,
                        "minItems": 0,
                        "type": "array"
                    },
                    "TimeoutSeconds": {
                        "description": "If this time is reached and the command has not already started executing, it will not run.",
                        "maximum": 2592000,
                        "minimum": 30,
                        "type": "integer"
                    }
                },
                "required": [
                    "DocumentName"
                ],
                "type": "object"
            },
            "SendCommandResult": {
                "properties": {
                    "Command": {
                        "description": "The request as it was received by Systems Manager. Also provides the command ID which can be used future references to this request.",
                        "properties": {
                            "CloudWatchOutputConfig": {
                                "description": "CloudWatch Logs information where you want Systems Manager to send the command output.",
                                "properties": {
                                    "CloudWatchLogGroupName": {
                                        "description": "The name of the CloudWatch log group where you want to send command output. If you don't specify a group name, Systems Manager automatically creates a log group for you. The log group uses the following naming format: aws/ssm/<i>SystemsManagerDocumentName</i>.",
                                        "maxLength": 512,
                                        "minLength": 1,
                                        "pattern": "[\\.\\-_/#A-Za-z0-9]+",
                                        "type": "string"
                                    },
                                    "CloudWatchOutputEnabled": {
                                        "description": "Enables Systems Manager to send command output to CloudWatch Logs.",
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            },
                            "CommandId": {
                                "description": "A unique identifier for this command.",
                                "maxLength": 36,
                                "minLength": 36,
                                "type": "string"
                            },
                            "Comment": {
                                "description": "User-specified information about the command, such as a brief description of what the command should do.",
                                "maxLength": 100,
                                "type": "string"
                            },
                            "CompletedCount": {
                                "description": "The number of targets for which the command invocation reached a terminal state. Terminal states include the following: Success, Failed, Execution Timed Out, Delivery Timed Out, Canceled, Terminated, or Undeliverable.",
                                "type": "integer"
                            },
                            "DeliveryTimedOutCount": {
                                "description": "The number of targets for which the status is Delivery Timed Out.",
                                "type": "integer"
                            },
                            "DocumentName": {
                                "description": "The name of the document requested for execution.",
                                "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                "type": "string"
                            },
                            "DocumentVersion": {
                                "description": "The SSM document version.",
                                "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                "type": "string"
                            },
                            "ErrorCount": {
                                "description": "The number of targets for which the status is Failed or Execution Timed Out.",
                                "type": "integer"
                            },
                            "ExpiresAfter": {
                                "description": "If this time is reached and the command has not already started executing, it will not run. Calculated based on the ExpiresAfter user input provided as part of the SendCommand API.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "InstanceIds": {
                                "description": "The instance IDs against which this command was requested.",
                                "items": {
                                    "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                                    "type": "string"
                                },
                                "maxItems": 50,
                                "minItems": 0,
                                "type": "array"
                            },
                            "MaxConcurrency": {
                                "description": "The maximum number of instances that are allowed to execute the command at the same time. You can specify a number of instances, such as 10, or a percentage of instances, such as 10%. The default value is 50. For more information about how to use MaxConcurrency, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/run-command.html\">Executing Commands Using Systems Manager Run Command</a> in the <i>AWS Systems Manager User Guide</i>.",
                                "maxLength": 7,
                                "minLength": 1,
                                "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                                "type": "string"
                            },
                            "MaxErrors": {
                                "description": "The maximum number of errors allowed before the system stops sending the command to additional targets. You can specify a number of errors, such as 10, or a percentage or errors, such as 10%. The default value is 0. For more information about how to use MaxErrors, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/run-command.html\">Executing Commands Using Systems Manager Run Command</a> in the <i>AWS Systems Manager User Guide</i>.",
                                "maxLength": 7,
                                "minLength": 1,
                                "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                                "type": "string"
                            },
                            "NotificationConfig": {
                                "description": "Configurations for sending notifications about command status changes. ",
                                "properties": {
                                    "NotificationArn": {
                                        "description": "An Amazon Resource Name (ARN) for a Simple Notification Service (SNS) topic. Run Command pushes notifications about command status changes to this topic.",
                                        "type": "string"
                                    },
                                    "NotificationEvents": {
                                        "description": "The different events for which you can receive notifications. These events include the following: All (events), InProgress, Success, TimedOut, Cancelled, Failed. To learn more about these events, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/rc-sns-notifications.html\">Configuring Amazon SNS Notifications for Run Command</a> in the <i>AWS Systems Manager User Guide</i>.",
                                        "items": {
                                            "enum": [
                                                "All",
                                                "InProgress",
                                                "Success",
                                                "TimedOut",
                                                "Cancelled",
                                                "Failed"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "NotificationType": {
                                        "description": "Command: Receive notification when the status of a command changes. Invocation: For commands sent to multiple instances, receive notification on a per-instance basis when the status of a command changes. ",
                                        "enum": [
                                            "Command",
                                            "Invocation"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "OutputS3BucketName": {
                                "description": "The S3 bucket where the responses to the command executions should be stored. This was requested when issuing the command.",
                                "maxLength": 63,
                                "minLength": 3,
                                "type": "string"
                            },
                            "OutputS3KeyPrefix": {
                                "description": "The S3 directory path inside the bucket where the responses to the command executions should be stored. This was requested when issuing the command.",
                                "maxLength": 500,
                                "type": "string"
                            },
                            "OutputS3Region": {
                                "description": "(Deprecated) You can no longer specify this parameter. The system ignores it. Instead, Systems Manager automatically determines the Amazon S3 bucket region.",
                                "maxLength": 20,
                                "minLength": 3,
                                "type": "string"
                            },
                            "Parameters": {
                                "description": "The parameter values to be inserted in the document when executing the command.",
                                "items": {
                                    "properties": {
                                        "key": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "RequestedDateTime": {
                                "description": "The date and time the command was requested.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "ServiceRole": {
                                "description": "The IAM service role that Run Command uses to act on your behalf when sending notifications about command status changes. ",
                                "type": "string"
                            },
                            "Status": {
                                "description": "The status of the command.",
                                "enum": [
                                    "Pending",
                                    "InProgress",
                                    "Success",
                                    "Cancelled",
                                    "Failed",
                                    "TimedOut",
                                    "Cancelling"
                                ],
                                "type": "string"
                            },
                            "StatusDetails": {
                                "description": "<p>A detailed status of the command execution. StatusDetails includes more information than Status because it includes states resulting from error and concurrency control parameters. StatusDetails can show different results than Status. For more information about these statuses, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/monitor-commands.html\">Understanding Command Statuses</a> in the <i>AWS Systems Manager User Guide</i>. StatusDetails can be one of the following values:</p> <ul> <li> <p>Pending: The command has not been sent to any instances.</p> </li> <li> <p>In Progress: The command has been sent to at least one instance but has not reached a final state on all instances.</p> </li> <li> <p>Success: The command successfully executed on all invocations. This is a terminal state.</p> </li> <li> <p>Delivery Timed Out: The value of MaxErrors or more command invocations shows a status of Delivery Timed Out. This is a terminal state.</p> </li> <li> <p>Execution Timed Out: The value of MaxErrors or more command invocations shows a status of Execution Timed Out. This is a terminal state.</p> </li> <li> <p>Failed: The value of MaxErrors or more command invocations shows a status of Failed. This is a terminal state.</p> </li> <li> <p>Incomplete: The command was attempted on all instances and one or more invocations does not have a value of Success but not enough invocations failed for the status to be Failed. This is a terminal state.</p> </li> <li> <p>Canceled: The command was terminated before it was completed. This is a terminal state.</p> </li> <li> <p>Rate Exceeded: The number of instances targeted by the command exceeded the account limit for pending invocations. The system has canceled the command before executing it on any instance. This is a terminal state.</p> </li> </ul>",
                                "maxLength": 100,
                                "minLength": 0,
                                "type": "string"
                            },
                            "TargetCount": {
                                "description": "The number of targets for the command.",
                                "type": "integer"
                            },
                            "Targets": {
                                "description": "An array of search criteria that targets instances using a Key,Value combination that you specify. Targets is required if you don't provide one or more instance IDs in the call.",
                                "items": {
                                    "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                                    "properties": {
                                        "Key": {
                                            "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                            "type": "string"
                                        },
                                        "Values": {
                                            "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                            "items": {
                                                "type": "string"
                                            },
                                            "maxItems": 50,
                                            "minItems": 0,
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                },
                                "maxItems": 5,
                                "minItems": 0,
                                "type": "array"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ServiceRole": {
                "type": "string"
            },
            "ServiceSetting": {
                "description": "<p>The service setting data structure.</p> <p> <code>ServiceSetting</code> is an account-level setting for an AWS service. This setting defines how a user interacts with or uses a service or a feature of a service. For example, if an AWS service charges money to the account based on feature or service usage, then the AWS service team might create a default setting of \"false\". This means the user can't use this feature unless they change the setting to \"true\" and intentionally opt in for a paid feature.</p> <p>Services map a <code>SettingId</code> object to a setting value. AWS services teams define the default value for a <code>SettingId</code>. You can't create a new <code>SettingId</code>, but you can overwrite the default value if you have the <code>ssm:UpdateServiceSetting</code> permission for the setting. Use the <a>UpdateServiceSetting</a> API action to change the default setting. Or, use the <a>ResetServiceSetting</a> to change the value back to the original value defined by the AWS service team.</p>",
                "properties": {
                    "ARN": {
                        "description": "The ARN of the service setting.",
                        "type": "string"
                    },
                    "LastModifiedDate": {
                        "description": "The last time the service setting was modified.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "LastModifiedUser": {
                        "description": "The ARN of the last modified user. This field is populated only if the setting value was overwritten.",
                        "type": "string"
                    },
                    "SettingId": {
                        "description": "The ID of the service setting.",
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string"
                    },
                    "SettingValue": {
                        "description": "The value of the service setting.",
                        "maxLength": 4096,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Status": {
                        "description": "<p>The status of the service setting. The value can be Default, Customized or PendingUpdate.</p> <ul> <li> <p>Default: The current setting uses a default value provisioned by the AWS service team.</p> </li> <li> <p>Customized: The current setting use a custom value specified by the customer.</p> </li> <li> <p>PendingUpdate: The current setting uses a default or custom value, but a setting change request is pending approval.</p> </li> </ul>",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ServiceSettingId": {
                "maxLength": 1000,
                "minLength": 1,
                "type": "string"
            },
            "ServiceSettingNotFound": {},
            "ServiceSettingValue": {
                "maxLength": 4096,
                "minLength": 1,
                "type": "string"
            },
            "Session": {
                "description": "Information about a Session Manager connection to an instance.",
                "properties": {
                    "Details": {
                        "description": "Reserved for future use.",
                        "maxLength": 1024,
                        "minLength": 1,
                        "type": "string"
                    },
                    "DocumentName": {
                        "description": "The name of the Session Manager SSM document used to define the parameters and plugin settings for the session. For example, <code>SSM-SessionManagerRunShell</code>.",
                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                        "type": "string"
                    },
                    "EndDate": {
                        "description": "The date and time, in ISO-8601 Extended format, when the session was terminated.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "OutputUrl": {
                        "description": "Reserved for future use.",
                        "properties": {
                            "CloudWatchOutputUrl": {
                                "description": "Reserved for future use.",
                                "maxLength": 2083,
                                "minLength": 1,
                                "type": "string"
                            },
                            "S3OutputUrl": {
                                "description": "Reserved for future use.",
                                "maxLength": 2083,
                                "minLength": 1,
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "Owner": {
                        "description": "The ID of the AWS user account that started the session.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "SessionId": {
                        "description": "The ID of the session.",
                        "maxLength": 96,
                        "minLength": 1,
                        "type": "string"
                    },
                    "StartDate": {
                        "description": "The date and time, in ISO-8601 Extended format, when the session began.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "Status": {
                        "description": "The status of the session. For example, \"Connected\" or \"Terminated\".",
                        "enum": [
                            "Connected",
                            "Connecting",
                            "Disconnected",
                            "Terminated",
                            "Terminating",
                            "Failed"
                        ],
                        "type": "string"
                    },
                    "Target": {
                        "description": "The instance that the Session Manager session connected to.",
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SessionDetails": {
                "maxLength": 1024,
                "minLength": 1,
                "type": "string"
            },
            "SessionFilter": {
                "description": "Describes a filter for Session Manager information.",
                "properties": {
                    "key": {
                        "description": "The name of the filter.",
                        "enum": [
                            "InvokedAfter",
                            "InvokedBefore",
                            "Target",
                            "Owner",
                            "Status"
                        ],
                        "type": "string"
                    },
                    "value": {
                        "description": "<p>The filter value. Valid values for each filter key are as follows:</p> <ul> <li> <p>InvokedAfter: Specify a timestamp to limit your results. For example, specify 2018-08-29T00:00:00Z to see sessions that started August 29, 2018, and later.</p> </li> <li> <p>InvokedBefore: Specify a timestamp to limit your results. For example, specify 2018-08-29T00:00:00Z to see sessions that started before August 29, 2018.</p> </li> <li> <p>Target: Specify an instance to which session connections have been made.</p> </li> <li> <p>Owner: Specify an AWS user account to see a list of sessions started by that user.</p> </li> <li> <p>Status: Specify a valid session status to see a list of all sessions with that status. Status values you can specify include:</p> <ul> <li> <p>Connected</p> </li> <li> <p>Connecting</p> </li> <li> <p>Disconnected</p> </li> <li> <p>Terminated</p> </li> <li> <p>Terminating</p> </li> <li> <p>Failed</p> </li> </ul> </li> </ul>",
                        "maxLength": 200,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "key",
                    "value"
                ],
                "type": "object"
            },
            "SessionFilterKey": {
                "enum": [
                    "InvokedAfter",
                    "InvokedBefore",
                    "Target",
                    "Owner",
                    "Status"
                ],
                "type": "string"
            },
            "SessionFilterList": {
                "items": {
                    "description": "Describes a filter for Session Manager information.",
                    "properties": {
                        "key": {
                            "description": "The name of the filter.",
                            "enum": [
                                "InvokedAfter",
                                "InvokedBefore",
                                "Target",
                                "Owner",
                                "Status"
                            ],
                            "type": "string"
                        },
                        "value": {
                            "description": "<p>The filter value. Valid values for each filter key are as follows:</p> <ul> <li> <p>InvokedAfter: Specify a timestamp to limit your results. For example, specify 2018-08-29T00:00:00Z to see sessions that started August 29, 2018, and later.</p> </li> <li> <p>InvokedBefore: Specify a timestamp to limit your results. For example, specify 2018-08-29T00:00:00Z to see sessions that started before August 29, 2018.</p> </li> <li> <p>Target: Specify an instance to which session connections have been made.</p> </li> <li> <p>Owner: Specify an AWS user account to see a list of sessions started by that user.</p> </li> <li> <p>Status: Specify a valid session status to see a list of all sessions with that status. Status values you can specify include:</p> <ul> <li> <p>Connected</p> </li> <li> <p>Connecting</p> </li> <li> <p>Disconnected</p> </li> <li> <p>Terminated</p> </li> <li> <p>Terminating</p> </li> <li> <p>Failed</p> </li> </ul> </li> </ul>",
                            "maxLength": 200,
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    "required": [
                        "key",
                        "value"
                    ],
                    "type": "object"
                },
                "maxItems": 5,
                "minItems": 1,
                "type": "array"
            },
            "SessionFilterValue": {
                "maxLength": 200,
                "minLength": 1,
                "type": "string"
            },
            "SessionId": {
                "maxLength": 96,
                "minLength": 1,
                "type": "string"
            },
            "SessionList": {
                "items": {
                    "description": "Information about a Session Manager connection to an instance.",
                    "properties": {
                        "Details": {
                            "description": "Reserved for future use.",
                            "maxLength": 1024,
                            "minLength": 1,
                            "type": "string"
                        },
                        "DocumentName": {
                            "description": "The name of the Session Manager SSM document used to define the parameters and plugin settings for the session. For example, <code>SSM-SessionManagerRunShell</code>.",
                            "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                            "type": "string"
                        },
                        "EndDate": {
                            "description": "The date and time, in ISO-8601 Extended format, when the session was terminated.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "OutputUrl": {
                            "description": "Reserved for future use.",
                            "properties": {
                                "CloudWatchOutputUrl": {
                                    "description": "Reserved for future use.",
                                    "maxLength": 2083,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "S3OutputUrl": {
                                    "description": "Reserved for future use.",
                                    "maxLength": 2083,
                                    "minLength": 1,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "Owner": {
                            "description": "The ID of the AWS user account that started the session.",
                            "maxLength": 256,
                            "minLength": 1,
                            "type": "string"
                        },
                        "SessionId": {
                            "description": "The ID of the session.",
                            "maxLength": 96,
                            "minLength": 1,
                            "type": "string"
                        },
                        "StartDate": {
                            "description": "The date and time, in ISO-8601 Extended format, when the session began.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "Status": {
                            "description": "The status of the session. For example, \"Connected\" or \"Terminated\".",
                            "enum": [
                                "Connected",
                                "Connecting",
                                "Disconnected",
                                "Terminated",
                                "Terminating",
                                "Failed"
                            ],
                            "type": "string"
                        },
                        "Target": {
                            "description": "The instance that the Session Manager session connected to.",
                            "maxLength": 50,
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "SessionManagerCloudWatchOutputUrl": {
                "maxLength": 2083,
                "minLength": 1,
                "type": "string"
            },
            "SessionManagerOutputUrl": {
                "description": "Reserved for future use.",
                "properties": {
                    "CloudWatchOutputUrl": {
                        "description": "Reserved for future use.",
                        "maxLength": 2083,
                        "minLength": 1,
                        "type": "string"
                    },
                    "S3OutputUrl": {
                        "description": "Reserved for future use.",
                        "maxLength": 2083,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SessionManagerParameterName": {
                "maxLength": 255,
                "minLength": 1,
                "type": "string"
            },
            "SessionManagerParameterValue": {
                "maxLength": 65535,
                "minLength": 1,
                "type": "string"
            },
            "SessionManagerParameterValueList": {
                "items": {
                    "maxLength": 65535,
                    "minLength": 1,
                    "type": "string"
                },
                "type": "array"
            },
            "SessionManagerParameters": {
                "items": {
                    "properties": {
                        "key": {
                            "maxLength": 255,
                            "minLength": 1,
                            "type": "string"
                        },
                        "value": {
                            "items": {
                                "maxLength": 65535,
                                "minLength": 1,
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "SessionManagerS3OutputUrl": {
                "maxLength": 2083,
                "minLength": 1,
                "type": "string"
            },
            "SessionMaxResults": {
                "maximum": 200,
                "minimum": 1,
                "type": "integer"
            },
            "SessionOwner": {
                "maxLength": 256,
                "minLength": 1,
                "type": "string"
            },
            "SessionState": {
                "enum": [
                    "Active",
                    "History"
                ],
                "type": "string"
            },
            "SessionStatus": {
                "enum": [
                    "Connected",
                    "Connecting",
                    "Disconnected",
                    "Terminated",
                    "Terminating",
                    "Failed"
                ],
                "type": "string"
            },
            "SessionTarget": {
                "maxLength": 50,
                "minLength": 1,
                "type": "string"
            },
            "SeveritySummary": {
                "description": "The number of managed instances found for each patch severity level defined in the request filter.",
                "properties": {
                    "CriticalCount": {
                        "description": "The total number of resources or compliance items that have a severity level of critical. Critical severity is determined by the organization that published the compliance items.",
                        "type": "integer"
                    },
                    "HighCount": {
                        "description": "The total number of resources or compliance items that have a severity level of high. High severity is determined by the organization that published the compliance items.",
                        "type": "integer"
                    },
                    "InformationalCount": {
                        "description": "The total number of resources or compliance items that have a severity level of informational. Informational severity is determined by the organization that published the compliance items.",
                        "type": "integer"
                    },
                    "LowCount": {
                        "description": "The total number of resources or compliance items that have a severity level of low. Low severity is determined by the organization that published the compliance items.",
                        "type": "integer"
                    },
                    "MediumCount": {
                        "description": "The total number of resources or compliance items that have a severity level of medium. Medium severity is determined by the organization that published the compliance items.",
                        "type": "integer"
                    },
                    "UnspecifiedCount": {
                        "description": "The total number of resources or compliance items that have a severity level of unspecified. Unspecified severity is determined by the organization that published the compliance items.",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "SignalType": {
                "enum": [
                    "Approve",
                    "Reject",
                    "StartStep",
                    "StopStep",
                    "Resume"
                ],
                "type": "string"
            },
            "SnapshotDownloadUrl": {
                "type": "string"
            },
            "SnapshotId": {
                "maxLength": 36,
                "minLength": 36,
                "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                "type": "string"
            },
            "StandardErrorContent": {
                "maxLength": 8000,
                "type": "string"
            },
            "StandardOutputContent": {
                "maxLength": 24000,
                "type": "string"
            },
            "StartAssociationsOnceRequest": {
                "properties": {
                    "AssociationIds": {
                        "description": "The association IDs that you want to execute immediately and only one time.",
                        "items": {
                            "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                            "type": "string"
                        },
                        "maxItems": 10,
                        "minItems": 1,
                        "type": "array"
                    }
                },
                "required": [
                    "AssociationIds"
                ],
                "type": "object"
            },
            "StartAssociationsOnceResult": {
                "properties": {},
                "type": "object"
            },
            "StartAutomationExecutionRequest": {
                "properties": {
                    "ClientToken": {
                        "description": "User-provided idempotency token. The token must be unique, is case insensitive, enforces the UUID format, and can't be reused.",
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
                        "type": "string"
                    },
                    "DocumentName": {
                        "description": "The name of the Automation document to use for this execution.",
                        "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                        "type": "string"
                    },
                    "DocumentVersion": {
                        "description": "The version of the Automation document to use for this execution.",
                        "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                        "type": "string"
                    },
                    "MaxConcurrency": {
                        "description": "The maximum number of targets allowed to run this task in parallel. You can specify a number, such as 10, or a percentage, such as 10%. The default value is 10.",
                        "maxLength": 7,
                        "minLength": 1,
                        "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                        "type": "string"
                    },
                    "MaxErrors": {
                        "description": "<p>The number of errors that are allowed before the system stops running the automation on additional targets. You can specify either an absolute number of errors, for example 10, or a percentage of the target set, for example 10%. If you specify 3, for example, the system stops running the automation when the fourth error is received. If you specify 0, then the system stops running the automation on additional targets after the first error result is returned. If you run an automation on 50 resources and set max-errors to 10%, then the system stops running the automation on additional targets when the sixth error is received.</p> <p>Executions that are already running an automation when max-errors is reached are allowed to complete, but some of these executions may fail as well. If you need to ensure that there won't be more than max-errors failed executions, set max-concurrency to 1 so the executions proceed one at a time.</p>",
                        "maxLength": 7,
                        "minLength": 1,
                        "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                        "type": "string"
                    },
                    "Mode": {
                        "description": "The execution mode of the automation. Valid modes include the following: Auto and Interactive. The default mode is Auto.",
                        "enum": [
                            "Auto",
                            "Interactive"
                        ],
                        "type": "string"
                    },
                    "Parameters": {
                        "description": "A key-value map of execution parameters, which match the declared parameters in the Automation document.",
                        "items": {
                            "properties": {
                                "key": {
                                    "maxLength": 30,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "value": {
                                    "items": {
                                        "maxLength": 512,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "maxItems": 10,
                                    "minItems": 0,
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 200,
                        "minItems": 1,
                        "type": "array"
                    },
                    "TargetLocations": {
                        "description": "A location is a combination of AWS Regions and/or AWS accounts where you want to execute the Automation. Use this action to start an Automation in multiple Regions and multiple accounts. For more information, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-automation-multiple-accounts-and-regions.html\">Concurrently Executing Automations in Multiple AWS Regions and Accounts</a> in the <i>AWS Systems Manager User Guide</i>. ",
                        "items": {
                            "description": "The combination of AWS Regions and accounts targeted by the current Automation execution.",
                            "properties": {
                                "Accounts": {
                                    "description": "The AWS accounts targeted by the current Automation execution.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "maxItems": 50,
                                    "minItems": 1,
                                    "type": "array"
                                },
                                "ExecutionRoleName": {
                                    "description": "The Automation execution role used by the currently executing Automation.",
                                    "maxLength": 64,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Regions": {
                                    "description": "The AWS Regions targeted by the current Automation execution.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "maxItems": 50,
                                    "minItems": 1,
                                    "type": "array"
                                },
                                "TargetLocationMaxConcurrency": {
                                    "description": "The maxium number of AWS accounts and AWS regions allowed to run the Automation concurrently ",
                                    "maxLength": 7,
                                    "minLength": 1,
                                    "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                                    "type": "string"
                                },
                                "TargetLocationMaxErrors": {
                                    "description": "The maxium number of errors allowed before the system stops queueing additional Automation executions for the currently executing Automation. ",
                                    "maxLength": 7,
                                    "minLength": 1,
                                    "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 100,
                        "minItems": 1,
                        "type": "array"
                    },
                    "TargetMaps": {
                        "description": "A key-value mapping of document parameters to target resources. Both Targets and TargetMaps cannot be specified together.",
                        "items": {
                            "items": {
                                "properties": {
                                    "key": {
                                        "maxLength": 50,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "value": {
                                        "items": {
                                            "maxLength": 50,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "maxItems": 25,
                                        "minItems": 0,
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            },
                            "maxItems": 20,
                            "minItems": 1,
                            "type": "array"
                        },
                        "maxItems": 300,
                        "minItems": 0,
                        "type": "array"
                    },
                    "TargetParameterName": {
                        "description": "The name of the parameter used as the target resource for the rate-controlled execution. Required if you specify targets.",
                        "maxLength": 30,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Targets": {
                        "description": "A key-value mapping to target resources. Required if you specify TargetParameterName.",
                        "items": {
                            "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                            "properties": {
                                "Key": {
                                    "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "maxItems": 50,
                                    "minItems": 0,
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 5,
                        "minItems": 0,
                        "type": "array"
                    }
                },
                "required": [
                    "DocumentName"
                ],
                "type": "object"
            },
            "StartAutomationExecutionResult": {
                "properties": {
                    "AutomationExecutionId": {
                        "description": "The unique ID of a newly scheduled automation execution.",
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "StartSessionRequest": {
                "properties": {
                    "DocumentName": {
                        "description": "The name of the SSM document to define the parameters and plugin settings for the session. For example, <code>SSM-SessionManagerRunShell</code>. If no document name is provided, a shell to the instance is launched by default.",
                        "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                        "type": "string"
                    },
                    "Parameters": {
                        "description": "Reserved for future use.",
                        "items": {
                            "properties": {
                                "key": {
                                    "maxLength": 255,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "value": {
                                    "items": {
                                        "maxLength": 65535,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Target": {
                        "description": "The instance to connect to for the session.",
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "Target"
                ],
                "type": "object"
            },
            "StartSessionResponse": {
                "properties": {
                    "SessionId": {
                        "description": "The ID of the session.",
                        "maxLength": 96,
                        "minLength": 1,
                        "type": "string"
                    },
                    "StreamUrl": {
                        "description": "<p>A URL back to SSM Agent on the instance that the Session Manager client uses to send commands and receive output from the instance. Format: <code>wss://ssm-messages.<b>region</b>.amazonaws.com/v1/data-channel/<b>session-id</b>?stream=(input|output)</code> </p> <p> <b>region</b> represents the Region identifier for an AWS Region supported by AWS Systems Manager, such as <code>us-east-2</code> for the US East (Ohio) Region. For a list of supported <b>region</b> values, see the <b>Region</b> column in the <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html#ssm_region\">AWS Systems Manager table of regions and endpoints</a> in the <i>AWS General Reference</i>.</p> <p> <b>session-id</b> represents the ID of a Session Manager session, such as <code>1a2b3c4dEXAMPLE</code>.</p>",
                        "type": "string"
                    },
                    "TokenValue": {
                        "description": "An encrypted token value containing session and caller information. Used to authenticate the connection to the instance.",
                        "maxLength": 300,
                        "minLength": 0,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "StatusAdditionalInfo": {
                "maxLength": 1024,
                "type": "string"
            },
            "StatusDetails": {
                "maxLength": 100,
                "minLength": 0,
                "type": "string"
            },
            "StatusMessage": {
                "maxLength": 1024,
                "minLength": 1,
                "type": "string"
            },
            "StatusName": {
                "type": "string"
            },
            "StatusUnchanged": {},
            "StepExecution": {
                "description": "Detailed information about an the execution state of an Automation step.",
                "properties": {
                    "Action": {
                        "description": "The action this step performs. The action determines the behavior of the step.",
                        "pattern": "^aws:[a-zA-Z]{3,25}$",
                        "type": "string"
                    },
                    "ExecutionEndTime": {
                        "description": "If a step has finished execution, this contains the time the execution ended. If the step has not yet concluded, this field is not populated.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "ExecutionStartTime": {
                        "description": "If a step has begun execution, this contains the time the step started. If the step is in Pending status, this field is not populated.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "FailureDetails": {
                        "description": "Information about the Automation failure.",
                        "properties": {
                            "Details": {
                                "description": "Detailed information about the Automation step failure.",
                                "items": {
                                    "properties": {
                                        "key": {
                                            "maxLength": 30,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "value": {
                                            "items": {
                                                "maxLength": 512,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "maxItems": 10,
                                            "minItems": 0,
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                },
                                "maxItems": 200,
                                "minItems": 1,
                                "type": "array"
                            },
                            "FailureStage": {
                                "description": "The stage of the Automation execution when the failure occurred. The stages include the following: InputValidation, PreVerification, Invocation, PostVerification.",
                                "type": "string"
                            },
                            "FailureType": {
                                "description": "The type of Automation failure. Failure types include the following: Action, Permission, Throttling, Verification, Internal.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "FailureMessage": {
                        "description": "If a step failed, this message explains why the execution failed.",
                        "type": "string"
                    },
                    "Inputs": {
                        "description": "Fully-resolved values passed into the step before execution.",
                        "items": {
                            "properties": {
                                "key": {
                                    "type": "string"
                                },
                                "value": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "IsCritical": {
                        "description": "The flag which can be used to help decide whether the failure of current step leads to the Automation failure.",
                        "type": "boolean"
                    },
                    "IsEnd": {
                        "description": "The flag which can be used to end automation no matter whether the step succeeds or fails.",
                        "type": "boolean"
                    },
                    "MaxAttempts": {
                        "description": "The maximum number of tries to run the action of the step. The default value is 1.",
                        "type": "integer"
                    },
                    "NextStep": {
                        "description": "The next step after the step succeeds.",
                        "type": "string"
                    },
                    "OnFailure": {
                        "description": "The action to take if the step fails. The default value is Abort.",
                        "type": "string"
                    },
                    "Outputs": {
                        "description": "Returned values from the execution of the step.",
                        "items": {
                            "properties": {
                                "key": {
                                    "maxLength": 30,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "value": {
                                    "items": {
                                        "maxLength": 512,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "maxItems": 10,
                                    "minItems": 0,
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 200,
                        "minItems": 1,
                        "type": "array"
                    },
                    "OverriddenParameters": {
                        "description": "A user-specified list of parameters to override when executing a step.",
                        "items": {
                            "properties": {
                                "key": {
                                    "maxLength": 30,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "value": {
                                    "items": {
                                        "maxLength": 512,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "maxItems": 10,
                                    "minItems": 0,
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 200,
                        "minItems": 1,
                        "type": "array"
                    },
                    "Response": {
                        "description": "A message associated with the response code for an execution.",
                        "type": "string"
                    },
                    "ResponseCode": {
                        "description": "The response code returned by the execution of the step.",
                        "type": "string"
                    },
                    "StepExecutionId": {
                        "description": "The unique ID of a step execution.",
                        "type": "string"
                    },
                    "StepName": {
                        "description": "The name of this execution step.",
                        "type": "string"
                    },
                    "StepStatus": {
                        "description": "The execution status for this step. Valid values include: Pending, InProgress, Success, Cancelled, Failed, and TimedOut.",
                        "enum": [
                            "Pending",
                            "InProgress",
                            "Waiting",
                            "Success",
                            "TimedOut",
                            "Cancelling",
                            "Cancelled",
                            "Failed"
                        ],
                        "type": "string"
                    },
                    "TargetLocation": {
                        "description": "The combination of AWS Regions and accounts targeted by the current Automation execution.",
                        "properties": {
                            "Accounts": {
                                "description": "The AWS accounts targeted by the current Automation execution.",
                                "items": {
                                    "type": "string"
                                },
                                "maxItems": 50,
                                "minItems": 1,
                                "type": "array"
                            },
                            "ExecutionRoleName": {
                                "description": "The Automation execution role used by the currently executing Automation.",
                                "maxLength": 64,
                                "minLength": 1,
                                "type": "string"
                            },
                            "Regions": {
                                "description": "The AWS Regions targeted by the current Automation execution.",
                                "items": {
                                    "type": "string"
                                },
                                "maxItems": 50,
                                "minItems": 1,
                                "type": "array"
                            },
                            "TargetLocationMaxConcurrency": {
                                "description": "The maxium number of AWS accounts and AWS regions allowed to run the Automation concurrently ",
                                "maxLength": 7,
                                "minLength": 1,
                                "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                                "type": "string"
                            },
                            "TargetLocationMaxErrors": {
                                "description": "The maxium number of errors allowed before the system stops queueing additional Automation executions for the currently executing Automation. ",
                                "maxLength": 7,
                                "minLength": 1,
                                "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "Targets": {
                        "description": "The targets for the step execution.",
                        "items": {
                            "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                            "properties": {
                                "Key": {
                                    "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "maxItems": 50,
                                    "minItems": 0,
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 5,
                        "minItems": 0,
                        "type": "array"
                    },
                    "TimeoutSeconds": {
                        "description": "The timeout seconds of the step.",
                        "type": "integer"
                    },
                    "ValidNextSteps": {
                        "description": "Strategies used when step fails, we support Continue and Abort. Abort will fail the automation when the step fails. Continue will ignore the failure of current step and allow automation to execute the next step. With conditional branching, we add step:stepName to support the automation to go to another specific step.",
                        "items": {
                            "maxLength": 65535,
                            "minLength": 1,
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "StepExecutionFilter": {
                "description": "A filter to limit the amount of step execution information returned by the call.",
                "properties": {
                    "Key": {
                        "description": "One or more keys to limit the results. Valid filter keys include the following: StepName, Action, StepExecutionId, StepExecutionStatus, StartTimeBefore, StartTimeAfter.",
                        "enum": [
                            "StartTimeBefore",
                            "StartTimeAfter",
                            "StepExecutionStatus",
                            "StepExecutionId",
                            "StepName",
                            "Action"
                        ],
                        "type": "string"
                    },
                    "Values": {
                        "description": "The values of the filter key.",
                        "items": {
                            "maxLength": 150,
                            "minLength": 1,
                            "type": "string"
                        },
                        "maxItems": 10,
                        "minItems": 1,
                        "type": "array"
                    }
                },
                "required": [
                    "Key",
                    "Values"
                ],
                "type": "object"
            },
            "StepExecutionFilterKey": {
                "enum": [
                    "StartTimeBefore",
                    "StartTimeAfter",
                    "StepExecutionStatus",
                    "StepExecutionId",
                    "StepName",
                    "Action"
                ],
                "type": "string"
            },
            "StepExecutionFilterList": {
                "items": {
                    "description": "A filter to limit the amount of step execution information returned by the call.",
                    "properties": {
                        "Key": {
                            "description": "One or more keys to limit the results. Valid filter keys include the following: StepName, Action, StepExecutionId, StepExecutionStatus, StartTimeBefore, StartTimeAfter.",
                            "enum": [
                                "StartTimeBefore",
                                "StartTimeAfter",
                                "StepExecutionStatus",
                                "StepExecutionId",
                                "StepName",
                                "Action"
                            ],
                            "type": "string"
                        },
                        "Values": {
                            "description": "The values of the filter key.",
                            "items": {
                                "maxLength": 150,
                                "minLength": 1,
                                "type": "string"
                            },
                            "maxItems": 10,
                            "minItems": 1,
                            "type": "array"
                        }
                    },
                    "required": [
                        "Key",
                        "Values"
                    ],
                    "type": "object"
                },
                "maxItems": 6,
                "minItems": 1,
                "type": "array"
            },
            "StepExecutionFilterValue": {
                "maxLength": 150,
                "minLength": 1,
                "type": "string"
            },
            "StepExecutionFilterValueList": {
                "items": {
                    "maxLength": 150,
                    "minLength": 1,
                    "type": "string"
                },
                "maxItems": 10,
                "minItems": 1,
                "type": "array"
            },
            "StepExecutionList": {
                "items": {
                    "description": "Detailed information about an the execution state of an Automation step.",
                    "properties": {
                        "Action": {
                            "description": "The action this step performs. The action determines the behavior of the step.",
                            "pattern": "^aws:[a-zA-Z]{3,25}$",
                            "type": "string"
                        },
                        "ExecutionEndTime": {
                            "description": "If a step has finished execution, this contains the time the execution ended. If the step has not yet concluded, this field is not populated.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "ExecutionStartTime": {
                            "description": "If a step has begun execution, this contains the time the step started. If the step is in Pending status, this field is not populated.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "FailureDetails": {
                            "description": "Information about the Automation failure.",
                            "properties": {
                                "Details": {
                                    "description": "Detailed information about the Automation step failure.",
                                    "items": {
                                        "properties": {
                                            "key": {
                                                "maxLength": 30,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "value": {
                                                "items": {
                                                    "maxLength": 512,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "maxItems": 10,
                                                "minItems": 0,
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "maxItems": 200,
                                    "minItems": 1,
                                    "type": "array"
                                },
                                "FailureStage": {
                                    "description": "The stage of the Automation execution when the failure occurred. The stages include the following: InputValidation, PreVerification, Invocation, PostVerification.",
                                    "type": "string"
                                },
                                "FailureType": {
                                    "description": "The type of Automation failure. Failure types include the following: Action, Permission, Throttling, Verification, Internal.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "FailureMessage": {
                            "description": "If a step failed, this message explains why the execution failed.",
                            "type": "string"
                        },
                        "Inputs": {
                            "description": "Fully-resolved values passed into the step before execution.",
                            "items": {
                                "properties": {
                                    "key": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "IsCritical": {
                            "description": "The flag which can be used to help decide whether the failure of current step leads to the Automation failure.",
                            "type": "boolean"
                        },
                        "IsEnd": {
                            "description": "The flag which can be used to end automation no matter whether the step succeeds or fails.",
                            "type": "boolean"
                        },
                        "MaxAttempts": {
                            "description": "The maximum number of tries to run the action of the step. The default value is 1.",
                            "type": "integer"
                        },
                        "NextStep": {
                            "description": "The next step after the step succeeds.",
                            "type": "string"
                        },
                        "OnFailure": {
                            "description": "The action to take if the step fails. The default value is Abort.",
                            "type": "string"
                        },
                        "Outputs": {
                            "description": "Returned values from the execution of the step.",
                            "items": {
                                "properties": {
                                    "key": {
                                        "maxLength": 30,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "value": {
                                        "items": {
                                            "maxLength": 512,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "maxItems": 10,
                                        "minItems": 0,
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            },
                            "maxItems": 200,
                            "minItems": 1,
                            "type": "array"
                        },
                        "OverriddenParameters": {
                            "description": "A user-specified list of parameters to override when executing a step.",
                            "items": {
                                "properties": {
                                    "key": {
                                        "maxLength": 30,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "value": {
                                        "items": {
                                            "maxLength": 512,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "maxItems": 10,
                                        "minItems": 0,
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            },
                            "maxItems": 200,
                            "minItems": 1,
                            "type": "array"
                        },
                        "Response": {
                            "description": "A message associated with the response code for an execution.",
                            "type": "string"
                        },
                        "ResponseCode": {
                            "description": "The response code returned by the execution of the step.",
                            "type": "string"
                        },
                        "StepExecutionId": {
                            "description": "The unique ID of a step execution.",
                            "type": "string"
                        },
                        "StepName": {
                            "description": "The name of this execution step.",
                            "type": "string"
                        },
                        "StepStatus": {
                            "description": "The execution status for this step. Valid values include: Pending, InProgress, Success, Cancelled, Failed, and TimedOut.",
                            "enum": [
                                "Pending",
                                "InProgress",
                                "Waiting",
                                "Success",
                                "TimedOut",
                                "Cancelling",
                                "Cancelled",
                                "Failed"
                            ],
                            "type": "string"
                        },
                        "TargetLocation": {
                            "description": "The combination of AWS Regions and accounts targeted by the current Automation execution.",
                            "properties": {
                                "Accounts": {
                                    "description": "The AWS accounts targeted by the current Automation execution.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "maxItems": 50,
                                    "minItems": 1,
                                    "type": "array"
                                },
                                "ExecutionRoleName": {
                                    "description": "The Automation execution role used by the currently executing Automation.",
                                    "maxLength": 64,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Regions": {
                                    "description": "The AWS Regions targeted by the current Automation execution.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "maxItems": 50,
                                    "minItems": 1,
                                    "type": "array"
                                },
                                "TargetLocationMaxConcurrency": {
                                    "description": "The maxium number of AWS accounts and AWS regions allowed to run the Automation concurrently ",
                                    "maxLength": 7,
                                    "minLength": 1,
                                    "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                                    "type": "string"
                                },
                                "TargetLocationMaxErrors": {
                                    "description": "The maxium number of errors allowed before the system stops queueing additional Automation executions for the currently executing Automation. ",
                                    "maxLength": 7,
                                    "minLength": 1,
                                    "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "Targets": {
                            "description": "The targets for the step execution.",
                            "items": {
                                "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                                "properties": {
                                    "Key": {
                                        "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                        "type": "string"
                                    },
                                    "Values": {
                                        "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "maxItems": 50,
                                        "minItems": 0,
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            },
                            "maxItems": 5,
                            "minItems": 0,
                            "type": "array"
                        },
                        "TimeoutSeconds": {
                            "description": "The timeout seconds of the step.",
                            "type": "integer"
                        },
                        "ValidNextSteps": {
                            "description": "Strategies used when step fails, we support Continue and Abort. Abort will fail the automation when the step fails. Continue will ignore the failure of current step and allow automation to execute the next step. With conditional branching, we add step:stepName to support the automation to go to another specific step.",
                            "items": {
                                "maxLength": 65535,
                                "minLength": 1,
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "StopAutomationExecutionRequest": {
                "properties": {
                    "AutomationExecutionId": {
                        "description": "The execution ID of the Automation to stop.",
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string"
                    },
                    "Type": {
                        "description": "The stop request type. Valid types include the following: Cancel and Complete. The default type is Cancel.",
                        "enum": [
                            "Complete",
                            "Cancel"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "AutomationExecutionId"
                ],
                "type": "object"
            },
            "StopAutomationExecutionResult": {
                "properties": {},
                "type": "object"
            },
            "StopType": {
                "enum": [
                    "Complete",
                    "Cancel"
                ],
                "type": "string"
            },
            "StreamUrl": {
                "type": "string"
            },
            "String": {
                "type": "string"
            },
            "StringDateTime": {
                "pattern": "^([\\-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d(?!:))?)?(\\17[0-5]\\d([\\.,]\\d)?)?([zZ]|([\\-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$",
                "type": "string"
            },
            "StringList": {
                "items": {
                    "type": "string"
                },
                "type": "array"
            },
            "SubTypeCountLimitExceededException": {},
            "Tag": {
                "description": "Metadata that you assign to your AWS resources. Tags enable you to categorize your resources in different ways, for example, by purpose, owner, or environment. In Systems Manager, you can apply tags to documents, managed instances, Maintenance Windows, Parameter Store parameters, and patch baselines.",
                "properties": {
                    "Key": {
                        "description": "The name of the tag.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                        "type": "string"
                    },
                    "Value": {
                        "description": "The value of the tag.",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                        "type": "string"
                    }
                },
                "required": [
                    "Key",
                    "Value"
                ],
                "type": "object"
            },
            "TagKey": {
                "maxLength": 128,
                "minLength": 1,
                "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                "type": "string"
            },
            "TagList": {
                "items": {
                    "description": "Metadata that you assign to your AWS resources. Tags enable you to categorize your resources in different ways, for example, by purpose, owner, or environment. In Systems Manager, you can apply tags to documents, managed instances, Maintenance Windows, Parameter Store parameters, and patch baselines.",
                    "properties": {
                        "Key": {
                            "description": "The name of the tag.",
                            "maxLength": 128,
                            "minLength": 1,
                            "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                            "type": "string"
                        },
                        "Value": {
                            "description": "The value of the tag.",
                            "maxLength": 256,
                            "minLength": 1,
                            "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                            "type": "string"
                        }
                    },
                    "required": [
                        "Key",
                        "Value"
                    ],
                    "type": "object"
                },
                "maxItems": 1000,
                "type": "array"
            },
            "TagValue": {
                "maxLength": 256,
                "minLength": 1,
                "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                "type": "string"
            },
            "Target": {
                "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                "properties": {
                    "Key": {
                        "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                        "type": "string"
                    },
                    "Values": {
                        "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                        "items": {
                            "type": "string"
                        },
                        "maxItems": 50,
                        "minItems": 0,
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "TargetCount": {
                "type": "integer"
            },
            "TargetInUseException": {},
            "TargetKey": {
                "maxLength": 128,
                "minLength": 1,
                "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                "type": "string"
            },
            "TargetLocation": {
                "description": "The combination of AWS Regions and accounts targeted by the current Automation execution.",
                "properties": {
                    "Accounts": {
                        "description": "The AWS accounts targeted by the current Automation execution.",
                        "items": {
                            "type": "string"
                        },
                        "maxItems": 50,
                        "minItems": 1,
                        "type": "array"
                    },
                    "ExecutionRoleName": {
                        "description": "The Automation execution role used by the currently executing Automation.",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Regions": {
                        "description": "The AWS Regions targeted by the current Automation execution.",
                        "items": {
                            "type": "string"
                        },
                        "maxItems": 50,
                        "minItems": 1,
                        "type": "array"
                    },
                    "TargetLocationMaxConcurrency": {
                        "description": "The maxium number of AWS accounts and AWS regions allowed to run the Automation concurrently ",
                        "maxLength": 7,
                        "minLength": 1,
                        "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                        "type": "string"
                    },
                    "TargetLocationMaxErrors": {
                        "description": "The maxium number of errors allowed before the system stops queueing additional Automation executions for the currently executing Automation. ",
                        "maxLength": 7,
                        "minLength": 1,
                        "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "TargetLocations": {
                "items": {
                    "description": "The combination of AWS Regions and accounts targeted by the current Automation execution.",
                    "properties": {
                        "Accounts": {
                            "description": "The AWS accounts targeted by the current Automation execution.",
                            "items": {
                                "type": "string"
                            },
                            "maxItems": 50,
                            "minItems": 1,
                            "type": "array"
                        },
                        "ExecutionRoleName": {
                            "description": "The Automation execution role used by the currently executing Automation.",
                            "maxLength": 64,
                            "minLength": 1,
                            "type": "string"
                        },
                        "Regions": {
                            "description": "The AWS Regions targeted by the current Automation execution.",
                            "items": {
                                "type": "string"
                            },
                            "maxItems": 50,
                            "minItems": 1,
                            "type": "array"
                        },
                        "TargetLocationMaxConcurrency": {
                            "description": "The maxium number of AWS accounts and AWS regions allowed to run the Automation concurrently ",
                            "maxLength": 7,
                            "minLength": 1,
                            "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                            "type": "string"
                        },
                        "TargetLocationMaxErrors": {
                            "description": "The maxium number of errors allowed before the system stops queueing additional Automation executions for the currently executing Automation. ",
                            "maxLength": 7,
                            "minLength": 1,
                            "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "maxItems": 100,
                "minItems": 1,
                "type": "array"
            },
            "TargetMap": {
                "items": {
                    "properties": {
                        "key": {
                            "maxLength": 50,
                            "minLength": 1,
                            "type": "string"
                        },
                        "value": {
                            "items": {
                                "maxLength": 50,
                                "minLength": 1,
                                "type": "string"
                            },
                            "maxItems": 25,
                            "minItems": 0,
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "maxItems": 20,
                "minItems": 1,
                "type": "array"
            },
            "TargetMapKey": {
                "maxLength": 50,
                "minLength": 1,
                "type": "string"
            },
            "TargetMapValue": {
                "maxLength": 50,
                "minLength": 1,
                "type": "string"
            },
            "TargetMapValueList": {
                "items": {
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string"
                },
                "maxItems": 25,
                "minItems": 0,
                "type": "array"
            },
            "TargetMaps": {
                "items": {
                    "items": {
                        "properties": {
                            "key": {
                                "maxLength": 50,
                                "minLength": 1,
                                "type": "string"
                            },
                            "value": {
                                "items": {
                                    "maxLength": 50,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "maxItems": 25,
                                "minItems": 0,
                                "type": "array"
                            }
                        },
                        "type": "object"
                    },
                    "maxItems": 20,
                    "minItems": 1,
                    "type": "array"
                },
                "maxItems": 300,
                "minItems": 0,
                "type": "array"
            },
            "TargetNotConnected": {},
            "TargetParameterList": {
                "items": {
                    "type": "string"
                },
                "type": "array"
            },
            "TargetType": {
                "maxLength": 200,
                "pattern": "^\\/[\\w\\.\\-\\:\\/]*$",
                "type": "string"
            },
            "TargetValue": {
                "type": "string"
            },
            "TargetValues": {
                "items": {
                    "type": "string"
                },
                "maxItems": 50,
                "minItems": 0,
                "type": "array"
            },
            "Targets": {
                "items": {
                    "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                    "properties": {
                        "Key": {
                            "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                            "maxLength": 128,
                            "minLength": 1,
                            "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                            "type": "string"
                        },
                        "Values": {
                            "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                            "items": {
                                "type": "string"
                            },
                            "maxItems": 50,
                            "minItems": 0,
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "maxItems": 5,
                "minItems": 0,
                "type": "array"
            },
            "TerminateSessionRequest": {
                "properties": {
                    "SessionId": {
                        "description": "The ID of the session to terminate.",
                        "maxLength": 96,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "SessionId"
                ],
                "type": "object"
            },
            "TerminateSessionResponse": {
                "properties": {
                    "SessionId": {
                        "description": "The ID of the session that has been terminated.",
                        "maxLength": 96,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "TimeoutSeconds": {
                "maximum": 2592000,
                "minimum": 30,
                "type": "integer"
            },
            "TokenValue": {
                "maxLength": 300,
                "minLength": 0,
                "type": "string"
            },
            "TooManyTagsError": {},
            "TooManyUpdates": {},
            "TotalCount": {
                "type": "integer"
            },
            "TotalSizeLimitExceededException": {},
            "UnsupportedInventoryItemContextException": {},
            "UnsupportedInventorySchemaVersionException": {},
            "UnsupportedOperatingSystem": {},
            "UnsupportedParameterType": {},
            "UnsupportedPlatformType": {},
            "UpdateAssociationRequest": {
                "properties": {
                    "AssociationId": {
                        "description": "The ID of the association you want to update. ",
                        "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                        "type": "string"
                    },
                    "AssociationName": {
                        "description": "The name of the association that you want to update.",
                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                        "type": "string"
                    },
                    "AssociationVersion": {
                        "description": "This parameter is provided for concurrency control purposes. You must specify the latest association version in the service. If you want to ensure that this request succeeds, either specify <code>$LATEST</code>, or omit this parameter.",
                        "pattern": "([$]LATEST)|([1-9][0-9]*)",
                        "type": "string"
                    },
                    "AutomationTargetParameterName": {
                        "description": "Specify the target for the association. This target is required for associations that use an Automation document and target resources by using rate controls.",
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string"
                    },
                    "ComplianceSeverity": {
                        "description": "The severity level to assign to the association.",
                        "enum": [
                            "CRITICAL",
                            "HIGH",
                            "MEDIUM",
                            "LOW",
                            "UNSPECIFIED"
                        ],
                        "type": "string"
                    },
                    "DocumentVersion": {
                        "description": "The document version you want update for the association. ",
                        "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                        "type": "string"
                    },
                    "MaxConcurrency": {
                        "description": "<p>The maximum number of targets allowed to run the association at the same time. You can specify a number, for example 10, or a percentage of the target set, for example 10%. The default value is 100%, which means all targets run the association at the same time.</p> <p>If a new instance starts and attempts to execute an association while Systems Manager is executing MaxConcurrency associations, the association is allowed to run. During the next association interval, the new instance will process its association within the limit specified for MaxConcurrency.</p>",
                        "maxLength": 7,
                        "minLength": 1,
                        "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                        "type": "string"
                    },
                    "MaxErrors": {
                        "description": "<p>The number of errors that are allowed before the system stops sending requests to run the association on additional targets. You can specify either an absolute number of errors, for example 10, or a percentage of the target set, for example 10%. If you specify 3, for example, the system stops sending requests when the fourth error is received. If you specify 0, then the system stops sending requests after the first error is returned. If you run an association on 50 instances and set MaxError to 10%, then the system stops sending the request when the sixth error is received.</p> <p>Executions that are already running an association when MaxErrors is reached are allowed to complete, but some of these executions may fail as well. If you need to ensure that there won't be more than max-errors failed executions, set MaxConcurrency to 1 so that executions proceed one at a time.</p>",
                        "maxLength": 7,
                        "minLength": 1,
                        "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                        "type": "string"
                    },
                    "Name": {
                        "description": "<p>The name of the SSM document that contains the configuration information for the instance. You can specify Command, Policy, or Automation documents.</p> <p>You can specify AWS-predefined documents, documents you created, or a document that is shared with you from another account.</p> <p>For SSM documents that are shared with you from other AWS accounts, you must specify the complete SSM document ARN, in the following format:</p> <p> <code>arn:aws:ssm:<i>region</i>:<i>account-id</i>:document/<i>document-name</i> </code> </p> <p>For example:</p> <p> <code>arn:aws:ssm:us-east-2:12345678912:document/My-Shared-Document</code> </p> <p>For AWS-predefined documents and SSM documents you created in your account, you only need to specify the document name. For example, <code>AWS-ApplyPatchBaseline</code> or <code>My-Document</code>.</p>",
                        "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                        "type": "string"
                    },
                    "OutputLocation": {
                        "description": "An Amazon S3 bucket where you want to store the results of this request.",
                        "properties": {
                            "S3Location": {
                                "description": "An Amazon S3 bucket where you want to store the results of this request.",
                                "properties": {
                                    "OutputS3BucketName": {
                                        "description": "The name of the Amazon S3 bucket.",
                                        "maxLength": 63,
                                        "minLength": 3,
                                        "type": "string"
                                    },
                                    "OutputS3KeyPrefix": {
                                        "description": "The Amazon S3 bucket subfolder.",
                                        "maxLength": 500,
                                        "type": "string"
                                    },
                                    "OutputS3Region": {
                                        "description": "(Deprecated) You can no longer specify this parameter. The system ignores it. Instead, Systems Manager automatically determines the Amazon S3 bucket region.",
                                        "maxLength": 20,
                                        "minLength": 3,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    },
                    "Parameters": {
                        "description": "The parameters you want to update for the association. If you create a parameter using Parameter Store, you can reference the parameter using {{ssm:parameter-name}}",
                        "items": {
                            "properties": {
                                "key": {
                                    "type": "string"
                                },
                                "value": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "ScheduleExpression": {
                        "description": "The cron expression used to schedule the association that you want to update.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Targets": {
                        "description": "The targets of the association.",
                        "items": {
                            "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                            "properties": {
                                "Key": {
                                    "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "maxItems": 50,
                                    "minItems": 0,
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 5,
                        "minItems": 0,
                        "type": "array"
                    }
                },
                "required": [
                    "AssociationId"
                ],
                "type": "object"
            },
            "UpdateAssociationResult": {
                "properties": {
                    "AssociationDescription": {
                        "description": "The description of the association that was updated.",
                        "properties": {
                            "AssociationId": {
                                "description": "The association ID.",
                                "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                                "type": "string"
                            },
                            "AssociationName": {
                                "description": "The association name.",
                                "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                "type": "string"
                            },
                            "AssociationVersion": {
                                "description": "The association version.",
                                "pattern": "([$]LATEST)|([1-9][0-9]*)",
                                "type": "string"
                            },
                            "AutomationTargetParameterName": {
                                "description": "Specify the target for the association. This target is required for associations that use an Automation document and target resources by using rate controls.",
                                "maxLength": 50,
                                "minLength": 1,
                                "type": "string"
                            },
                            "ComplianceSeverity": {
                                "description": "The severity level that is assigned to the association.",
                                "enum": [
                                    "CRITICAL",
                                    "HIGH",
                                    "MEDIUM",
                                    "LOW",
                                    "UNSPECIFIED"
                                ],
                                "type": "string"
                            },
                            "Date": {
                                "description": "The date when the association was made.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "DocumentVersion": {
                                "description": "The document version.",
                                "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                "type": "string"
                            },
                            "InstanceId": {
                                "description": "The ID of the instance.",
                                "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                                "type": "string"
                            },
                            "LastExecutionDate": {
                                "description": "The date on which the association was last run.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "LastSuccessfulExecutionDate": {
                                "description": "The last date on which the association was successfully run.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "LastUpdateAssociationDate": {
                                "description": "The date when the association was last updated.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "MaxConcurrency": {
                                "description": "<p>The maximum number of targets allowed to run the association at the same time. You can specify a number, for example 10, or a percentage of the target set, for example 10%. The default value is 100%, which means all targets run the association at the same time.</p> <p>If a new instance starts and attempts to execute an association while Systems Manager is executing MaxConcurrency associations, the association is allowed to run. During the next association interval, the new instance will process its association within the limit specified for MaxConcurrency.</p>",
                                "maxLength": 7,
                                "minLength": 1,
                                "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                                "type": "string"
                            },
                            "MaxErrors": {
                                "description": "<p>The number of errors that are allowed before the system stops sending requests to run the association on additional targets. You can specify either an absolute number of errors, for example 10, or a percentage of the target set, for example 10%. If you specify 3, for example, the system stops sending requests when the fourth error is received. If you specify 0, then the system stops sending requests after the first error is returned. If you run an association on 50 instances and set MaxError to 10%, then the system stops sending the request when the sixth error is received.</p> <p>Executions that are already running an association when MaxErrors is reached are allowed to complete, but some of these executions may fail as well. If you need to ensure that there won't be more than max-errors failed executions, set MaxConcurrency to 1 so that executions proceed one at a time.</p>",
                                "maxLength": 7,
                                "minLength": 1,
                                "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                                "type": "string"
                            },
                            "Name": {
                                "description": "The name of the Systems Manager document.",
                                "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                                "type": "string"
                            },
                            "OutputLocation": {
                                "description": "An Amazon S3 bucket where you want to store the output details of the request.",
                                "properties": {
                                    "S3Location": {
                                        "description": "An Amazon S3 bucket where you want to store the results of this request.",
                                        "properties": {
                                            "OutputS3BucketName": {
                                                "description": "The name of the Amazon S3 bucket.",
                                                "maxLength": 63,
                                                "minLength": 3,
                                                "type": "string"
                                            },
                                            "OutputS3KeyPrefix": {
                                                "description": "The Amazon S3 bucket subfolder.",
                                                "maxLength": 500,
                                                "type": "string"
                                            },
                                            "OutputS3Region": {
                                                "description": "(Deprecated) You can no longer specify this parameter. The system ignores it. Instead, Systems Manager automatically determines the Amazon S3 bucket region.",
                                                "maxLength": 20,
                                                "minLength": 3,
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "Overview": {
                                "description": "Information about the association.",
                                "properties": {
                                    "AssociationStatusAggregatedCount": {
                                        "description": "Returns the number of targets for the association status. For example, if you created an association with two instances, and one of them was successful, this would return the count of instances by status.",
                                        "items": {
                                            "properties": {
                                                "key": {
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "DetailedStatus": {
                                        "description": "A detailed status of the association.",
                                        "type": "string"
                                    },
                                    "Status": {
                                        "description": "The status of the association. Status can be: Pending, Success, or Failed.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "Parameters": {
                                "description": "A description of the parameters for a document. ",
                                "items": {
                                    "properties": {
                                        "key": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "ScheduleExpression": {
                                "description": "A cron expression that specifies a schedule when the association runs.",
                                "maxLength": 256,
                                "minLength": 1,
                                "type": "string"
                            },
                            "Status": {
                                "description": "The association status.",
                                "properties": {
                                    "AdditionalInfo": {
                                        "description": "A user-defined string.",
                                        "maxLength": 1024,
                                        "type": "string"
                                    },
                                    "Date": {
                                        "description": "The date when the status changed.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Message": {
                                        "description": "The reason for the status.",
                                        "maxLength": 1024,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "The status.",
                                        "enum": [
                                            "Pending",
                                            "Success",
                                            "Failed"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Date",
                                    "Name",
                                    "Message"
                                ],
                                "type": "object"
                            },
                            "Targets": {
                                "description": "The instances targeted by the request. ",
                                "items": {
                                    "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                                    "properties": {
                                        "Key": {
                                            "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                            "type": "string"
                                        },
                                        "Values": {
                                            "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                            "items": {
                                                "type": "string"
                                            },
                                            "maxItems": 50,
                                            "minItems": 0,
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                },
                                "maxItems": 5,
                                "minItems": 0,
                                "type": "array"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "UpdateAssociationStatusRequest": {
                "properties": {
                    "AssociationStatus": {
                        "description": "The association status.",
                        "properties": {
                            "AdditionalInfo": {
                                "description": "A user-defined string.",
                                "maxLength": 1024,
                                "type": "string"
                            },
                            "Date": {
                                "description": "The date when the status changed.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "Message": {
                                "description": "The reason for the status.",
                                "maxLength": 1024,
                                "minLength": 1,
                                "type": "string"
                            },
                            "Name": {
                                "description": "The status.",
                                "enum": [
                                    "Pending",
                                    "Success",
                                    "Failed"
                                ],
                                "type": "string"
                            }
                        },
                        "required": [
                            "Date",
                            "Name",
                            "Message"
                        ],
                        "type": "object"
                    },
                    "InstanceId": {
                        "description": "The ID of the instance.",
                        "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The name of the Systems Manager document.",
                        "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                        "type": "string"
                    }
                },
                "required": [
                    "Name",
                    "InstanceId",
                    "AssociationStatus"
                ],
                "type": "object"
            },
            "UpdateAssociationStatusResult": {
                "properties": {
                    "AssociationDescription": {
                        "description": "Information about the association.",
                        "properties": {
                            "AssociationId": {
                                "description": "The association ID.",
                                "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                                "type": "string"
                            },
                            "AssociationName": {
                                "description": "The association name.",
                                "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                "type": "string"
                            },
                            "AssociationVersion": {
                                "description": "The association version.",
                                "pattern": "([$]LATEST)|([1-9][0-9]*)",
                                "type": "string"
                            },
                            "AutomationTargetParameterName": {
                                "description": "Specify the target for the association. This target is required for associations that use an Automation document and target resources by using rate controls.",
                                "maxLength": 50,
                                "minLength": 1,
                                "type": "string"
                            },
                            "ComplianceSeverity": {
                                "description": "The severity level that is assigned to the association.",
                                "enum": [
                                    "CRITICAL",
                                    "HIGH",
                                    "MEDIUM",
                                    "LOW",
                                    "UNSPECIFIED"
                                ],
                                "type": "string"
                            },
                            "Date": {
                                "description": "The date when the association was made.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "DocumentVersion": {
                                "description": "The document version.",
                                "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                "type": "string"
                            },
                            "InstanceId": {
                                "description": "The ID of the instance.",
                                "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
                                "type": "string"
                            },
                            "LastExecutionDate": {
                                "description": "The date on which the association was last run.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "LastSuccessfulExecutionDate": {
                                "description": "The last date on which the association was successfully run.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "LastUpdateAssociationDate": {
                                "description": "The date when the association was last updated.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "MaxConcurrency": {
                                "description": "<p>The maximum number of targets allowed to run the association at the same time. You can specify a number, for example 10, or a percentage of the target set, for example 10%. The default value is 100%, which means all targets run the association at the same time.</p> <p>If a new instance starts and attempts to execute an association while Systems Manager is executing MaxConcurrency associations, the association is allowed to run. During the next association interval, the new instance will process its association within the limit specified for MaxConcurrency.</p>",
                                "maxLength": 7,
                                "minLength": 1,
                                "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                                "type": "string"
                            },
                            "MaxErrors": {
                                "description": "<p>The number of errors that are allowed before the system stops sending requests to run the association on additional targets. You can specify either an absolute number of errors, for example 10, or a percentage of the target set, for example 10%. If you specify 3, for example, the system stops sending requests when the fourth error is received. If you specify 0, then the system stops sending requests after the first error is returned. If you run an association on 50 instances and set MaxError to 10%, then the system stops sending the request when the sixth error is received.</p> <p>Executions that are already running an association when MaxErrors is reached are allowed to complete, but some of these executions may fail as well. If you need to ensure that there won't be more than max-errors failed executions, set MaxConcurrency to 1 so that executions proceed one at a time.</p>",
                                "maxLength": 7,
                                "minLength": 1,
                                "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                                "type": "string"
                            },
                            "Name": {
                                "description": "The name of the Systems Manager document.",
                                "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                                "type": "string"
                            },
                            "OutputLocation": {
                                "description": "An Amazon S3 bucket where you want to store the output details of the request.",
                                "properties": {
                                    "S3Location": {
                                        "description": "An Amazon S3 bucket where you want to store the results of this request.",
                                        "properties": {
                                            "OutputS3BucketName": {
                                                "description": "The name of the Amazon S3 bucket.",
                                                "maxLength": 63,
                                                "minLength": 3,
                                                "type": "string"
                                            },
                                            "OutputS3KeyPrefix": {
                                                "description": "The Amazon S3 bucket subfolder.",
                                                "maxLength": 500,
                                                "type": "string"
                                            },
                                            "OutputS3Region": {
                                                "description": "(Deprecated) You can no longer specify this parameter. The system ignores it. Instead, Systems Manager automatically determines the Amazon S3 bucket region.",
                                                "maxLength": 20,
                                                "minLength": 3,
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "Overview": {
                                "description": "Information about the association.",
                                "properties": {
                                    "AssociationStatusAggregatedCount": {
                                        "description": "Returns the number of targets for the association status. For example, if you created an association with two instances, and one of them was successful, this would return the count of instances by status.",
                                        "items": {
                                            "properties": {
                                                "key": {
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "DetailedStatus": {
                                        "description": "A detailed status of the association.",
                                        "type": "string"
                                    },
                                    "Status": {
                                        "description": "The status of the association. Status can be: Pending, Success, or Failed.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "Parameters": {
                                "description": "A description of the parameters for a document. ",
                                "items": {
                                    "properties": {
                                        "key": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "ScheduleExpression": {
                                "description": "A cron expression that specifies a schedule when the association runs.",
                                "maxLength": 256,
                                "minLength": 1,
                                "type": "string"
                            },
                            "Status": {
                                "description": "The association status.",
                                "properties": {
                                    "AdditionalInfo": {
                                        "description": "A user-defined string.",
                                        "maxLength": 1024,
                                        "type": "string"
                                    },
                                    "Date": {
                                        "description": "The date when the status changed.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Message": {
                                        "description": "The reason for the status.",
                                        "maxLength": 1024,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "The status.",
                                        "enum": [
                                            "Pending",
                                            "Success",
                                            "Failed"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Date",
                                    "Name",
                                    "Message"
                                ],
                                "type": "object"
                            },
                            "Targets": {
                                "description": "The instances targeted by the request. ",
                                "items": {
                                    "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                                    "properties": {
                                        "Key": {
                                            "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                            "type": "string"
                                        },
                                        "Values": {
                                            "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                            "items": {
                                                "type": "string"
                                            },
                                            "maxItems": 50,
                                            "minItems": 0,
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                },
                                "maxItems": 5,
                                "minItems": 0,
                                "type": "array"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "UpdateDocumentDefaultVersionRequest": {
                "properties": {
                    "DocumentVersion": {
                        "description": "The version of a custom document that you want to set as the default version.",
                        "pattern": "(^[1-9][0-9]*$)",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The name of a custom document that you want to set as the default version.",
                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                        "type": "string"
                    }
                },
                "required": [
                    "Name",
                    "DocumentVersion"
                ],
                "type": "object"
            },
            "UpdateDocumentDefaultVersionResult": {
                "properties": {
                    "Description": {
                        "description": "The description of a custom document that you want to set as the default version.",
                        "properties": {
                            "DefaultVersion": {
                                "description": "The default version of the document.",
                                "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                "type": "string"
                            },
                            "DefaultVersionName": {
                                "description": "The default version of the artifact associated with the document.",
                                "pattern": "^[a-zA-Z0-9_\\-.]{1,128}$",
                                "type": "string"
                            },
                            "Name": {
                                "description": "The name of the document.",
                                "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "UpdateDocumentRequest": {
                "properties": {
                    "Attachments": {
                        "description": "A list of key and value pairs that describe attachments to a version of a document.",
                        "items": {
                            "description": "A key and value pair that identifies the location of an attachment to a document.",
                            "properties": {
                                "Key": {
                                    "description": "The key of a key and value pair that identifies the location of an attachment to a document.",
                                    "enum": [
                                        "SourceUrl"
                                    ],
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "The URL of the location of a document attachment, such as the URL of an Amazon S3 bucket.",
                                    "items": {
                                        "maxLength": 1024,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "maxItems": 1,
                                    "minItems": 1,
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 1,
                        "minItems": 0,
                        "type": "array"
                    },
                    "Content": {
                        "description": "A valid JSON or YAML string.",
                        "minLength": 1,
                        "type": "string"
                    },
                    "DocumentFormat": {
                        "description": "Specify the document format for the new document version. Systems Manager supports JSON and YAML documents. JSON is the default format.",
                        "enum": [
                            "YAML",
                            "JSON"
                        ],
                        "type": "string"
                    },
                    "DocumentVersion": {
                        "description": "The version of the document that you want to update.",
                        "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The name of the document that you want to update.",
                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                        "type": "string"
                    },
                    "TargetType": {
                        "description": "Specify a new target type for the document.",
                        "maxLength": 200,
                        "pattern": "^\\/[\\w\\.\\-\\:\\/]*$",
                        "type": "string"
                    },
                    "VersionName": {
                        "description": "An optional field specifying the version of the artifact you are updating with the document. For example, \"Release 12, Update 6\". This value is unique across all versions of a document, and cannot be changed.",
                        "pattern": "^[a-zA-Z0-9_\\-.]{1,128}$",
                        "type": "string"
                    }
                },
                "required": [
                    "Content",
                    "Name"
                ],
                "type": "object"
            },
            "UpdateDocumentResult": {
                "properties": {
                    "DocumentDescription": {
                        "description": "A description of the document that was updated.",
                        "properties": {
                            "AttachmentsInformation": {
                                "description": "Details about the document attachments, including names, locations, sizes, etc.",
                                "items": {
                                    "description": "An attribute of an attachment, such as the attachment name.",
                                    "properties": {
                                        "Name": {
                                            "description": "The name of the attachment.",
                                            "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "CreatedDate": {
                                "description": "The date when the document was created.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "DefaultVersion": {
                                "description": "The default version.",
                                "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                "type": "string"
                            },
                            "Description": {
                                "description": "A description of the document. ",
                                "type": "string"
                            },
                            "DocumentFormat": {
                                "description": "The document format, either JSON or YAML.",
                                "enum": [
                                    "YAML",
                                    "JSON"
                                ],
                                "type": "string"
                            },
                            "DocumentType": {
                                "description": "The type of document.",
                                "enum": [
                                    "Command",
                                    "Policy",
                                    "Automation",
                                    "Session",
                                    "Package"
                                ],
                                "type": "string"
                            },
                            "DocumentVersion": {
                                "description": "The document version.",
                                "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                "type": "string"
                            },
                            "Hash": {
                                "description": "<p>The Sha256 or Sha1 hash created by the system when the document was created. </p> <note> <p>Sha1 hashes have been deprecated.</p> </note>",
                                "maxLength": 256,
                                "type": "string"
                            },
                            "HashType": {
                                "description": "<p>The hash type of the document. Valid values include <code>Sha256</code> or <code>Sha1</code>.</p> <note> <p>Sha1 hashes have been deprecated.</p> </note>",
                                "enum": [
                                    "Sha256",
                                    "Sha1"
                                ],
                                "type": "string"
                            },
                            "LatestVersion": {
                                "description": "The latest version of the document.",
                                "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                "type": "string"
                            },
                            "Name": {
                                "description": "The name of the Systems Manager document.",
                                "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
                                "type": "string"
                            },
                            "Owner": {
                                "description": "The AWS user account that created the document.",
                                "type": "string"
                            },
                            "Parameters": {
                                "description": "A description of the parameters for a document.",
                                "items": {
                                    "description": "Parameters specified in a System Manager document that execute on the server when the command is run. ",
                                    "properties": {
                                        "DefaultValue": {
                                            "description": "If specified, the default values for the parameters. Parameters without a default value are required. Parameters with a default value are optional.",
                                            "type": "string"
                                        },
                                        "Description": {
                                            "description": "A description of what the parameter does, how to use it, the default value, and whether or not the parameter is optional.",
                                            "type": "string"
                                        },
                                        "Name": {
                                            "description": "The name of the parameter.",
                                            "type": "string"
                                        },
                                        "Type": {
                                            "description": "The type of parameter. The type can be either String or StringList.",
                                            "enum": [
                                                "String",
                                                "StringList"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "PlatformTypes": {
                                "description": "The list of OS platforms compatible with this Systems Manager document. ",
                                "items": {
                                    "enum": [
                                        "Windows",
                                        "Linux"
                                    ],
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "SchemaVersion": {
                                "description": "The schema version.",
                                "pattern": "([0-9]+)\\.([0-9]+)",
                                "type": "string"
                            },
                            "Sha1": {
                                "description": "The SHA1 hash of the document, which you can use for verification.",
                                "type": "string"
                            },
                            "Status": {
                                "description": "The status of the Systems Manager document.",
                                "enum": [
                                    "Creating",
                                    "Active",
                                    "Updating",
                                    "Deleting",
                                    "Failed"
                                ],
                                "type": "string"
                            },
                            "StatusInformation": {
                                "description": "A message returned by AWS Systems Manager that explains the <code>Status</code> value. For example, a <code>Failed</code> status might be explained by the <code>StatusInformation</code> message, \"The specified S3 bucket does not exist. Verify that the URL of the S3 bucket is correct.\"",
                                "type": "string"
                            },
                            "Tags": {
                                "description": "The tags, or metadata, that have been applied to the document.",
                                "items": {
                                    "description": "Metadata that you assign to your AWS resources. Tags enable you to categorize your resources in different ways, for example, by purpose, owner, or environment. In Systems Manager, you can apply tags to documents, managed instances, Maintenance Windows, Parameter Store parameters, and patch baselines.",
                                    "properties": {
                                        "Key": {
                                            "description": "The name of the tag.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                            "type": "string"
                                        },
                                        "Value": {
                                            "description": "The value of the tag.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "Key",
                                        "Value"
                                    ],
                                    "type": "object"
                                },
                                "maxItems": 1000,
                                "type": "array"
                            },
                            "TargetType": {
                                "description": "The target type which defines the kinds of resources the document can run on. For example, /AWS::EC2::Instance. For a list of valid resource types, see <a href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html\">AWS Resource Types Reference</a> in the <i>AWS CloudFormation User Guide</i>. ",
                                "maxLength": 200,
                                "pattern": "^\\/[\\w\\.\\-\\:\\/]*$",
                                "type": "string"
                            },
                            "VersionName": {
                                "description": "The version of the artifact associated with the document.",
                                "pattern": "^[a-zA-Z0-9_\\-.]{1,128}$",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "UpdateMaintenanceWindowRequest": {
                "properties": {
                    "AllowUnassociatedTargets": {
                        "description": "Whether targets must be registered with the Maintenance Window before tasks can be defined for those targets.",
                        "type": "boolean"
                    },
                    "Cutoff": {
                        "description": "The number of hours before the end of the Maintenance Window that Systems Manager stops scheduling new tasks for execution.",
                        "maximum": 23,
                        "minimum": 0,
                        "type": "integer"
                    },
                    "Description": {
                        "description": "An optional description for the update request.",
                        "format": "password",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Duration": {
                        "description": "The duration of the Maintenance Window in hours.",
                        "maximum": 24,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "Enabled": {
                        "description": "Whether the Maintenance Window is enabled.",
                        "type": "boolean"
                    },
                    "EndDate": {
                        "description": "The date and time, in ISO-8601 Extended format, for when you want the Maintenance Window to become inactive. EndDate allows you to set a date and time in the future when the Maintenance Window will no longer run.",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The name of the Maintenance Window.",
                        "maxLength": 128,
                        "minLength": 3,
                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                        "type": "string"
                    },
                    "Replace": {
                        "description": "If True, then all fields that are required by the CreateMaintenanceWindow action are also required for this API request. Optional fields that are not specified are set to null. ",
                        "type": "boolean"
                    },
                    "Schedule": {
                        "description": "The schedule of the Maintenance Window in the form of a cron or rate expression.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "ScheduleTimezone": {
                        "description": "The time zone that the scheduled Maintenance Window executions are based on, in Internet Assigned Numbers Authority (IANA) format. For example: \"America/Los_Angeles\", \"etc/UTC\", or \"Asia/Seoul\". For more information, see the <a href=\"https://www.iana.org/time-zones\">Time Zone Database</a> on the IANA website.",
                        "type": "string"
                    },
                    "StartDate": {
                        "description": "The time zone that the scheduled Maintenance Window executions are based on, in Internet Assigned Numbers Authority (IANA) format. For example: \"America/Los_Angeles\", \"etc/UTC\", or \"Asia/Seoul\". For more information, see the <a href=\"https://www.iana.org/time-zones\">Time Zone Database</a> on the IANA website.",
                        "type": "string"
                    },
                    "WindowId": {
                        "description": "The ID of the Maintenance Window to update.",
                        "maxLength": 20,
                        "minLength": 20,
                        "pattern": "^mw-[0-9a-f]{17}$",
                        "type": "string"
                    }
                },
                "required": [
                    "WindowId"
                ],
                "type": "object"
            },
            "UpdateMaintenanceWindowResult": {
                "properties": {
                    "AllowUnassociatedTargets": {
                        "description": "Whether targets must be registered with the Maintenance Window before tasks can be defined for those targets.",
                        "type": "boolean"
                    },
                    "Cutoff": {
                        "description": "The number of hours before the end of the Maintenance Window that Systems Manager stops scheduling new tasks for execution.",
                        "maximum": 23,
                        "minimum": 0,
                        "type": "integer"
                    },
                    "Description": {
                        "description": "An optional description of the update.",
                        "format": "password",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Duration": {
                        "description": "The duration of the Maintenance Window in hours.",
                        "maximum": 24,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "Enabled": {
                        "description": "Whether the Maintenance Window is enabled.",
                        "type": "boolean"
                    },
                    "EndDate": {
                        "description": "The date and time, in ISO-8601 Extended format, for when the Maintenance Window is scheduled to become inactive. The Maintenance Window will not run after this specified time.",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The name of the Maintenance Window.",
                        "maxLength": 128,
                        "minLength": 3,
                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                        "type": "string"
                    },
                    "Schedule": {
                        "description": "The schedule of the Maintenance Window in the form of a cron or rate expression.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "ScheduleTimezone": {
                        "description": "The time zone that the scheduled Maintenance Window executions are based on, in Internet Assigned Numbers Authority (IANA) format. For example: \"America/Los_Angeles\", \"etc/UTC\", or \"Asia/Seoul\". For more information, see the <a href=\"https://www.iana.org/time-zones\">Time Zone Database</a> on the IANA website.",
                        "type": "string"
                    },
                    "StartDate": {
                        "description": "The date and time, in ISO-8601 Extended format, for when the Maintenance Window is scheduled to become active. The Maintenance Window will not run before this specified time.",
                        "type": "string"
                    },
                    "WindowId": {
                        "description": "The ID of the created Maintenance Window.",
                        "maxLength": 20,
                        "minLength": 20,
                        "pattern": "^mw-[0-9a-f]{17}$",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UpdateMaintenanceWindowTargetRequest": {
                "properties": {
                    "Description": {
                        "description": "An optional description for the update.",
                        "format": "password",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Name": {
                        "description": "A name for the update.",
                        "maxLength": 128,
                        "minLength": 3,
                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                        "type": "string"
                    },
                    "OwnerInformation": {
                        "description": "User-provided value that will be included in any CloudWatch events raised while running tasks for these targets in this Maintenance Window.",
                        "format": "password",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Replace": {
                        "description": "If True, then all fields that are required by the RegisterTargetWithMaintenanceWindow action are also required for this API request. Optional fields that are not specified are set to null.",
                        "type": "boolean"
                    },
                    "Targets": {
                        "description": "The targets to add or replace.",
                        "items": {
                            "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                            "properties": {
                                "Key": {
                                    "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "maxItems": 50,
                                    "minItems": 0,
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 5,
                        "minItems": 0,
                        "type": "array"
                    },
                    "WindowId": {
                        "description": "The Maintenance Window ID with which to modify the target.",
                        "maxLength": 20,
                        "minLength": 20,
                        "pattern": "^mw-[0-9a-f]{17}$",
                        "type": "string"
                    },
                    "WindowTargetId": {
                        "description": "The target ID to modify.",
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                        "type": "string"
                    }
                },
                "required": [
                    "WindowId",
                    "WindowTargetId"
                ],
                "type": "object"
            },
            "UpdateMaintenanceWindowTargetResult": {
                "properties": {
                    "Description": {
                        "description": "The updated description.",
                        "format": "password",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Name": {
                        "description": "The updated name.",
                        "maxLength": 128,
                        "minLength": 3,
                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                        "type": "string"
                    },
                    "OwnerInformation": {
                        "description": "The updated owner.",
                        "format": "password",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Targets": {
                        "description": "The updated targets.",
                        "items": {
                            "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                            "properties": {
                                "Key": {
                                    "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "maxItems": 50,
                                    "minItems": 0,
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 5,
                        "minItems": 0,
                        "type": "array"
                    },
                    "WindowId": {
                        "description": "The Maintenance Window ID specified in the update request.",
                        "maxLength": 20,
                        "minLength": 20,
                        "pattern": "^mw-[0-9a-f]{17}$",
                        "type": "string"
                    },
                    "WindowTargetId": {
                        "description": "The target ID specified in the update request.",
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UpdateMaintenanceWindowTaskRequest": {
                "properties": {
                    "Description": {
                        "description": "The new task description to specify.",
                        "format": "password",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "LoggingInfo": {
                        "description": "<p>The new logging location in Amazon S3 to specify.</p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an S3 bucket to contain logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> </note>",
                        "properties": {
                            "S3BucketName": {
                                "description": "The name of an Amazon S3 bucket where execution logs are stored .",
                                "maxLength": 63,
                                "minLength": 3,
                                "type": "string"
                            },
                            "S3KeyPrefix": {
                                "description": "(Optional) The Amazon S3 bucket subfolder. ",
                                "maxLength": 500,
                                "type": "string"
                            },
                            "S3Region": {
                                "description": "The region where the Amazon S3 bucket is located.",
                                "maxLength": 20,
                                "minLength": 3,
                                "type": "string"
                            }
                        },
                        "required": [
                            "S3BucketName",
                            "S3Region"
                        ],
                        "type": "object"
                    },
                    "MaxConcurrency": {
                        "description": "The new <code>MaxConcurrency</code> value you want to specify. <code>MaxConcurrency</code> is the number of targets that are allowed to run this task in parallel.",
                        "maxLength": 7,
                        "minLength": 1,
                        "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                        "type": "string"
                    },
                    "MaxErrors": {
                        "description": "The new <code>MaxErrors</code> value to specify. <code>MaxErrors</code> is the maximum number of errors that are allowed before the task stops being scheduled.",
                        "maxLength": 7,
                        "minLength": 1,
                        "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The new task name to specify.",
                        "maxLength": 128,
                        "minLength": 3,
                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                        "type": "string"
                    },
                    "Priority": {
                        "description": "The new task priority to specify. The lower the number, the higher the priority. Tasks that have the same priority are scheduled in parallel.",
                        "minimum": 0,
                        "type": "integer"
                    },
                    "Replace": {
                        "description": "If True, then all fields that are required by the RegisterTaskWithMaintenanceWndow action are also required for this API request. Optional fields that are not specified are set to null.",
                        "type": "boolean"
                    },
                    "ServiceRoleArn": {
                        "description": "<p>The IAM service role ARN to modify. The system assumes this role during task execution.</p> <p>If you do not specify a service role ARN, Systems Manager will use your account's service-linked role for Systems Manager by default. If no service-linked role for Systems Manager exists in your account, it will be created when you run <code>RegisterTaskWithMaintenanceWindow</code> without specifying a service role ARN.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/using-service-linked-roles.html#slr-permissions\">Service-Linked Role Permissions for Systems Manager</a> and <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-maintenance-permissions.html#maintenance-window-tasks-service-role\">Should I Use a Service-Linked Role or a Custom Service Role to Run Maintenance Window Tasks? </a> in the <i>AWS Systems Manager User Guide</i>.</p>",
                        "type": "string"
                    },
                    "Targets": {
                        "description": "The targets (either instances or tags) to modify. Instances are specified using Key=instanceids,Values=instanceID_1,instanceID_2. Tags are specified using Key=tag_name,Values=tag_value. ",
                        "items": {
                            "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                            "properties": {
                                "Key": {
                                    "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "maxItems": 50,
                                    "minItems": 0,
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 5,
                        "minItems": 0,
                        "type": "array"
                    },
                    "TaskArn": {
                        "description": "The task ARN to modify.",
                        "maxLength": 1600,
                        "minLength": 1,
                        "type": "string"
                    },
                    "TaskInvocationParameters": {
                        "description": "The parameters that the task should use during execution. Populate only the fields that match the task type. All other fields should be empty.",
                        "properties": {
                            "Automation": {
                                "description": "The parameters for an AUTOMATION task type.",
                                "properties": {
                                    "DocumentVersion": {
                                        "description": "The version of an Automation document to use during task execution.",
                                        "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                        "type": "string"
                                    },
                                    "Parameters": {
                                        "description": "<p>The parameters for the AUTOMATION task.</p> <p>For information about specifying and updating task parameters, see <a>RegisterTaskWithMaintenanceWindow</a> and <a>UpdateMaintenanceWindowTask</a>.</p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an S3 bucket to contain logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p> <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p>For AUTOMATION task types, Systems Manager ignores any values specified for these parameters.</p> </note>",
                                        "items": {
                                            "properties": {
                                                "key": {
                                                    "maxLength": 30,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "items": {
                                                        "maxLength": 512,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "maxItems": 10,
                                                    "minItems": 0,
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "maxItems": 200,
                                        "minItems": 1,
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            },
                            "Lambda": {
                                "description": "The parameters for a LAMBDA task type.",
                                "properties": {
                                    "ClientContext": {
                                        "description": "Pass client-specific information to the Lambda function that you are invoking. You can then process the client information in your Lambda function as you choose through the context variable.",
                                        "maxLength": 8000,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "Payload": {
                                        "description": "JSON to provide to your Lambda function as input.",
                                        "format": "password",
                                        "maxLength": 4096,
                                        "type": "string"
                                    },
                                    "Qualifier": {
                                        "description": "(Optional) Specify a Lambda function version or alias name. If you specify a function version, the action uses the qualified function ARN to invoke a specific Lambda function. If you specify an alias name, the action uses the alias ARN to invoke the Lambda function version to which the alias points.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "RunCommand": {
                                "description": "The parameters for a RUN_COMMAND task type.",
                                "properties": {
                                    "Comment": {
                                        "description": "Information about the command(s) to execute.",
                                        "maxLength": 100,
                                        "type": "string"
                                    },
                                    "DocumentHash": {
                                        "description": "The SHA-256 or SHA-1 hash created by the system when the document was created. SHA-1 hashes have been deprecated.",
                                        "maxLength": 256,
                                        "type": "string"
                                    },
                                    "DocumentHashType": {
                                        "description": "SHA-256 or SHA-1. SHA-1 hashes have been deprecated.",
                                        "enum": [
                                            "Sha256",
                                            "Sha1"
                                        ],
                                        "type": "string"
                                    },
                                    "NotificationConfig": {
                                        "description": "Configurations for sending notifications about command status changes on a per-instance basis.",
                                        "properties": {
                                            "NotificationArn": {
                                                "description": "An Amazon Resource Name (ARN) for a Simple Notification Service (SNS) topic. Run Command pushes notifications about command status changes to this topic.",
                                                "type": "string"
                                            },
                                            "NotificationEvents": {
                                                "description": "The different events for which you can receive notifications. These events include the following: All (events), InProgress, Success, TimedOut, Cancelled, Failed. To learn more about these events, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/rc-sns-notifications.html\">Configuring Amazon SNS Notifications for Run Command</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                "items": {
                                                    "enum": [
                                                        "All",
                                                        "InProgress",
                                                        "Success",
                                                        "TimedOut",
                                                        "Cancelled",
                                                        "Failed"
                                                    ],
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "NotificationType": {
                                                "description": "Command: Receive notification when the status of a command changes. Invocation: For commands sent to multiple instances, receive notification on a per-instance basis when the status of a command changes. ",
                                                "enum": [
                                                    "Command",
                                                    "Invocation"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "OutputS3BucketName": {
                                        "description": "The name of the Amazon S3 bucket.",
                                        "maxLength": 63,
                                        "minLength": 3,
                                        "type": "string"
                                    },
                                    "OutputS3KeyPrefix": {
                                        "description": "The Amazon S3 bucket subfolder.",
                                        "maxLength": 500,
                                        "type": "string"
                                    },
                                    "Parameters": {
                                        "description": "The parameters for the RUN_COMMAND task execution.",
                                        "items": {
                                            "properties": {
                                                "key": {
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "ServiceRoleArn": {
                                        "description": "The IAM service role to assume during task execution.",
                                        "type": "string"
                                    },
                                    "TimeoutSeconds": {
                                        "description": "If this time is reached and the command has not already started executing, it doesn't run.",
                                        "maximum": 2592000,
                                        "minimum": 30,
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            },
                            "StepFunctions": {
                                "description": "The parameters for a STEP_FUNCTION task type.",
                                "properties": {
                                    "Input": {
                                        "description": "The inputs for the STEP_FUNCTION task.",
                                        "format": "password",
                                        "maxLength": 4096,
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "The name of the STEP_FUNCTION task.",
                                        "maxLength": 80,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    },
                    "TaskParameters": {
                        "description": "<p>The parameters to modify.</p> <note> <p> <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> </note> <p>The map has the following format:</p> <p>Key: string, between 1 and 255 characters</p> <p>Value: an array of strings, each string is between 1 and 255 characters</p>",
                        "items": {
                            "properties": {
                                "key": {
                                    "maxLength": 255,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "value": {
                                    "description": "Defines the values for a task parameter.",
                                    "properties": {
                                        "Values": {
                                            "description": "This field contains an array of 0 or more strings, each 1 to 255 characters in length.",
                                            "items": {
                                                "format": "password",
                                                "maxLength": 255,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "WindowId": {
                        "description": "The Maintenance Window ID that contains the task to modify.",
                        "maxLength": 20,
                        "minLength": 20,
                        "pattern": "^mw-[0-9a-f]{17}$",
                        "type": "string"
                    },
                    "WindowTaskId": {
                        "description": "The task ID to modify.",
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                        "type": "string"
                    }
                },
                "required": [
                    "WindowId",
                    "WindowTaskId"
                ],
                "type": "object"
            },
            "UpdateMaintenanceWindowTaskResult": {
                "properties": {
                    "Description": {
                        "description": "The updated task description.",
                        "format": "password",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "LoggingInfo": {
                        "description": "<p>The updated logging information in Amazon S3.</p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an S3 bucket to contain logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> </note>",
                        "properties": {
                            "S3BucketName": {
                                "description": "The name of an Amazon S3 bucket where execution logs are stored .",
                                "maxLength": 63,
                                "minLength": 3,
                                "type": "string"
                            },
                            "S3KeyPrefix": {
                                "description": "(Optional) The Amazon S3 bucket subfolder. ",
                                "maxLength": 500,
                                "type": "string"
                            },
                            "S3Region": {
                                "description": "The region where the Amazon S3 bucket is located.",
                                "maxLength": 20,
                                "minLength": 3,
                                "type": "string"
                            }
                        },
                        "required": [
                            "S3BucketName",
                            "S3Region"
                        ],
                        "type": "object"
                    },
                    "MaxConcurrency": {
                        "description": "The updated MaxConcurrency value.",
                        "maxLength": 7,
                        "minLength": 1,
                        "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
                        "type": "string"
                    },
                    "MaxErrors": {
                        "description": "The updated MaxErrors value.",
                        "maxLength": 7,
                        "minLength": 1,
                        "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The updated task name.",
                        "maxLength": 128,
                        "minLength": 3,
                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                        "type": "string"
                    },
                    "Priority": {
                        "description": "The updated priority value.",
                        "minimum": 0,
                        "type": "integer"
                    },
                    "ServiceRoleArn": {
                        "description": "The updated service role ARN value.",
                        "type": "string"
                    },
                    "Targets": {
                        "description": "The updated target values.",
                        "items": {
                            "description": "<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.</p> <p/>",
                            "properties": {
                                "Key": {
                                    "description": "User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$",
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "maxItems": 50,
                                    "minItems": 0,
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 5,
                        "minItems": 0,
                        "type": "array"
                    },
                    "TaskArn": {
                        "description": "The updated task ARN value.",
                        "maxLength": 1600,
                        "minLength": 1,
                        "type": "string"
                    },
                    "TaskInvocationParameters": {
                        "description": "The updated parameter values.",
                        "properties": {
                            "Automation": {
                                "description": "The parameters for an AUTOMATION task type.",
                                "properties": {
                                    "DocumentVersion": {
                                        "description": "The version of an Automation document to use during task execution.",
                                        "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)",
                                        "type": "string"
                                    },
                                    "Parameters": {
                                        "description": "<p>The parameters for the AUTOMATION task.</p> <p>For information about specifying and updating task parameters, see <a>RegisterTaskWithMaintenanceWindow</a> and <a>UpdateMaintenanceWindowTask</a>.</p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an S3 bucket to contain logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p> <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p>For AUTOMATION task types, Systems Manager ignores any values specified for these parameters.</p> </note>",
                                        "items": {
                                            "properties": {
                                                "key": {
                                                    "maxLength": 30,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "items": {
                                                        "maxLength": 512,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "maxItems": 10,
                                                    "minItems": 0,
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "maxItems": 200,
                                        "minItems": 1,
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            },
                            "Lambda": {
                                "description": "The parameters for a LAMBDA task type.",
                                "properties": {
                                    "ClientContext": {
                                        "description": "Pass client-specific information to the Lambda function that you are invoking. You can then process the client information in your Lambda function as you choose through the context variable.",
                                        "maxLength": 8000,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "Payload": {
                                        "description": "JSON to provide to your Lambda function as input.",
                                        "format": "password",
                                        "maxLength": 4096,
                                        "type": "string"
                                    },
                                    "Qualifier": {
                                        "description": "(Optional) Specify a Lambda function version or alias name. If you specify a function version, the action uses the qualified function ARN to invoke a specific Lambda function. If you specify an alias name, the action uses the alias ARN to invoke the Lambda function version to which the alias points.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "RunCommand": {
                                "description": "The parameters for a RUN_COMMAND task type.",
                                "properties": {
                                    "Comment": {
                                        "description": "Information about the command(s) to execute.",
                                        "maxLength": 100,
                                        "type": "string"
                                    },
                                    "DocumentHash": {
                                        "description": "The SHA-256 or SHA-1 hash created by the system when the document was created. SHA-1 hashes have been deprecated.",
                                        "maxLength": 256,
                                        "type": "string"
                                    },
                                    "DocumentHashType": {
                                        "description": "SHA-256 or SHA-1. SHA-1 hashes have been deprecated.",
                                        "enum": [
                                            "Sha256",
                                            "Sha1"
                                        ],
                                        "type": "string"
                                    },
                                    "NotificationConfig": {
                                        "description": "Configurations for sending notifications about command status changes on a per-instance basis.",
                                        "properties": {
                                            "NotificationArn": {
                                                "description": "An Amazon Resource Name (ARN) for a Simple Notification Service (SNS) topic. Run Command pushes notifications about command status changes to this topic.",
                                                "type": "string"
                                            },
                                            "NotificationEvents": {
                                                "description": "The different events for which you can receive notifications. These events include the following: All (events), InProgress, Success, TimedOut, Cancelled, Failed. To learn more about these events, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/rc-sns-notifications.html\">Configuring Amazon SNS Notifications for Run Command</a> in the <i>AWS Systems Manager User Guide</i>.",
                                                "items": {
                                                    "enum": [
                                                        "All",
                                                        "InProgress",
                                                        "Success",
                                                        "TimedOut",
                                                        "Cancelled",
                                                        "Failed"
                                                    ],
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "NotificationType": {
                                                "description": "Command: Receive notification when the status of a command changes. Invocation: For commands sent to multiple instances, receive notification on a per-instance basis when the status of a command changes. ",
                                                "enum": [
                                                    "Command",
                                                    "Invocation"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "OutputS3BucketName": {
                                        "description": "The name of the Amazon S3 bucket.",
                                        "maxLength": 63,
                                        "minLength": 3,
                                        "type": "string"
                                    },
                                    "OutputS3KeyPrefix": {
                                        "description": "The Amazon S3 bucket subfolder.",
                                        "maxLength": 500,
                                        "type": "string"
                                    },
                                    "Parameters": {
                                        "description": "The parameters for the RUN_COMMAND task execution.",
                                        "items": {
                                            "properties": {
                                                "key": {
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "ServiceRoleArn": {
                                        "description": "The IAM service role to assume during task execution.",
                                        "type": "string"
                                    },
                                    "TimeoutSeconds": {
                                        "description": "If this time is reached and the command has not already started executing, it doesn't run.",
                                        "maximum": 2592000,
                                        "minimum": 30,
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            },
                            "StepFunctions": {
                                "description": "The parameters for a STEP_FUNCTION task type.",
                                "properties": {
                                    "Input": {
                                        "description": "The inputs for the STEP_FUNCTION task.",
                                        "format": "password",
                                        "maxLength": 4096,
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "The name of the STEP_FUNCTION task.",
                                        "maxLength": 80,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    },
                    "TaskParameters": {
                        "description": "<p>The updated parameter values.</p> <note> <p> <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> </note>",
                        "items": {
                            "properties": {
                                "key": {
                                    "maxLength": 255,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "value": {
                                    "description": "Defines the values for a task parameter.",
                                    "properties": {
                                        "Values": {
                                            "description": "This field contains an array of 0 or more strings, each 1 to 255 characters in length.",
                                            "items": {
                                                "format": "password",
                                                "maxLength": 255,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "WindowId": {
                        "description": "The ID of the Maintenance Window that was updated.",
                        "maxLength": 20,
                        "minLength": 20,
                        "pattern": "^mw-[0-9a-f]{17}$",
                        "type": "string"
                    },
                    "WindowTaskId": {
                        "description": "The task ID of the Maintenance Window that was updated.",
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UpdateManagedInstanceRoleRequest": {
                "properties": {
                    "IamRole": {
                        "description": "The IAM role you want to assign or change.",
                        "maxLength": 64,
                        "type": "string"
                    },
                    "InstanceId": {
                        "description": "The ID of the managed instance where you want to update the role.",
                        "pattern": "^mi-[0-9a-f]{17}$",
                        "type": "string"
                    }
                },
                "required": [
                    "InstanceId",
                    "IamRole"
                ],
                "type": "object"
            },
            "UpdateManagedInstanceRoleResult": {
                "properties": {},
                "type": "object"
            },
            "UpdatePatchBaselineRequest": {
                "properties": {
                    "ApprovalRules": {
                        "description": "A set of rules used to include patches in the baseline.",
                        "properties": {
                            "PatchRules": {
                                "description": "The rules that make up the rule group.",
                                "items": {
                                    "description": "Defines an approval rule for a patch baseline.",
                                    "properties": {
                                        "ApproveAfterDays": {
                                            "description": "The number of days after the release date of each patch matched by the rule that the patch is marked as approved in the patch baseline. For example, a value of <code>7</code> means that patches are approved seven days after they are released. ",
                                            "maximum": 100,
                                            "minimum": 0,
                                            "type": "integer"
                                        },
                                        "ComplianceLevel": {
                                            "description": "A compliance severity level for all approved patches in a patch baseline. Valid compliance severity levels include the following: Unspecified, Critical, High, Medium, Low, and Informational.",
                                            "enum": [
                                                "CRITICAL",
                                                "HIGH",
                                                "MEDIUM",
                                                "LOW",
                                                "INFORMATIONAL",
                                                "UNSPECIFIED"
                                            ],
                                            "type": "string"
                                        },
                                        "EnableNonSecurity": {
                                            "description": "For instances identified by the approval rule filters, enables a patch baseline to apply non-security updates available in the specified repository. The default value is 'false'. Applies to Linux instances only.",
                                            "type": "boolean"
                                        },
                                        "PatchFilterGroup": {
                                            "description": "The patch filter group that defines the criteria for the rule.",
                                            "properties": {
                                                "PatchFilters": {
                                                    "description": "The set of patch filters that make up the group.",
                                                    "items": {
                                                        "description": "<p>Defines a patch filter.</p> <p>A patch filter consists of key/value pairs, but not all keys are valid for all operating system types. For example, the key <code>PRODUCT</code> is valid for all supported operating system types. The key <code>MSRC_SEVERITY</code>, however, is valid only for Windows operating systems, and the key <code>SECTION</code> is valid only for Ubuntu operating systems.</p> <p>Refer to the following sections for information about which keys may be used with each major operating system, and which values are valid for each key.</p> <p> <b>Windows Operating Systems</b> </p> <p>The supported keys for Windows operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>MSRC_SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Windows7</code> </p> </li> <li> <p> <code>Windows8</code> </p> </li> <li> <p> <code>Windows8.1</code> </p> </li> <li> <p> <code>Windows8Embedded</code> </p> </li> <li> <p> <code>Windows10</code> </p> </li> <li> <p> <code>Windows10LTSB</code> </p> </li> <li> <p> <code>WindowsServer2008</code> </p> </li> <li> <p> <code>WindowsServer2008R2</code> </p> </li> <li> <p> <code>WindowsServer2012</code> </p> </li> <li> <p> <code>WindowsServer2012R2</code> </p> </li> <li> <p> <code>WindowsServer2016</code> </p> </li> <li> <p> <code>WindowsServer2019</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>CriticalUpdates</code> </p> </li> <li> <p> <code>DefinitionUpdates</code> </p> </li> <li> <p> <code>Drivers</code> </p> </li> <li> <p> <code>FeaturePacks</code> </p> </li> <li> <p> <code>SecurityUpdates</code> </p> </li> <li> <p> <code>ServicePacks</code> </p> </li> <li> <p> <code>Tools</code> </p> </li> <li> <p> <code>UpdateRollups</code> </p> </li> <li> <p> <code>Updates</code> </p> </li> <li> <p> <code>Upgrades</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>MSRC_SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Moderate</code> </p> </li> <li> <p> <code>Low</code> </p> </li> <li> <p> <code>Unspecified</code> </p> </li> </ul> <p> <b>Ubuntu Operating Systems</b> </p> <p>The supported keys for Ubuntu operating systems are <code>PRODUCT</code>, <code>PRIORITY</code>, and <code>SECTION</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Ubuntu14.04</code> </p> </li> <li> <p> <code>Ubuntu16.04</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>PRIORITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Required</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Standard</code> </p> </li> <li> <p> <code>Optional</code> </p> </li> <li> <p> <code>Extra</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SECTION</code> </p> <p>Only the length of the key value is validated. Minimum length is 1. Maximum length is 64.</p> <p> <b>Amazon Linux Operating Systems</b> </p> <p>The supported keys for Amazon Linux operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>AmazonLinux2012.03</code> </p> </li> <li> <p> <code>AmazonLinux2012.09</code> </p> </li> <li> <p> <code>AmazonLinux2013.03</code> </p> </li> <li> <p> <code>AmazonLinux2013.09</code> </p> </li> <li> <p> <code>AmazonLinux2014.03</code> </p> </li> <li> <p> <code>AmazonLinux2014.09</code> </p> </li> <li> <p> <code>AmazonLinux2015.03</code> </p> </li> <li> <p> <code>AmazonLinux2015.09</code> </p> </li> <li> <p> <code>AmazonLinux2016.03</code> </p> </li> <li> <p> <code>AmazonLinux2016.09</code> </p> </li> <li> <p> <code>AmazonLinux2017.03</code> </p> </li> <li> <p> <code>AmazonLinux2017.09</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>Amazon Linux 2 Operating Systems</b> </p> <p>The supported keys for Amazon Linux 2 operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>AmazonLinux2</code> </p> </li> <li> <p> <code>AmazonLinux2.0</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>RedHat Enterprise Linux (RHEL) Operating Systems</b> </p> <p>The supported keys for RedHat Enterprise Linux operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>RedhatEnterpriseLinux6.5</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.6</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.7</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.8</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.9</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.0</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.1</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.2</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.3</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.4</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.5</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.6</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>SUSE Linux Enterprise Server (SLES) Operating Systems</b> </p> <p>The supported keys for SLES operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Suse12.0</code> </p> </li> <li> <p> <code>Suse12.1</code> </p> </li> <li> <p> <code>Suse12.2</code> </p> </li> <li> <p> <code>Suse12.3</code> </p> </li> <li> <p> <code>Suse12.4</code> </p> </li> <li> <p> <code>Suse12.5</code> </p> </li> <li> <p> <code>Suse12.6</code> </p> </li> <li> <p> <code>Suse12.7</code> </p> </li> <li> <p> <code>Suse12.8</code> </p> </li> <li> <p> <code>Suse12.9</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Optional</code> </p> </li> <li> <p> <code>Feature</code> </p> </li> <li> <p> <code>Document</code> </p> </li> <li> <p> <code>Yast</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Moderate</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>CentOS Operating Systems</b> </p> <p>The supported keys for CentOS operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>CentOS6.5</code> </p> </li> <li> <p> <code>CentOS6.6</code> </p> </li> <li> <p> <code>CentOS6.7</code> </p> </li> <li> <p> <code>CentOS6.8</code> </p> </li> <li> <p> <code>CentOS6.9</code> </p> </li> <li> <p> <code>CentOS7.0</code> </p> </li> <li> <p> <code>CentOS7.1</code> </p> </li> <li> <p> <code>CentOS7.2</code> </p> </li> <li> <p> <code>CentOS7.3</code> </p> </li> <li> <p> <code>CentOS7.4</code> </p> </li> <li> <p> <code>CentOS7.5</code> </p> </li> <li> <p> <code>CentOS7.6</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul>",
                                                        "properties": {
                                                            "Key": {
                                                                "description": "<p>The key for the filter.</p> <p>See <a>PatchFilter</a> for lists of valid keys for each operating system type.</p>",
                                                                "enum": [
                                                                    "PRODUCT",
                                                                    "CLASSIFICATION",
                                                                    "MSRC_SEVERITY",
                                                                    "PATCH_ID",
                                                                    "SECTION",
                                                                    "PRIORITY",
                                                                    "SEVERITY"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "Values": {
                                                                "description": "<p>The value for the filter key.</p> <p>See <a>PatchFilter</a> for lists of valid values for each key based on operating system type.</p>",
                                                                "items": {
                                                                    "maxLength": 64,
                                                                    "minLength": 1,
                                                                    "type": "string"
                                                                },
                                                                "maxItems": 20,
                                                                "minItems": 1,
                                                                "type": "array"
                                                            }
                                                        },
                                                        "required": [
                                                            "Key",
                                                            "Values"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "maxItems": 4,
                                                    "minItems": 0,
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "PatchFilters"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "PatchFilterGroup",
                                        "ApproveAfterDays"
                                    ],
                                    "type": "object"
                                },
                                "maxItems": 10,
                                "minItems": 0,
                                "type": "array"
                            }
                        },
                        "required": [
                            "PatchRules"
                        ],
                        "type": "object"
                    },
                    "ApprovedPatches": {
                        "description": "<p>A list of explicitly approved patches for the baseline.</p> <p>For information about accepted formats for lists of approved patches and rejected patches, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/patch-manager-approved-rejected-package-name-formats.html\">Package Name Formats for Approved and Rejected Patch Lists</a> in the <i>AWS Systems Manager User Guide</i>.</p>",
                        "items": {
                            "maxLength": 100,
                            "minLength": 1,
                            "type": "string"
                        },
                        "maxItems": 50,
                        "minItems": 0,
                        "type": "array"
                    },
                    "ApprovedPatchesComplianceLevel": {
                        "description": "Assigns a new compliance severity level to an existing patch baseline.",
                        "enum": [
                            "CRITICAL",
                            "HIGH",
                            "MEDIUM",
                            "LOW",
                            "INFORMATIONAL",
                            "UNSPECIFIED"
                        ],
                        "type": "string"
                    },
                    "ApprovedPatchesEnableNonSecurity": {
                        "description": "Indicates whether the list of approved patches includes non-security updates that should be applied to the instances. The default value is 'false'. Applies to Linux instances only.",
                        "type": "boolean"
                    },
                    "BaselineId": {
                        "description": "The ID of the patch baseline to update.",
                        "maxLength": 128,
                        "minLength": 20,
                        "pattern": "^[a-zA-Z0-9_\\-:/]{20,128}$",
                        "type": "string"
                    },
                    "Description": {
                        "description": "A description of the patch baseline.",
                        "maxLength": 1024,
                        "minLength": 1,
                        "type": "string"
                    },
                    "GlobalFilters": {
                        "description": "A set of global filters used to include patches in the baseline.",
                        "properties": {
                            "PatchFilters": {
                                "description": "The set of patch filters that make up the group.",
                                "items": {
                                    "description": "<p>Defines a patch filter.</p> <p>A patch filter consists of key/value pairs, but not all keys are valid for all operating system types. For example, the key <code>PRODUCT</code> is valid for all supported operating system types. The key <code>MSRC_SEVERITY</code>, however, is valid only for Windows operating systems, and the key <code>SECTION</code> is valid only for Ubuntu operating systems.</p> <p>Refer to the following sections for information about which keys may be used with each major operating system, and which values are valid for each key.</p> <p> <b>Windows Operating Systems</b> </p> <p>The supported keys for Windows operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>MSRC_SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Windows7</code> </p> </li> <li> <p> <code>Windows8</code> </p> </li> <li> <p> <code>Windows8.1</code> </p> </li> <li> <p> <code>Windows8Embedded</code> </p> </li> <li> <p> <code>Windows10</code> </p> </li> <li> <p> <code>Windows10LTSB</code> </p> </li> <li> <p> <code>WindowsServer2008</code> </p> </li> <li> <p> <code>WindowsServer2008R2</code> </p> </li> <li> <p> <code>WindowsServer2012</code> </p> </li> <li> <p> <code>WindowsServer2012R2</code> </p> </li> <li> <p> <code>WindowsServer2016</code> </p> </li> <li> <p> <code>WindowsServer2019</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>CriticalUpdates</code> </p> </li> <li> <p> <code>DefinitionUpdates</code> </p> </li> <li> <p> <code>Drivers</code> </p> </li> <li> <p> <code>FeaturePacks</code> </p> </li> <li> <p> <code>SecurityUpdates</code> </p> </li> <li> <p> <code>ServicePacks</code> </p> </li> <li> <p> <code>Tools</code> </p> </li> <li> <p> <code>UpdateRollups</code> </p> </li> <li> <p> <code>Updates</code> </p> </li> <li> <p> <code>Upgrades</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>MSRC_SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Moderate</code> </p> </li> <li> <p> <code>Low</code> </p> </li> <li> <p> <code>Unspecified</code> </p> </li> </ul> <p> <b>Ubuntu Operating Systems</b> </p> <p>The supported keys for Ubuntu operating systems are <code>PRODUCT</code>, <code>PRIORITY</code>, and <code>SECTION</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Ubuntu14.04</code> </p> </li> <li> <p> <code>Ubuntu16.04</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>PRIORITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Required</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Standard</code> </p> </li> <li> <p> <code>Optional</code> </p> </li> <li> <p> <code>Extra</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SECTION</code> </p> <p>Only the length of the key value is validated. Minimum length is 1. Maximum length is 64.</p> <p> <b>Amazon Linux Operating Systems</b> </p> <p>The supported keys for Amazon Linux operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>AmazonLinux2012.03</code> </p> </li> <li> <p> <code>AmazonLinux2012.09</code> </p> </li> <li> <p> <code>AmazonLinux2013.03</code> </p> </li> <li> <p> <code>AmazonLinux2013.09</code> </p> </li> <li> <p> <code>AmazonLinux2014.03</code> </p> </li> <li> <p> <code>AmazonLinux2014.09</code> </p> </li> <li> <p> <code>AmazonLinux2015.03</code> </p> </li> <li> <p> <code>AmazonLinux2015.09</code> </p> </li> <li> <p> <code>AmazonLinux2016.03</code> </p> </li> <li> <p> <code>AmazonLinux2016.09</code> </p> </li> <li> <p> <code>AmazonLinux2017.03</code> </p> </li> <li> <p> <code>AmazonLinux2017.09</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>Amazon Linux 2 Operating Systems</b> </p> <p>The supported keys for Amazon Linux 2 operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>AmazonLinux2</code> </p> </li> <li> <p> <code>AmazonLinux2.0</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>RedHat Enterprise Linux (RHEL) Operating Systems</b> </p> <p>The supported keys for RedHat Enterprise Linux operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>RedhatEnterpriseLinux6.5</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.6</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.7</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.8</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.9</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.0</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.1</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.2</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.3</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.4</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.5</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.6</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>SUSE Linux Enterprise Server (SLES) Operating Systems</b> </p> <p>The supported keys for SLES operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Suse12.0</code> </p> </li> <li> <p> <code>Suse12.1</code> </p> </li> <li> <p> <code>Suse12.2</code> </p> </li> <li> <p> <code>Suse12.3</code> </p> </li> <li> <p> <code>Suse12.4</code> </p> </li> <li> <p> <code>Suse12.5</code> </p> </li> <li> <p> <code>Suse12.6</code> </p> </li> <li> <p> <code>Suse12.7</code> </p> </li> <li> <p> <code>Suse12.8</code> </p> </li> <li> <p> <code>Suse12.9</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Optional</code> </p> </li> <li> <p> <code>Feature</code> </p> </li> <li> <p> <code>Document</code> </p> </li> <li> <p> <code>Yast</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Moderate</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>CentOS Operating Systems</b> </p> <p>The supported keys for CentOS operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>CentOS6.5</code> </p> </li> <li> <p> <code>CentOS6.6</code> </p> </li> <li> <p> <code>CentOS6.7</code> </p> </li> <li> <p> <code>CentOS6.8</code> </p> </li> <li> <p> <code>CentOS6.9</code> </p> </li> <li> <p> <code>CentOS7.0</code> </p> </li> <li> <p> <code>CentOS7.1</code> </p> </li> <li> <p> <code>CentOS7.2</code> </p> </li> <li> <p> <code>CentOS7.3</code> </p> </li> <li> <p> <code>CentOS7.4</code> </p> </li> <li> <p> <code>CentOS7.5</code> </p> </li> <li> <p> <code>CentOS7.6</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul>",
                                    "properties": {
                                        "Key": {
                                            "description": "<p>The key for the filter.</p> <p>See <a>PatchFilter</a> for lists of valid keys for each operating system type.</p>",
                                            "enum": [
                                                "PRODUCT",
                                                "CLASSIFICATION",
                                                "MSRC_SEVERITY",
                                                "PATCH_ID",
                                                "SECTION",
                                                "PRIORITY",
                                                "SEVERITY"
                                            ],
                                            "type": "string"
                                        },
                                        "Values": {
                                            "description": "<p>The value for the filter key.</p> <p>See <a>PatchFilter</a> for lists of valid values for each key based on operating system type.</p>",
                                            "items": {
                                                "maxLength": 64,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "maxItems": 20,
                                            "minItems": 1,
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "Key",
                                        "Values"
                                    ],
                                    "type": "object"
                                },
                                "maxItems": 4,
                                "minItems": 0,
                                "type": "array"
                            }
                        },
                        "required": [
                            "PatchFilters"
                        ],
                        "type": "object"
                    },
                    "Name": {
                        "description": "The name of the patch baseline.",
                        "maxLength": 128,
                        "minLength": 3,
                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                        "type": "string"
                    },
                    "RejectedPatches": {
                        "description": "<p>A list of explicitly rejected patches for the baseline.</p> <p>For information about accepted formats for lists of approved patches and rejected patches, see <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/patch-manager-approved-rejected-package-name-formats.html\">Package Name Formats for Approved and Rejected Patch Lists</a> in the <i>AWS Systems Manager User Guide</i>.</p>",
                        "items": {
                            "maxLength": 100,
                            "minLength": 1,
                            "type": "string"
                        },
                        "maxItems": 50,
                        "minItems": 0,
                        "type": "array"
                    },
                    "RejectedPatchesAction": {
                        "description": "<p>The action for Patch Manager to take on patches included in the RejectedPackages list.</p> <ul> <li> <p> <b>ALLOW_AS_DEPENDENCY</b>: A package in the Rejected patches list is installed only if it is a dependency of another package. It is considered compliant with the patch baseline, and its status is reported as <i>InstalledOther</i>. This is the default action if no option is specified.</p> </li> <li> <p> <b>BLOCK</b>: Packages in the RejectedPatches list, and packages that include them as dependencies, are not installed under any circumstances. If a package was installed before it was added to the Rejected patches list, it is considered non-compliant with the patch baseline, and its status is reported as <i>InstalledRejected</i>.</p> </li> </ul>",
                        "enum": [
                            "ALLOW_AS_DEPENDENCY",
                            "BLOCK"
                        ],
                        "type": "string"
                    },
                    "Replace": {
                        "description": "If True, then all fields that are required by the CreatePatchBaseline action are also required for this API request. Optional fields that are not specified are set to null.",
                        "type": "boolean"
                    },
                    "Sources": {
                        "description": "Information about the patches to use to update the instances, including target operating systems and source repositories. Applies to Linux instances only.",
                        "items": {
                            "description": "Information about the patches to use to update the instances, including target operating systems and source repository. Applies to Linux instances only.",
                            "properties": {
                                "Configuration": {
                                    "description": "<p>The value of the yum repo configuration. For example:</p> <p> <code>[main]</code> </p> <p> <code>cachedir=/var/cache/yum/$basesearch$releasever</code> </p> <p> <code>keepcache=0</code> </p> <p> <code>debuglevel=2</code> </p>",
                                    "format": "password",
                                    "maxLength": 512,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "The name specified to identify the patch source.",
                                    "pattern": "^[a-zA-Z0-9_\\-.]{3,50}$",
                                    "type": "string"
                                },
                                "Products": {
                                    "description": "The specific operating system versions a patch repository applies to, such as \"Ubuntu16.04\", \"AmazonLinux2016.09\", \"RedhatEnterpriseLinux7.2\" or \"Suse12.7\". For lists of supported product values, see <a>PatchFilter</a>.",
                                    "items": {
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "maxItems": 20,
                                    "minItems": 1,
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Name",
                                "Products",
                                "Configuration"
                            ],
                            "type": "object"
                        },
                        "maxItems": 20,
                        "minItems": 0,
                        "type": "array"
                    }
                },
                "required": [
                    "BaselineId"
                ],
                "type": "object"
            },
            "UpdatePatchBaselineResult": {
                "properties": {
                    "ApprovalRules": {
                        "description": "A set of rules used to include patches in the baseline.",
                        "properties": {
                            "PatchRules": {
                                "description": "The rules that make up the rule group.",
                                "items": {
                                    "description": "Defines an approval rule for a patch baseline.",
                                    "properties": {
                                        "ApproveAfterDays": {
                                            "description": "The number of days after the release date of each patch matched by the rule that the patch is marked as approved in the patch baseline. For example, a value of <code>7</code> means that patches are approved seven days after they are released. ",
                                            "maximum": 100,
                                            "minimum": 0,
                                            "type": "integer"
                                        },
                                        "ComplianceLevel": {
                                            "description": "A compliance severity level for all approved patches in a patch baseline. Valid compliance severity levels include the following: Unspecified, Critical, High, Medium, Low, and Informational.",
                                            "enum": [
                                                "CRITICAL",
                                                "HIGH",
                                                "MEDIUM",
                                                "LOW",
                                                "INFORMATIONAL",
                                                "UNSPECIFIED"
                                            ],
                                            "type": "string"
                                        },
                                        "EnableNonSecurity": {
                                            "description": "For instances identified by the approval rule filters, enables a patch baseline to apply non-security updates available in the specified repository. The default value is 'false'. Applies to Linux instances only.",
                                            "type": "boolean"
                                        },
                                        "PatchFilterGroup": {
                                            "description": "The patch filter group that defines the criteria for the rule.",
                                            "properties": {
                                                "PatchFilters": {
                                                    "description": "The set of patch filters that make up the group.",
                                                    "items": {
                                                        "description": "<p>Defines a patch filter.</p> <p>A patch filter consists of key/value pairs, but not all keys are valid for all operating system types. For example, the key <code>PRODUCT</code> is valid for all supported operating system types. The key <code>MSRC_SEVERITY</code>, however, is valid only for Windows operating systems, and the key <code>SECTION</code> is valid only for Ubuntu operating systems.</p> <p>Refer to the following sections for information about which keys may be used with each major operating system, and which values are valid for each key.</p> <p> <b>Windows Operating Systems</b> </p> <p>The supported keys for Windows operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>MSRC_SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Windows7</code> </p> </li> <li> <p> <code>Windows8</code> </p> </li> <li> <p> <code>Windows8.1</code> </p> </li> <li> <p> <code>Windows8Embedded</code> </p> </li> <li> <p> <code>Windows10</code> </p> </li> <li> <p> <code>Windows10LTSB</code> </p> </li> <li> <p> <code>WindowsServer2008</code> </p> </li> <li> <p> <code>WindowsServer2008R2</code> </p> </li> <li> <p> <code>WindowsServer2012</code> </p> </li> <li> <p> <code>WindowsServer2012R2</code> </p> </li> <li> <p> <code>WindowsServer2016</code> </p> </li> <li> <p> <code>WindowsServer2019</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>CriticalUpdates</code> </p> </li> <li> <p> <code>DefinitionUpdates</code> </p> </li> <li> <p> <code>Drivers</code> </p> </li> <li> <p> <code>FeaturePacks</code> </p> </li> <li> <p> <code>SecurityUpdates</code> </p> </li> <li> <p> <code>ServicePacks</code> </p> </li> <li> <p> <code>Tools</code> </p> </li> <li> <p> <code>UpdateRollups</code> </p> </li> <li> <p> <code>Updates</code> </p> </li> <li> <p> <code>Upgrades</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>MSRC_SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Moderate</code> </p> </li> <li> <p> <code>Low</code> </p> </li> <li> <p> <code>Unspecified</code> </p> </li> </ul> <p> <b>Ubuntu Operating Systems</b> </p> <p>The supported keys for Ubuntu operating systems are <code>PRODUCT</code>, <code>PRIORITY</code>, and <code>SECTION</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Ubuntu14.04</code> </p> </li> <li> <p> <code>Ubuntu16.04</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>PRIORITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Required</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Standard</code> </p> </li> <li> <p> <code>Optional</code> </p> </li> <li> <p> <code>Extra</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SECTION</code> </p> <p>Only the length of the key value is validated. Minimum length is 1. Maximum length is 64.</p> <p> <b>Amazon Linux Operating Systems</b> </p> <p>The supported keys for Amazon Linux operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>AmazonLinux2012.03</code> </p> </li> <li> <p> <code>AmazonLinux2012.09</code> </p> </li> <li> <p> <code>AmazonLinux2013.03</code> </p> </li> <li> <p> <code>AmazonLinux2013.09</code> </p> </li> <li> <p> <code>AmazonLinux2014.03</code> </p> </li> <li> <p> <code>AmazonLinux2014.09</code> </p> </li> <li> <p> <code>AmazonLinux2015.03</code> </p> </li> <li> <p> <code>AmazonLinux2015.09</code> </p> </li> <li> <p> <code>AmazonLinux2016.03</code> </p> </li> <li> <p> <code>AmazonLinux2016.09</code> </p> </li> <li> <p> <code>AmazonLinux2017.03</code> </p> </li> <li> <p> <code>AmazonLinux2017.09</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>Amazon Linux 2 Operating Systems</b> </p> <p>The supported keys for Amazon Linux 2 operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>AmazonLinux2</code> </p> </li> <li> <p> <code>AmazonLinux2.0</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>RedHat Enterprise Linux (RHEL) Operating Systems</b> </p> <p>The supported keys for RedHat Enterprise Linux operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>RedhatEnterpriseLinux6.5</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.6</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.7</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.8</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.9</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.0</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.1</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.2</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.3</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.4</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.5</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.6</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>SUSE Linux Enterprise Server (SLES) Operating Systems</b> </p> <p>The supported keys for SLES operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Suse12.0</code> </p> </li> <li> <p> <code>Suse12.1</code> </p> </li> <li> <p> <code>Suse12.2</code> </p> </li> <li> <p> <code>Suse12.3</code> </p> </li> <li> <p> <code>Suse12.4</code> </p> </li> <li> <p> <code>Suse12.5</code> </p> </li> <li> <p> <code>Suse12.6</code> </p> </li> <li> <p> <code>Suse12.7</code> </p> </li> <li> <p> <code>Suse12.8</code> </p> </li> <li> <p> <code>Suse12.9</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Optional</code> </p> </li> <li> <p> <code>Feature</code> </p> </li> <li> <p> <code>Document</code> </p> </li> <li> <p> <code>Yast</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Moderate</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>CentOS Operating Systems</b> </p> <p>The supported keys for CentOS operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>CentOS6.5</code> </p> </li> <li> <p> <code>CentOS6.6</code> </p> </li> <li> <p> <code>CentOS6.7</code> </p> </li> <li> <p> <code>CentOS6.8</code> </p> </li> <li> <p> <code>CentOS6.9</code> </p> </li> <li> <p> <code>CentOS7.0</code> </p> </li> <li> <p> <code>CentOS7.1</code> </p> </li> <li> <p> <code>CentOS7.2</code> </p> </li> <li> <p> <code>CentOS7.3</code> </p> </li> <li> <p> <code>CentOS7.4</code> </p> </li> <li> <p> <code>CentOS7.5</code> </p> </li> <li> <p> <code>CentOS7.6</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul>",
                                                        "properties": {
                                                            "Key": {
                                                                "description": "<p>The key for the filter.</p> <p>See <a>PatchFilter</a> for lists of valid keys for each operating system type.</p>",
                                                                "enum": [
                                                                    "PRODUCT",
                                                                    "CLASSIFICATION",
                                                                    "MSRC_SEVERITY",
                                                                    "PATCH_ID",
                                                                    "SECTION",
                                                                    "PRIORITY",
                                                                    "SEVERITY"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "Values": {
                                                                "description": "<p>The value for the filter key.</p> <p>See <a>PatchFilter</a> for lists of valid values for each key based on operating system type.</p>",
                                                                "items": {
                                                                    "maxLength": 64,
                                                                    "minLength": 1,
                                                                    "type": "string"
                                                                },
                                                                "maxItems": 20,
                                                                "minItems": 1,
                                                                "type": "array"
                                                            }
                                                        },
                                                        "required": [
                                                            "Key",
                                                            "Values"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "maxItems": 4,
                                                    "minItems": 0,
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "PatchFilters"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "PatchFilterGroup",
                                        "ApproveAfterDays"
                                    ],
                                    "type": "object"
                                },
                                "maxItems": 10,
                                "minItems": 0,
                                "type": "array"
                            }
                        },
                        "required": [
                            "PatchRules"
                        ],
                        "type": "object"
                    },
                    "ApprovedPatches": {
                        "description": "A list of explicitly approved patches for the baseline.",
                        "items": {
                            "maxLength": 100,
                            "minLength": 1,
                            "type": "string"
                        },
                        "maxItems": 50,
                        "minItems": 0,
                        "type": "array"
                    },
                    "ApprovedPatchesComplianceLevel": {
                        "description": "The compliance severity level assigned to the patch baseline after the update completed.",
                        "enum": [
                            "CRITICAL",
                            "HIGH",
                            "MEDIUM",
                            "LOW",
                            "INFORMATIONAL",
                            "UNSPECIFIED"
                        ],
                        "type": "string"
                    },
                    "ApprovedPatchesEnableNonSecurity": {
                        "description": "Indicates whether the list of approved patches includes non-security updates that should be applied to the instances. The default value is 'false'. Applies to Linux instances only.",
                        "type": "boolean"
                    },
                    "BaselineId": {
                        "description": "The ID of the deleted patch baseline.",
                        "maxLength": 128,
                        "minLength": 20,
                        "pattern": "^[a-zA-Z0-9_\\-:/]{20,128}$",
                        "type": "string"
                    },
                    "CreatedDate": {
                        "description": "The date when the patch baseline was created.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "Description": {
                        "description": "A description of the Patch Baseline.",
                        "maxLength": 1024,
                        "minLength": 1,
                        "type": "string"
                    },
                    "GlobalFilters": {
                        "description": "A set of global filters used to exclude patches from the baseline.",
                        "properties": {
                            "PatchFilters": {
                                "description": "The set of patch filters that make up the group.",
                                "items": {
                                    "description": "<p>Defines a patch filter.</p> <p>A patch filter consists of key/value pairs, but not all keys are valid for all operating system types. For example, the key <code>PRODUCT</code> is valid for all supported operating system types. The key <code>MSRC_SEVERITY</code>, however, is valid only for Windows operating systems, and the key <code>SECTION</code> is valid only for Ubuntu operating systems.</p> <p>Refer to the following sections for information about which keys may be used with each major operating system, and which values are valid for each key.</p> <p> <b>Windows Operating Systems</b> </p> <p>The supported keys for Windows operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>MSRC_SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Windows7</code> </p> </li> <li> <p> <code>Windows8</code> </p> </li> <li> <p> <code>Windows8.1</code> </p> </li> <li> <p> <code>Windows8Embedded</code> </p> </li> <li> <p> <code>Windows10</code> </p> </li> <li> <p> <code>Windows10LTSB</code> </p> </li> <li> <p> <code>WindowsServer2008</code> </p> </li> <li> <p> <code>WindowsServer2008R2</code> </p> </li> <li> <p> <code>WindowsServer2012</code> </p> </li> <li> <p> <code>WindowsServer2012R2</code> </p> </li> <li> <p> <code>WindowsServer2016</code> </p> </li> <li> <p> <code>WindowsServer2019</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>CriticalUpdates</code> </p> </li> <li> <p> <code>DefinitionUpdates</code> </p> </li> <li> <p> <code>Drivers</code> </p> </li> <li> <p> <code>FeaturePacks</code> </p> </li> <li> <p> <code>SecurityUpdates</code> </p> </li> <li> <p> <code>ServicePacks</code> </p> </li> <li> <p> <code>Tools</code> </p> </li> <li> <p> <code>UpdateRollups</code> </p> </li> <li> <p> <code>Updates</code> </p> </li> <li> <p> <code>Upgrades</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>MSRC_SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Moderate</code> </p> </li> <li> <p> <code>Low</code> </p> </li> <li> <p> <code>Unspecified</code> </p> </li> </ul> <p> <b>Ubuntu Operating Systems</b> </p> <p>The supported keys for Ubuntu operating systems are <code>PRODUCT</code>, <code>PRIORITY</code>, and <code>SECTION</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Ubuntu14.04</code> </p> </li> <li> <p> <code>Ubuntu16.04</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>PRIORITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Required</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Standard</code> </p> </li> <li> <p> <code>Optional</code> </p> </li> <li> <p> <code>Extra</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SECTION</code> </p> <p>Only the length of the key value is validated. Minimum length is 1. Maximum length is 64.</p> <p> <b>Amazon Linux Operating Systems</b> </p> <p>The supported keys for Amazon Linux operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>AmazonLinux2012.03</code> </p> </li> <li> <p> <code>AmazonLinux2012.09</code> </p> </li> <li> <p> <code>AmazonLinux2013.03</code> </p> </li> <li> <p> <code>AmazonLinux2013.09</code> </p> </li> <li> <p> <code>AmazonLinux2014.03</code> </p> </li> <li> <p> <code>AmazonLinux2014.09</code> </p> </li> <li> <p> <code>AmazonLinux2015.03</code> </p> </li> <li> <p> <code>AmazonLinux2015.09</code> </p> </li> <li> <p> <code>AmazonLinux2016.03</code> </p> </li> <li> <p> <code>AmazonLinux2016.09</code> </p> </li> <li> <p> <code>AmazonLinux2017.03</code> </p> </li> <li> <p> <code>AmazonLinux2017.09</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>Amazon Linux 2 Operating Systems</b> </p> <p>The supported keys for Amazon Linux 2 operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>AmazonLinux2</code> </p> </li> <li> <p> <code>AmazonLinux2.0</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>RedHat Enterprise Linux (RHEL) Operating Systems</b> </p> <p>The supported keys for RedHat Enterprise Linux operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>RedhatEnterpriseLinux6.5</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.6</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.7</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.8</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.9</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.0</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.1</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.2</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.3</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.4</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.5</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.6</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>SUSE Linux Enterprise Server (SLES) Operating Systems</b> </p> <p>The supported keys for SLES operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Suse12.0</code> </p> </li> <li> <p> <code>Suse12.1</code> </p> </li> <li> <p> <code>Suse12.2</code> </p> </li> <li> <p> <code>Suse12.3</code> </p> </li> <li> <p> <code>Suse12.4</code> </p> </li> <li> <p> <code>Suse12.5</code> </p> </li> <li> <p> <code>Suse12.6</code> </p> </li> <li> <p> <code>Suse12.7</code> </p> </li> <li> <p> <code>Suse12.8</code> </p> </li> <li> <p> <code>Suse12.9</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Optional</code> </p> </li> <li> <p> <code>Feature</code> </p> </li> <li> <p> <code>Document</code> </p> </li> <li> <p> <code>Yast</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Moderate</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>CentOS Operating Systems</b> </p> <p>The supported keys for CentOS operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>CentOS6.5</code> </p> </li> <li> <p> <code>CentOS6.6</code> </p> </li> <li> <p> <code>CentOS6.7</code> </p> </li> <li> <p> <code>CentOS6.8</code> </p> </li> <li> <p> <code>CentOS6.9</code> </p> </li> <li> <p> <code>CentOS7.0</code> </p> </li> <li> <p> <code>CentOS7.1</code> </p> </li> <li> <p> <code>CentOS7.2</code> </p> </li> <li> <p> <code>CentOS7.3</code> </p> </li> <li> <p> <code>CentOS7.4</code> </p> </li> <li> <p> <code>CentOS7.5</code> </p> </li> <li> <p> <code>CentOS7.6</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul>",
                                    "properties": {
                                        "Key": {
                                            "description": "<p>The key for the filter.</p> <p>See <a>PatchFilter</a> for lists of valid keys for each operating system type.</p>",
                                            "enum": [
                                                "PRODUCT",
                                                "CLASSIFICATION",
                                                "MSRC_SEVERITY",
                                                "PATCH_ID",
                                                "SECTION",
                                                "PRIORITY",
                                                "SEVERITY"
                                            ],
                                            "type": "string"
                                        },
                                        "Values": {
                                            "description": "<p>The value for the filter key.</p> <p>See <a>PatchFilter</a> for lists of valid values for each key based on operating system type.</p>",
                                            "items": {
                                                "maxLength": 64,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "maxItems": 20,
                                            "minItems": 1,
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "Key",
                                        "Values"
                                    ],
                                    "type": "object"
                                },
                                "maxItems": 4,
                                "minItems": 0,
                                "type": "array"
                            }
                        },
                        "required": [
                            "PatchFilters"
                        ],
                        "type": "object"
                    },
                    "ModifiedDate": {
                        "description": "The date when the patch baseline was last modified.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The name of the patch baseline.",
                        "maxLength": 128,
                        "minLength": 3,
                        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
                        "type": "string"
                    },
                    "OperatingSystem": {
                        "description": "The operating system rule used by the updated patch baseline.",
                        "enum": [
                            "WINDOWS",
                            "AMAZON_LINUX",
                            "AMAZON_LINUX_2",
                            "UBUNTU",
                            "REDHAT_ENTERPRISE_LINUX",
                            "SUSE",
                            "CENTOS"
                        ],
                        "type": "string"
                    },
                    "RejectedPatches": {
                        "description": "A list of explicitly rejected patches for the baseline.",
                        "items": {
                            "maxLength": 100,
                            "minLength": 1,
                            "type": "string"
                        },
                        "maxItems": 50,
                        "minItems": 0,
                        "type": "array"
                    },
                    "RejectedPatchesAction": {
                        "description": "The action specified to take on patches included in the RejectedPatches list. A patch can be allowed only if it is a dependency of another package, or blocked entirely along with packages that include it as a dependency.",
                        "enum": [
                            "ALLOW_AS_DEPENDENCY",
                            "BLOCK"
                        ],
                        "type": "string"
                    },
                    "Sources": {
                        "description": "Information about the patches to use to update the instances, including target operating systems and source repositories. Applies to Linux instances only.",
                        "items": {
                            "description": "Information about the patches to use to update the instances, including target operating systems and source repository. Applies to Linux instances only.",
                            "properties": {
                                "Configuration": {
                                    "description": "<p>The value of the yum repo configuration. For example:</p> <p> <code>[main]</code> </p> <p> <code>cachedir=/var/cache/yum/$basesearch$releasever</code> </p> <p> <code>keepcache=0</code> </p> <p> <code>debuglevel=2</code> </p>",
                                    "format": "password",
                                    "maxLength": 512,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "The name specified to identify the patch source.",
                                    "pattern": "^[a-zA-Z0-9_\\-.]{3,50}$",
                                    "type": "string"
                                },
                                "Products": {
                                    "description": "The specific operating system versions a patch repository applies to, such as \"Ubuntu16.04\", \"AmazonLinux2016.09\", \"RedhatEnterpriseLinux7.2\" or \"Suse12.7\". For lists of supported product values, see <a>PatchFilter</a>.",
                                    "items": {
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "maxItems": 20,
                                    "minItems": 1,
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Name",
                                "Products",
                                "Configuration"
                            ],
                            "type": "object"
                        },
                        "maxItems": 20,
                        "minItems": 0,
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "UpdateServiceSettingRequest": {
                "description": "The request body of the UpdateServiceSetting API action.",
                "properties": {
                    "SettingId": {
                        "description": "The ID of the service setting to update.",
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string"
                    },
                    "SettingValue": {
                        "description": "The new value to specify for the service setting.",
                        "maxLength": 4096,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "SettingId",
                    "SettingValue"
                ],
                "type": "object"
            },
            "UpdateServiceSettingResult": {
                "description": "The result body of the UpdateServiceSetting API action.",
                "properties": {},
                "type": "object"
            },
            "Url": {
                "type": "string"
            },
            "ValidNextStep": {
                "maxLength": 65535,
                "minLength": 1,
                "type": "string"
            },
            "ValidNextStepList": {
                "items": {
                    "maxLength": 65535,
                    "minLength": 1,
                    "type": "string"
                },
                "type": "array"
            },
            "Version": {
                "pattern": "^[0-9]{1,6}(\\.[0-9]{1,6}){2,3}$",
                "type": "string"
            }
        },
        "parameters": {
            "Action": {
                "in": "query",
                "name": "Action",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "Version": {
                "in": "query",
                "name": "Version",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Algorithm": {
                "in": "header",
                "name": "X-Amz-Algorithm",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Content-Sha256": {
                "in": "header",
                "name": "X-Amz-Content-Sha256",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Credential": {
                "in": "header",
                "name": "X-Amz-Credential",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Date": {
                "in": "header",
                "name": "X-Amz-Date",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Security-Token": {
                "in": "header",
                "name": "X-Amz-Security-Token",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Signature": {
                "in": "header",
                "name": "X-Amz-Signature",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-SignedHeaders": {
                "in": "header",
                "name": "X-Amz-SignedHeaders",
                "required": false,
                "schema": {
                    "type": "string"
                }
            }
        },
        "securitySchemes": {
            "hmac": {
                "description": "Amazon Signature authorization v4",
                "in": "header",
                "name": "Authorization",
                "type": "apiKey",
                "x-amazon-apigateway-authtype": "awsSigv4"
            }
        }
    }
}